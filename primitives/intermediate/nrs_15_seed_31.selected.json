[
  {
    "example_id": 0,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4294967294.0"
    ],
    "annotated_answers": [
      "51.0"
    ],
    "solution": "x = 2\nsum = 0\nfor i in range(1, 33):\n    if eval('x < x**%d < x**%d' % (i, i+1)):\n        sum += 2**(i-1)\nprint(sum)"
  },
  {
    "example_id": 1,
    "selected_solution_index": 14,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "100.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "k = 0\nfor a in range(1, 100):\n    for b in range(1, 100):\n        for c in range(1, 100):\n            if a**2 + b**2 == c**2 and c!= 0:\n                k += 1\nprint(k)"
  },
  {
    "example_id": 2,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "82.0"
    ],
    "annotated_answers": [
      "82.0"
    ],
    "solution": "omega = 1 - 5j\nexpression = abs(2*omega**2 - 4*omega - 30)\nprint(expression)"
  },
  {
    "example_id": 3,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "6.0",
      "15.0",
      "28.0",
      "45.0",
      "66.0",
      "91.0",
      "120.0",
      "153.0",
      "190.0",
      "3.0",
      "15.0",
      "35.0",
      "63.0",
      "99.0",
      "143.0",
      "195.0",
      "255.0",
      "323.0",
      "399.0",
      "440.0",
      "2870.0"
    ],
    "annotated_answers": [
      "195.0"
    ],
    "solution": "# Original sequence\nterm = 0\nsum = 0\nfor i in range(1, 21):\n    term += i\n    sum += i**2\n    if i % 2 == 1:\n        print(term)\n\n# New sequence\nterm = 0\nsum = 0\nfor i in range(1, 21):\n    term += i * 2 + 1\n    sum += i**2\n    if i % 2 == 1:\n        print(term)\n\nprint(term, sum)"
  },
  {
    "example_id": 4,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "34.0"
    ],
    "solution": "from math import log\n\ndef f(x):\n    return 17 * log(x, 30) - 3 * log(x, 5) + 20 * log(x, 15) - 3 * log(x, 6) + 20 * log(x, 2)\n\nx = 1\nwhile f(x) > 0:\n    x += 1\nprint(x)"
  },
  {
    "example_id": 5,
    "selected_solution_index": 0,
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-5.0"
    ],
    "solution": "def f(x):\n    if x == 1:\n        return 1\n    elif x == 2:\n        return 2\n    else:\n        return f(x - 1) + f(x + 1)\n\nprint(f(20152015))"
  },
  {
    "example_id": 6,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "43.0"
    ],
    "annotated_answers": [
      "46.0"
    ],
    "solution": "# [asy]\n# unitsize(10mm); defaultpen(linewidth(1pt));\n# for(int i=0; i<=3; ++i) {\n#   draw((0,i)--(3,i));\n#   draw((i,0)--(i,3));\n# }\n# label(\"$25$\",(0.5,0.5));\n# label(\"$z$\",(1.5,0.5));\n# label(\"$21$\",(2.5,0.5));\n# label(\"$18$\",(0.5,1.5));\n# label(\"$x$\",(1.5,1.5));\n# label(\"$y$\",(2.5,1.5));\n# label(\"$v$\",(0.5,2.5));\n# label(\"$24$\",(1.5,2.5));\n# label(\"$w$\",(2.5,2.5));\n# [/asy]\n\ny = 18\nz = 25\nprint(y + z)"
  },
  {
    "example_id": 7,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-5.309920008293306"
    ],
    "annotated_answers": [
      "-6.0"
    ],
    "solution": "expression = (2**(1/3) + 2**(1/3)) * (2 - 2 * 2**(1/3) - 2**(2/3))\nprint(expression)"
  },
  {
    "example_id": 8,
    "selected_solution_index": 13,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1000.0"
    ],
    "annotated_answers": [
      "177.0"
    ],
    "solution": "def f(x):\n    return x**2\n\nvalues = set()\nfor i in range(1000):\n    values.add(f(i))\nprint(len(values))"
  },
  {
    "example_id": 9,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "34.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "m = 33\nn = 67\nprint(abs(m - n))"
  },
  {
    "example_id": 10,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.125"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "r = 1\ns = 2\nprint((r/s)**3)"
  },
  {
    "example_id": 11,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "112.94960212201592"
    ],
    "annotated_answers": [
      "40.0"
    ],
    "solution": "z = 5 + 1j\nw = -4 + 10j\nexpression = abs(z + 20/w)**2 + abs(w + 12/z)**2\nprint(expression)"
  },
  {
    "example_id": 12,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "79.0"
    ],
    "annotated_answers": [
      "81.0"
    ],
    "solution": "count = 0\nfor a in range(-5, 5):\n    for b in range(-5, 5):\n        if abs(a + b*1j) <= 5:\n            count += 1\nprint(count)"
  },
  {
    "example_id": 13,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "13.582376151231777"
    ],
    "annotated_answers": [
      "28.0"
    ],
    "solution": "import math\na, b, c = 1, 2, 3\nabc = a * b * c\nmax_value = (4 * math.sqrt(a) + 6 * math.sqrt(b) + 12 * math.sqrt(c)) / math.sqrt(abc)\nprint(max_value)"
  },
  {
    "example_id": 14,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "import sympy as sp\nx = sp.Symbol('x')\nexpression = x**8 + 3*x**4 - 4\nfactors = sp.factor(expression)\nprint(factors)"
  },
  {
    "example_id": 15,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "48.0"
    ],
    "solution": "count = 0\nfor u in range(1, 101):\n    for v in range(1, 101):\n        if u * v == 10 and u.real % 1 == 0 and u.imag % 1 == 0 and v.real % 1 == 0 and v.imag % 1 == 0:\n            count += 1\nprint(count)"
  },
  {
    "example_id": 16,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "19.333333333333332"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "a, b, c = 4, 1, 1\nexpression = 4 * a + 3 * b + c**3 / (a - b) * b\nprint(expression)"
  },
  {
    "example_id": 17,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "35.0"
    ],
    "annotated_answers": [
      "50.0"
    ],
    "solution": "a = 3\nb = 2\nprint(a**3 + b**3)"
  },
  {
    "example_id": 18,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.4771212547196626"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "from math import log\na = log(3, 10)\nb = log(100, 10)\nprint(a + b)"
  },
  {
    "example_id": 19,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1007.5"
    ],
    "annotated_answers": [
      "62.0"
    ],
    "solution": "sum = 0\ncount = 0\nfor i in range(2016):\n    sum += i\n    count += 1\nprint(sum / count)"
  },
  {
    "example_id": 20,
    "selected_solution_index": 11,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "k = 3\nprint(k)"
  },
  {
    "example_id": 21,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5490858940.0"
    ],
    "annotated_answers": [
      "2039191.0"
    ],
    "solution": "def f(x):\n    return x**2\n\nsum = 0\nfor x in range(-2019, 2020):\n    sum += f(x)\nprint(sum)"
  },
  {
    "example_id": 22,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-16.0",
      "0.0"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "z1 = 5j\nz2 = 1j\nexpression = (z1 - z2)**2\nprint(expression)"
  },
  {
    "example_id": 23,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "1.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "from sympy import sqrt, Symbol\n\na = Symbol('a')\nb = Symbol('b')\nc = Symbol('c')\nd = Symbol('d')\n\nnumerator = sqrt(2) - a\ndenominator = sqrt(2) * (b + c + d + 1)\n\nprint(numerator / denominator)"
  },
  {
    "example_id": 24,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "576.0"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "sum = 0\nfor i in range(1, 49, 2):\n    sum += i\nprint(sum)"
  },
  {
    "example_id": 25,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "15.10228176773423"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "from math import sqrt\n\n\ndef distance(z):\n    return sqrt(z.real**2 + z.imag**2)\n\n\nz = 3 - 4j\nprint(distance(z + 5 - 3j) + distance(z - 7 + 2j))"
  },
  {
    "example_id": 26,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "3.0",
      "4.0",
      "3.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "from sympy import *\nx, y, z = symbols('x y z')\nexpression = (x**3 + 2*y**3 + 4*z**3)/(x*y*z)\nprint(expression)"
  },
  {
    "example_id": 27,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "count = 0\nfor x in range(2, 100000):\n    if (2*x + 17/x) % 2 == 0 and (2*x + 17/x) // 2 == x:\n        if (2*x + 17/x) % 2 == 0 and (2*x + 17/x) // 2 == x:\n            if (2*x + 17/x) % 2 == 0 and (2*x + 17/x) // 2 == x:\n                if (2*x + 17/x) % 2 == 0 and (2*x + 17/x) // 2 == x:\n                    count += 1\nprint(count)"
  },
  {
    "example_id": 28,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "49.0"
    ],
    "solution": "k = 0\nn = 100\nwhile n > 1:\n    n //= 2\n    k += 1\nprint(k)"
  },
  {
    "example_id": 29,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "29800.0"
    ],
    "annotated_answers": [
      "29800.0"
    ],
    "solution": "count = 0\nfor a in range(1, 101):\n    for b in range(1, 101):\n        for c in range(1, 101):\n            if a**2 * b + b**2 * c + c**2 * a == a * b**2 + b * c**2 + c * a**2:\n                count += 1\nprint(count)"
  },
  {
    "example_id": 30,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25.0",
      "2.0",
      "36.0",
      "2.0",
      "9.0",
      "2.0",
      "2.0",
      "2.0",
      "16.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "from sympy import Symbol, Max, solve\n\nx, y, z = Symbol('x'), Symbol('y'), Symbol('z')\n\nconstraints = [x + y + z - 9, x**2 + y**2 + z**2 - 16, 25 - y**2, 36 - z**2]\nsolutions = solve(constraints)\n\nanswers = [Max(constraints[0], constraints[1], constraints[2], constraints[3])]\n\nprint(answers)"
  },
  {
    "example_id": 31,
    "selected_solution_index": 10,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-11.0"
    ],
    "annotated_answers": [
      "-71.0"
    ],
    "solution": "from sympy import *\nx = symbols('x')\nP = x**8 - 2*x**7 + 3*x**6 - 5*x**5 + 8*x**4 - 11*x**3 + 17*x**2 - 23*x + 1\nprint(P.subs(x, 1))"
  },
  {
    "example_id": 32,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "514.0"
    ],
    "annotated_answers": [
      "341.0"
    ],
    "solution": "coeffs = [1, 1, 1]\nfor i in range(511):\n    coeffs.append(0)\nprint(len(coeffs))"
  },
  {
    "example_id": 33,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "24.99999199999355"
    ],
    "annotated_answers": [
      "250.0"
    ],
    "solution": "import math\nexpression = 1 / (math.sqrt(5**4 + 1) - math.sqrt(5**4 - 1))\nprint(expression)"
  },
  {
    "example_id": 34,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.376094412941131",
      "116"
    ],
    "annotated_answers": [
      "2500.0"
    ],
    "solution": "from sympy import factorial, binomial\nexpression = 1\nfor i in range(2, 99):\n    expression += binomial(99, i) * (i + 1)**49\nprint(expression)"
  },
  {
    "example_id": 35,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-22.997041420118343",
      "-14.792899408284022"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "z = 1 - 5j\nprint(z + 1/z + z**2 + 1/z**2)"
  },
  {
    "example_id": 36,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.3404255319148937"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a = 1\nb = 2\nc = 3\nexpression = (1/a + 1/b + 1/c) / (1/(a + b) + 1/(a + c) + 1/(b + c))\nprint(expression)"
  },
  {
    "example_id": 37,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a = 0\nprint(a)"
  },
  {
    "example_id": 38,
    "selected_solution_index": 10,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "0.0",
      "2.0",
      "0.0",
      "4.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "print(0, 1 - 1, 1 + 1, 2 - 2, 2 + 2)"
  },
  {
    "example_id": 39,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.6457513110645907",
      "0.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "import cmath\nc = cmath.sqrt(7)\nprint(c)"
  },
  {
    "example_id": 40,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "3.0",
      "6.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "from sympy import Symbol, simplify\nx = Symbol('x')\nexpression = (x + 3)**5 * (x + 2)**8 * (x + 1)**4 * (x - 7)**2 / ((x + 3)**11 * (x + 2)**6 * (x + 1)**4 * x**2)\nprint(simplify(expression))"
  },
  {
    "example_id": 41,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "75.0",
      "2.0",
      "15.0",
      "2.0",
      "1350.0",
      "2.0",
      "270.0",
      "2.0",
      "90.0",
      "2.0",
      "18.0",
      "2.0",
      "100.0",
      "2.0",
      "1640.0",
      "324.0",
      "1800.0",
      "2.0",
      "360.0",
      "120.0",
      "2.0",
      "2.0",
      "24.0",
      "2.0",
      "2160.0",
      "2.0",
      "432.0"
    ],
    "annotated_answers": [
      "5120.0"
    ],
    "solution": "from sympy import sympify\n\nx = sympify('x')\ny = sympify('y')\nz = sympify('z')\nexpression = (1 + 5*z) * (4*z + 3*x) * (5*x + 6*y) * (y + 18)\nexpression = expression.expand()\nexpression = expression.cancel()\nexpression = expression.simplify()\nprint(expression)"
  },
  {
    "example_id": 42,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "def f(n):\n    if n == 1:\n        return 1\n    elif n % 2 == 0:\n        return f(n // 2) + 1\n    else:\n        return f(n // 2)\nprint(f(15))"
  },
  {
    "example_id": 43,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.25"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x = 1 - 3/4\nprint(x)"
  },
  {
    "example_id": 44,
    "selected_solution_index": 14,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "print(len([x for x in range(-6, 100) if abs(x) + 5 < 7 and abs(x - 3) > 2]))"
  },
  {
    "example_id": 45,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.196152422706631"
    ],
    "annotated_answers": [
      "-8.0"
    ],
    "solution": "from math import sqrt\nx = (sqrt(12) - sqrt(3))**3\nprint(x)"
  },
  {
    "example_id": 46,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "100.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a = 4\nb = 16\nh = -16\nk = 96\nprint(h + k + a + b)"
  },
  {
    "example_id": 47,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "11.126241187574625"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "from math import sin, pi\n\ndef f(x):\n    return 9 * x**2 * sin(x)**2 + 4 / sin(x)\n\nprint(min(f(x) for x in range(1, int(pi))))"
  },
  {
    "example_id": 48,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "z = 2\nw = 5\nprint(abs(w - z))"
  },
  {
    "example_id": 49,
    "selected_solution_index": 0,
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "def f(i, j):\n    if i == 0 and 0 <= j <= 4:\n        return j + 1\n    elif i >= 1 and j == 0:\n        return f(i - 1, 1)\n    else:\n        return f(i - 1, f(i, j - 1))\nprint(f(2015, 2))"
  },
  {
    "example_id": 50,
    "selected_solution_index": 11,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "30.0"
    ],
    "annotated_answers": [
      "840.0"
    ],
    "solution": "m = 1\nn = 29\nwhile m < n:\n    m += 1\n    n -= 1\nprint(m + n)"
  },
  {
    "example_id": 51,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.39829654694291144"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "from math import log, exp\nx = exp(log(2) + log(4) - 3)\nprint(x)"
  },
  {
    "example_id": 52,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "41.0"
    ],
    "annotated_answers": [
      "38.0"
    ],
    "solution": "from scipy.special import binom\n\n# Find k\nk = 1\nwhile binom(10**9, k) > binom(10**9 + 1, k - 1):\n    k += 1\n\n# Find a and b\na = k // 10\nb = k % 10\n\n# Print result\nprint(10 * a + b)"
  },
  {
    "example_id": 53,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-17824.0"
    ],
    "annotated_answers": [
      "277.0"
    ],
    "solution": "def p(x):\n    return (x + 3)**3 - 12 * (x + 2)**3 + 20 * (x - 4)**3 - 5 * (x - 5)**3 + 16\nprint(p(11))"
  },
  {
    "example_id": 54,
    "selected_solution_index": 11,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2017.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "-2016.0"
    ],
    "solution": "from sympy import Symbol, simplify, factor\n\nx = Symbol('x')\nA = Symbol('A')\nB = Symbol('B')\n\npolynomial = x**2017 + A*x + B\n\ndivisor = (x + 1)**2\n\nresult = simplify(polynomial / factor(divisor))\n\nprint(result)"
  },
  {
    "example_id": 55,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "def is_valid(a, b, c):\n    return all(abs(x) <= 1 for x in [a, b, c])\n\n\ndef max_abs(a, b, c):\n    return max(abs(a), abs(b), abs(c))\n\n\na = -1\nb = 0\nc = 1\nwhile is_valid(a, b, c):\n    a += 1\n    b += 1\n    c += 1\nprint(max_abs(a, b, c))"
  },
  {
    "example_id": 56,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-108.0"
    ],
    "annotated_answers": [
      "-108.0"
    ],
    "solution": "from scipy.optimize import minimize\n\ndef f(x):\n    return x[0]**6 + x[1]**6 - 54 * x[0] * x[1]\n\nresult = minimize(f, x0=[1, 1])\nprint(result.fun)"
  },
  {
    "example_id": 57,
    "selected_solution_index": 10,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "450.0"
    ],
    "annotated_answers": [
      "450.0"
    ],
    "solution": "mean1 = 2700\nmean2 = 75\nexpression = pow(mean1 * mean2, 1/2)\nprint(expression)"
  },
  {
    "example_id": 58,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "36100.0"
    ],
    "annotated_answers": [
      "41230.0"
    ],
    "solution": "sum = 0\nfor i in range(1, 20):\n    sum += i * i**2\nprint(sum)"
  },
  {
    "example_id": 59,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = 2**(6/2)\nprint(x)"
  },
  {
    "example_id": 60,
    "selected_solution_index": 12,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "87.0"
    ],
    "solution": "import math\n\nz1 = 2j\nz2 = 3j\nz3 = 4j\n\nprint(abs(z1 - z2)**2 + abs(z1 - z3)**2 + abs(z2 - z3)**2)"
  },
  {
    "example_id": 61,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "count = 0\nfor x in range(-100, 101):\n    for y in range(-100, 101):\n        if (x + y)**2 == (x + 1)*(y - 1):\n            count += 1\nprint(count)"
  },
  {
    "example_id": 62,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "936.0"
    ],
    "solution": "from math import sqrt\n\nn = sqrt(104*sqrt(6) + 468*sqrt(10) + 144*sqrt(15) + 2006)\na = int(n)\nb = int(sqrt(2)*(n-a))\nc = int(sqrt(3)*(n-a-b))\nprint(a*b*c)"
  },
  {
    "example_id": 63,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "100.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "count = 0\nfor n in range(1, 1001):\n    if (n % 2 == 1) and (n % 5 == 1):\n        count += 1\nprint(count)"
  },
  {
    "example_id": 64,
    "selected_solution_index": 10,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "def count_crossings(x, y, k):\n    count = 0\n    for i in range(len(x) - 1):\n        if y[i] <= k <= y[i + 1]:\n            count += 1\n    return count\n\n\ndef least_degree(k):\n    x = [1, 2, 3, 4, 5]\n    y = [1, 1, 3, 3, 3, 3, 5, 5, 5, 5]\n    min_degree = 0\n    for degree in range(1, len(x)):\n        count = 0\n        for i in range(len(x) - degree):\n            if y[i] <= k <= y[i + degree]:\n                count += 1\n            if count == degree:\n                min_degree = degree\n                break\n        if count == degree:\n            break\n    return min_degree\n\n\nprint(least_degree(3))"
  },
  {
    "example_id": 65,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "import math\nexpression = abs(math.sqrt(5) + 2*1j)\nprint(expression)"
  },
  {
    "example_id": 66,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "100.0"
    ],
    "solution": "a_n = 1\nfor i in range(1, 100):\n    a_n = a_n**2 - a_n * a_n + 1\nprint(a_n)"
  },
  {
    "example_id": 67,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "48.0"
    ],
    "annotated_answers": [
      "38.0"
    ],
    "solution": "import sympy as sym\nx = sym.Symbol('x')\np = sym.Poly(x**3 - 6*x + 8, x)\np = p.subs(x, 4)\np = p.subs(x, 5)\np = p.subs(x, 7)\nprint(p.subs(x, 12))"
  },
  {
    "example_id": 68,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "3.0",
      "5.0",
      "2.0",
      "16.0",
      "8.0",
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "23.0"
    ],
    "solution": "from sympy import Symbol, simplify\n\ny = Symbol('y')\nexpression = (6*y**3 + 5*y**2 - 16*y + 8) / (2*y + 3)\nprint(simplify(expression))"
  },
  {
    "example_id": 69,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "a, b, c, d = 1 - 1j, 1 + 1j, -1 - 1j, -1 + 1j\nexpression = abs((a + b) * (a + c) * (a + d) * (b + c) * (b + d) * (c + d))\nprint(expression)"
  },
  {
    "example_id": 70,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "361.0",
      "8836.0"
    ],
    "annotated_answers": [
      "4561.0"
    ],
    "solution": "f = lambda x: x**2\nprint(f(19))\nprint(f(94))"
  },
  {
    "example_id": 71,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "81.0"
    ],
    "annotated_answers": [
      "80.0"
    ],
    "solution": "from math import ceil\n\ndef f(x):\n    return ceil(x)\n\nprint(f((3 ** 100 + 2 ** 100) / (3 ** 96 + 2 ** 96)))"
  },
  {
    "example_id": 72,
    "selected_solution_index": 13,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "def f(x):\n    return -3*x**2 + 36*x - 7\n\nc = 0\nwhile f(c) < 0:\n    c += 1\n\nprint(c)"
  },
  {
    "example_id": 73,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.2962962962962962"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "x = 2/3\ny = x/2\nprint(x**3)"
  },
  {
    "example_id": 74,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "11.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "from sympy import solve, symbols\nx = symbols('x')\nexpression = x**2 - 13*x + 22\nsolution = solve(expression, x)\nprint(solution)"
  },
  {
    "example_id": 75,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "37247.99999999999"
    ],
    "annotated_answers": [
      "384.0"
    ],
    "solution": "x = [97]\nfor i in range(1, 9):\n    x.append(i / x[-1])\nprint(x[0] * x[1] * x[2] * x[3] * x[4] * x[5] * x[6] * x[7] * x[8])"
  },
  {
    "example_id": 76,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "30.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "def f(n):\n    if n == 0:\n        return 1\n    if n == 1:\n        return 1\n    return f(n - 1) + f(n - 2)\n\nfor n in range(2, 1000000):\n    if f(n) > 1000000:\n        print(n)\n        break"
  },
  {
    "example_id": 77,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "272.0"
    ],
    "annotated_answers": [
      "272.0"
    ],
    "solution": "import sympy\n\nn = sympy.Symbol('n')\nbinomial = sympy.binomial\nsum = sympy.summation(binomial(n, 15) / binomial(n, 17), (n, 17, sympy.oo))\nprint(sum)"
  },
  {
    "example_id": 78,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "47.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "from fractions import Fraction\n\nnumerator = 8 * 27 + 27 * 2\ndenominator = 2 * 3\n\nfraction = Fraction(numerator, denominator)\n\na, b, c = fraction.numerator, fraction.denominator, 1\n\nprint(a + b + c)"
  },
  {
    "example_id": 79,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "55297.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x = 1\ny = 0.5\nz = 0.25\nexpression = x + 108 / ((x - y)**3 * (y - z)**2 * z)\nprint(expression)"
  },
  {
    "example_id": 80,
    "selected_solution_index": 0,
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "count = 0\nfor a in range(1, 10):\n    for b in range(1, 10):\n        for c in range(1, 10):\n            for d in range(1, 10):\n                if a * log10(2) + b * log10(3) + c * log10(5) + d * log10(7) == 2005:\n                    count += 1\nprint(count)"
  },
  {
    "example_id": 81,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "106.0",
      "53.0",
      "105.0",
      "1432.0",
      "104.0",
      "26234.0",
      "103.0",
      "365860.0",
      "102.0",
      "4136066.0",
      "101.0",
      "39425959.0",
      "100.0",
      "325527695.0",
      "99.0",
      "2373990841.0",
      "98.0",
      "15519139349.0",
      "97.0",
      "91995131865.0",
      "96.0",
      "499100124656.0",
      "95.0",
      "2497024425084.0",
      "94.0",
      "11593242556280.0",
      "93.0",
      "50215964602566.0",
      "92.0",
      "203846943407114.0",
      "91.0",
      "778560470541735.0",
      "90.0",
      "2807282479677011.0",
      "89.0",
      "9584809602522294.0",
      "88.0",
      "3.106923984318553",
      "16",
      "87.0",
      "9.583973784110242",
      "16",
      "86.0",
      "2.819275618240844",
      "17",
      "85.0",
      "7.923588005329696",
      "17",
      "84.0",
      "2.1312442991521526",
      "18",
      "83.0",
      "5.494594542760671",
      "18",
      "82.0",
      "1.3596633741208115",
      "19",
      "81.0",
      "3.233465548808158",
      "19",
      "80.0",
      "7.398532442916",
      "19",
      "79.0",
      "1.6304960211823382",
      "20",
      "78.0",
      "3.464243477693178",
      "20",
      "77.0",
      "7.102226036486354",
      "20",
      "76.0",
      "1.406142884787027",
      "21",
      "75.0",
      "2.690519813166705",
      "21",
      "74.0",
      "4.978649462545802",
      "21",
      "73.0",
      "8.915146539311233",
      "21",
      "72.0",
      "1.5457456117369423",
      "22",
      "71.0",
      "2.5963958767438076",
      "22",
      "70.0",
      "4.22706691488296",
      "22",
      "69.0",
      "6.673246310514756",
      "22",
      "68.0",
      "1.0219818514111743",
      "23",
      "67.0",
      "1.5188681780162068",
      "23",
      "66.0",
      "2.191373107535868",
      "23",
      "65.0",
      "3.070200824254162",
      "23",
      "64.0",
      "4.178240291966755",
      "23",
      "63.0",
      "5.5246641814583204",
      "23",
      "62.0",
      "7.099080778498153",
      "23",
      "61.0",
      "8.866837533421785",
      "23",
      "60.0",
      "1.076667357728449",
      "24",
      "59.0",
      "1.2711761606545195",
      "24",
      "58.0",
      "1.4594738987398242",
      "24",
      "57.0",
      "1.6296649879978303",
      "24",
      "56.0",
      "1.7698927933371075",
      "24",
      "55.0",
      "1.869682115429845",
      "24",
      "54.0",
      "1.921218647122964",
      "24",
      "53.0",
      "1.920350729057019",
      "24",
      "52.0",
      "1.8671367554858763",
      "24",
      "51.0",
      "1.765838965294847",
      "24",
      "50.0",
      "1.6243644794046889",
      "24",
      "49.0",
      "1.4532544339468672",
      "24",
      "48.0",
      "1.2643990506708552",
      "24",
      "47.0",
      "1.0696939255571113",
      "24",
      "46.0",
      "8.798447212048726",
      "23",
      "45.0",
      "7.03479395725159",
      "23",
      "44.0",
      "5.466538075131939",
      "23",
      "43.0",
      "4.127570490462383",
      "23",
      "42.0",
      "3.027550751027687",
      "23",
      "41.0",
      "2.1566741167650566",
      "23",
      "40.0",
      "1.4915649745786292",
      "23",
      "39.0",
      "1.0011960358496016",
      "23",
      "38.0",
      "6.520120860028368",
      "22",
      "37.0",
      "4.117908402194766",
      "22",
      "36.0",
      "2.5211041481019496",
      "22",
      "35.0",
      "1.495508863440612",
      "22",
      "34.0",
      "8.590995503376254",
      "21",
      "33.0",
      "4.776460271246186",
      "21",
      "32.0",
      "2.5686616958212647",
      "21",
      "31.0",
      "1.3352164732264642",
      "21",
      "30.0",
      "6.703789338890458",
      "20",
      "29.0",
      "3.2483604147573896",
      "20",
      "28.0",
      "1.5177597363627793",
      "20",
      "27.0",
      "6.831590295916611",
      "19",
      "26.0",
      "2.9591496798373593",
      "19",
      "25.0",
      "1.2320877931322677",
      "19",
      "24.0",
      "4.924939694027879",
      "18",
      "23.0",
      "1.8873184402334513",
      "18",
      "22.0",
      "6.923300227545162",
      "17",
      "21.0",
      "2.4270188463901104",
      "17",
      "20.0",
      "8.115449538509514",
      "16",
      "19.0",
      "2.583006298900974",
      "16",
      "18.0",
      "7807229599055705.0",
      "17.0",
      "2235035028436609.0",
      "16.0",
      "604217533341156.0",
      "15.0",
      "153726262155340.0",
      "14.0",
      "36665087204424.0",
      "13.0",
      "8160963049666.0",
      "12.0",
      "1686210766170.0",
      "11.0",
      "321392322979.0",
      "10.0",
      "56083194111.0",
      "9.0",
      "8877583450.0",
      "8.0",
      "1260143574.0",
      "7.0",
      "158054852.0",
      "6.0",
      "17178978.0",
      "5.0",
      "1575131.0",
      "4.0",
      "117135.0",
      "3.0",
      "6635.0",
      "2.0",
      "255.0",
      "5.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "from sympy import Symbol, expand\n\nz = Symbol('z')\nexpression = expand((z**2 + z + 1)**49 + (z**2 + z + 1)**50 + (z**2 + z + 1)**51 + (z**2 + z + 1)**52 + (z**2 + z + 1)**53)\nprint(expression)"
  },
  {
    "example_id": 82,
    "selected_solution_index": 12,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "a = (12 - 7) / (4 - 3)\nprint(a)"
  },
  {
    "example_id": 83,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "192060.0",
      "6.0",
      "470449.0"
    ],
    "annotated_answers": [
      "66673.0"
    ],
    "solution": "from sympy import expand, sqrt\n\nexpression = expand((sqrt(2) + sqrt(3))**12)\nprint(expression)"
  },
  {
    "example_id": 84,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "533.0"
    ],
    "annotated_answers": [
      "104.0"
    ],
    "solution": "a = 2\nb = 3\nc = 4\nd = 5\nexpression = (a*d - b*c)**2 + (a*c + b*d)**2\nprint(expression)"
  },
  {
    "example_id": 85,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "32.0",
      "2.0",
      "128.0",
      "3.0"
    ],
    "annotated_answers": [
      "48.0"
    ],
    "solution": "import sympy\nfrom sympy import Min\n\nx = sympy.Symbol('x')\nexpression = (x**7 + 32*x**2 + 128) / x**3\nprint(Min(expression, x))"
  },
  {
    "example_id": 86,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.445130899747452",
      "38"
    ],
    "annotated_answers": [
      "336.0"
    ],
    "solution": "from math import factorial\n\n\ndef p(x):\n    result = 0\n    for n in range(21):\n        result += x**n * factorial(n)\n    return result\n\n\nprint(p(10))"
  },
  {
    "example_id": 87,
    "selected_solution_index": 0,
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "a = 1\nfor i in range(1, 9):\n    a = 1 / (1 - a)\nprint(a**9)"
  },
  {
    "example_id": 88,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.6666666666666666"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "c = 2 / 3\nprint(c)"
  },
  {
    "example_id": 89,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5050.0"
    ],
    "annotated_answers": [
      "-50.0"
    ],
    "solution": "sum = 0\nfor i in range(1, 101):\n    sum += i\nprint(sum)"
  },
  {
    "example_id": 90,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "from sympy import gcd\n\ndef factors(n):\n    for d in range(1, n+1):\n        if gcd(n, d) == 1:\n            yield d\n\nfor n in factors(63):\n    if n > 1:\n        print(n)\n        break"
  },
  {
    "example_id": 91,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "x = 1\ny = 1\nprint(x**2 - 6 * x + y**2)"
  },
  {
    "example_id": 92,
    "selected_solution_index": 10,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4700.0"
    ],
    "annotated_answers": [
      "508.0"
    ],
    "solution": "a = 1\nb = 2\nc = 3\nd = 4\ne = 5\nf = 6\nexpression = a + 6 * b + 21 * c + 36 * d + 32 * e + 720 * f\nprint(expression)"
  },
  {
    "example_id": 93,
    "selected_solution_index": 14,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "-1.0",
      "2.0",
      "5.0",
      "2.0",
      "5.0",
      "2.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "from sympy import solve, Symbol\n\na = Symbol('a', real=True)\nroots = solve((a**2 - 1) * a**2 + a**3, a)\nprint(roots)"
  },
  {
    "example_id": 94,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "21.0",
      "2.0",
      "5.0",
      "2.0",
      "1.0",
      "3.0",
      "1.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "21.0",
      "2.0",
      "5.0",
      "2.0",
      "1.0",
      "3.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "import sympy\na, b, c = sympy.symbols('a b c')\nexpression = (a**3 - 3 * a - 5)\nsolutions = sympy.solve(expression, a, b, c)\nabc = solutions[0][0] * solutions[0][1] * solutions[0][2]\nprint(abc)"
  },
  {
    "example_id": 95,
    "selected_solution_index": 10,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1050.0"
    ],
    "annotated_answers": [
      "1052.0"
    ],
    "solution": "n = 1000\nk = 50\nprint(n + k)"
  },
  {
    "example_id": 96,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "count = 0\nfor a in range(-100, 101):\n    for b in range(-100, 101):\n        if (a**2 + a*b + b**2) == 0:\n            count += 1\nprint(count)"
  },
  {
    "example_id": 97,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-149.0"
    ],
    "annotated_answers": [
      "-48.0"
    ],
    "solution": "import sympy as sp\nx = sp.Symbol('x')\nf = sp.Poly(x**4 + 2*x**3 + 3*x**2 - x - 154, x)\nprint(f.subs(x, 1))"
  },
  {
    "example_id": 98,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "8.0"
    ],
    "annotated_answers": [
      "-81.0"
    ],
    "solution": "from sympy import exp, I, sqrt\nexpression = (3 + I*sqrt(3))**8 + (3 - I*sqrt(3))**8\nprint(expression)"
  },
  {
    "example_id": 99,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.6245047927124712"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "r = (3072 / 24)**(1/10)\nprint(r)"
  },
  {
    "example_id": 100,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5050.0"
    ],
    "annotated_answers": [
      "50.0"
    ],
    "solution": "expression = 0\nfor i in range(1, 101):\n    expression += i\nprint(expression)"
  },
  {
    "example_id": 101,
    "selected_solution_index": 13,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "7.0",
      "3.0",
      "3.0",
      "2.0",
      "3.0",
      "1.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "from sympy import Symbol, expand, simplify\nx = Symbol(\"x\")\nexpression = (5*x-7)/(x-1)**3\nresult = expand(expression)\nprint(simplify(result))"
  },
  {
    "example_id": 102,
    "selected_solution_index": 10,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "2.0",
      "4.0",
      "4.0",
      "2.0",
      "4.0",
      "18.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "from sympy import symbols, Eq, solve\n\na1, b1, a2, b2, an, bn = symbols('a1 b1 a2 b2 an bn')\n\neq1 = Eq(a1 + 10 * b1 / (a1**2 + b1**2), 5)\neq2 = Eq(b1 + 10 * a1 / (a1**2 + b1**2), 4)\n\nsol = solve((eq1, eq2), (a1, b1, a2, b2, an, bn))\n\nresult = 0\nfor s in sol:\n    result += s[0] + s[1] + s[2] + s[3] + s[4] + s[5]\n\nprint(result)"
  },
  {
    "example_id": 103,
    "selected_solution_index": 0,
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "80.0"
    ],
    "solution": "from sympy import *\na, b, r, s = symbols('a b r s')\nP = x**3 - a*x**2 + b*x - 65\n\np = []\nfor a in range(-100, 101):\n    for b in range(-100, 101):\n        if solve(P.subs({a: a, b: b}), x)[0].is_real and solve(P.subs({a: a, b: b}), x)[1].is_real:\n            p.append(solve(P.subs({a: a, b: b}), x)[0] + solve(P.subs({a: a, b: b}), x)[1])\n\nprint(sum(p))"
  },
  {
    "example_id": 104,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "10.0",
      "2.0",
      "2.0",
      "2.0",
      "3.0",
      "2.0",
      "4.0",
      "2.0",
      "5.0",
      "2.0",
      "6.0",
      "2.0",
      "7.0",
      "2.0",
      "8.0",
      "2.0",
      "9.0",
      "2.0",
      "1.0",
      "2.0",
      "10.0",
      "2.0",
      "2.0",
      "2.0",
      "3.0",
      "2.0",
      "4.0",
      "2.0",
      "5.0",
      "2.0",
      "6.0",
      "2.0",
      "7.0",
      "2.0",
      "8.0",
      "2.0",
      "9.0",
      "2.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "import sympy\nx = sympy.Symbol('x')\ny = sympy.Symbol('y')\n\nexpression = 0\nfor i in range(1, 11):\n    expression += sympy.symbols(f'x_{i}')**2 + sympy.symbols(f'y_{i}')**2\nexpression = expression.subs({\n    x: 2 - y,\n    y: 2 - x,\n    x**5: 82 - y**5,\n    y**5: 82 - x**5\n})\nprint(expression)"
  },
  {
    "example_id": 105,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "sum = 0\nfor a in range(1, 101):\n    for b in range(1, 101):\n        if abs(a) == abs(b) == abs(a + b):\n            sum += a / b\nprint(sum)"
  },
  {
    "example_id": 106,
    "selected_solution_index": 10,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "12.0",
      "1.0",
      "1.0",
      "7.0",
      "1.0",
      "1.0",
      "7.0",
      "1.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "from sympy import sympify, roots\n\ng = sympify('x**3-14*x**2+18*x+72')\nr = roots(g)\nprint(r)"
  },
  {
    "example_id": 107,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.00000001",
      "2.00000002",
      "1.00000002"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "from scipy.optimize import minimize\n\n\ndef objective(x):\n    x1, x2, x3 = x\n    return 2 * x1**2 + 2 * x2**2 + 5 * x3**2 - 2 * x1 * x2 - 4 * x2 * x3 - 4 * x1 - 2 * x3 + 15\n\n\nres = minimize(objective, [1, 1, 1])\nprint(res.x)"
  },
  {
    "example_id": 108,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "5.0",
      "2.0",
      "2.0",
      "1.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "from sympy import Symbol, Min, Abs\nz = Symbol('z')\nexpression = Min(\n    Abs(z - 3)**2 + Abs(z - 5 + 2*1j)**2 + Abs(z - 1 + 1j)**2\n)\nprint(expression)"
  },
  {
    "example_id": 109,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "from math import sqrt\n\ndef f(x):\n    return sqrt(5 * x**2 + 2 * x * sqrt(5) + 1) + x * sqrt(5)\n\nprint(f(0))"
  },
  {
    "example_id": 110,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-5.0",
      "-201.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "a = 1 - 4j\nb = 1 - 3j\nc = 1 - 2j\nexpression = (a + 4)*(b + 4)*(c + 4)\nprint(expression)"
  },
  {
    "example_id": 111,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "866400.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "def f(x):\n    return x + 1\n\nn = 0\ns = 0\nfor x in range(-10, 10):\n    for y in range(-10, 10):\n        for z in range(-10, 10):\n            if f(x + f(y + z)) + f(f(x + y) + z) == 2 * y:\n                n += 1\n                s += f(5)\nprint(n * s)"
  },
  {
    "example_id": 112,
    "selected_solution_index": 12,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "import sympy\na, b, c = sympy.symbols('a b c')\nexpression = a * sympy.polys.poly(sympy.symbols('x')) ** 3 + b * sympy.symbols('x') - c\nprint(expression.div(sympy.polys.poly(sympy.symbols('x')) ** 2 + b * sympy.symbols('x') + c))"
  },
  {
    "example_id": 113,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.205526025944833"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "import math\na = 2\nb = 3\nc = 5\nexpression = math.pow(math.log(b, a), 3) + math.pow(math.log(c, b), 3) + math.pow(math.log(a, c), 3)\nprint(expression)"
  },
  {
    "example_id": 114,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "2014.0"
    ],
    "solution": "from sympy import *\n\na = 1\nb = 2\nc = 1\n\nfor i in range(2010):\n    a = a + 1\n    b = b + 1\n    c = c + 1\n    x = a - 1/b**c\n    if x.is_integer:\n        x = int(x)\n        break\n\nprint(a + b + c)"
  },
  {
    "example_id": 115,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "from sympy import symbols\nfrom sympy import sqrt\nfrom sympy import solve\nfrom sympy import simplify\nfrom sympy import Eq\n\nf1, f2, p, r = symbols('f1 f2 p r')\n\n# Distance between foci\nd = sqrt(2 * (r**2 - r))\n\n# Area of triangle PF1 F2\nA = (1/2) * r**2 * (r**2 - r)\n\n# Condition\nEq(A, 26)\n\n# Solve\nsol = solve(Eq(A, 26), r)\n\n# Distance between foci\nprint(d)"
  },
  {
    "example_id": 116,
    "selected_solution_index": 14,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "6.0"
    ],
    "annotated_answers": [
      "-6.0"
    ],
    "solution": "from sympy import sqrt\nP = sqrt(1 + sqrt(6))\nprint(P)"
  },
  {
    "example_id": 117,
    "selected_solution_index": 14,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "-2.0",
      "3.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "1.0",
      "27.0",
      "111.0",
      "9.0",
      "1.0",
      "3.0",
      "10.0",
      "9.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "1.0",
      "27.0",
      "111.0",
      "9.0",
      "1.0",
      "3.0",
      "-2.0",
      "3.0",
      "10.0",
      "9.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "1.0",
      "27.0",
      "111.0",
      "9.0",
      "1.0",
      "3.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "1.0",
      "27.0",
      "111.0",
      "9.0",
      "1.0",
      "3.0",
      "-2.0",
      "3.0",
      "10.0",
      "9.0",
      "1.0",
      "27.0",
      "111.0",
      "9.0",
      "1.0",
      "3.0",
      "1.0",
      "27.0",
      "111.0",
      "9.0",
      "1.0",
      "3.0",
      "32.0",
      "9.0",
      "465.0",
      "9.0",
      "91.0",
      "27.0",
      "1.0",
      "3.0",
      "8.0",
      "3.0",
      "2.0",
      "465.0",
      "9.0",
      "91.0",
      "27.0",
      "1.0",
      "3.0",
      "2.0",
      "-2.0",
      "465.0",
      "9.0",
      "91.0",
      "27.0",
      "1.0",
      "3.0",
      "8.0",
      "32.0",
      "9.0",
      "465.0",
      "9.0",
      "91.0",
      "27.0",
      "1.0",
      "3.0",
      "8.0",
      "3.0",
      "2.0",
      "465.0",
      "9.0",
      "91.0",
      "27.0",
      "1.0",
      "3.0",
      "32.0",
      "9.0",
      "465.0",
      "9.0",
      "91.0",
      "27.0",
      "1.0",
      "3.0",
      "16.0",
      "3.0",
      "2.0",
      "32.0",
      "9.0",
      "465.0",
      "9.0",
      "91.0",
      "27.0",
      "1.0",
      "3.0",
      "8.0",
      "3.0",
      "2.0",
      "465.0",
      "9.0",
      "91.0",
      "27.0",
      "1.0",
      "3.0",
      "2.0",
      "-2.0",
      "465.0",
      "9.0",
      "91.0",
      "27.0",
      "1.0",
      "3.0",
      "8.0",
      "32.0",
      "9.0",
      "465.0",
      "9.0",
      "91.0",
      "27.0",
      "1.0",
      "3.0",
      "8.0",
      "3.0",
      "2.0",
      "465.0",
      "9.0",
      "91.0",
      "27.0",
      "1.0",
      "3.0",
      "32.0",
      "9.0",
      "465.0",
      "9.0",
      "91.0",
      "27.0",
      "1.0",
      "3.0",
      "16.0",
      "3.0",
      "2.0",
      "-2.0",
      "465.0",
      "9.0",
      "91.0",
      "27.0",
      "1.0",
      "3.0",
      "32.0",
      "9.0",
      "465.0",
      "9.0",
      "91.0",
      "27.0",
      "1.0",
      "3.0",
      "8.0",
      "32.0",
      "9.0",
      "465.0",
      "9.0",
      "91.0",
      "27.0",
      "1.0",
      "3.0",
      "8.0",
      "3.0",
      "2.0",
      "465.0",
      "9.0",
      "91.0",
      "27.0",
      "1.0",
      "3.0",
      "16.0",
      "3.0",
      "2.0",
      "32.0",
      "9.0",
      "465.0",
      "9.0",
      "91.0",
      "27.0",
      "1.0",
      "3.0",
      "8.0",
      "3.0",
      "2.0",
      "465.0",
      "9.0",
      "91.0",
      "27.0",
      "1.0",
      "3.0",
      "2.0",
      "-2.0",
      "465.0",
      "9.0",
      "91.0",
      "27.0",
      "1.0",
      "3.0",
      "32.0",
      "9.0",
      "465.0",
      "9.0",
      "91.0",
      "27.0",
      "1.0",
      "3.0",
      "8.0",
      "32.0",
      "9.0",
      "465.0",
      "9.0",
      "91.0",
      "27.0",
      "1.0",
      "3.0",
      "8.0",
      "3.0",
      "2.0",
      "465.0",
      "9.0",
      "91.0",
      "27.0",
      "1.0",
      "3.0",
      "16.0",
      "3.0",
      "2.0",
      "32.0",
      "9.0",
      "465.0",
      "9.0",
      "91.0",
      "27.0",
      "1.0",
      "3.0",
      "8.0",
      "3.0",
      "2.0",
      "465.0",
      "9.0",
      "91.0",
      "27.0",
      "1.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "from sympy import *\nx = Symbol('x')\nf1 = x**4 - 5*x**2 - x + 4\nf2 = x**2 - 3*x\nroots1 = solve(f1 - f2)\nroots2 = solve(f1 + f2)\nprint(roots1 + roots2)"
  },
  {
    "example_id": 118,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-10.0",
      "-9.0",
      "-8.0",
      "-7.0",
      "-6.0",
      "-5.0",
      "-4.0",
      "-3.0",
      "-2.0",
      "-1.0",
      "0.0",
      "1.0",
      "3.0",
      "4.0",
      "5.0",
      "6.0",
      "7.0",
      "8.0",
      "9.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "from sympy import Abs\n\ndef f(x):\n    return 1 / (Abs(x**2 - 6*x + 8) + Abs(x**2 + x - 6))\n\nprint([x for x in range(-10, 10) if f(x).is_real])"
  },
  {
    "example_id": 119,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "-2.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "z = 1 - 1j\nexpression = z**3\nprint(expression)"
  },
  {
    "example_id": 120,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.972222222222222"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a = 1\nb = 2\nc = 3\nexpression = (b*c)/(a**2) + (a*c)/(b**2) + (a*b)/(c**2)\nprint(expression)"
  },
  {
    "example_id": 121,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "3.0",
      "2.0",
      "6.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "from sympy import Symbol, sqrt, simplify\nx = Symbol('x')\nexpression = sqrt(x + sqrt(3*x + 6)) + sqrt(x - sqrt(3*x + 6)) - 6\nexpression = simplify(expression)\nprint(expression)"
  },
  {
    "example_id": 122,
    "selected_solution_index": 0,
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-5.0"
    ],
    "solution": "def f(x, y):\n    return x + y * f(y, x)\nprint(f(1, 2))"
  },
  {
    "example_id": 123,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "a1 = 6\nb1 = 0\na2 = 6\nb2 = 0\nans = a1 + b1 + a2 + b2\nprint(ans)"
  },
  {
    "example_id": 124,
    "selected_solution_index": 11,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "405.0"
    ],
    "annotated_answers": [
      "405.0"
    ],
    "solution": "print(abs(-324 + 243j))"
  },
  {
    "example_id": 125,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "36.0"
    ],
    "annotated_answers": [
      "1004.0"
    ],
    "solution": "count = 0\nfor n in range(2, 2011):\n    product = 1\n    for i in range(1, n):\n        product *= 1 + 1 / i\n    if product.is_integer():\n        count += 1\nprint(count)"
  },
  {
    "example_id": 126,
    "selected_solution_index": 14,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "1.0",
      "3.0",
      "1.0",
      "2.0",
      "2.0",
      "6.0",
      "2.0",
      "9.0",
      "2.0",
      "10.0",
      "2.0",
      "27.0",
      "22.0"
    ],
    "annotated_answers": [
      "2150.0"
    ],
    "solution": "import sympy\nx = sympy.Symbol('x')\nexpression = (x**3 + x**2 - 5) - (x - 3)**3 - sympy.Symbol('c_2') * (x - 3)**2 - sympy.Symbol('c_1') * (x - 3) - sympy.Symbol('c_0')\nprint(expression.expand())"
  },
  {
    "example_id": 127,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "count = 0\nfor x in range(1, 100):\n    for y in range(1, 100):\n        for z in range(1, 100):\n            if (x + 1/y) * (y + 1/z) * (z + 1/x) == 8:\n                count += 1\nprint(count)"
  },
  {
    "example_id": 128,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "26.0"
    ],
    "annotated_answers": [
      "676.0"
    ],
    "solution": "def f(x):\n    return x**2 + 1\nprint(f(5))"
  },
  {
    "example_id": 129,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2473056.0"
    ],
    "annotated_answers": [
      "348.0"
    ],
    "solution": "def arithmetic_sequence(a, d, n):\n    return [a + (i * d) for i in range(n)]\n\na1, d1 = 1440, 16\na2, d2 = 1716, 18\n\ndef sequence(a1, d1, a2, d2, n):\n    return [a1 * a2 + (i * d1 * d2) for i in range(n)]\n\nprint(sequence(a1, d1, a2, d2, 8)[7])"
  },
  {
    "example_id": 130,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "0.0",
      "0.0",
      "0.0"
    ],
    "annotated_answers": [
      "216.0"
    ],
    "solution": "# Use the formula: Area = 2 * (l * w + w * h + h * l)\n# where l, w, and h are the length, width, and height of the box.\n\n# To find the smallest possible surface area, we need to find the values of l, w, and h that maximize the product of l * w * h.\n# To do this, we can use a technique called \"brute force\" or \"exhaustive search\".\n\n# Define a function to compute the product of the three dimensions.\ndef product(l, w, h):\n    return l * w * h\n\n# Initialize variables to keep track of the smallest possible values of l, w, and h.\nsmallest_l = 0\nsmallest_w = 0\nsmallest_h = 0\n\n# Initialize a variable to keep track of the smallest possible surface area.\nsmallest_area = 0\n\n# Loop over all possible values of l, w, and h.\nfor l in range(1, 100):\n    for w in range(1, 100):\n        for h in range(1, 100):\n            # Compute the product of the three dimensions.\n            p = product(l, w, h)\n\n            # If the product is greater than 216, we can skip this iteration.\n            if p > 216:\n                continue\n\n            # Compute the surface area of the box.\n            area = 2 * (l * w + w * h + h * l)\n\n            # If the surface area is greater than the current smallest surface area, we can skip this iteration.\n            if area > smallest_area:\n                continue\n\n            # Update the smallest possible values of l, w, and h.\n            smallest_l = l\n            smallest_w = w\n            smallest_h = h\n\n            # Update the smallest possible surface area.\n            smallest_area = area\n\n# Print the smallest possible values of l, w, and h.\nprint(smallest_l, smallest_w, smallest_h)\n\n# Print the smallest possible surface area.\nprint(smallest_area)"
  },
  {
    "example_id": 131,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "26.0"
    ],
    "annotated_answers": [
      "89.0"
    ],
    "solution": "x = 1\ny = 2\nexpression = 2*x**3 + (x*y)**3 + 2*y**3\nprint(expression)"
  },
  {
    "example_id": 132,
    "selected_solution_index": 10,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x, y = -1, 1\nG = x + y + x * y + y * x\nG_prime = y + x + y * x + x * y\nif G == G_prime:\n    print(x + y)"
  },
  {
    "example_id": 133,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "import math\na, b, c = 1, 1, 1\nwhile True:\n    x = math.sqrt(2) / 3\n    if (9 * x**3 - 20 * x) == (8 * math.sqrt(2)) / 3:\n        a, b, c = a + 1, b + 1, c + 1\n    else:\n        break\nprint(a + b + c)"
  },
  {
    "example_id": 134,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "count = 0\nfor n in range(3, 101):\n    for x1 in range(1, n):\n        for x2 in range(1, n):\n            if x1 + x2 == 0:\n                x3 = -x1 - x2\n                if x3 > 0:\n                    count += 1\nprint(count)"
  },
  {
    "example_id": 135,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "count = 0\nfor x in range(-10, 10):\n    for y in range(-10, 10):\n        for z in range(-10, 10):\n            if x**4 + y**4 + z**4 - 4*x*y*z == -1:\n                count += 1\nprint(count)"
  },
  {
    "example_id": 136,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4558728.0"
    ],
    "annotated_answers": [
      "763.0"
    ],
    "solution": "def p(n, x):\n    if n == 1:\n        return x**3 + 313*x**2 - 77*x - 8\n    else:\n        return p(n-1, x-n)\n\nprint(p(20, 1))"
  },
  {
    "example_id": 137,
    "selected_solution_index": 13,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.5707963267948966"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "import math\n\ndef area(r, theta):\n    return r**2 * theta / 2\n\ndef max_theta(r):\n    theta_max = math.pi / 2\n    while area(r, theta_max) < area(r, math.pi / 2):\n        theta_max += 1e-6\n    return theta_max\n\nprint(max_theta(1))"
  },
  {
    "example_id": 138,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-9.0",
      "-4.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "print(range(-9, -4))"
  },
  {
    "example_id": 139,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "numbers = [1, 2, 3, 4, 5]\nsum_numbers = sum(numbers)\nsum_squares = sum(x**2 for x in numbers)\nmean = sum_numbers / len(numbers)\nprint(mean)"
  },
  {
    "example_id": 140,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.5315622202963368"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "import numpy as np\na, b, c, d = np.random.random(4)\na = a / np.sum([a, b, c, d])\nb = b / np.sum([a, b, c, d])\nc = c / np.sum([a, b, c, d])\nd = d / np.sum([a, b, c, d])\nprint(a**2 + b**2 + c**2 + d**2)"
  },
  {
    "example_id": 141,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "4.0",
      "3.0",
      "3.0",
      "3.0",
      "3.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "4.0",
      "3.0",
      "2.0",
      "2.0",
      "2.0",
      "4.0",
      "3.0",
      "3.0",
      "3.0",
      "2.0",
      "2.0",
      "2.0",
      "4.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "4.0",
      "3.0",
      "3.0",
      "2.0",
      "4.0",
      "2.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "3.0",
      "2.0",
      "3.0",
      "2.0",
      "4.0",
      "3.0",
      "4.0",
      "2.0",
      "2.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "3.0",
      "2.0",
      "3.0",
      "3.0",
      "4.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "import sympy\n\na, b, c, d, e = sympy.symbols('a b c d e')\nexpression = sympy.expand((a**4 / (a - b) / (a - c) / (a - d) / (a - e)) +\n                           (b**4 / (b - a) / (b - c) / (b - d) / (b - e)) +\n                           (c**4 / (c - a) / (c - b) / (c - d) / (c - e)) +\n                           (d**4 / (d - a) / (d - b) / (d - c) / (d - e)) +\n                           (e**4 / (e - a) / (e - b) / (e - c) / (e - d)))\nprint(expression)"
  },
  {
    "example_id": 142,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2001.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "term = 2001\nfor i in range(1, 2004):\n    term = term + 2002 - term - 1\nprint(term)"
  },
  {
    "example_id": 143,
    "selected_solution_index": 0,
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "import sympy\n\ny = sympy.Poly((x + 8) * (x + 5)**2 * (x + 1)**3 * x**5 * (x - 3)**2, x)\ny /= (x + 7) * (x + 5)**2 * (x + 1) * x * (x - 3)**3 * (x - 4)\n\nprint(len(y.as_basic().atoms(sympy.Asymptote)))"
  },
  {
    "example_id": 144,
    "selected_solution_index": 0,
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "# asy\nimport graph; size(200); defaultpen(fontsize(10pt)+linewidth(.8pt)); dotfactor=4;  pair P1=(-7,-4), P2=(-2,6), P3=(0,0), P4=(1,6), P5=(5,-6); real[] xticks={-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6}; real[] yticks={-6,-5,-4,-3,-2,-1,1,2,3,4,5,6};  draw(P1--P2--P3--P4--P5);  dot(\"(-7, -4)\",P1); dot(\"(-2, 6)\",P2,LeftSide); dot(\"(1, 6)\",P4); dot(\"(5, -6)\",P5);  xaxis(\"$x$\",-7.5,7,Ticks(xticks),EndArrow(6)); yaxis(\"$y$\",-6.5,7,Ticks(yticks),EndArrow(6)); [/asy]"
  },
  {
    "example_id": 145,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "71.0",
      "2.0",
      "35.629960524947435",
      "3.0",
      "23.81408319010247",
      "4.0",
      "17.89685026299205",
      "5.0",
      "14.34199518933534",
      "6.0",
      "11.969520098805356",
      "7.0",
      "10.273275883253197",
      "8.0",
      "9.0",
      "9.0",
      "8.008898202561323",
      "10.0",
      "7.215443469003188",
      "11.0",
      "6.565816371869937",
      "12.0",
      "6.024119040425556",
      "13.0",
      "5.565487283670827",
      "14.0",
      "5.172153018869659",
      "15.0",
      "4.831080804955365",
      "16.0",
      "4.532490131236859",
      "17.0",
      "4.268898917097543",
      "18.0",
      "4.034485633011605",
      "19.0",
      "3.824652718353786",
      "20.0",
      "3.635720880829745",
      "21.0",
      "3.4647106750657675",
      "22.0",
      "3.3091836059388813",
      "23.0",
      "3.167124651297894",
      "24.0",
      "3.0368541308589507",
      "25.0",
      "2.9169607095285146",
      "26.0",
      "2.806249848784899",
      "27.0",
      "2.7037037037037037",
      "28.0",
      "2.6084496061384166",
      "29.0",
      "2.5197350629546844",
      "30.0",
      "2.436907750198462",
      "31.0",
      "2.3593993758835934",
      "32.0",
      "2.2867125657480125",
      "33.0",
      "2.2184101312119946",
      "34.0",
      "2.1541062294493374",
      "35.0",
      "2.0934590374339597",
      "36.0",
      "2.0361646458026286",
      "37.0",
      "1.9819519419363771",
      "38.0",
      "1.93057830017892",
      "39.0",
      "1.881825934436261",
      "40.0",
      "1.835498797333835",
      "41.0",
      "1.7914199326922617",
      "42.0",
      "1.7494292058306296",
      "43.0",
      "1.7093813502415518",
      "44.0",
      "1.6711442803483196",
      "45.0",
      "1.6345976289886681",
      "46.0",
      "1.5996314754568686",
      "47.0",
      "1.566145235747632",
      "48.0",
      "1.5340466913680058",
      "49.0",
      "1.5032511369392445",
      "50.0",
      "1.4736806299728076",
      "51.0",
      "1.445263328809141",
      "52.0",
      "1.4179329068618702",
      "53.0",
      "1.3916280330985107",
      "54.0",
      "1.3662919101793447",
      "55.0",
      "1.3418718629229343",
      "56.0",
      "1.3183189708132996",
      "57.0",
      "1.295587739145207",
      "58.0",
      "1.2736358041487552",
      "59.0",
      "1.2524236680656484",
      "60.0",
      "1.2319144606861478",
      "61.0",
      "1.2120737243131505",
      "62.0",
      "1.1928692195109742",
      "63.0",
      "1.1742707493316886",
      "64.0",
      "1.15625",
      "65.0",
      "1.1387803962859855",
      "66.0",
      "1.121836970009427",
      "67.0",
      "1.1053962403051594",
      "68.0",
      "1.089436104439961",
      "69.0",
      "1.0739357381116281",
      "70.0",
      "1.0588755042829794",
      "71.0",
      "1.044236869710181",
      "72.0",
      "1.0300023284181086",
      "73.0",
      "1.016155331457277",
      "74.0",
      "1.0026802223487623",
      "75.0",
      "0.9895621776867832",
      "76.0",
      "0.9767871524244064",
      "77.0",
      "0.964341829417078",
      "78.0",
      "0.952213572842281",
      "79.0",
      "0.9403903851522305",
      "80.0",
      "0.9288608672507971",
      "81.0",
      "0.9176141816163238",
      "82.0",
      "0.9066400181191294",
      "83.0",
      "0.8959285623066847",
      "84.0",
      "0.8854704659510463",
      "85.0",
      "0.8752568196724492",
      "86.0",
      "0.865279127470257",
      "87.0",
      "0.8555292830079728",
      "88.0",
      "0.8459995475129389",
      "89.0",
      "0.8366825291638712",
      "90.0",
      "0.8275711638506351",
      "91.0",
      "0.8186586972008287",
      "92.0",
      "0.8099386677768913",
      "93.0",
      "0.8014048913557364",
      "94.0",
      "0.7930514462103866",
      "95.0",
      "0.7848726593198627",
      "96.0",
      "0.7768630934397222",
      "97.0",
      "0.7690175349712066",
      "98.0",
      "0.761330982572025",
      "99.0",
      "0.7537986364563913"
    ],
    "annotated_answers": [
      "553.0"
    ],
    "solution": "from math import floor\n\nn = []\nfor k in range(1, 100):\n    for i in range(1, 71):\n        n.append(k**(1/3) + i)\n    n = sorted(set(n))\n    print(k, max(n) / k)"
  },
  {
    "example_id": 146,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "169.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "z = 156 + 65j\nprint(abs(z))"
  },
  {
    "example_id": 147,
    "selected_solution_index": 0,
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "from sympy import *\np, q = [x**8 + 98*x**4 + 1].monic().factor()\nprint(p(1) + q(1))"
  },
  {
    "example_id": 148,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.25"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "def f(x):\n    return (6*x**3 + 4*x**2 - 11*x + 5) / (3*x**3 - 15*x + 20)\n\nc = f(0)\nprint(c)"
  },
  {
    "example_id": 149,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "print(abs((1990**3 - 1000**3 - 990**3) / (1990 * 1000 * 990)))"
  },
  {
    "example_id": 150,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "-9.0"
    ],
    "solution": "a = -1\nb = -1\nc = -1\nexpression = a**3 * b + b**3 * c + c**3 * a\nprint(expression)"
  },
  {
    "example_id": 151,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "104.0"
    ],
    "solution": "N = 1\nwhile True:\n    if sum(range(1, N + 1)) == N:\n        break\n    N += 1\nprint(N)"
  },
  {
    "example_id": 152,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "-1321012793433093.0",
      "-4.693",
      "3.0",
      "-7.092",
      "3.0",
      "4.252",
      "3.0",
      "2.0",
      "-6.112",
      "11.0",
      "-1.435",
      "11.0",
      "-2.157",
      "12.0",
      "3.825",
      "0.0",
      "2.52",
      "0.0",
      "-1.252",
      "0.0",
      "2.52",
      "0.0",
      "1.672",
      "0.0",
      "-8.256",
      "-1.0",
      "-1.252",
      "0.0",
      "-8.256",
      "-1.0",
      "4.098",
      "-1.0",
      "464.0",
      "113.0"
    ],
    "annotated_answers": [
      "100.0"
    ],
    "solution": "from scipy.optimize import minimize\n\n\ndef f(x):\n    a, b, c = x\n    return (a + b + c) * (a + b)**2 / a * b + (a + b + c) * (a + b + 4*c)**2 / a * b * c + a * b**2 / c + b * c**2 / a + c * a**2 / b\n\n\nresult = minimize(f, [1, 1, 1])\nprint(result)"
  },
  {
    "example_id": 153,
    "selected_solution_index": 0,
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "67.0"
    ],
    "solution": "count = 0\nfor n in range(1, 101):\n    if (x**2 + x + 1).divides(x**(2*n) + 1 + (x + 1)**(2*n)):\n        count += 1\nprint(count)"
  },
  {
    "example_id": 154,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "import math\n\nz = 2j\nw = 5j\n\nprint(max(abs(z + w), abs(z - w)))"
  },
  {
    "example_id": 155,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "209.0"
    ],
    "annotated_answers": [
      "1700.0"
    ],
    "solution": "x = 100\nwhile (x // 19) - (x // 89)!= 9:\n    x += 1\nprint(x)"
  },
  {
    "example_id": 156,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "-4.0",
      "2.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "import sympy\na, b, c = sympy.symbols(\"a, b, c\")\nden = a * sympy.sqrt(b**2 - 4 * a * c)\nnumer1 = sympy.sqrt(b**2 - 4 * a * c)\nnumer2 = -b + numer1\nf1 = 1 / (numer1 + numer2)\nnumer1 = -b - numer1\nf2 = 1 / (numer1 + numer2)\nprint(f1 + f2)"
  },
  {
    "example_id": 157,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "11888.0"
    ],
    "annotated_answers": [
      "1112.0"
    ],
    "solution": "import sympy as sp\nx = sp.Symbol('x')\np = sp.Poly(x**4 + 3*x**3 - 11*x**2 + 27*x + 3, x)\nprint(p(-2) + 7*p(6))"
  },
  {
    "example_id": 158,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "850.0"
    ],
    "solution": "from math import gcd\n\ndef is_root(x):\n    return x**10 + (13*x - 1)**10 == 0\n\ndef conjugate(x):\n    return x.conjugate()\n\ndef roots():\n    roots = []\n    for a in range(-100, 101):\n        for b in range(-100, 101):\n            if is_root(a + b * 1j):\n                roots.append(a + b * 1j)\n    return roots\n\ndef sum(roots):\n    sum = 0\n    for root in roots:\n        sum += 1 / (root * conjugate(root))\n    return sum\n\nroots = roots()\nprint(sum(roots))"
  },
  {
    "example_id": 159,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.386294361120372"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "sum = 1\nterm = 1\nfor i in range(1, 1000000):\n    sum += term / (i * (i + 1))\n    term = -term\nprint(sum)"
  },
  {
    "example_id": 160,
    "selected_solution_index": 14,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "8.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "16.0",
      "2.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "108.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "3.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "8.0",
      "1.0",
      "3.0",
      "2.0",
      "-2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "8.0",
      "1.0",
      "2.0",
      "3.0",
      "4.0",
      "3.0",
      "3.0",
      "32.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "16.0",
      "2.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "108.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "3.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "8.0",
      "1.0",
      "3.0",
      "2.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "108.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "3.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "8.0",
      "1.0",
      "3.0",
      "2.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "2.0",
      "48.0",
      "1.0",
      "2.0",
      "3.0",
      "8.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "16.0",
      "2.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "2.0",
      "48.0",
      "1.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "216.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "6.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "2.0",
      "48.0",
      "1.0",
      "2.0",
      "3.0",
      "27.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "108.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "3.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "8.0",
      "2.0",
      "4.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "16.0",
      "1.0",
      "3.0",
      "2.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "216.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "6.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "2.0",
      "48.0",
      "1.0",
      "2.0",
      "3.0",
      "27.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "108.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "3.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "8.0",
      "2.0",
      "4.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "16.0",
      "1.0",
      "3.0",
      "2.0",
      "-2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "8.0",
      "1.0",
      "2.0",
      "3.0",
      "4.0",
      "3.0",
      "3.0",
      "32.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "16.0",
      "2.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "2.0",
      "48.0",
      "1.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "216.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "6.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "2.0",
      "48.0",
      "1.0",
      "2.0",
      "3.0",
      "27.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "108.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "3.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "8.0",
      "2.0",
      "4.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "16.0",
      "1.0",
      "3.0",
      "2.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "216.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "6.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "2.0",
      "48.0",
      "1.0",
      "2.0",
      "3.0",
      "27.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "108.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "3.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "8.0",
      "2.0",
      "4.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "16.0",
      "1.0",
      "3.0",
      "2.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "2.0",
      "48.0",
      "1.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "216.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "6.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "2.0",
      "48.0",
      "1.0",
      "2.0",
      "3.0",
      "27.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "108.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "3.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "8.0",
      "2.0",
      "4.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "16.0",
      "1.0",
      "3.0",
      "2.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "216.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "6.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "2.0",
      "48.0",
      "1.0",
      "2.0",
      "3.0",
      "27.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "108.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "3.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "8.0",
      "2.0",
      "4.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "16.0",
      "1.0",
      "3.0",
      "2.0",
      "3.0",
      "8.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "16.0",
      "2.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "108.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "3.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "8.0",
      "1.0",
      "3.0",
      "2.0",
      "-2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "8.0",
      "1.0",
      "2.0",
      "3.0",
      "4.0",
      "3.0",
      "3.0",
      "32.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "16.0",
      "2.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "108.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "3.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "8.0",
      "1.0",
      "3.0",
      "2.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "108.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "3.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "8.0",
      "1.0",
      "3.0",
      "2.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "2.0",
      "48.0",
      "1.0",
      "2.0",
      "3.0",
      "8.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "16.0",
      "2.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "2.0",
      "48.0",
      "1.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "216.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "6.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "2.0",
      "48.0",
      "1.0",
      "2.0",
      "3.0",
      "27.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "108.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "3.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "8.0",
      "2.0",
      "4.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "16.0",
      "1.0",
      "3.0",
      "2.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "216.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "6.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "2.0",
      "48.0",
      "1.0",
      "2.0",
      "3.0",
      "27.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "108.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "3.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "8.0",
      "2.0",
      "4.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "16.0",
      "1.0",
      "3.0",
      "2.0",
      "-2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "8.0",
      "1.0",
      "2.0",
      "3.0",
      "4.0",
      "3.0",
      "3.0",
      "32.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "16.0",
      "2.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "2.0",
      "48.0",
      "1.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "216.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "6.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "2.0",
      "48.0",
      "1.0",
      "2.0",
      "3.0",
      "27.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "108.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "3.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "8.0",
      "2.0",
      "4.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "16.0",
      "1.0",
      "3.0",
      "2.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "216.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "6.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "2.0",
      "48.0",
      "1.0",
      "2.0",
      "3.0",
      "27.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "108.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "3.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "8.0",
      "2.0",
      "4.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "16.0",
      "1.0",
      "3.0",
      "2.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "2.0",
      "48.0",
      "1.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "216.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "6.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "2.0",
      "48.0",
      "1.0",
      "2.0",
      "3.0",
      "27.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "108.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "3.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "8.0",
      "2.0",
      "4.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "16.0",
      "1.0",
      "3.0",
      "2.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "216.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "6.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "2.0",
      "48.0",
      "1.0",
      "2.0",
      "3.0",
      "27.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "108.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "3.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "8.0",
      "2.0",
      "4.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "16.0",
      "1.0",
      "3.0",
      "2.0",
      "3.0",
      "8.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "16.0",
      "2.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "108.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "3.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "8.0",
      "1.0",
      "3.0",
      "2.0",
      "-2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "8.0",
      "1.0",
      "2.0",
      "3.0",
      "4.0",
      "3.0",
      "3.0",
      "32.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "16.0",
      "2.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "108.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "3.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "8.0",
      "1.0",
      "3.0",
      "2.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "108.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "3.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "8.0",
      "1.0",
      "3.0",
      "2.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "2.0",
      "48.0",
      "1.0",
      "2.0",
      "3.0",
      "8.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "16.0",
      "2.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "2.0",
      "48.0",
      "1.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "216.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "6.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "2.0",
      "48.0",
      "1.0",
      "2.0",
      "3.0",
      "27.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "108.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "3.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "8.0",
      "2.0",
      "4.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "16.0",
      "1.0",
      "3.0",
      "2.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "216.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "6.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "2.0",
      "48.0",
      "1.0",
      "2.0",
      "3.0",
      "27.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "108.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "3.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "8.0",
      "2.0",
      "4.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "16.0",
      "1.0",
      "3.0",
      "2.0",
      "-2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "8.0",
      "1.0",
      "2.0",
      "3.0",
      "4.0",
      "3.0",
      "3.0",
      "32.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "16.0",
      "2.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "2.0",
      "48.0",
      "1.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "216.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "6.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "2.0",
      "48.0",
      "1.0",
      "2.0",
      "3.0",
      "27.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "108.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "3.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "8.0",
      "2.0",
      "4.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "16.0",
      "1.0",
      "3.0",
      "2.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "216.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "6.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "2.0",
      "48.0",
      "1.0",
      "2.0",
      "3.0",
      "27.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "108.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "3.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "8.0",
      "2.0",
      "4.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "16.0",
      "1.0",
      "3.0",
      "2.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "2.0",
      "48.0",
      "1.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "216.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "6.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "2.0",
      "48.0",
      "1.0",
      "2.0",
      "3.0",
      "27.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "108.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "3.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "8.0",
      "2.0",
      "4.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "16.0",
      "1.0",
      "3.0",
      "2.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "216.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "6.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "2.0",
      "48.0",
      "1.0",
      "2.0",
      "3.0",
      "27.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "108.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "3.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "8.0",
      "2.0",
      "4.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "16.0",
      "1.0",
      "3.0",
      "2.0",
      "3.0",
      "8.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "16.0",
      "2.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "108.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "3.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "8.0",
      "1.0",
      "3.0",
      "2.0",
      "-2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "8.0",
      "1.0",
      "2.0",
      "3.0",
      "4.0",
      "3.0",
      "3.0",
      "32.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "16.0",
      "2.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "108.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "3.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "8.0",
      "1.0",
      "3.0",
      "2.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "108.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "3.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "8.0",
      "1.0",
      "3.0",
      "2.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "2.0",
      "48.0",
      "1.0",
      "2.0",
      "3.0",
      "8.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "16.0",
      "2.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "2.0",
      "48.0",
      "1.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "216.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "6.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "2.0",
      "48.0",
      "1.0",
      "2.0",
      "3.0",
      "27.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "108.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "3.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "8.0",
      "2.0",
      "4.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "16.0",
      "1.0",
      "3.0",
      "2.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "216.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "6.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "2.0",
      "48.0",
      "1.0",
      "2.0",
      "3.0",
      "27.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "108.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "3.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "8.0",
      "2.0",
      "4.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "16.0",
      "1.0",
      "3.0",
      "2.0",
      "-2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "8.0",
      "1.0",
      "2.0",
      "3.0",
      "4.0",
      "3.0",
      "3.0",
      "32.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "16.0",
      "2.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "2.0",
      "48.0",
      "1.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "216.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "6.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "2.0",
      "48.0",
      "1.0",
      "2.0",
      "3.0",
      "27.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "108.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "3.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "8.0",
      "2.0",
      "4.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "16.0",
      "1.0",
      "3.0",
      "2.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "216.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "6.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "2.0",
      "48.0",
      "1.0",
      "2.0",
      "3.0",
      "27.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "108.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "3.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "8.0",
      "2.0",
      "4.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "16.0",
      "1.0",
      "3.0",
      "2.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "2.0",
      "48.0",
      "1.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "216.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "6.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "2.0",
      "48.0",
      "1.0",
      "2.0",
      "3.0",
      "27.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "108.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "3.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "8.0",
      "2.0",
      "4.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "16.0",
      "1.0",
      "3.0",
      "2.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "216.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "6.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "2.0",
      "48.0",
      "1.0",
      "2.0",
      "3.0",
      "27.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "3.0",
      "108.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "32.0",
      "1.0",
      "3.0",
      "16.0",
      "2.0",
      "3.0",
      "2.0",
      "128.0",
      "3.0",
      "3.0",
      "4.0",
      "4096.0",
      "1.0",
      "2.0",
      "3.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "8.0",
      "2.0",
      "4.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "64.0",
      "2.0",
      "16.0",
      "1.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "from sympy.solvers import solve\nfrom sympy.abc import x\nfrom sympy import Symbol\nfrom sympy import Poly\n\na3 = Symbol('a3')\na2 = Symbol('a2')\na1 = Symbol('a1')\na = solve(Poly(2*x**4 + a3*x**3 + a2*x**2 + a1*x + 1, x), x)\nprint(a)"
  },
  {
    "example_id": 161,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "13535.0"
    ],
    "annotated_answers": [
      "13535.0"
    ],
    "solution": "expression = (((((7**(1/2) + 5**(1/2))**6)//1)//1)//1)//1\nprint(expression)"
  },
  {
    "example_id": 162,
    "selected_solution_index": 11,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2015.0"
    ],
    "annotated_answers": [
      "1209.0"
    ],
    "solution": "def f(x):\n    if x == 5:\n        return 3\n    elif x == 2015:\n        return 2015\n    else:\n        return 2*x*f(x + 1) + 2*x*f(x - 1)\nprint(f(2015))"
  },
  {
    "example_id": 163,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "from sympy import Poly, solve, Symbol\nx = Symbol('x')\nq = Poly(x**6-4*x**5+3*x**3+x**2-1, x)\nprint(q.degree())"
  },
  {
    "example_id": 164,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-0.13494720576873553"
    ],
    "annotated_answers": [
      "56.0"
    ],
    "solution": "z1 = 18 + 83j\nz2 = 18 + 39j\nz3 = 78 + 99j\n\nz = (z3 - z1) / (z2 - z1) * (1 - z2 / z3)\nprint(z.real)"
  },
  {
    "example_id": 165,
    "selected_solution_index": 10,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "92.0"
    ],
    "solution": "sum = 0\nfor a in range(1, 5):\n    for b in range(a, 5):\n        for c in range(b, 5):\n            for d in range(c, 5):\n                if abs(4*1**4 + a*1**3 + b*1**2 + c*1 + d) == 1:\n                    sum += 4*1**4 + a*1**3 + b*1**2 + c*1 + d\nprint(sum)"
  },
  {
    "example_id": 166,
    "selected_solution_index": 11,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "a = 1\nb = 1\nc = 1\nd = 1\nprint((a * c + b * d)**2 + (b * c - a * d)**2)"
  },
  {
    "example_id": 167,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "50.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "count = 0\nfor k in range(1, 101):\n    if k % 2!= 0:\n        count += 1\nprint(count)"
  },
  {
    "example_id": 168,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.9999999999999996"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "import math\nexpression = math.log(3, 2) * math.log(4, 3) * math.log(5, 4) * math.log(6, 5) * math.log(7, 6) * math.log(8, 7)\nprint(expression)"
  },
  {
    "example_id": 169,
    "selected_solution_index": 12,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "a, b, c = 2009 + 9002 * 1j, 2009, 9002\np = lambda x: x**3 + a*x**2 + b*x + c\n# p(2009 + 9002*1j) = p(2009) = p(9002) = 0\n# so there are 3 real zeros\nprint(len(set(p(x).real for x in [2009, 9002, 2009 + 9002 * 1j])))"
  },
  {
    "example_id": 170,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "125.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "z = 100 + 75j\nprint(abs(z))"
  },
  {
    "example_id": 171,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "43.0"
    ],
    "annotated_answers": [
      "43.0"
    ],
    "solution": "from sympy import Symbol\nfrom sympy.abc import x\nfrom sympy import solve\n\ndef sum_of_roots(eq):\n    roots = solve(eq)\n    sum = 0\n    for root in roots:\n        sum += root\n    return sum\n\neq = 1/(x-1) + 1/(x-5) + 1/(x-10) + 1/(x-25) - 2\nprint(sum_of_roots(eq))"
  },
  {
    "example_id": 172,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "1.4142135702949263",
      "8.165",
      "-1.0",
      "8.165",
      "-1.0",
      "8.165",
      "-1.0",
      "6.0",
      "5.774",
      "-1.0",
      "5.774",
      "-1.0",
      "5.774",
      "-1.0",
      "32.0",
      "6.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "import numpy as np\nfrom scipy.optimize import minimize\n\ndef distance(x, y, z):\n    return np.sqrt(x**2 + y**2 + z**2)\n\ndef objective(params):\n    x, y, z = params\n    return distance(x, y, z)\n\ndef constraint(params):\n    x, y, z = params\n    return x**2 + y**2 + z**2 - 2\n\nres = minimize(objective, [0, 0, 0], constraints=[{'type': 'eq', 'fun': constraint}])\nprint(res)"
  },
  {
    "example_id": 173,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.47213595499958"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "import numpy as np\n\n# Set a = 1\na = 1\n\n# Find the coordinates of the point (x1, y1)\nx1 = np.sqrt(4 * a)\ny1 = -a\n\n# Find the coordinates of the point (x2, y2)\nx2 = -x1\ny2 = y1\n\n# Find the distance PQ\ndistance = np.sqrt(x1**2 + y1**2) + np.sqrt(x2**2 + y2**2)\n\n# Print the result\nprint(distance)"
  },
  {
    "example_id": 174,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "384.0"
    ],
    "annotated_answers": [
      "384.0"
    ],
    "solution": "expression = 2009**4 - 4 * 2007**4 + 6 * 2005**4 - 4 * 2003**4 + 2001**4\nprint(expression)"
  },
  {
    "example_id": 175,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1001.0"
    ],
    "annotated_answers": [
      "1000.0"
    ],
    "solution": "count = 0\nfor m in range(1, 1001):\n    for n in range(1, m + 1):\n        if m * n <= m + n:\n            count += 1\nprint(count)"
  },
  {
    "example_id": 176,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "560.9999999999999"
    ],
    "annotated_answers": [
      "561.0"
    ],
    "solution": "a = [1, 1]\nb = [1, 3]\nfor i in range(2, 33):\n    a.append(a[i - 1] + a[i - 1]**2 / a[i - 2])\n    b.append(b[i - 1] + b[i - 1]**2 / b[i - 2])\nprint(b[32] / a[32])"
  },
  {
    "example_id": 177,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "4.0",
      "2.0",
      "-9.0",
      "3.0",
      "4.0",
      "3.0",
      "4.0",
      "-1.0",
      "4.0",
      "2.0",
      "-9.0",
      "3.0",
      "4.0",
      "3.0",
      "4.0",
      "-1.0",
      "4.0",
      "3.0",
      "4.0",
      "2.0",
      "-9.0",
      "3.0",
      "4.0",
      "-1.0",
      "4.0",
      "3.0",
      "4.0",
      "2.0",
      "-9.0",
      "3.0",
      "4.0"
    ],
    "annotated_answers": [
      "40.0"
    ],
    "solution": "import sympy as sy\nx = sy.Symbol('x')\nexpression = x**4 + x**3 + 3*x**2 + x + 1\nsolution = sy.solve(expression, x)\nprint(solution)"
  },
  {
    "example_id": 178,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a = 2009\nb = 2010\nc = 2011\nsum = (b - a) + (c - b)\nprint(sum)"
  },
  {
    "example_id": 179,
    "selected_solution_index": 12,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "-3.0",
      "2.0",
      "27.0",
      "42.0",
      "3.0",
      "3.0",
      "3.0",
      "6.0",
      "22.0",
      "2.0",
      "3.0",
      "3.0",
      "6.0",
      "2.0",
      "3.0",
      "6.0",
      "2.0",
      "-3.0",
      "2.0",
      "27.0",
      "42.0",
      "21.0",
      "2.0",
      "3.0",
      "6.0",
      "176.0",
      "3.0",
      "3.0",
      "6.0",
      "2.0",
      "3.0",
      "6.0",
      "3.0",
      "3.0",
      "2.0",
      "12.0",
      "12.0",
      "-3.0",
      "2.0",
      "27.0",
      "42.0",
      "18.0",
      "3.0",
      "6.0",
      "154.0",
      "3.0",
      "3.0",
      "6.0",
      "2.0",
      "3.0",
      "6.0",
      "3.0",
      "3.0",
      "2.0",
      "12.0",
      "12.0",
      "1.0",
      "-3.0",
      "2.0",
      "27.0",
      "42.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "from sympy import expand, collect\nfrom sympy.abc import x\nexpression = (1/(7 - x)*(1 + x)*(1 - x) + 3*x**2 - 18*x - 22/(x**2 - 1)*(x - 7) + 3/(x - 2))/(3/(x - 1)*(x - 2))\nresult = expand(collect(expression, x))\nprint(result)"
  },
  {
    "example_id": 180,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "from math import log10, ceil\n\ndef solve(x):\n    return int(ceil(log10(10**x + 19)/log10(3)))\n\nprint(solve(2))"
  },
  {
    "example_id": 181,
    "selected_solution_index": 10,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "import sympy as sp\nx = sp.Symbol('x')\nexpression = sp.Eq(2*x**2 + x + 3, x**2 + x + 1)\nsolution = sp.solve(expression, x)\nprint(solution)"
  },
  {
    "example_id": 182,
    "selected_solution_index": 0,
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "27.0"
    ],
    "solution": "print(log2(log8(x)) ** 2)"
  },
  {
    "example_id": 183,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "17.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "from math import factorial\nA = 1\nB = 1\nC = 1\nP = 0\nQ = 0\nfor i in range(3):\n    A, B, C, P, Q = B, C, A + B + C, A * B + B * C + C * A, A * B * C\nprint(A + B + C)"
  },
  {
    "example_id": 184,
    "selected_solution_index": 14,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "3.0",
      "3.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "from sympy import *\n\na, b, c = symbols('a, b, c', complex=True)\n\na3 = a**3\nb3 = b**3\nc3 = c**3\n\nresult = a3 + b3 + c3\n\nprint(result)"
  },
  {
    "example_id": 185,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "from sympy import solve, Symbol\na = Symbol('a', real=True)\nexpression = a**6 + 3*a*a*a*a*a + (3*a**2 + 3)*a*a*a*a + (a**3 + 6*a)*a*a*a + (3*a**2 + 3)*a*a + 3*a*a*a + 1\nroots = solve(expression, a)\nprint(roots)"
  },
  {
    "example_id": 186,
    "selected_solution_index": 11,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.666666666666667"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "k = (2**4 - 2) / (2**2 - 1)\nprint(k)"
  },
  {
    "example_id": 187,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "63.999999999999986"
    ],
    "annotated_answers": [
      "64.0"
    ],
    "solution": "import cmath\n\nexpression = abs((-2-2*cmath.sqrt(3)*1j)**3)\nprint(expression)"
  },
  {
    "example_id": 188,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "from sympy import log, prime, factorint\n\np = 5\nA, B, C = 0, 0, 0\nfor i in range(2, p + 1):\n    for j in range(2, p + 1):\n        if i * j == p:\n            A, B, C = i, j, p\n            break\n\nprint(A + B + C)"
  },
  {
    "example_id": 189,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "512.0"
    ],
    "annotated_answers": [
      "512.0"
    ],
    "solution": "from math import prod\nprint(prod([10, 4/3, 6/4, 8/5, 10/6, 12/7, 14/8, 16/9, 18/10]))"
  },
  {
    "example_id": 190,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "26.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x = 2\ny = 3\nz = 4\nprint(x * y + y * z + z * x)"
  },
  {
    "example_id": 191,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "6.0",
      "2.0",
      "6.0",
      "5.0",
      "2.0",
      "6.0",
      "5.0",
      "2.0",
      "6.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "from sympy import log\nfrom sympy.abc import x, y\n\nlog_6_x_minus_y = log(x-y, 6)\nlog_6_x_plus_y = log(x+y, 6)\nlog_y_5x = log(5*x, y)\n\nx = (log_6_x_minus_y + log_6_x_plus_y) / 2\nx = x / log(5*x, y)\n\nprint(x)"
  },
  {
    "example_id": 192,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "600.0"
    ],
    "annotated_answers": [
      "743.0"
    ],
    "solution": "r = 100 * 546 / 91\nprint(r)"
  },
  {
    "example_id": 193,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0",
      "1.0",
      "1.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "from scipy.optimize import minimize\n\ndef f(x):\n    return (x[0] + x[1] + x[2] + x[3]) * (1 / x[0] + 1 / x[1] + 1 / x[2] + 1 / x[3])\n\ndef g(x):\n    return x[0] + x[1] + x[2] + x[3] - 4\n\nres = minimize(f, [1, 1, 1, 1], method='SLSQP', constraints={'type': 'ineq', 'fun': g})\nprint(res.x)"
  },
  {
    "example_id": 194,
    "selected_solution_index": 14,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "16.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "z = 64/5 - 48/5j\nprint(abs(z))"
  },
  {
    "example_id": 195,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1171629.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "count = 0\nfor a_3 in range(-100, 101):\n    for a_2 in range(-100, 101):\n        for a_1 in range(-100, 101):\n            if (7*a_3**2 + a_2**3 + a_1**2 - 14) % 7 == 0:\n                count += 1\nprint(count)"
  },
  {
    "example_id": 196,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "17146.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "n = 0\nwhile True:\n    n += 1\n    r = 1 / 1000\n    if (n + r)**3 % 1 == 0:\n        print(n)\n        break"
  },
  {
    "example_id": 197,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "1.0",
      "1.0",
      "10.0",
      "2.0",
      "10.0",
      "1.0",
      "11.0",
      "2.0",
      "11.0",
      "1.0",
      "12.0",
      "2.0",
      "12.0",
      "1.0",
      "13.0",
      "2.0",
      "13.0",
      "1.0",
      "14.0",
      "2.0",
      "14.0",
      "1.0",
      "15.0",
      "2.0",
      "15.0",
      "1.0",
      "16.0",
      "2.0",
      "16.0",
      "1.0",
      "17.0",
      "2.0",
      "17.0",
      "1.0",
      "18.0",
      "2.0",
      "18.0",
      "1.0",
      "19.0",
      "2.0",
      "19.0",
      "1.0",
      "2.0",
      "2.0",
      "2.0",
      "1.0",
      "20.0",
      "2.0",
      "20.0",
      "1.0",
      "21.0",
      "2.0",
      "21.0",
      "1.0",
      "22.0",
      "2.0",
      "22.0",
      "1.0",
      "23.0",
      "2.0",
      "23.0",
      "1.0",
      "24.0",
      "2.0",
      "24.0",
      "1.0",
      "25.0",
      "2.0",
      "25.0",
      "1.0",
      "26.0",
      "2.0",
      "26.0",
      "1.0",
      "27.0",
      "2.0",
      "27.0",
      "1.0",
      "28.0",
      "2.0",
      "28.0",
      "1.0",
      "29.0",
      "2.0",
      "29.0",
      "1.0",
      "3.0",
      "2.0",
      "3.0",
      "1.0",
      "30.0",
      "2.0",
      "30.0",
      "1.0",
      "31.0",
      "2.0",
      "31.0",
      "1.0",
      "32.0",
      "2.0",
      "32.0",
      "1.0",
      "33.0",
      "2.0",
      "33.0",
      "1.0",
      "34.0",
      "2.0",
      "34.0",
      "1.0",
      "35.0",
      "2.0",
      "35.0",
      "1.0",
      "36.0",
      "2.0",
      "36.0",
      "1.0",
      "37.0",
      "2.0",
      "37.0",
      "1.0",
      "38.0",
      "2.0",
      "38.0",
      "1.0",
      "39.0",
      "2.0",
      "39.0",
      "1.0",
      "4.0",
      "2.0",
      "4.0",
      "1.0",
      "40.0",
      "2.0",
      "40.0",
      "1.0",
      "41.0",
      "2.0",
      "41.0",
      "1.0",
      "42.0",
      "2.0",
      "42.0",
      "1.0",
      "43.0",
      "2.0",
      "43.0",
      "1.0",
      "44.0",
      "2.0",
      "44.0",
      "1.0",
      "45.0",
      "2.0",
      "45.0",
      "1.0",
      "46.0",
      "2.0",
      "46.0",
      "1.0",
      "47.0",
      "2.0",
      "47.0",
      "1.0",
      "48.0",
      "2.0",
      "48.0",
      "1.0",
      "49.0",
      "2.0",
      "49.0",
      "1.0",
      "5.0",
      "2.0",
      "5.0",
      "1.0",
      "50.0",
      "2.0",
      "50.0",
      "1.0",
      "51.0",
      "2.0",
      "51.0",
      "1.0",
      "52.0",
      "2.0",
      "52.0",
      "1.0",
      "53.0",
      "2.0",
      "53.0",
      "1.0",
      "54.0",
      "2.0",
      "54.0",
      "1.0",
      "55.0",
      "2.0",
      "55.0",
      "1.0",
      "56.0",
      "2.0",
      "56.0",
      "1.0",
      "57.0",
      "2.0",
      "57.0",
      "1.0",
      "58.0",
      "2.0",
      "58.0",
      "1.0",
      "59.0",
      "2.0",
      "59.0",
      "1.0",
      "6.0",
      "2.0",
      "6.0",
      "1.0",
      "60.0",
      "2.0",
      "60.0",
      "1.0",
      "61.0",
      "2.0",
      "61.0",
      "1.0",
      "62.0",
      "2.0",
      "62.0",
      "1.0",
      "63.0",
      "2.0",
      "63.0",
      "1.0",
      "64.0",
      "2.0",
      "64.0",
      "1.0",
      "65.0",
      "2.0",
      "65.0",
      "1.0",
      "66.0",
      "2.0",
      "66.0",
      "1.0",
      "67.0",
      "2.0",
      "67.0",
      "1.0",
      "68.0",
      "2.0",
      "68.0",
      "1.0",
      "69.0",
      "2.0",
      "69.0",
      "1.0",
      "7.0",
      "2.0",
      "7.0",
      "1.0",
      "70.0",
      "2.0",
      "70.0",
      "1.0",
      "71.0",
      "2.0",
      "71.0",
      "1.0",
      "72.0",
      "2.0",
      "72.0",
      "1.0",
      "73.0",
      "2.0",
      "73.0",
      "1.0",
      "74.0",
      "2.0",
      "74.0",
      "1.0",
      "75.0",
      "2.0",
      "75.0",
      "1.0",
      "76.0",
      "2.0",
      "76.0",
      "1.0",
      "77.0",
      "2.0",
      "77.0",
      "1.0",
      "78.0",
      "2.0",
      "78.0",
      "1.0",
      "79.0",
      "2.0",
      "79.0",
      "1.0",
      "8.0",
      "2.0",
      "8.0",
      "1.0",
      "80.0",
      "2.0",
      "80.0",
      "1.0",
      "81.0",
      "2.0",
      "81.0",
      "1.0",
      "82.0",
      "2.0",
      "82.0",
      "1.0",
      "83.0",
      "2.0",
      "83.0",
      "1.0",
      "84.0",
      "2.0",
      "84.0",
      "1.0",
      "85.0",
      "2.0",
      "85.0",
      "1.0",
      "86.0",
      "2.0",
      "86.0",
      "1.0",
      "87.0",
      "2.0",
      "87.0",
      "1.0",
      "88.0",
      "2.0",
      "88.0",
      "1.0",
      "89.0",
      "2.0",
      "89.0",
      "1.0",
      "9.0",
      "2.0",
      "9.0",
      "1.0",
      "90.0",
      "2.0",
      "90.0",
      "1.0",
      "91.0",
      "2.0",
      "91.0",
      "1.0",
      "92.0",
      "2.0",
      "92.0",
      "1.0",
      "93.0",
      "2.0",
      "93.0",
      "1.0",
      "94.0",
      "2.0",
      "94.0",
      "1.0",
      "95.0",
      "2.0",
      "95.0",
      "1.0",
      "96.0",
      "2.0",
      "96.0",
      "1.0",
      "97.0",
      "2.0",
      "97.0",
      "1.0",
      "98.0",
      "2.0",
      "98.0",
      "1.0"
    ],
    "annotated_answers": [
      "-50.0"
    ],
    "solution": "from math import factorial\nfrom sympy import Symbol, solve\n\nn = 98\nx = Symbol('x')\nroots = [Symbol('r{}'.format(i)) for i in range(1, n + 1)]\nexpression = sum(roots[i]**2 / (roots[i] + 1) for i in range(n))\nprint(expression)"
  },
  {
    "example_id": 198,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.3333333333333335"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = 1/3\ny = 1/3\nz = 1/3\nexpression = 10*x**2 + 10*y**2 + z**2\nprint(expression)"
  },
  {
    "example_id": 199,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "def e(x):\n    return 2*x\n\n\ndef o(x):\n    return x**2\n\n\ndef f(x):\n    return e(x) + o(x)\n\n\nprint(f(2))"
  },
  {
    "example_id": 200,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "199.0"
    ],
    "solution": "count = 0\nfor x in range(1, 10000):\n    if x**2 + 10000*x == 10000*x:\n        count += 1\nprint(count)"
  },
  {
    "example_id": 201,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "# brute force\nimport math\n\ndef is_integer(n):\n    return round(n) == n\n\ndef is_root(n, p):\n    return p(n) == 0\n\ndef is_integer_root(n, p):\n    return is_integer(n) and is_root(n, p)\n\ndef integer_roots(p):\n    for n in range(1, 1000000):\n        if is_integer_root(n, p):\n            yield n\n\ndef largest_possible_number_of_integer_roots(p):\n    return len(list(integer_roots(p)))\n\n# test\np = lambda x: x**3 - 42*x**2 + 1\nprint(largest_possible_number_of_integer_roots(p))"
  },
  {
    "example_id": 202,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "6.0",
      "0.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "a1, b1 = 5, 8\na2, b2 = 7, 14\n\n# line l is shifted 3 units to the left and two units downward\na, b = a1 - 3, b1 - 2\n\n# line l_1 passes through the points (5,8) and (7,14)\n# a1*x + b1 = y\n# a2*x + b2 = y\n\n# solve for x in terms of y\n# a1*x + b1 = a2*x + b2\n# a1*x - a2*x = b2 - b1\n# (a1 - a2)*x = b2 - b1\n# x = (b2 - b1) / (a1 - a2)\nx = (b2 - b1) / (a1 - a2)\n\n# y = a*x + b\n# a*x + b = a*x + b1\n# a*x + b1 = a*x + b2\n# b1 = b2\n# b = 8\n\n# a*x + 8 = a*x + b1\n# a*x = b1 - 8\n# x = (b1 - 8) / a\nx = (b1 - 8) / a\n\nprint(a, b)\nprint(x)"
  },
  {
    "example_id": 203,
    "selected_solution_index": 13,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "-80.0"
    ],
    "solution": "c = 0\nfor x in range(1, 1000):\n    if x**3 + 8 * x**2 - 4 * x + c == 0:\n        if x + x**2 + x**3 == 0:\n            c = x\n            break\nprint(c)"
  },
  {
    "example_id": 204,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "8080.0"
    ],
    "annotated_answers": [
      "8080.0"
    ],
    "solution": "x = 1\ny = 1\nexpression = (x + 1 / y) * (x + 1 / y + 2018) + (y + 1 / x) * (y + 1 / x + 2018)\nprint(expression)"
  },
  {
    "example_id": 205,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-1.9999999999999996"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "x = 3\nfor i in range(12345):\n    x = (1 + x) / (1 - x)\nprint(x)"
  },
  {
    "example_id": 206,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "30.0"
    ],
    "solution": "from math import sqrt\n\n# AB\na = 2\nb = 4\n# CD\nc = 2\nd = 1\n\n# ABCD\narea = (a*sqrt(b)-c)/d\nprint(area)"
  },
  {
    "example_id": 207,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.5",
      "0.25",
      "0.125",
      "0.0625",
      "0.03125",
      "0.015625",
      "0.0078125",
      "0.00390625",
      "0.001953125",
      "0.0009765625",
      "0.00048828125",
      "0.000244140625",
      "0.0001220703125",
      "6.103515625",
      "-5.0",
      "3.0517578125",
      "-5.0",
      "1.52587890625",
      "-5.0",
      "7.62939453125",
      "-6.0",
      "3.814697265625",
      "-6.0",
      "1.9073486328125",
      "-6.0",
      "9.5367431640625",
      "-7.0",
      "4.76837158203125",
      "-7.0",
      "2.384185791015625",
      "-7.0",
      "1.1920928955078125",
      "-7.0",
      "5.960464477539063",
      "-8.0",
      "2.9802322387695312",
      "-8.0",
      "1.4901161193847656",
      "-8.0",
      "7.450580596923828",
      "-9.0",
      "3.725290298461914",
      "-9.0",
      "1.862645149230957",
      "-9.0",
      "9.313225746154785",
      "-10.0",
      "4.656612873077393",
      "-10.0",
      "2.3283064365386963",
      "-10.0",
      "1.1641532182693481",
      "-10.0",
      "5.820766091346741",
      "-11.0",
      "2.9103830456733704",
      "-11.0",
      "1.4551915228366852",
      "-11.0",
      "7.275957614183426",
      "-12.0",
      "3.637978807091713",
      "-12.0",
      "1.8189894035458565",
      "-12.0",
      "9.094947017729282",
      "-13.0",
      "4.547473508864641",
      "-13.0",
      "2.2737367544323206",
      "-13.0",
      "1.1368683772161603",
      "-13.0",
      "5.684341886080802",
      "-14.0",
      "2.842170943040401",
      "-14.0",
      "1.4210854715202004",
      "-14.0",
      "7.105427357601002",
      "-15.0",
      "3.552713678800501",
      "-15.0",
      "1.7763568394002505",
      "-15.0",
      "8.881784197001252",
      "-16.0",
      "4.440892098500626",
      "-16.0",
      "2.220446049250313",
      "-16.0",
      "1.1102230246251565",
      "-16.0",
      "5.551115123125783",
      "-17.0",
      "2.7755575615628914",
      "-17.0",
      "1.3877787807814457",
      "-17.0",
      "6.938893903907228",
      "-18.0",
      "3.469446951953614",
      "-18.0",
      "1.734723475976807",
      "-18.0",
      "8.673617379884035",
      "-19.0",
      "4.336808689942018",
      "-19.0",
      "2.168404344971009",
      "-19.0",
      "1.0842021724855044",
      "-19.0",
      "5.421010862427522",
      "-20.0",
      "2.710505431213761",
      "-20.0",
      "1.3552527156068805",
      "-20.0",
      "6.776263578034403",
      "-21.0",
      "3.3881317890172014",
      "-21.0",
      "1.6940658945086007",
      "-21.0",
      "8.470329472543003",
      "-22.0",
      "4.235164736271502",
      "-22.0",
      "2.117582368135751",
      "-22.0",
      "1.0587911840678754",
      "-22.0",
      "5.293955920339377",
      "-23.0",
      "2.646977960169689",
      "-23.0",
      "1.3234889800848444",
      "-23.0",
      "6.617444900424222",
      "-24.0",
      "3.308722450212111",
      "-24.0",
      "1.6543612251060553",
      "-24.0",
      "8.271806125530277",
      "-25.0",
      "4.135903062765139",
      "-25.0",
      "2.0679515313825694",
      "-25.0",
      "1.0339757656912847",
      "-25.0",
      "5.169878828456423",
      "-26.0",
      "2.5849394142282116",
      "-26.0",
      "1.2924697071141058",
      "-26.0",
      "6.462348535570529",
      "-27.0",
      "3.2311742677852644",
      "-27.0",
      "1.6155871338926322",
      "-27.0",
      "8.07793566946316",
      "-28.0",
      "4.03896783473158",
      "-28.0",
      "2.01948391736579",
      "-28.0",
      "1.009741958682895",
      "-28.0",
      "5.048709793414476",
      "-29.0",
      "2.524354896707238",
      "-29.0",
      "1.262177448353619",
      "-29.0",
      "6.310887241768095",
      "-30.0",
      "3.1554436208840473",
      "-30.0",
      "1.5777218104420236",
      "-30.0",
      "7.888609052210118",
      "-31.0",
      "3.944304526105059",
      "-31.0",
      "1.9721522630525294",
      "-31.0",
      "9.860761315262648",
      "-32.0",
      "4.930380657631324",
      "-32.0",
      "2.465190328815662",
      "-32.0",
      "1.232595164407831",
      "-32.0",
      "6.162975822039155",
      "-33.0",
      "3.081487911019577",
      "-33.0",
      "1.5407439555097886",
      "-33.0",
      "7.703719777548943",
      "-34.0",
      "3.851859888774472",
      "-34.0",
      "1.925929944387236",
      "-34.0",
      "9.62964972193618",
      "-35.0",
      "4.81482486096809",
      "-35.0",
      "2.407412430484045",
      "-35.0",
      "1.2037062152420224",
      "-35.0",
      "6.018531076210112",
      "-36.0",
      "3.009265538105056",
      "-36.0",
      "1.504632769052528",
      "-36.0",
      "7.52316384526264",
      "-37.0",
      "3.76158192263132",
      "-37.0",
      "1.88079096131566",
      "-37.0",
      "9.4039548065783",
      "-38.0",
      "4.70197740328915",
      "-38.0",
      "2.350988701644575",
      "-38.0",
      "1.1754943508222875",
      "-38.0",
      "5.877471754111438",
      "-39.0",
      "2.938735877055719",
      "-39.0",
      "1.4693679385278593",
      "-39.0",
      "7.346839692639297",
      "-40.0",
      "3.6734198463196486",
      "-40.0",
      "1.8367099231598243",
      "-40.0",
      "9.183549615799121",
      "-41.0",
      "4.591774807899561",
      "-41.0",
      "2.2958874039497803",
      "-41.0",
      "1.1479437019748902",
      "-41.0",
      "5.739718509874451",
      "-42.0",
      "2.8698592549372255",
      "-42.0",
      "1.4349296274686127",
      "-42.0",
      "7.174648137343064",
      "-43.0",
      "3.587324068671532",
      "-43.0",
      "1.793662034335766",
      "-43.0",
      "8.96831017167883",
      "-44.0",
      "4.484155085839415",
      "-44.0",
      "2.2420775429197075",
      "-44.0",
      "1.1210387714598538",
      "-44.0",
      "5.605193857299268",
      "-45.0",
      "2.802596928649634",
      "-45.0",
      "1.401298464324817",
      "-45.0",
      "7.006492321624085",
      "-46.0",
      "3.503246160812043",
      "-46.0",
      "1.7516230804060213",
      "-46.0",
      "8.758115402030107",
      "-47.0",
      "4.3790577010150535",
      "-47.0",
      "2.1895288505075268",
      "-47.0",
      "1.0947644252537634",
      "-47.0",
      "5.473822126268817",
      "-48.0",
      "2.7369110631344085",
      "-48.0",
      "1.3684555315672042",
      "-48.0",
      "6.842277657836021",
      "-49.0",
      "3.4211388289180102",
      "-49.0",
      "1.7105694144590051",
      "-49.0",
      "8.552847072295027",
      "-50.0",
      "4.276423536147513",
      "-50.0",
      "2.1382117680737567",
      "-50.0",
      "1.0691058840368783",
      "-50.0",
      "5.345529420184391",
      "-51.0",
      "2.6727647100921956",
      "-51.0",
      "1.3363823550460978",
      "-51.0",
      "6.681911775230489",
      "-52.0",
      "3.3409558876152445",
      "-52.0",
      "1.6704779438076223",
      "-52.0",
      "8.352389719038111",
      "-53.0",
      "4.176194859519056",
      "-53.0",
      "2.088097429759528",
      "-53.0",
      "1.044048714879764",
      "-53.0",
      "5.22024357439882",
      "-54.0",
      "2.61012178719941",
      "-54.0",
      "1.305060893599705",
      "-54.0",
      "6.525304467998525",
      "-55.0",
      "3.2626522339992623",
      "-55.0",
      "1.6313261169996311",
      "-55.0",
      "8.156630584998156",
      "-56.0",
      "4.078315292499078",
      "-56.0",
      "2.039157646249539",
      "-56.0",
      "1.0195788231247696",
      "-56.0",
      "5.0978941156238475",
      "-57.0",
      "2.5489470578119238",
      "-57.0",
      "1.2744735289059619",
      "-57.0",
      "6.372367644529809",
      "-58.0",
      "3.186183822264905",
      "-58.0",
      "1.5930919111324524",
      "-58.0",
      "7.965459555662261",
      "-59.0",
      "3.982729777831131",
      "-59.0",
      "1.9913648889155653",
      "-59.0",
      "9.956824444577826",
      "-60.0",
      "4.978412222288913",
      "-60.0",
      "2.4892061111444566",
      "-60.0",
      "1.2446030555722283",
      "-60.0",
      "6.223015277861142",
      "-61.0",
      "3.111507638930571",
      "-61.0",
      "1.5557538194652853",
      "-61.0",
      "7.778769097326427",
      "-62.0",
      "3.8893845486632137",
      "-62.0",
      "1.9446922743316069",
      "-62.0",
      "9.723461371658034",
      "-63.0",
      "4.861730685829017",
      "-63.0",
      "2.4308653429145086",
      "-63.0",
      "1.2154326714572543",
      "-63.0",
      "6.077163357286271",
      "-64.0",
      "3.0385816786431357",
      "-64.0",
      "1.5192908393215678",
      "-64.0",
      "7.596454196607839",
      "-65.0",
      "3.7982270983039195",
      "-65.0",
      "1.8991135491519597",
      "-65.0",
      "9.495567745759798",
      "-66.0",
      "4.747783872879899",
      "-66.0",
      "2.3738919364399496",
      "-66.0",
      "1.1869459682199748",
      "-66.0",
      "5.934729841099874",
      "-67.0",
      "2.967364920549937",
      "-67.0",
      "1.4836824602749685",
      "-67.0",
      "7.418412301374843",
      "-68.0",
      "3.709206150687421",
      "-68.0",
      "1.8546030753437106",
      "-68.0",
      "9.273015376718552",
      "-69.0",
      "4.636507688359277",
      "-69.0",
      "2.3182538441796385",
      "-69.0",
      "1.1591269220898193",
      "-69.0",
      "5.795634610449096",
      "-70.0",
      "2.897817305224548",
      "-70.0",
      "1.448908652612274",
      "-70.0",
      "7.24454326306137",
      "-71.0",
      "3.622271631530685",
      "-71.0",
      "1.8111358157653425",
      "-71.0",
      "9.055679078826712",
      "-72.0",
      "4.527839539413356",
      "-72.0",
      "2.263919769706678",
      "-72.0",
      "1.131959884853339",
      "-72.0",
      "5.659799424266695",
      "-73.0",
      "2.8298997121333476",
      "-73.0",
      "1.4149498560666738",
      "-73.0",
      "7.074749280333369",
      "-74.0",
      "3.5373746401666843",
      "-74.0",
      "1.7686873200833424",
      "-74.0",
      "8.84343660041671",
      "-75.0",
      "4.421718300208356",
      "-75.0",
      "2.210859150104178",
      "-75.0",
      "1.105429575052089",
      "-75.0",
      "5.527147875260445",
      "-76.0",
      "2.7635739376302224",
      "-76.0",
      "1.3817869688151112",
      "-76.0",
      "6.908934844075556",
      "-77.0",
      "3.454467422037778",
      "-77.0",
      "1.727233711018889",
      "-77.0",
      "8.636168555094445",
      "-78.0",
      "4.318084277547222",
      "-78.0",
      "2.159042138773611",
      "-78.0",
      "1.0795210693868056",
      "-78.0",
      "5.397605346934028",
      "-79.0",
      "2.698802673467014",
      "-79.0",
      "1.349401336733507",
      "-79.0",
      "6.747006683667535",
      "-80.0",
      "3.3735033418337674",
      "-80.0",
      "1.6867516709168837",
      "-80.0",
      "8.43375835458442",
      "-81.0",
      "4.216879177292209",
      "-81.0",
      "2.1084395886461045",
      "-81.0",
      "1.0542197943230522",
      "-81.0",
      "5.271098971615262",
      "-82.0",
      "2.635549485807631",
      "-82.0",
      "1.3177747429038154",
      "-82.0",
      "6.588873714519077",
      "-83.0",
      "3.2944368572595386",
      "-83.0",
      "1.6472184286297693",
      "-83.0",
      "8.236092143148847",
      "-84.0",
      "4.118046071574423",
      "-84.0",
      "2.0590230357872117",
      "-84.0",
      "1.0295115178936058",
      "-84.0",
      "5.147557589468029",
      "-85.0",
      "2.5737787947340145",
      "-85.0",
      "1.2868893973670072",
      "-85.0",
      "6.434446986835036",
      "-86.0",
      "3.217223493417518",
      "-86.0",
      "1.608611746708759",
      "-86.0",
      "8.043058733543795",
      "-87.0",
      "4.021529366771898",
      "-87.0",
      "2.010764683385949",
      "-87.0",
      "1.0053823416929744",
      "-87.0",
      "5.026911708464872",
      "-88.0",
      "2.513455854232436",
      "-88.0",
      "1.256727927116218",
      "-88.0",
      "6.28363963558109",
      "-89.0",
      "3.141819817790545",
      "-89.0",
      "1.5709099088952725",
      "-89.0",
      "7.854549544476363",
      "-90.0",
      "3.927274772238181",
      "-90.0",
      "1.9636373861190906",
      "-90.0",
      "9.818186930595454",
      "-91.0",
      "4.909093465297727",
      "-91.0",
      "2.4545467326488635",
      "-91.0",
      "1.2272733663244315",
      "-91.0",
      "6.136366831622158",
      "-92.0",
      "3.068183415811079",
      "-92.0",
      "1.5340917079055394",
      "-92.0",
      "7.670458539527698",
      "-93.0",
      "3.835229269763849",
      "-93.0",
      "1.9176146348819243",
      "-93.0",
      "9.588073174409622",
      "-94.0",
      "4.794036587204811",
      "-94.0",
      "2.3970182936024056",
      "-94.0",
      "1.1985091468012028",
      "-94.0",
      "5.992545734006014",
      "-95.0",
      "2.996272867003007",
      "-95.0",
      "1.4981364335015035",
      "-95.0",
      "7.490682167507517",
      "-96.0",
      "3.745341083753759",
      "-96.0",
      "1.8726705418768792",
      "-96.0",
      "9.363352709384397",
      "-97.0",
      "4.681676354692199",
      "-97.0",
      "2.3408381773460993",
      "-97.0",
      "1.1704190886730497",
      "-97.0",
      "5.852095443365248",
      "-98.0",
      "2.926047721682624",
      "-98.0",
      "1.463023860841312",
      "-98.0",
      "7.31511930420656",
      "-99.0",
      "3.65755965210328",
      "-99.0",
      "1.82877982605164",
      "-99.0",
      "9.1438991302582",
      "-100.0",
      "4.5719495651291",
      "-100.0",
      "2.28597478256455",
      "-100.0",
      "1.142987391282275",
      "-100.0",
      "5.714936956411375",
      "-101.0",
      "2.8574684782056874",
      "-101.0",
      "1.4287342391028437",
      "-101.0",
      "7.143671195514219",
      "-102.0",
      "3.5718355977571092",
      "-102.0",
      "1.7859177988785546",
      "-102.0",
      "8.929588994392773",
      "-103.0",
      "4.464794497196387",
      "-103.0",
      "2.2323972485981933",
      "-103.0",
      "1.1161986242990967",
      "-103.0",
      "5.580993121495483",
      "-104.0",
      "2.7904965607477417",
      "-104.0",
      "1.3952482803738708",
      "-104.0",
      "6.976241401869354",
      "-105.0",
      "3.488120700934677",
      "-105.0",
      "1.7440603504673384",
      "-105.0",
      "8.720301752336693",
      "-106.0",
      "4.360150876168347",
      "-106.0",
      "2.1800754380841734",
      "-106.0",
      "1.0900377190420867",
      "-106.0",
      "5.450188595210433",
      "-107.0",
      "2.7250942976052164",
      "-107.0",
      "1.3625471488026082",
      "-107.0",
      "6.812735744013041",
      "-108.0",
      "3.4063678720065207",
      "-108.0",
      "1.7031839360032603",
      "-108.0",
      "8.515919680016301",
      "-109.0",
      "4.257959840008151",
      "-109.0",
      "2.1289799200040753",
      "-109.0",
      "1.0644899600020377",
      "-109.0",
      "5.3224498000101885",
      "-110.0",
      "2.6612249000050943",
      "-110.0",
      "1.3306124500025471",
      "-110.0",
      "6.653062250012736",
      "-111.0",
      "3.326531125006368",
      "-111.0",
      "1.663265562503184",
      "-111.0",
      "8.31632781251592",
      "-112.0",
      "4.15816390625796",
      "-112.0",
      "2.07908195312898",
      "-112.0",
      "1.03954097656449",
      "-112.0",
      "5.19770488282245",
      "-113.0",
      "2.598852441411225",
      "-113.0",
      "1.2994262207056124",
      "-113.0",
      "6.497131103528062",
      "-114.0",
      "3.248565551764031",
      "-114.0",
      "1.6242827758820155",
      "-114.0",
      "8.121413879410078",
      "-115.0",
      "4.060706939705039",
      "-115.0",
      "2.0303534698525194",
      "-115.0",
      "1.0151767349262597",
      "-115.0",
      "5.075883674631299",
      "-116.0",
      "2.5379418373156493",
      "-116.0",
      "1.2689709186578246",
      "-116.0",
      "6.344854593289123",
      "-117.0",
      "3.1724272966445617",
      "-117.0",
      "1.5862136483222808",
      "-117.0",
      "7.931068241611404",
      "-118.0",
      "3.965534120805702",
      "-118.0",
      "1.982767060402851",
      "-118.0",
      "9.913835302014254",
      "-119.0",
      "4.956917651007127",
      "-119.0",
      "2.4784588255035636",
      "-119.0",
      "1.2392294127517818",
      "-119.0",
      "6.196147063758909",
      "-120.0",
      "3.0980735318794546",
      "-120.0",
      "1.5490367659397273",
      "-120.0",
      "7.745183829698637",
      "-121.0",
      "3.8725919148493184",
      "-121.0",
      "1.9362959574246592",
      "-121.0",
      "9.681479787123296",
      "-122.0",
      "4.840739893561648",
      "-122.0",
      "2.420369946780824",
      "-122.0",
      "1.210184973390412",
      "-122.0",
      "6.05092486695206",
      "-123.0",
      "3.02546243347603",
      "-123.0",
      "1.512731216738015",
      "-123.0",
      "7.563656083690075",
      "-124.0",
      "3.781828041845037",
      "-124.0",
      "1.8909140209225186",
      "-124.0",
      "9.454570104612593",
      "-125.0",
      "4.727285052306297",
      "-125.0",
      "2.363642526153148",
      "-125.0",
      "1.181821263076574",
      "-125.0",
      "5.909106315382871",
      "-126.0",
      "2.9545531576914352",
      "-126.0",
      "1.4772765788457176",
      "-126.0",
      "7.386382894228589",
      "-127.0",
      "3.693191447114294",
      "-127.0",
      "1.8465957235571473",
      "-127.0",
      "9.232978617785736",
      "-128.0",
      "4.616489308892868",
      "-128.0",
      "2.308244654446434",
      "-128.0",
      "1.154122327223217",
      "-128.0",
      "5.770611636116085",
      "-129.0",
      "2.8853058180580424",
      "-129.0",
      "1.4426529090290212",
      "-129.0",
      "7.213264545145106",
      "-130.0",
      "3.606632272572553",
      "-130.0",
      "1.8033161362862764",
      "-130.0",
      "9.016580681431384",
      "-131.0",
      "4.508290340715691",
      "-131.0",
      "2.2541451703578455",
      "-131.0",
      "1.1270725851789227",
      "-131.0",
      "5.635362925894614",
      "-132.0",
      "2.817681462947307",
      "-132.0",
      "1.4088407314736535",
      "-132.0",
      "7.044203657368268",
      "-133.0",
      "3.522101828684134",
      "-133.0",
      "1.761050914342067",
      "-133.0",
      "8.805254571710336",
      "-134.0",
      "4.402627285855167",
      "-134.0",
      "2.2013136429275835",
      "-134.0",
      "1.1006568214637917",
      "-134.0",
      "5.503284107318959",
      "-135.0",
      "2.7516420536594794",
      "-135.0",
      "1.3758210268297397",
      "-135.0",
      "6.879105134148699",
      "-136.0",
      "3.439552567074349",
      "-136.0",
      "1.7197762835371746",
      "-136.0",
      "8.598881417685874",
      "-137.0",
      "4.299440708842937",
      "-137.0",
      "2.1497203544214685",
      "-137.0",
      "1.0748601772107342",
      "-137.0",
      "5.374300886053671",
      "-138.0",
      "2.6871504430268356",
      "-138.0",
      "1.3435752215134178",
      "-138.0",
      "6.717876107567089",
      "-139.0",
      "3.3589380537835445",
      "-139.0",
      "1.6794690268917722",
      "-139.0",
      "8.397345134458861",
      "-140.0",
      "4.198672567229431",
      "-140.0",
      "2.0993362836147154",
      "-140.0",
      "1.0496681418073577",
      "-140.0",
      "5.248340709036788",
      "-141.0",
      "2.624170354518394",
      "-141.0",
      "1.312085177259197",
      "-141.0",
      "6.560425886295985",
      "-142.0",
      "3.2802129431479927",
      "-142.0",
      "1.6401064715739964",
      "-142.0",
      "8.200532357869982",
      "-143.0",
      "4.100266178934991",
      "-143.0",
      "2.0501330894674954",
      "-143.0",
      "1.0250665447337477",
      "-143.0",
      "5.1253327236687385",
      "-144.0",
      "2.5626663618343692",
      "-144.0",
      "1.2813331809171846",
      "-144.0",
      "6.406665904585923",
      "-145.0",
      "3.2033329522929614",
      "-145.0",
      "1.6016664761464807",
      "-145.0",
      "8.008332380732403",
      "-146.0",
      "4.004166190366202",
      "-146.0",
      "2.002083095183101",
      "-146.0",
      "1.0010415475915504",
      "-146.0",
      "5.005207737957752",
      "-147.0",
      "2.502603868978876",
      "-147.0",
      "1.251301934489438",
      "-147.0",
      "6.256509672447191",
      "-148.0",
      "3.1282548362235953",
      "-148.0",
      "1.5641274181117977",
      "-148.0",
      "7.820637090558988",
      "-149.0",
      "3.910318545279494",
      "-149.0",
      "1.955159272639747",
      "-149.0",
      "9.775796363198735",
      "-150.0",
      "4.887898181599368",
      "-150.0",
      "2.443949090799684",
      "-150.0",
      "1.221974545399842",
      "-150.0",
      "6.10987272699921",
      "-151.0",
      "3.054936363499605",
      "-151.0",
      "1.5274681817498024",
      "-151.0",
      "7.637340908749012",
      "-152.0",
      "3.818670454374506",
      "-152.0",
      "1.909335227187253",
      "-152.0",
      "9.546676135936265",
      "-153.0",
      "4.773338067968132",
      "-153.0",
      "2.386669033984066",
      "-153.0",
      "1.193334516992033",
      "-153.0",
      "5.966672584960166",
      "-154.0",
      "2.983336292480083",
      "-154.0",
      "1.4916681462400414",
      "-154.0",
      "7.458340731200207",
      "-155.0",
      "3.7291703656001034",
      "-155.0",
      "1.8645851828000517",
      "-155.0",
      "9.322925914000258",
      "-156.0",
      "4.661462957000129",
      "-156.0",
      "2.3307314785000646",
      "-156.0",
      "1.1653657392500323",
      "-156.0",
      "5.826828696250162",
      "-157.0",
      "2.913414348125081",
      "-157.0",
      "1.4567071740625404",
      "-157.0",
      "7.283535870312702",
      "-158.0",
      "3.641767935156351",
      "-158.0",
      "1.8208839675781756",
      "-158.0",
      "9.104419837890877",
      "-159.0",
      "4.552209918945439",
      "-159.0",
      "2.276104959472719",
      "-159.0",
      "1.1380524797363596",
      "-159.0",
      "5.690262398681798",
      "-160.0",
      "2.845131199340899",
      "-160.0",
      "1.4225655996704496",
      "-160.0",
      "7.112827998352248",
      "-161.0",
      "3.556413999176124",
      "-161.0",
      "1.778206999588062",
      "-161.0",
      "8.89103499794031",
      "-162.0",
      "4.445517498970155",
      "-162.0",
      "2.2227587494850773",
      "-162.0",
      "1.1113793747425387",
      "-162.0",
      "5.556896873712694",
      "-163.0",
      "2.778448436856347",
      "-163.0",
      "1.3892242184281733",
      "-163.0",
      "6.946121092140867",
      "-164.0",
      "3.4730605460704336",
      "-164.0",
      "1.7365302730352168",
      "-164.0",
      "8.682651365176085",
      "-165.0",
      "4.341325682588042",
      "-165.0",
      "2.170662841294021",
      "-165.0",
      "1.0853314206470106",
      "-165.0",
      "5.426657103235053",
      "-166.0",
      "2.713328551617526",
      "-166.0",
      "1.356664275808763",
      "-166.0",
      "6.783321379043816",
      "-167.0",
      "3.391660689521908",
      "-167.0",
      "1.695830344760954",
      "-167.0",
      "8.47915172380477",
      "-168.0",
      "4.239575861902385",
      "-168.0",
      "2.1197879309511922",
      "-168.0",
      "1.0598939654755961",
      "-168.0",
      "5.299469827377981",
      "-169.0",
      "2.6497349136889903",
      "-169.0",
      "1.3248674568444951",
      "-169.0",
      "6.624337284222476",
      "-170.0",
      "3.312168642111238",
      "-170.0",
      "1.656084321055619",
      "-170.0",
      "8.280421605278095",
      "-171.0",
      "4.140210802639048",
      "-171.0",
      "2.070105401319524",
      "-171.0",
      "1.035052700659762",
      "-171.0",
      "5.17526350329881",
      "-172.0",
      "2.587631751649405",
      "-172.0",
      "1.2938158758247025",
      "-172.0",
      "6.469079379123512",
      "-173.0",
      "3.234539689561756",
      "-173.0",
      "1.617269844780878",
      "-173.0",
      "8.08634922390439",
      "-174.0",
      "4.043174611952195",
      "-174.0",
      "2.0215873059760976",
      "-174.0",
      "1.0107936529880488",
      "-174.0",
      "5.053968264940244",
      "-175.0",
      "2.526984132470122",
      "-175.0",
      "1.263492066235061",
      "-175.0",
      "6.317460331175305",
      "-176.0",
      "3.1587301655876523",
      "-176.0",
      "1.5793650827938261",
      "-176.0",
      "7.896825413969131",
      "-177.0",
      "3.9484127069845654",
      "-177.0",
      "1.9742063534922827",
      "-177.0",
      "9.871031767461414",
      "-178.0",
      "4.935515883730707",
      "-178.0",
      "2.4677579418653535",
      "-178.0",
      "1.2338789709326767",
      "-178.0",
      "6.169394854663383",
      "-179.0",
      "3.084697427331692",
      "-179.0",
      "1.542348713665846",
      "-179.0",
      "7.71174356832923",
      "-180.0",
      "3.855871784164615",
      "-180.0",
      "1.9279358920823073",
      "-180.0",
      "9.639679460411536",
      "-181.0",
      "4.819839730205768",
      "-181.0",
      "2.409919865102884",
      "-181.0",
      "1.204959932551442",
      "-181.0",
      "6.02479966275721",
      "-182.0",
      "3.012399831378605",
      "-182.0",
      "1.5061999156893027",
      "-182.0",
      "7.530999578446513",
      "-183.0",
      "3.7654997892232562",
      "-183.0",
      "1.8827498946116281",
      "-183.0",
      "9.413749473058141",
      "-184.0",
      "4.706874736529071",
      "-184.0",
      "2.3534373682645353",
      "-184.0",
      "1.1767186841322677",
      "-184.0",
      "5.883593420661338",
      "-185.0",
      "2.941796710330669",
      "-185.0",
      "1.4708983551653345",
      "-185.0",
      "7.354491775826673",
      "-186.0",
      "3.6772458879133363",
      "-186.0",
      "1.8386229439566681",
      "-186.0",
      "9.193114719783342",
      "-187.0",
      "4.596557359891671",
      "-187.0",
      "2.298278679945835",
      "-187.0",
      "1.1491393399729175",
      "-187.0",
      "5.745696699864588",
      "-188.0",
      "2.872848349932294",
      "-188.0",
      "1.436424174966147",
      "-188.0",
      "7.182120874830735",
      "-189.0",
      "3.5910604374153676",
      "-189.0",
      "1.7955302187076838",
      "-189.0",
      "8.97765109353842",
      "-190.0",
      "4.48882554676921",
      "-190.0",
      "2.244412773384605",
      "-190.0",
      "1.1222063866923024",
      "-190.0",
      "5.611031933461512",
      "-191.0",
      "2.805515966730756",
      "-191.0",
      "1.402757983365378",
      "-191.0",
      "7.01378991682689",
      "-192.0",
      "3.506894958413445",
      "-192.0",
      "1.7534474792067225",
      "-192.0",
      "8.767237396033613",
      "-193.0",
      "4.383618698016806",
      "-193.0",
      "2.191809349008403",
      "-193.0",
      "1.0959046745042016",
      "-193.0",
      "5.479523372521008",
      "-194.0",
      "2.739761686260504",
      "-194.0",
      "1.369880843130252",
      "-194.0",
      "6.84940421565126",
      "-195.0",
      "3.42470210782563",
      "-195.0",
      "1.712351053912815",
      "-195.0",
      "8.561755269564074",
      "-196.0",
      "4.280877634782037",
      "-196.0",
      "2.1404388173910185",
      "-196.0",
      "1.0702194086955092",
      "-196.0",
      "5.351097043477547",
      "-197.0",
      "2.675548521738773",
      "-197.0",
      "1.3377742608693866",
      "-197.0",
      "6.688871304346933",
      "-198.0",
      "3.3444356521734666",
      "-198.0",
      "1.6722178260867333",
      "-198.0",
      "8.361089130433665",
      "-199.0",
      "4.180544565216833",
      "-199.0",
      "2.090272282608417",
      "-199.0",
      "1.0451361413042084",
      "-199.0",
      "5.225680706521042",
      "-200.0",
      "2.612840353260521",
      "-200.0",
      "1.3064201766302603",
      "-200.0",
      "6.532100883151302",
      "-201.0",
      "3.266050441575651",
      "-201.0",
      "1.6330252207878255",
      "-201.0",
      "8.165126103939127",
      "-202.0",
      "4.082563051969564",
      "-202.0",
      "2.041281525984782",
      "-202.0",
      "1.020640762992391",
      "-202.0",
      "5.103203814961955",
      "-203.0",
      "2.5516019074809773",
      "-203.0",
      "1.2758009537404886",
      "-203.0",
      "6.379004768702443",
      "-204.0",
      "3.1895023843512216",
      "-204.0",
      "1.5947511921756108",
      "-204.0",
      "7.973755960878054",
      "-205.0",
      "3.986877980439027",
      "-205.0",
      "1.9934389902195135",
      "-205.0",
      "9.967194951097568",
      "-206.0",
      "4.983597475548784",
      "-206.0",
      "2.491798737774392",
      "-206.0",
      "1.245899368887196",
      "-206.0",
      "6.22949684443598",
      "-207.0",
      "3.11474842221799",
      "-207.0",
      "1.557374211108995",
      "-207.0",
      "7.786871055544975",
      "-208.0",
      "3.8934355277724872",
      "-208.0",
      "1.9467177638862436",
      "-208.0",
      "9.733588819431217",
      "-209.0",
      "4.866794409715609",
      "-209.0",
      "2.4333972048578048",
      "-209.0",
      "1.2166986024289024",
      "-209.0",
      "6.083493012144512",
      "-210.0",
      "3.041746506072256",
      "-210.0",
      "1.520873253036128",
      "-210.0",
      "7.60436626518064",
      "-211.0",
      "3.80218313259032",
      "-211.0",
      "1.90109156629516",
      "-211.0",
      "9.5054578314758",
      "-212.0",
      "4.7527289157379",
      "-212.0",
      "2.37636445786895",
      "-212.0",
      "1.188182228934475",
      "-212.0",
      "5.940911144672375",
      "-213.0",
      "2.970455572336187",
      "-213.0",
      "1.4852277861680936",
      "-213.0",
      "7.426138930840468",
      "-214.0",
      "3.713069465420234",
      "-214.0",
      "1.856534732710117",
      "-214.0",
      "9.282673663550584",
      "-215.0",
      "4.641336831775293",
      "-215.0",
      "2.3206684158876465",
      "-215.0",
      "1.160334207943823",
      "-215.0",
      "5.801671039719116",
      "-216.0",
      "2.900835519859558",
      "-216.0",
      "1.450417759929779",
      "-216.0",
      "7.252088799648895",
      "-217.0",
      "3.626044399824447",
      "-217.0",
      "1.8130221999122236",
      "-217.0",
      "9.065110999561117",
      "-218.0",
      "4.532555499780559",
      "-218.0",
      "2.2662777498902797",
      "-218.0",
      "1.1331388749451399",
      "-218.0",
      "5.665694374725699",
      "-219.0",
      "2.8328471873628494",
      "-219.0",
      "1.4164235936814247",
      "-219.0",
      "7.082117968407124",
      "-220.0",
      "3.541058984203562",
      "-220.0",
      "1.770529492101781",
      "-220.0",
      "8.852647460508905",
      "-221.0",
      "4.4263237302544525",
      "-221.0",
      "2.2131618651272262",
      "-221.0",
      "1.1065809325636131",
      "-221.0",
      "5.532904662818066",
      "-222.0",
      "2.766452331409033",
      "-222.0",
      "1.3832261657045164",
      "-222.0",
      "6.916130828522582",
      "-223.0",
      "3.458065414261291",
      "-223.0",
      "1.7290327071306455",
      "-223.0",
      "8.645163535653227",
      "-224.0",
      "4.322581767826614",
      "-224.0",
      "2.161290883913307",
      "-224.0",
      "1.0806454419566534",
      "-224.0",
      "5.403227209783267",
      "-225.0",
      "2.7016136048916337",
      "-225.0",
      "1.3508068024458166",
      "-225.0",
      "6.754034012229084",
      "-226.0",
      "3.377017006114542",
      "-226.0",
      "1.688508503057271",
      "-226.0",
      "8.442542515286355",
      "-227.0",
      "4.221271257643178",
      "-227.0",
      "2.1106356288215884",
      "-227.0",
      "1.0553178144107942",
      "-227.0",
      "5.276589072053972",
      "-228.0",
      "2.638294536026986",
      "-228.0",
      "1.319147268013493",
      "-228.0",
      "6.595736340067465",
      "-229.0",
      "3.2978681700337322",
      "-229.0",
      "1.6489340850168661",
      "-229.0",
      "8.244670425084331",
      "-230.0",
      "4.122335212542166",
      "-230.0",
      "2.061167606271083",
      "-230.0",
      "1.0305838031355412",
      "-230.0",
      "5.152919015677707",
      "-231.0",
      "2.5764595078388535",
      "-231.0",
      "1.2882297539194267",
      "-231.0",
      "6.441148769597133",
      "-232.0",
      "3.220574384798567",
      "-232.0",
      "1.6102871923992832",
      "-232.0",
      "8.051435961996416",
      "-233.0",
      "4.025717980998208",
      "-233.0",
      "2.012858990499104",
      "-233.0",
      "1.006429495249552",
      "-233.0",
      "5.0321474762477605",
      "-234.0",
      "2.5160737381238802",
      "-234.0",
      "1.2580368690619401",
      "-234.0",
      "6.290184345309701",
      "-235.0",
      "3.1450921726548504",
      "-235.0",
      "1.5725460863274252",
      "-235.0",
      "7.862730431637126",
      "-236.0",
      "3.931365215818563",
      "-236.0",
      "1.9656826079092815",
      "-236.0",
      "9.828413039546406",
      "-237.0",
      "4.914206519773204",
      "-237.0",
      "2.457103259886602",
      "-237.0",
      "1.228551629943301",
      "-237.0",
      "6.142758149716505",
      "-238.0",
      "3.0713790748582523",
      "-238.0",
      "1.5356895374291262",
      "-238.0",
      "7.678447687145631",
      "-239.0",
      "3.839223843572815",
      "-239.0",
      "1.9196119217864076",
      "-239.0",
      "9.598059608932038",
      "-240.0",
      "4.799029804466019",
      "-240.0",
      "2.3995149022330096",
      "-240.0",
      "1.1997574511165048",
      "-240.0",
      "5.998787255582524",
      "-241.0",
      "2.999393627791262",
      "-241.0",
      "1.499696813895631",
      "-241.0",
      "7.498484069478155",
      "-242.0",
      "3.7492420347390776",
      "-242.0",
      "1.8746210173695388",
      "-242.0",
      "9.373105086847692",
      "-243.0",
      "4.686552543423847",
      "-243.0",
      "2.3432762717119235",
      "-243.0",
      "1.1716381358559618",
      "-243.0",
      "5.858190679279809",
      "-244.0",
      "2.929095339639904",
      "-244.0",
      "1.464547669819952",
      "-244.0",
      "7.322738349099761",
      "-245.0",
      "3.6613691745498804",
      "-245.0",
      "1.83068458727494",
      "-245.0",
      "9.153422936374701",
      "-246.0",
      "4.576711468187351",
      "-246.0",
      "2.2883557340936753",
      "-246.0",
      "1.1441778670468377",
      "-246.0",
      "5.720889335234188",
      "-247.0",
      "2.860444667617094",
      "-247.0",
      "1.430222333808547",
      "-247.0",
      "7.151111669042735",
      "-248.0",
      "3.5755558345213676",
      "-248.0",
      "1.7877779172606838",
      "-248.0",
      "8.93888958630342",
      "-249.0",
      "4.469444793151709",
      "-249.0",
      "2.234722396575855",
      "-249.0",
      "1.1173611982879272",
      "-249.0",
      "5.586805991439637",
      "-250.0",
      "2.793402995719818",
      "-250.0",
      "1.3967014978599093",
      "-250.0",
      "6.983507489299546",
      "-251.0",
      "3.491753744649773",
      "-251.0",
      "1.7458768723248863",
      "-251.0",
      "8.729384361624431",
      "-252.0",
      "4.364692180812216",
      "-252.0",
      "2.182346090406108",
      "-252.0",
      "1.091173045203054",
      "-252.0",
      "5.45586522601527",
      "-253.0",
      "2.727932613007635",
      "-253.0",
      "1.3639663065038174",
      "-253.0",
      "6.819831532519088",
      "-254.0",
      "3.409915766259544",
      "-254.0",
      "1.704957883129772",
      "-254.0",
      "8.52478941564886",
      "-255.0",
      "4.26239470782443",
      "-255.0",
      "2.131197353912215",
      "-255.0",
      "1.0655986769561074",
      "-255.0",
      "5.327993384780537",
      "-256.0",
      "2.6639966923902687",
      "-256.0",
      "1.3319983461951344",
      "-256.0",
      "6.659991730975672",
      "-257.0",
      "3.329995865487836",
      "-257.0",
      "1.664997932743918",
      "-257.0",
      "8.32498966371959",
      "-258.0",
      "4.162494831859795",
      "-258.0",
      "2.0812474159298975",
      "-258.0",
      "1.0406237079649487",
      "-258.0",
      "5.203118539824743",
      "-259.0",
      "2.6015592699123715",
      "-259.0",
      "1.300779634956186",
      "-259.0",
      "6.503898174780929",
      "-260.0",
      "3.2519490873904644",
      "-260.0",
      "1.6259745436952322",
      "-260.0",
      "8.129872718476163",
      "-261.0",
      "4.064936359238081",
      "-261.0",
      "2.0324681796190402",
      "-261.0",
      "1.0162340898095201",
      "-261.0",
      "5.081170449047601",
      "-262.0",
      "2.5405852245238005",
      "-262.0",
      "1.2702926122619003",
      "-262.0",
      "6.351463061309501",
      "-263.0",
      "3.1757315306547507",
      "-263.0",
      "1.5878657653273753",
      "-263.0",
      "7.939328826636877",
      "-264.0",
      "3.9696644133184384",
      "-264.0",
      "1.984832206659219",
      "-264.0",
      "9.924161033296096",
      "-265.0",
      "4.962080516648048",
      "-265.0",
      "2.481040258324024",
      "-265.0",
      "1.240520129162012",
      "-265.0",
      "6.20260064581006",
      "-266.0",
      "3.10130032290503",
      "-266.0",
      "1.550650161452515",
      "-266.0",
      "7.753250807262575",
      "-267.0",
      "3.8766254036312873",
      "-267.0",
      "1.9383127018156436",
      "-267.0",
      "9.691563509078218",
      "-268.0",
      "4.845781754539109",
      "-268.0",
      "2.4228908772695545",
      "-268.0",
      "1.2114454386347773",
      "-268.0",
      "6.057227193173887",
      "-269.0",
      "3.0286135965869434",
      "-269.0",
      "1.5143067982934717",
      "-269.0",
      "7.571533991467358",
      "-270.0",
      "3.785766995733679",
      "-270.0",
      "1.8928834978668394",
      "-270.0",
      "9.464417489334197",
      "-271.0",
      "4.732208744667099",
      "-271.0",
      "2.3661043723335493",
      "-271.0",
      "1.1830521861667747",
      "-271.0",
      "5.915260930833874",
      "-272.0",
      "2.957630465416937",
      "-272.0",
      "1.4788152327084685",
      "-272.0",
      "7.394076163542342",
      "-273.0",
      "3.697038081771171",
      "-273.0",
      "1.8485190408855856",
      "-273.0",
      "9.242595204427927",
      "-274.0",
      "4.621297602213964",
      "-274.0",
      "2.310648801106982",
      "-274.0",
      "1.155324400553491",
      "-274.0",
      "5.776622002767455",
      "-275.0",
      "2.888311001383727",
      "-275.0",
      "1.4441555006918636",
      "-275.0",
      "7.220777503459318",
      "-276.0",
      "3.610388751729659",
      "-276.0",
      "1.8051943758648297",
      "-276.0",
      "9.025971879324148",
      "-277.0",
      "4.512985939662074",
      "-277.0",
      "2.256492969831037",
      "-277.0",
      "1.1282464849155185",
      "-277.0",
      "5.641232424577593",
      "-278.0",
      "2.820616212288796",
      "-278.0",
      "1.410308106144398",
      "-278.0",
      "7.051540530721991",
      "-279.0",
      "3.5257702653609955",
      "-279.0",
      "1.7628851326804975",
      "-279.0",
      "8.814425663402488",
      "-280.0",
      "4.407212831701244",
      "-280.0",
      "2.203606415850622",
      "-280.0",
      "1.101803207925311",
      "-280.0",
      "5.509016039626555",
      "-281.0",
      "2.7545080198132776",
      "-281.0",
      "1.3772540099066388",
      "-281.0",
      "6.886270049533194",
      "-282.0",
      "3.443135024766597",
      "-282.0",
      "1.7215675123832985",
      "-282.0",
      "8.607837561916492",
      "-283.0",
      "4.303918780958246",
      "-283.0",
      "2.151959390479123",
      "-283.0",
      "1.0759796952395615",
      "-283.0",
      "5.379898476197808",
      "-284.0",
      "2.689949238098904",
      "-284.0",
      "1.344974619049452",
      "-284.0",
      "6.72487309524726",
      "-285.0",
      "3.36243654762363",
      "-285.0",
      "1.681218273811815",
      "-285.0",
      "8.406091369059075",
      "-286.0",
      "4.203045684529537",
      "-286.0",
      "2.1015228422647687",
      "-286.0",
      "1.0507614211323844",
      "-286.0",
      "5.253807105661922",
      "-287.0",
      "2.626903552830961",
      "-287.0",
      "1.3134517764154805",
      "-287.0",
      "6.567258882077402",
      "-288.0",
      "3.283629441038701",
      "-288.0",
      "1.6418147205193505",
      "-288.0",
      "8.209073602596753",
      "-289.0",
      "4.1045368012983765",
      "-289.0",
      "2.0522684006491883",
      "-289.0",
      "1.0261342003245941",
      "-289.0",
      "5.130671001622971",
      "-290.0",
      "2.5653355008114853",
      "-290.0",
      "1.2826677504057427",
      "-290.0",
      "6.413338752028713",
      "-291.0",
      "3.2066693760143563",
      "-291.0",
      "1.6033346880071782",
      "-291.0",
      "8.016673440035891",
      "-292.0",
      "4.008336720017946",
      "-292.0",
      "2.004168360008973",
      "-292.0",
      "1.0020841800044864",
      "-292.0",
      "5.010420900022432",
      "-293.0",
      "2.505210450011216",
      "-293.0",
      "1.252605225005608",
      "-293.0",
      "6.26302612502804",
      "-294.0",
      "3.13151306251402",
      "-294.0",
      "1.56575653125701",
      "-294.0",
      "7.82878265628505",
      "-295.0",
      "3.914391328142525",
      "-295.0",
      "1.9571956640712624",
      "-295.0",
      "9.785978320356312",
      "-296.0",
      "4.892989160178156",
      "-296.0",
      "2.446494580089078",
      "-296.0",
      "1.223247290044539",
      "-296.0",
      "6.116236450222695",
      "-297.0",
      "3.0581182251113477",
      "-297.0",
      "1.5290591125556738",
      "-297.0",
      "7.645295562778369",
      "-298.0",
      "3.8226477813891844",
      "-298.0",
      "1.9113238906945924",
      "-298.0",
      "9.556619453472962",
      "-299.0",
      "4.778309726736481",
      "-299.0",
      "2.3891548633682405",
      "-299.0",
      "1.1945774316841202",
      "-299.0",
      "5.972887158420601",
      "-300.0",
      "2.9864435792103006",
      "-300.0",
      "1.4932217896051503",
      "-300.0",
      "7.466108948025751",
      "-301.0",
      "3.7330544740128757",
      "-301.0",
      "1.8665272370064379",
      "-301.0",
      "9.33263618503219",
      "-302.0",
      "4.666318092516095",
      "-302.0",
      "2.3331590462580474",
      "-302.0",
      "1.1665795231290237",
      "-302.0",
      "5.832897615645118",
      "-303.0",
      "2.916448807822559",
      "-303.0",
      "1.4582244039112795",
      "-303.0",
      "7.291122019556398",
      "-304.0",
      "3.645561009778199",
      "-304.0",
      "1.8227805048890995",
      "-304.0",
      "9.113902524445496",
      "-305.0",
      "4.556951262222748",
      "-305.0",
      "2.278475631111374",
      "-305.0",
      "1.139237815555687",
      "-305.0",
      "5.696189077778436",
      "-306.0",
      "2.848094538889218",
      "-306.0",
      "1.424047269444609",
      "-306.0",
      "7.120236347223045",
      "-307.0",
      "3.560118173611522",
      "-307.0",
      "1.780059086805761",
      "-307.0",
      "8.900295434028806",
      "-308.0",
      "4.450147717014403",
      "-308.0",
      "2.2250738585072014",
      "-308.0",
      "1.1125369292536007",
      "-308.0",
      "5.562684646268003",
      "-309.0",
      "2.781342323134",
      "-309.0",
      "1.390671161567",
      "-309.0",
      "6.953355807835",
      "-310.0",
      "3.4766779039175",
      "-310.0",
      "1.73833895195875",
      "-310.0",
      "8.691694759794",
      "-311.0",
      "4.345847379897",
      "-311.0",
      "2.1729236899484",
      "-311.0",
      "1.086461844974",
      "-311.0",
      "5.43230922487",
      "-312.0",
      "2.716154612436",
      "-312.0",
      "1.35807730622",
      "-312.0",
      "6.7903865311",
      "-313.0",
      "3.39519326554",
      "-313.0",
      "1.69759663277",
      "-313.0",
      "8.487983164",
      "-314.0",
      "4.243991582",
      "-314.0",
      "2.121995791",
      "-314.0",
      "1.0609978955",
      "-314.0",
      "5.304989477",
      "-315.0",
      "2.65249474",
      "-315.0",
      "1.32624737",
      "-315.0",
      "6.63123685",
      "-316.0",
      "3.3156184",
      "-316.0",
      "1.6578092",
      "-316.0",
      "8.289046",
      "-317.0",
      "4.144523",
      "-317.0",
      "2.0722615",
      "-317.0",
      "1.036131",
      "-317.0",
      "5.180654",
      "-318.0",
      "2.590327",
      "-318.0",
      "1.295163",
      "-318.0",
      "6.4758",
      "-319.0",
      "3.2379",
      "-319.0",
      "1.61895",
      "-319.0",
      "8.095",
      "-320.0",
      "4.0474",
      "-320.0",
      "2.0237",
      "-320.0",
      "1.012",
      "-320.0",
      "5.06",
      "-321.0",
      "2.53",
      "-321.0",
      "1.265",
      "-321.0",
      "6.3",
      "-322.0",
      "3.16",
      "-322.0",
      "1.6",
      "-322.0",
      "8.0",
      "-323.0",
      "4.0",
      "-323.0",
      "2.0",
      "-323.0",
      "1.0",
      "-323.0",
      "5.0",
      "-324.0",
      "0.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "from math import log\n\ns = 1\nwhile s > 0:\n    s = s / 2\n    print(s)"
  },
  {
    "example_id": 208,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "17955.0"
    ],
    "annotated_answers": [
      "-63.0"
    ],
    "solution": "a = 17955 - 1\nb = 17955 - a - 1\nc = 17955 - b - a\nprint(a + b + c)"
  },
  {
    "example_id": 209,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.605551275463989",
      "2.23606797749979",
      "2.23606797749979",
      "2.8284271247461903",
      "10.816653826391969"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "from math import sqrt\n\nA = (3, 0)\nB = (5, 3)\nC = (6, 5)\nD = (7, 7)\nE = (9, 9)\n\nsides = [\n    sqrt(pow(B[0] - A[0], 2) + pow(B[1] - A[1], 2)),\n    sqrt(pow(C[0] - B[0], 2) + pow(C[1] - B[1], 2)),\n    sqrt(pow(D[0] - C[0], 2) + pow(D[1] - C[1], 2)),\n    sqrt(pow(E[0] - D[0], 2) + pow(E[1] - D[1], 2)),\n    sqrt(pow(A[0] - E[0], 2) + pow(A[1] - E[1], 2)),\n]\n\nprint(sides)"
  },
  {
    "example_id": 210,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.766666666666667"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "x = 2\ny = 3\nz = 5\nprint(x + y / z + y / x + z / y)"
  },
  {
    "example_id": 211,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "267.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "from math import sqrt\n\ndef upperhyper(x):\n    return (3*sqrt((x + 1)**2/4 - 1) + 3)\n\ndef lowerhyper(x):\n    return (-3*sqrt((x + 1)**2/4 - 1) + 3)\n\nn = 10\ncount = 0\n\nfor i in range(-n, n + 1):\n    for j in range(-n, n + 1):\n        if i**2 * j + j**2 * (i + 1) + (i + 1)**2 * j == i * j**2 + j * (i + 1)**2 + (i + 1) * j**2:\n            count += 1\n\nprint(count + 3 + 3 + 100 + 100)"
  },
  {
    "example_id": 212,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0",
      "3.0",
      "65.0",
      "3.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "1465.0",
      "2.0",
      "15.0",
      "14421.0",
      "2.0",
      "1.0",
      "3.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "1465.0",
      "2.0",
      "15.0",
      "14421.0",
      "2.0",
      "1.0",
      "3.0",
      "3.0",
      "10.0",
      "3.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "1465.0",
      "2.0",
      "15.0",
      "14421.0",
      "2.0",
      "1.0",
      "3.0",
      "3.0",
      "65.0",
      "3.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "1465.0",
      "2.0",
      "15.0",
      "14421.0",
      "2.0",
      "1.0",
      "3.0"
    ],
    "annotated_answers": [
      "150.0"
    ],
    "solution": "from sympy import solve\nfrom sympy import Symbol\n\nc = 55\nx = Symbol('x')\nroots = solve(x**3 - 10*x**2 + c*x - c, x)\nprint(roots[0]*roots[1])"
  },
  {
    "example_id": 213,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "658.0"
    ],
    "annotated_answers": [
      "340.0"
    ],
    "solution": "count = 0\nfor n in range(1, 1000):\n    if n < 1000 and n.bit_length() % 2 == 0:\n        count += 1\nprint(count)"
  },
  {
    "example_id": 214,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "def sgn(x):\n    if x < 0:\n        return -1\n    elif x == 0:\n        return 0\n    else:\n        return 1\n\nsum = 0\nfor n in range(-10, 21):\n    sum += sgn(n)\nprint(sum)"
  },
  {
    "example_id": 215,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.2676506002282294",
      "30"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "from sympy import expand\nfrom sympy import binomial\n\nk = 0\nfor i in range(51):\n    k += binomial(50, i) * 3**i\nprint(k)"
  },
  {
    "example_id": 216,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "-4.0",
      "41.0",
      "8.0",
      "41.0",
      "2.0",
      "36.0",
      "2.0",
      "4.0",
      "41.0",
      "36.0",
      "41.0",
      "8.0",
      "2.0"
    ],
    "annotated_answers": [
      "40.0"
    ],
    "solution": "import sympy\nfrom sympy import symbols, solve, sqrt\n\nx, y = symbols('x, y')\n\n# x^2 + y^2 + 6x - 24y + 72 = 0\neq1 = x**2 + y**2 + 6*x - 24*y + 72\n\n# x^2 - y^2 + 6x + 16y - 46 = 0\neq2 = x**2 - y**2 + 6*x + 16*y - 46\n\n# find the intersection point\np = solve((eq1, eq2), (x, y))\n\n# compute the distance from p to (-3, 2)\ndistance = 0\nfor (x, y) in p:\n    distance += sqrt((x + 3)**2 + (y - 2)**2)\n\nprint(distance)"
  },
  {
    "example_id": 217,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-6.0",
      "36.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "1971.0",
      "2.0",
      "27.0",
      "1583.0",
      "2.0",
      "1.0",
      "3.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "1971.0",
      "2.0",
      "27.0",
      "1583.0",
      "2.0",
      "1.0",
      "3.0",
      "3.0",
      "36.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "1971.0",
      "2.0",
      "27.0",
      "1583.0",
      "2.0",
      "1.0",
      "3.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "1971.0",
      "2.0",
      "27.0",
      "1583.0",
      "2.0",
      "1.0",
      "3.0",
      "3.0",
      "-6.0",
      "36.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "1971.0",
      "2.0",
      "27.0",
      "1583.0",
      "2.0",
      "1.0",
      "3.0",
      "1971.0",
      "2.0",
      "27.0",
      "1583.0",
      "2.0",
      "1.0",
      "3.0",
      "3.0",
      "36.0",
      "1971.0",
      "2.0",
      "27.0",
      "1583.0",
      "2.0",
      "1.0",
      "3.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "1971.0",
      "2.0",
      "27.0",
      "1583.0",
      "2.0",
      "1.0",
      "3.0",
      "3.0",
      "-6.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "1971.0",
      "2.0",
      "27.0",
      "1583.0",
      "2.0",
      "1.0",
      "3.0",
      "3.0",
      "1971.0",
      "2.0",
      "27.0",
      "1583.0",
      "2.0",
      "1.0",
      "3.0",
      "3.0",
      "36.0",
      "1971.0",
      "2.0",
      "27.0",
      "1583.0",
      "2.0",
      "1.0",
      "3.0",
      "36.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "1971.0",
      "2.0",
      "27.0",
      "1583.0",
      "2.0",
      "1.0",
      "3.0"
    ],
    "annotated_answers": [
      "73.0"
    ],
    "solution": "from sympy import solve\nfrom sympy.abc import x\n\nroots = solve(x**3 + 9 * x**2 - 9 * x - 8, x)\nexpression = (roots[0] + roots[1]) * (roots[1] + roots[2]) * (roots[2] + roots[0])\nprint(expression)"
  },
  {
    "example_id": 218,
    "selected_solution_index": 10,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "7.0",
      "0.0",
      "2.0",
      "9.0",
      "60.0"
    ],
    "annotated_answers": [
      "30.0"
    ],
    "solution": "from sympy import factor, Poly\n\ndef factors(polynomial):\n    return [factor(polynomial)]\n\ndef is_factor(p, q):\n    return q in factors(p)\n\ndef is_factor_of_all(polynomials):\n    def is_factor_of_all(p, q):\n        return all(q in factors(p) for p in polynomials)\n    return is_factor_of_all\n\ndef find_largest_k(polynomials):\n    def find_largest_k(k):\n        p = Poly(Q1(x) - Q2(x), x)\n        return max(k for k in range(k, -1, -1) if is_factor_of_all(polynomials)(k))\n    return find_largest_k\n\nQ1 = lambda x: x**2 + (k - 29) * x - k\nQ2 = lambda x: 2 * x**2 + (2 * k - 43) * x + k\n\nprint(find_largest_k([Q1, Q2]))"
  },
  {
    "example_id": 219,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "45.0",
      "49.0"
    ],
    "annotated_answers": [
      "97.0"
    ],
    "solution": "n = 5\nexpression = 48 + 49*1j\nfor i in range(1, n+1):\n    expression += i * (-1)**i\nprint(expression)"
  },
  {
    "example_id": 220,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "16.0"
    ],
    "annotated_answers": [
      "61.0"
    ],
    "solution": "a_sequence = [1, 2, 3, 4, 5]\nb_sequence = [2, 4, 8, 16, 32]\nc_sequence = [1, 4, 15, 2, 16]\nprint(c_sequence[4])"
  },
  {
    "example_id": 221,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0",
      "2.0",
      "21.0",
      "2.0",
      "21.0",
      "2.0",
      "5.0",
      "2.0",
      "-5.0",
      "4.0",
      "2.0",
      "-29.0",
      "5.0",
      "67.0",
      "4.0",
      "67.0",
      "4.0",
      "-5.0",
      "4.0",
      "67.0",
      "4.0",
      "2.0",
      "-29.0",
      "5.0",
      "67.0",
      "4.0",
      "-5.0",
      "4.0",
      "67.0",
      "4.0",
      "-4.0",
      "5.0",
      "67.0",
      "2.0",
      "4.0",
      "2.0",
      "-5.0",
      "4.0",
      "-4.0",
      "5.0",
      "67.0",
      "2.0",
      "4.0",
      "2.0",
      "67.0",
      "4.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "from sympy import *\nx = symbols('x')\nroots = solve(x**6 + x**4 - 115*x**3 + x**2 + 1, x)\nprint(roots)"
  },
  {
    "example_id": 222,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "401.0"
    ],
    "solution": "def f(x):\n    return 6*x - 2005\n\nn = 1\nwhile f(n)!= 6*n - 2005:\n    n += 1\nprint(n)"
  },
  {
    "example_id": 223,
    "selected_solution_index": 11,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "64.0"
    ],
    "solution": "a, b, c, d = 1, 1, 4, 16\nexpression = 1/a + 1/b + 4/c + 16/d\nprint(expression)"
  },
  {
    "example_id": 224,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "import math\ndef g(x):\n    return x**2 - 11*x + 30\n\ndef f(x):\n    return x**4 - 14*x**3 + 62*x**2 - 91*x + 42\n\ndef solve_f(x):\n    y = math.sqrt(x + 11)\n    z = math.sqrt(x - 30)\n    return y**2 - z**2\n\ndef solve_g(x):\n    return x**2 - 11*x + 30\n\ndef find_sum(x):\n    sum = 0\n    for i in range(1, 101):\n        y = solve_f(x)\n        if y > 0:\n            z = solve_g(y)\n            if z > 0:\n                sum += z\n    return sum\n\nprint(find_sum(10**100))"
  },
  {
    "example_id": 225,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "20.0"
    ],
    "annotated_answers": [
      "30.0"
    ],
    "solution": "def f(x):\n    return 2 * x - 12\nprint(f(12) - f(2))"
  },
  {
    "example_id": 226,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "count = 0\nfor x in range(1, 101):\n    for y in range(1, 101):\n        f = lambda z: z*z - 2\n        if f(x) * f(y) == f(x*y):\n            count += 1\nprint(count)"
  },
  {
    "example_id": 227,
    "selected_solution_index": 0,
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "from sympy import Poly\n\nn = 1\nmax_degree = 0\nwhile True:\n    x = Poly(x**n + 1, x)\n    if x.is_real:\n        max_degree = n\n    else:\n        break\n    n += 1\n\nprint(max_degree)"
  },
  {
    "example_id": 228,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "3.0",
      "3.0",
      "3.0",
      "3.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "from sympy import *\n\na, b, c, d, e = symbols('a, b, c, d, e')\nexpression = a**3/(a - b)*(a - c)*(a - d)*(a - e) + b**3/(b - a)*(b - c)*(b - d)*(b - e) + c**3/(c - a)*(c - b)*(c - d)*(c - e) + d**3/(d - a)*(d - b)*(d - c)*(d - e) + e**3/(e - a)*(e - b)*(e - c)*(e - d)\nprint(expression)"
  },
  {
    "example_id": 229,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "6.0",
      "1.0",
      "36.0",
      "2.0",
      "216.0",
      "3.0",
      "1296.0",
      "4.0",
      "7776.0",
      "5.0",
      "46656.0",
      "6.0"
    ],
    "annotated_answers": [
      "254.0"
    ],
    "solution": "import sympy\nfrom sympy import Symbol\n\na0, a1, a2, a3, a4, a5, a6 = sympy.symbols('a0 a1 a2 a3 a4 a5 a6')\n\nQ = a0 + a1 * Symbol('x') + a2 * Symbol('x')**2 + a3 * Symbol('x')**3 + a4 * Symbol('x')**4 + a5 * Symbol('x')**5 + a6 * Symbol('x')**6\n\nQ.subs({Symbol('x'): 1}) == 4\nQ.subs({Symbol('x'): 5}) == 152\n\nprint(Q.subs({Symbol('x'): 6}))"
  },
  {
    "example_id": 230,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "1.7099759466767",
      "2.0",
      "3.0",
      "0.333333333333333",
      "2.0",
      "3.0",
      "0.333333333333333",
      "3.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "from sympy import simplify, sqrt\na = (5 / (sqrt(3) + sqrt(2)))**(1/3) + 1 / (sqrt(3) - sqrt(2))**(1/3)\nb = simplify(a**3 - 1)\nprint(b)"
  },
  {
    "example_id": 231,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "5.0",
      "6.0",
      "10.0",
      "7.0",
      "4.0",
      "7.0",
      "6.0",
      "2.0",
      "5.0",
      "8.0",
      "200.0"
    ],
    "annotated_answers": [
      "112.0"
    ],
    "solution": "a = [2, 5, 8]\nfor n in range(3, 2023):\n    a.append((4 * (a[-1] + a[-2] + a[-3])) % 11)\nprint(a)\nprint(a[-2]*a[-1]*a[-2])"
  },
  {
    "example_id": 232,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x = 2\ny = 2\nexpression = x**2 + y**2\nprint(expression)"
  },
  {
    "example_id": 233,
    "selected_solution_index": 10,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "n = 4\na = 0\ng = 1\nwhile n > 0:\n    a, g = a + g, a + g\n    n -= 1\nprint(a)"
  },
  {
    "example_id": 234,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "34.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "x = -3\ny = 5\nprint(x**2 + y**2)"
  },
  {
    "example_id": 235,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "25.0"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "omega = -1 + 4j\nexpression = abs(omega**2 + 2*omega - 8)\nprint(expression)"
  },
  {
    "example_id": 236,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "154.0"
    ],
    "solution": "def elite_status(N):\n    return 2**(1 + math.floor(math.log2(N - 1))) - N\n\nN = 19\nsum(sorted([N - i for i in range(1, N + 1)]))"
  },
  {
    "example_id": 237,
    "selected_solution_index": 10,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "from math import floor\n\ndef area(x, y):\n    if floor(x) * floor(y) == 16:\n        return 1\n    else:\n        return 0\n\nprint(sum(area(x, y) for x in range(1, 101) for y in range(1, 101)))"
  },
  {
    "example_id": 238,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-24.0"
    ],
    "annotated_answers": [
      "-5.0"
    ],
    "solution": "C = D = 0\nfor x in range(1, 100):\n    if (4 * x - 23) * (x**2 + 5 * x - 24) - (C * (x - 3) + D * (x + 8)) == 0:\n        C = C * x - 3\n        D = D * x + 8\nprint(C * D)"
  },
  {
    "example_id": 239,
    "selected_solution_index": 12,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "4.0"
    ],
    "annotated_answers": [
      "175.0"
    ],
    "solution": "from sympy import solve, symbols\n\nx, y = symbols('x y')\n\neq1 = 3*x**2 - 18*x + 4*y**2 - 32*y + 91\neq2 = x**2 + y**2 + 2*x*y - 14*x - 14*y + 49\n\nsol = solve([eq1, eq2], [x, y])\nprint(sol)"
  },
  {
    "example_id": 240,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "2007.0"
    ],
    "solution": "from math import floor\n\n\ndef f(x):\n    if 0 <= x <= 0.5:\n        return 2*x\n    else:\n        return 2-2*x\n\n\ndef f_n(x):\n    if n == 1:\n        return f(x)\n    else:\n        return f(f_n(x))\n\n\nn = 2005\nx = 0.5\nwhile n > 1:\n    x = f(x)\n    n -= 1\n\nprint(x)"
  },
  {
    "example_id": 241,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "800.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "count = 0\nfor a in range(-100, 101):\n    for b in range(-100, 101):\n        if (a**2 - a * 24) * (b**2 - b * 36) == 0:\n            count += 1\nprint(count)"
  },
  {
    "example_id": 242,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "1.0",
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "print([0, 1, 2, 3])"
  },
  {
    "example_id": 243,
    "selected_solution_index": 14,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "99.0",
      "3.0",
      "3.0",
      "2.0",
      "3.0",
      "39.0",
      "3.0",
      "2.0",
      "2.0",
      "135.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "import sympy\ny = sympy.Symbol('y')\nexpression = 3 * (y**3 - 13 * y**2 + 11 * y + 23)\nexpression = expression.subs(y, (3 * y + 2))\nprint(expression)"
  },
  {
    "example_id": 244,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "a = -1\nb = -1\nc = 1\nprint(a**4 + b**4 + c**4)"
  },
  {
    "example_id": 245,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-78740.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "def f(x):\n    return x**7 + 5*x**3 + 10\nprint(f(-5))"
  },
  {
    "example_id": 246,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.9999999999999998"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "from math import sqrt\nexpression = abs(-1 + 1j * sqrt(3))\nprint(expression)"
  },
  {
    "example_id": 247,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "0.0",
      "1.0",
      "0.0",
      "0.0",
      "2.682",
      "-7.0",
      "1.0",
      "2.0",
      "1.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "from scipy.optimize import minimize\n\n\ndef f(x):\n    return (x**6 + 1 / x**6 - 2) / (x**3 + 1 / x**3)\n\n\nresult = minimize(f, 1)\nprint(result)"
  },
  {
    "example_id": 248,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "from math import sqrt\n\n\ndef f(x, y):\n    return x * sqrt(1 - y**2) + y * sqrt(1 - x**2)\n\n\nmax_value = -1\nfor x in range(-1, 2):\n    for y in range(-1, 2):\n        value = f(x, y)\n        if value > max_value:\n            max_value = value\nprint(max_value)"
  },
  {
    "example_id": 249,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "100.0"
    ],
    "annotated_answers": [
      "24.0"
    ],
    "solution": "from math import sqrt\n\nx1, y1 = 50, 0\nx2, y2 = -50, 0\n\ndistance = sqrt((x2-x1)**2 + (y2-y1)**2)\n\nprint(distance)"
  },
  {
    "example_id": 250,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-9.333333333333334"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "focus = (3, -28)\ndirectrix_x = 0\ndirectrix_y = 0\nslope = (focus[1] - directrix_y) / (focus[0] - directrix_x)\nprint(slope)"
  },
  {
    "example_id": 251,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25.0"
    ],
    "annotated_answers": [
      "243.0"
    ],
    "solution": "def f(x):\n    return x * x\n\nprint(f(5))"
  },
  {
    "example_id": 252,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a = 1\nb = 1\nc = 1\n\nwhile a + b + c < a * b * c:\n    a += 1\n    b += 1\n    c += 1\n\nprint(a**2)"
  },
  {
    "example_id": 253,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.141592653589793"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "from math import pi\nprint(pi)"
  },
  {
    "example_id": 254,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "819.0"
    ],
    "solution": "a1 = 0\nfor i in range(2, 19):\n    a1 += (i - 1) * (1 - a1)\nprint(a1)"
  },
  {
    "example_id": 255,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "def is_solution(x):\n    return x**5 == x**4 + 72 * x**3\n\n\ncount = 0\nfor x in range(1, 100):\n    if is_solution(x):\n        count += 1\nprint(count)"
  },
  {
    "example_id": 256,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "48.0"
    ],
    "solution": "a = 8"
  },
  {
    "example_id": 257,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "504.0"
    ],
    "solution": "a = 2016\nwhile True:\n    if a % 2 == 0:\n        a = a // 2\n    else:\n        a = 3 * a + 1\n    if a == 1:\n        break\nprint(a)"
  },
  {
    "example_id": 258,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "24.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "from math import sqrt\n\ndef upperparab(x):\n    return sqrt(8 * x)\n\ndef lowerparab(x):\n    return -sqrt(8 * x)\n\nA = (-1, 1)\nB = (2, 4)\nC = (-1, -1)\nD = (2, -4)\n\narea = 0\n\nfor i in range(4):\n    x1, y1 = A\n    x2, y2 = B\n    x3, y3 = C\n    x4, y4 = D\n\n    area += (x1 * y2 - x2 * y1 + x3 * y4 - x4 * y3) / 2\n\n    A, B = B, C\n    C, D = D, A\n\nprint(area)"
  },
  {
    "example_id": 259,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0",
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "import sympy as sp\n\na, b = sp.symbols(\"a b\")\nexpression = (a + b) / (a * b + 1)\nprint(expression.expand())"
  },
  {
    "example_id": 260,
    "selected_solution_index": 14,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "304.0"
    ],
    "annotated_answers": [
      "225.0"
    ],
    "solution": "count = 0\nfor x in range(1, 20):\n    for y in range(1, 20):\n        for z in range(1, 20):\n            if (1+1j)**y == (1-1j)**y and (1+1j)**x == (1-1j)**x:\n                count += 1\nprint(count)"
  },
  {
    "example_id": 261,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "32.0"
    ],
    "solution": "P = 40\nQ = 1\nR = 0\nS = -10\nexpression = abs(S)\nprint(expression)"
  },
  {
    "example_id": 262,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "143.0"
    ],
    "annotated_answers": [
      "913.0"
    ],
    "solution": "def fibonacci(n):\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n    else:\n        return fibonacci(n - 1) + fibonacci(n - 2)\n\nprint(sum([fibonacci(i) for i in range(1, 11)]))"
  },
  {
    "example_id": 263,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "a = 1\nb = 2\nc = 3\nprint(a/b + b/a + a/c + c/a + b/c + c/b)"
  },
  {
    "example_id": 264,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "255.0"
    ],
    "solution": "n = 1\nwhile True:\n    m = n + 1\n    if sum(range(1, m + 1, 2)) + 212 == sum(range(1, n + 1, 2)) + 212:\n        print(n)\n        break\n    n += 1"
  },
  {
    "example_id": 265,
    "selected_solution_index": 14,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "39.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "min_f = 0\nfor x in range(-20, 21):\n    if min_f < max(abs(x + 15), abs(x + 12), abs(x + 8), abs(x - 1), abs(x - 3), abs(x - 19)):\n        min_f = max(abs(x + 15), abs(x + 12), abs(x + 8), abs(x - 1), abs(x - 3), abs(x - 19))\nprint(min_f)"
  },
  {
    "example_id": 266,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.1588990509885364"
    ],
    "annotated_answers": [
      "-256.0"
    ],
    "solution": "import math\na = math.log2(2*math.sqrt(2*math.sqrt(2*math.sqrt(2))-1)-1) + math.log2(2*math.sqrt(2*math.sqrt(2*math.sqrt(2))-1)-1) + math.log2(2*math.sqrt(2*math.sqrt(2*math.sqrt(2))-1)-1)\nprint(a)"
  },
  {
    "example_id": 267,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "104.0"
    ],
    "annotated_answers": [
      "104.0"
    ],
    "solution": "expression = (\n    (5**0.5 + 6**0.5 + 7**0.5) *\n    (-5**0.5 + 6**0.5 + 7**0.5) *\n    (5**0.5 - 6**0.5 + 7**0.5) *\n    (5**0.5 + 6**0.5 - 7**0.5)\n)\nprint(expression)"
  },
  {
    "example_id": 268,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0",
      "2.0",
      "3.0",
      "4.0",
      "5.0",
      "2.0",
      "3.0",
      "4.0",
      "5.0",
      "2.0",
      "3.0",
      "4.0",
      "5.0",
      "1.0",
      "2.0",
      "3.0",
      "4.0",
      "5.0"
    ],
    "annotated_answers": [
      "163.0"
    ],
    "solution": "import sympy as sp\nw1 = sp.symbols(\"w1\")\nw2 = sp.symbols(\"w2\")\nw3 = sp.symbols(\"w3\")\nw4 = sp.symbols(\"w4\")\nw5 = sp.symbols(\"w5\")\nz1 = sp.symbols(\"z1\")\nz2 = sp.symbols(\"z2\")\nz3 = sp.symbols(\"z3\")\nz4 = sp.symbols(\"z4\")\nz5 = sp.symbols(\"z5\")\n\neq1 = (z1 - w1) + (z2 - w2) + (z3 - w3) + (z4 - w4) + (z5 - w5)\neq2 = 0\n\nsolution = sp.solve([eq1, eq2], [z1, z2, z3, z4, z5])\n\nprint(solution)\n\nslope = sp.solve(eq1, w1)\nprint(slope)"
  },
  {
    "example_id": 269,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "100.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "a = 1.0\nb = 2.0\nc = 3.0\ndegree = 0\nfor x in range(1, 101):\n    degree += 1\n    if (x - b) * (x - c) / (a - b) * (a - c) + (x - a) * (x - c) / (b - a) * (b - c) + (x - a) * (x - b) / (c - a) * (c - b) == 0:\n        break\nprint(degree)"
  },
  {
    "example_id": 270,
    "selected_solution_index": 12,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "990.0"
    ],
    "annotated_answers": [
      "990.0"
    ],
    "solution": "from math import log2, ceil, floor\n\nA = sum(ceil(log2(i)) for i in range(2, 1001))\nB = sum(floor(log2(i)) for i in range(2, 1001))\nprint(A - B)"
  },
  {
    "example_id": 271,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0",
      "6.0",
      "12.0",
      "20.0",
      "30.0",
      "42.0",
      "56.0",
      "72.0",
      "90.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "for a in range(1, 100):\n    for b in range(1, 100):\n        if a * b**2 + b * a == a * a:\n            print(a)"
  },
  {
    "example_id": 272,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.718281828459045"
    ],
    "annotated_answers": [
      "3980025.0"
    ],
    "solution": "import math\nprint(math.exp(math.log(1995)/math.log(1995)))"
  },
  {
    "example_id": 273,
    "selected_solution_index": 11,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "27.0",
      "3.0",
      "9.0",
      "2.0",
      "3.0",
      "1.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "from sympy import *\nx = Symbol('x')\ny = (27*x**2 + 9*x + 3) / (27*x**3 + 9*x**2 + 3*x + 1)\nprint(y.as_numer_denom()[1].simplify())"
  },
  {
    "example_id": 274,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "898.0"
    ],
    "solution": "x = [211, 375, 420, 523]\nfor i in range(5, 531):\n    x.append(x[-1] - x[-2] + x[-3] - x[-4])\nprint(sum(x[531:753]) + sum(x[753:975]))"
  },
  {
    "example_id": 275,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "count = 0\nfor a in range(1, 17):\n    for b in range(1, 17):\n        if a / a + b / b == 2 / 17:\n            count += 1\nprint(count)"
  },
  {
    "example_id": 276,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "2.0",
      "-1.0",
      "2.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "from sympy import solve, Symbol\nx = Symbol('x')\nexpression = x**4 - 2*x**2 - 7\nroots = solve(expression, x)\nprint(roots)"
  },
  {
    "example_id": 277,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "29.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "a = 21 - 20j\nb = 29\nprint(abs(a))"
  },
  {
    "example_id": 278,
    "selected_solution_index": 10,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "327680.0"
    ],
    "annotated_answers": [
      "327680.0"
    ],
    "solution": "def get_expression(n):\n    return 4 * n**3 + 6 * n**2 + 4 * n + 1\n\nexpression = 0\nfor n in range(8, 24):\n    expression += get_expression(n)\nprint(expression)"
  },
  {
    "example_id": 279,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a = 1\nexpression = a**3 + a**2 * a + a + 1\nprint(expression)"
  },
  {
    "example_id": 280,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.400664110408158",
      "-7.0"
    ],
    "annotated_answers": [
      "363.0"
    ],
    "solution": "a = 27\nb = 99\nratio = a/b\nfor i in range(1, 15):\n    a = a * ratio\n    b = b * ratio\nprint(a)"
  },
  {
    "example_id": 281,
    "selected_solution_index": 0,
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "from sympy import mod\nx = symbols(\"x\")\nexpression = (x**100) % (x**8 - x**6 + x**4 - x**2 + 1)\nprint(expression)"
  },
  {
    "example_id": 282,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "10.0",
      "3.0",
      "10.0",
      "2.0",
      "13.0",
      "10.0",
      "2.0",
      "1.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "import sympy\nx = sympy.Symbol('x')\nexpression = 2*x**2 - 3*x / (x**2 - x) + 5*x - 11 - 3*x**2 + 5*x + 2 / (x**2 - 1)\nprint(expression.simplify())"
  },
  {
    "example_id": 283,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "import sympy\nx = sympy.Symbol('x')\nexpression = sympy.cos(x)**3 + sympy.cos(x)**2\nprint(expression)"
  },
  {
    "example_id": 284,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.716049382716049"
    ],
    "annotated_answers": [
      "270.0"
    ],
    "solution": "import math\nx = 1250\ny = 162\nz = x / y\nprint(z)"
  },
  {
    "example_id": 285,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = 0.5\ny = 0.5\nprint((x + y)**2)"
  },
  {
    "example_id": 286,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "1.0",
      "7.0",
      "2.0",
      "2.0",
      "1.0",
      "7.0",
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "from sympy import I, Symbol\nz1 = Symbol('z1')\nz2 = Symbol('z2')\nexpression = abs((2*z1 + 7*z2)/(2*z1 - 7*z2))\nprint(expression)"
  },
  {
    "example_id": 287,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "count = 0\nfor x in range(1, 101):\n    for y in range(1, 101):\n        if (x**2)**2 * y + x**2 * y**2 + y**2 * x**2 == x**2 * y**2 + y**2 * x**2 + x**2 * y**2:\n            count += 1\nprint(count)"
  },
  {
    "example_id": 288,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "80.0"
    ],
    "annotated_answers": [
      "88.0"
    ],
    "solution": "def f(x):\n    return x * (x + 2)\n\nprint(f(8))"
  },
  {
    "example_id": 289,
    "selected_solution_index": 13,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "from sympy import solve, Eq, symbols\nx = symbols('x')\nroots = solve(Eq(x**3 + 3*x + 5, 0), x)\nprint(len(roots))"
  },
  {
    "example_id": 290,
    "selected_solution_index": 10,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "28.0"
    ],
    "annotated_answers": [
      "28.0"
    ],
    "solution": "a = 7j\nb = 4j\nprint(abs(a*b))"
  },
  {
    "example_id": 291,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "min_x = 5\nprint(min_x)"
  },
  {
    "example_id": 292,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "def star(x, y):\n    a, b, c = 1, 2, 3\n    return a * x + b * y + c * x * y\n\nd = star(1, 2)\nwhile d == 1:\n    d = star(d, 2)\nprint(d)"
  },
  {
    "example_id": 293,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-9.999899998995362",
      "-6.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "sum = 0\nfor k in range(2, 100000):\n    sum += (k - 3)/(k * (k**2 - 1))\nprint(sum)"
  },
  {
    "example_id": 294,
    "selected_solution_index": 13,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "23.0",
      "23.0",
      "17.0",
      "18.0",
      "16.0",
      "24.0",
      "15.0",
      "108.0",
      "14.0",
      "4.0",
      "3.0",
      "2.0",
      "2.0",
      "9.0",
      "23.0",
      "23.0",
      "17.0",
      "18.0",
      "16.0",
      "24.0",
      "15.0",
      "108.0",
      "14.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "import sympy as sp\nx = sp.symbols('x')\nP = x**23 + 23*x**17 - 18*x**16 - 24*x**15 + 108*x**14\nQ = x**4 - 3*x**2 - 2*x + 9\nexpression = P - Q * P\nprint(expression)"
  },
  {
    "example_id": 295,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "count = 0\nfor a2 in range(-100, 101):\n    for a1 in range(-100, 101):\n        if a2 * a1 == -4:\n            count += 1\nprint(count)"
  },
  {
    "example_id": 296,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "21.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "count = 0\nfor a in range(-100, 101):\n    for b in range(-100, 101):\n        if a**2 - 4 * b == 0:\n            count += 1\nprint(count)"
  },
  {
    "example_id": 297,
    "selected_solution_index": 12,
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "from math import sqrt\nfrom math import gcd\nfrom sympy import fibonacci\n\ndef sum_fibonacci(n):\n    \"\"\"Return the sum of the reciprocals of the Fibonacci numbers.\"\"\"\n    sum = 0\n    for i in range(n):\n        sum += fibonacci(i + 1) / fibonacci(i) / fibonacci(i + 2)\n    return sum\n\ndef sum_fibonacci_infinite(n):\n    \"\"\"Return the sum of the reciprocals of the Fibonacci numbers.\"\"\"\n    sum = 0\n    for i in range(n):\n        sum += fibonacci(i + 1) / fibonacci(i) / fibonacci(i + 2)\n    return sum\n\ndef sum_fibonacci_infinite_sympy(n):\n    \"\"\"Return the sum of the reciprocals of the Fibonacci numbers.\"\"\"\n    sum = 0\n    for i in range(n):\n        sum += fibonacci(i + 1) / fibonacci(i) / fibonacci(i + 2)\n    return sum\n\nprint(sum_fibonacci(100))\nprint(sum_fibonacci_infinite(100))\nprint(sum_fibonacci_infinite_sympy(100))"
  },
  {
    "example_id": 298,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "3.0"
    ],
    "annotated_answers": [
      "440.0"
    ],
    "solution": "a = 4\nc = 1\nprint(c)\nc = 3\nprint(c)"
  },
  {
    "example_id": 299,
    "selected_solution_index": 10,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "44.0"
    ],
    "solution": "import sympy\nr, s, t = sympy.symbols('r s t')\nexpression = r**2 * s**2 + s**2 * t**2 + t**2 * r**2\nprint(expression)"
  },
  {
    "example_id": 300,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "5.0",
      "2.0"
    ],
    "annotated_answers": [
      "22.0"
    ],
    "solution": "from sympy import sqrt\nx = 5 + sqrt(3)\nprint(x * x.conjugate())"
  },
  {
    "example_id": 301,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.43999999999999995"
    ],
    "annotated_answers": [
      "0.61"
    ],
    "solution": "errors = [abs(round(a) - a) for a in [2.56, 2.61, 2.65, 2.71, 2.79, 2.82, 2.86]]\nprint(max(errors))"
  },
  {
    "example_id": 302,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "1.0",
      "0.0",
      "2.0",
      "0.0",
      "3.0",
      "0.0",
      "4.0",
      "0.0",
      "5.0",
      "0.0",
      "6.0",
      "0.0",
      "7.0",
      "0.0",
      "8.0",
      "0.0",
      "9.0",
      "0.0",
      "10.0",
      "0.0",
      "11.0",
      "0.0",
      "12.0",
      "0.0",
      "13.0",
      "0.0",
      "14.0",
      "0.0",
      "15.0",
      "0.0",
      "16.0",
      "0.0",
      "17.0",
      "0.0",
      "18.0",
      "0.0",
      "19.0",
      "0.0",
      "20.0",
      "0.0",
      "21.0",
      "0.0",
      "22.0",
      "0.0",
      "23.0",
      "0.0",
      "24.0",
      "0.0",
      "25.0",
      "0.0",
      "26.0",
      "0.0",
      "27.0",
      "0.0",
      "28.0",
      "0.0",
      "29.0",
      "0.0",
      "30.0",
      "0.0",
      "31.0",
      "0.0",
      "32.0",
      "0.0",
      "33.0",
      "0.0",
      "34.0",
      "0.0",
      "35.0",
      "0.0",
      "36.0",
      "0.0",
      "37.0",
      "0.0",
      "38.0",
      "0.0",
      "39.0",
      "0.0",
      "40.0",
      "0.0",
      "41.0",
      "0.0",
      "42.0",
      "0.0",
      "43.0",
      "0.0",
      "44.0",
      "0.0",
      "45.0",
      "0.0",
      "46.0",
      "0.0",
      "47.0",
      "0.0",
      "48.0",
      "0.0",
      "49.0",
      "0.0",
      "50.0",
      "0.0",
      "51.0",
      "0.0",
      "52.0",
      "0.0",
      "53.0",
      "0.0",
      "54.0",
      "0.0",
      "55.0",
      "0.0",
      "56.0",
      "0.0",
      "57.0",
      "0.0",
      "58.0",
      "0.0",
      "59.0",
      "0.0",
      "60.0",
      "0.0",
      "61.0",
      "0.0",
      "62.0",
      "0.0",
      "63.0",
      "0.0",
      "64.0",
      "0.0",
      "65.0",
      "0.0",
      "66.0",
      "0.0",
      "67.0",
      "0.0",
      "68.0",
      "0.0",
      "69.0",
      "0.0",
      "70.0",
      "0.0",
      "71.0",
      "0.0",
      "72.0",
      "0.0",
      "73.0",
      "0.0",
      "74.0",
      "0.0",
      "75.0",
      "0.0",
      "76.0",
      "0.0",
      "77.0",
      "0.0",
      "78.0",
      "0.0",
      "79.0",
      "0.0",
      "80.0",
      "0.0",
      "81.0",
      "0.0",
      "82.0",
      "0.0",
      "83.0",
      "0.0",
      "84.0",
      "0.0",
      "85.0",
      "0.0",
      "86.0",
      "0.0",
      "87.0",
      "0.0",
      "88.0",
      "0.0",
      "89.0",
      "0.0",
      "90.0",
      "0.0",
      "91.0",
      "0.0",
      "92.0",
      "0.0",
      "93.0",
      "0.0",
      "94.0",
      "0.0",
      "95.0",
      "0.0",
      "96.0",
      "0.0",
      "97.0",
      "0.0",
      "98.0",
      "0.0",
      "99.0",
      "0.0",
      "100.0",
      "1.0",
      "0.0",
      "1.0",
      "1.0",
      "1.0",
      "2.0",
      "1.0",
      "3.0",
      "1.0",
      "4.0",
      "1.0",
      "5.0",
      "1.0",
      "6.0",
      "1.0",
      "7.0",
      "1.0",
      "8.0",
      "1.0",
      "9.0",
      "1.0",
      "10.0",
      "1.0",
      "11.0",
      "1.0",
      "12.0",
      "1.0",
      "13.0",
      "1.0",
      "14.0",
      "1.0",
      "15.0",
      "1.0",
      "16.0",
      "1.0",
      "17.0",
      "1.0",
      "18.0",
      "1.0",
      "19.0",
      "1.0",
      "20.0",
      "1.0",
      "21.0",
      "1.0",
      "22.0",
      "1.0",
      "23.0",
      "1.0",
      "24.0",
      "1.0",
      "25.0",
      "1.0",
      "26.0",
      "1.0",
      "27.0",
      "1.0",
      "28.0",
      "1.0",
      "29.0",
      "1.0",
      "30.0",
      "1.0",
      "31.0",
      "1.0",
      "32.0",
      "1.0",
      "33.0",
      "1.0",
      "34.0",
      "1.0",
      "35.0",
      "1.0",
      "36.0",
      "1.0",
      "37.0",
      "1.0",
      "38.0",
      "1.0",
      "39.0",
      "1.0",
      "40.0",
      "1.0",
      "41.0",
      "1.0",
      "42.0",
      "1.0",
      "43.0",
      "1.0",
      "44.0",
      "1.0",
      "45.0",
      "1.0",
      "46.0",
      "1.0",
      "47.0",
      "1.0",
      "48.0",
      "1.0",
      "49.0",
      "1.0",
      "50.0",
      "1.0",
      "51.0",
      "1.0",
      "52.0",
      "1.0",
      "53.0",
      "1.0",
      "54.0",
      "1.0",
      "55.0",
      "1.0",
      "56.0",
      "1.0",
      "57.0",
      "1.0",
      "58.0",
      "1.0",
      "59.0",
      "1.0",
      "60.0",
      "1.0",
      "61.0",
      "1.0",
      "62.0",
      "1.0",
      "63.0",
      "1.0",
      "64.0",
      "1.0",
      "65.0",
      "1.0",
      "66.0",
      "1.0",
      "67.0",
      "1.0",
      "68.0",
      "1.0",
      "69.0",
      "1.0",
      "70.0",
      "1.0",
      "71.0",
      "1.0",
      "72.0",
      "1.0",
      "73.0",
      "1.0",
      "74.0",
      "1.0",
      "75.0",
      "1.0",
      "76.0",
      "1.0",
      "77.0",
      "1.0",
      "78.0",
      "1.0",
      "79.0",
      "1.0",
      "80.0",
      "1.0",
      "81.0",
      "1.0",
      "82.0",
      "1.0",
      "83.0",
      "1.0",
      "84.0",
      "1.0",
      "85.0",
      "1.0",
      "86.0",
      "1.0",
      "87.0",
      "1.0",
      "88.0",
      "1.0",
      "89.0",
      "1.0",
      "90.0",
      "1.0",
      "91.0",
      "1.0",
      "92.0",
      "1.0",
      "93.0",
      "1.0",
      "94.0",
      "1.0",
      "95.0",
      "1.0",
      "96.0",
      "1.0",
      "97.0",
      "1.0",
      "98.0",
      "1.0",
      "99.0",
      "1.0",
      "100.0",
      "2.0",
      "0.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0",
      "2.0",
      "3.0",
      "2.0",
      "4.0",
      "2.0",
      "5.0",
      "2.0",
      "6.0",
      "2.0",
      "7.0",
      "2.0",
      "8.0",
      "2.0",
      "9.0",
      "2.0",
      "10.0",
      "2.0",
      "11.0",
      "2.0",
      "12.0",
      "2.0",
      "13.0",
      "2.0",
      "14.0",
      "2.0",
      "15.0",
      "2.0",
      "16.0",
      "2.0",
      "17.0",
      "2.0",
      "18.0",
      "2.0",
      "19.0",
      "2.0",
      "20.0",
      "2.0",
      "21.0",
      "2.0",
      "22.0",
      "2.0",
      "23.0",
      "2.0",
      "24.0",
      "2.0",
      "25.0",
      "2.0",
      "26.0",
      "2.0",
      "27.0",
      "2.0",
      "28.0",
      "2.0",
      "29.0",
      "2.0",
      "30.0",
      "2.0",
      "31.0",
      "2.0",
      "32.0",
      "2.0",
      "33.0",
      "2.0",
      "34.0",
      "2.0",
      "35.0",
      "2.0",
      "36.0",
      "2.0",
      "37.0",
      "2.0",
      "38.0",
      "2.0",
      "39.0",
      "2.0",
      "40.0",
      "2.0",
      "41.0",
      "2.0",
      "42.0",
      "2.0",
      "43.0",
      "2.0",
      "44.0",
      "2.0",
      "45.0",
      "2.0",
      "46.0",
      "2.0",
      "47.0",
      "2.0",
      "48.0",
      "2.0",
      "49.0",
      "2.0",
      "50.0",
      "2.0",
      "51.0",
      "2.0",
      "52.0",
      "2.0",
      "53.0",
      "2.0",
      "54.0",
      "2.0",
      "55.0",
      "2.0",
      "56.0",
      "2.0",
      "57.0",
      "2.0",
      "58.0",
      "2.0",
      "59.0",
      "2.0",
      "60.0",
      "2.0",
      "61.0",
      "2.0",
      "62.0",
      "2.0",
      "63.0",
      "2.0",
      "64.0",
      "2.0",
      "65.0",
      "2.0",
      "66.0",
      "2.0",
      "67.0",
      "2.0",
      "68.0",
      "2.0",
      "69.0",
      "2.0",
      "70.0",
      "2.0",
      "71.0",
      "2.0",
      "72.0",
      "2.0",
      "73.0",
      "2.0",
      "74.0",
      "2.0",
      "75.0",
      "2.0",
      "76.0",
      "2.0",
      "77.0",
      "2.0",
      "78.0",
      "2.0",
      "79.0",
      "2.0",
      "80.0",
      "2.0",
      "81.0",
      "2.0",
      "82.0",
      "2.0",
      "83.0",
      "2.0",
      "84.0",
      "2.0",
      "85.0",
      "2.0",
      "86.0",
      "2.0",
      "87.0",
      "2.0",
      "88.0",
      "2.0",
      "89.0",
      "2.0",
      "90.0",
      "2.0",
      "91.0",
      "2.0",
      "92.0",
      "2.0",
      "93.0",
      "2.0",
      "94.0",
      "2.0",
      "95.0",
      "2.0",
      "96.0",
      "2.0",
      "97.0",
      "2.0",
      "98.0",
      "2.0",
      "99.0",
      "2.0",
      "100.0",
      "3.0",
      "0.0",
      "3.0",
      "1.0",
      "3.0",
      "2.0",
      "3.0",
      "3.0",
      "3.0",
      "4.0",
      "3.0",
      "5.0",
      "3.0",
      "6.0",
      "3.0",
      "7.0",
      "3.0",
      "8.0",
      "3.0",
      "9.0",
      "3.0",
      "10.0",
      "3.0",
      "11.0",
      "3.0",
      "12.0",
      "3.0",
      "13.0",
      "3.0",
      "14.0",
      "3.0",
      "15.0",
      "3.0",
      "16.0",
      "3.0",
      "17.0",
      "3.0",
      "18.0",
      "3.0",
      "19.0",
      "3.0",
      "20.0",
      "3.0",
      "21.0",
      "3.0",
      "22.0",
      "3.0",
      "23.0",
      "3.0",
      "24.0",
      "3.0",
      "25.0",
      "3.0",
      "26.0",
      "3.0",
      "27.0",
      "3.0",
      "28.0",
      "3.0",
      "29.0",
      "3.0",
      "30.0",
      "3.0",
      "31.0",
      "3.0",
      "32.0",
      "3.0",
      "33.0",
      "3.0",
      "34.0",
      "3.0",
      "35.0",
      "3.0",
      "36.0",
      "3.0",
      "37.0",
      "3.0",
      "38.0",
      "3.0",
      "39.0",
      "3.0",
      "40.0",
      "3.0",
      "41.0",
      "3.0",
      "42.0",
      "3.0",
      "43.0",
      "3.0",
      "44.0",
      "3.0",
      "45.0",
      "3.0",
      "46.0",
      "3.0",
      "47.0",
      "3.0",
      "48.0",
      "3.0",
      "49.0",
      "3.0",
      "50.0",
      "3.0",
      "51.0",
      "3.0",
      "52.0",
      "3.0",
      "53.0",
      "3.0",
      "54.0",
      "3.0",
      "55.0",
      "3.0",
      "56.0",
      "3.0",
      "57.0",
      "3.0",
      "58.0",
      "3.0",
      "59.0",
      "3.0",
      "60.0",
      "3.0",
      "61.0",
      "3.0",
      "62.0",
      "3.0",
      "63.0",
      "3.0",
      "64.0",
      "3.0",
      "65.0",
      "3.0",
      "66.0",
      "3.0",
      "67.0",
      "3.0",
      "68.0",
      "3.0",
      "69.0",
      "3.0",
      "70.0",
      "3.0",
      "71.0",
      "3.0",
      "72.0",
      "3.0",
      "73.0",
      "3.0",
      "74.0",
      "3.0",
      "75.0",
      "3.0",
      "76.0",
      "3.0",
      "77.0",
      "3.0",
      "78.0",
      "3.0",
      "79.0",
      "3.0",
      "80.0",
      "3.0",
      "81.0",
      "3.0",
      "82.0",
      "3.0",
      "83.0",
      "3.0",
      "84.0",
      "3.0",
      "85.0",
      "3.0",
      "86.0",
      "3.0",
      "87.0",
      "3.0",
      "88.0",
      "3.0",
      "89.0",
      "3.0",
      "90.0",
      "3.0",
      "91.0",
      "3.0",
      "92.0",
      "3.0",
      "93.0",
      "3.0",
      "94.0",
      "3.0",
      "95.0",
      "3.0",
      "96.0",
      "3.0",
      "97.0",
      "3.0",
      "98.0",
      "3.0",
      "99.0",
      "3.0",
      "100.0",
      "4.0",
      "0.0",
      "4.0",
      "1.0",
      "4.0",
      "2.0",
      "4.0",
      "3.0",
      "4.0",
      "4.0",
      "4.0",
      "5.0",
      "4.0",
      "6.0",
      "4.0",
      "7.0",
      "4.0",
      "8.0",
      "4.0",
      "9.0",
      "4.0",
      "10.0",
      "4.0",
      "11.0",
      "4.0",
      "12.0",
      "4.0",
      "13.0",
      "4.0",
      "14.0",
      "4.0",
      "15.0",
      "4.0",
      "16.0",
      "4.0",
      "17.0",
      "4.0",
      "18.0",
      "4.0",
      "19.0",
      "4.0",
      "20.0",
      "4.0",
      "21.0",
      "4.0",
      "22.0",
      "4.0",
      "23.0",
      "4.0",
      "24.0",
      "4.0",
      "25.0",
      "4.0",
      "26.0",
      "4.0",
      "27.0",
      "4.0",
      "28.0",
      "4.0",
      "29.0",
      "4.0",
      "30.0",
      "4.0",
      "31.0",
      "4.0",
      "32.0",
      "4.0",
      "33.0",
      "4.0",
      "34.0",
      "4.0",
      "35.0",
      "4.0",
      "36.0",
      "4.0",
      "37.0",
      "4.0",
      "38.0",
      "4.0",
      "39.0",
      "4.0",
      "40.0",
      "4.0",
      "41.0",
      "4.0",
      "42.0",
      "4.0",
      "43.0",
      "4.0",
      "44.0",
      "4.0",
      "45.0",
      "4.0",
      "46.0",
      "4.0",
      "47.0",
      "4.0",
      "48.0",
      "4.0",
      "49.0",
      "4.0",
      "50.0",
      "4.0",
      "51.0",
      "4.0",
      "52.0",
      "4.0",
      "53.0",
      "4.0",
      "54.0",
      "4.0",
      "55.0",
      "4.0",
      "56.0",
      "4.0",
      "57.0",
      "4.0",
      "58.0",
      "4.0",
      "59.0",
      "4.0",
      "60.0",
      "4.0",
      "61.0",
      "4.0",
      "62.0",
      "4.0",
      "63.0",
      "4.0",
      "64.0",
      "4.0",
      "65.0",
      "4.0",
      "66.0",
      "4.0",
      "67.0",
      "4.0",
      "68.0",
      "4.0",
      "69.0",
      "4.0",
      "70.0",
      "4.0",
      "71.0",
      "4.0",
      "72.0",
      "4.0",
      "73.0",
      "4.0",
      "74.0",
      "4.0",
      "75.0",
      "4.0",
      "76.0",
      "4.0",
      "77.0",
      "4.0",
      "78.0",
      "4.0",
      "79.0",
      "4.0",
      "80.0",
      "4.0",
      "81.0",
      "4.0",
      "82.0",
      "4.0",
      "83.0",
      "4.0",
      "84.0",
      "4.0",
      "85.0",
      "4.0",
      "86.0",
      "4.0",
      "87.0",
      "4.0",
      "88.0",
      "4.0",
      "89.0",
      "4.0",
      "90.0",
      "4.0",
      "91.0",
      "4.0",
      "92.0",
      "4.0",
      "93.0",
      "4.0",
      "94.0",
      "4.0",
      "95.0",
      "4.0",
      "96.0",
      "4.0",
      "97.0",
      "4.0",
      "98.0",
      "4.0",
      "99.0",
      "4.0",
      "100.0",
      "5.0",
      "0.0",
      "5.0",
      "1.0",
      "5.0",
      "2.0",
      "5.0",
      "3.0",
      "5.0",
      "4.0",
      "5.0",
      "5.0",
      "5.0",
      "6.0",
      "5.0",
      "7.0",
      "5.0",
      "8.0",
      "5.0",
      "9.0",
      "5.0",
      "10.0",
      "5.0",
      "11.0",
      "5.0",
      "12.0",
      "5.0",
      "13.0",
      "5.0",
      "14.0",
      "5.0",
      "15.0",
      "5.0",
      "16.0",
      "5.0",
      "17.0",
      "5.0",
      "18.0",
      "5.0",
      "19.0",
      "5.0",
      "20.0",
      "5.0",
      "21.0",
      "5.0",
      "22.0",
      "5.0",
      "23.0",
      "5.0",
      "24.0",
      "5.0",
      "25.0",
      "5.0",
      "26.0",
      "5.0",
      "27.0",
      "5.0",
      "28.0",
      "5.0",
      "29.0",
      "5.0",
      "30.0",
      "5.0",
      "31.0",
      "5.0",
      "32.0",
      "5.0",
      "33.0",
      "5.0",
      "34.0",
      "5.0",
      "35.0",
      "5.0",
      "36.0",
      "5.0",
      "37.0",
      "5.0",
      "38.0",
      "5.0",
      "39.0",
      "5.0",
      "40.0",
      "5.0",
      "41.0",
      "5.0",
      "42.0",
      "5.0",
      "43.0",
      "5.0",
      "44.0",
      "5.0",
      "45.0",
      "5.0",
      "46.0",
      "5.0",
      "47.0",
      "5.0",
      "48.0",
      "5.0",
      "49.0",
      "5.0",
      "50.0",
      "5.0",
      "51.0",
      "5.0",
      "52.0",
      "5.0",
      "53.0",
      "5.0",
      "54.0",
      "5.0",
      "55.0",
      "5.0",
      "56.0",
      "5.0",
      "57.0",
      "5.0",
      "58.0",
      "5.0",
      "59.0",
      "5.0",
      "60.0",
      "5.0",
      "61.0",
      "5.0",
      "62.0",
      "5.0",
      "63.0",
      "5.0",
      "64.0",
      "5.0",
      "65.0",
      "5.0",
      "66.0",
      "5.0",
      "67.0",
      "5.0",
      "68.0",
      "5.0",
      "69.0",
      "5.0",
      "70.0",
      "5.0",
      "71.0",
      "5.0",
      "72.0",
      "5.0",
      "73.0",
      "5.0",
      "74.0",
      "5.0",
      "75.0",
      "5.0",
      "76.0",
      "5.0",
      "77.0",
      "5.0",
      "78.0",
      "5.0",
      "79.0",
      "5.0",
      "80.0",
      "5.0",
      "81.0",
      "5.0",
      "82.0",
      "5.0",
      "83.0",
      "5.0",
      "84.0",
      "5.0",
      "85.0",
      "5.0",
      "86.0",
      "5.0",
      "87.0",
      "5.0",
      "88.0",
      "5.0",
      "89.0",
      "5.0",
      "90.0",
      "5.0",
      "91.0",
      "5.0",
      "92.0",
      "5.0",
      "93.0",
      "5.0",
      "94.0",
      "5.0",
      "95.0",
      "5.0",
      "96.0",
      "5.0",
      "97.0",
      "5.0",
      "98.0",
      "5.0",
      "99.0",
      "5.0",
      "100.0",
      "6.0",
      "0.0",
      "6.0",
      "1.0",
      "6.0",
      "2.0",
      "6.0",
      "3.0",
      "6.0",
      "4.0",
      "6.0",
      "5.0",
      "6.0",
      "6.0",
      "6.0",
      "7.0",
      "6.0",
      "8.0",
      "6.0",
      "9.0",
      "6.0",
      "10.0",
      "6.0",
      "11.0",
      "6.0",
      "12.0",
      "6.0",
      "13.0",
      "6.0",
      "14.0",
      "6.0",
      "15.0",
      "6.0",
      "16.0",
      "6.0",
      "17.0",
      "6.0",
      "18.0",
      "6.0",
      "19.0",
      "6.0",
      "20.0",
      "6.0",
      "21.0",
      "6.0",
      "22.0",
      "6.0",
      "23.0",
      "6.0",
      "24.0",
      "6.0",
      "25.0",
      "6.0",
      "26.0",
      "6.0",
      "27.0",
      "6.0",
      "28.0",
      "6.0",
      "29.0",
      "6.0",
      "30.0",
      "6.0",
      "31.0",
      "6.0",
      "32.0",
      "6.0",
      "33.0",
      "6.0",
      "34.0",
      "6.0",
      "35.0",
      "6.0",
      "36.0",
      "6.0",
      "37.0",
      "6.0",
      "38.0",
      "6.0",
      "39.0",
      "6.0",
      "40.0",
      "6.0",
      "41.0",
      "6.0",
      "42.0",
      "6.0",
      "43.0",
      "6.0",
      "44.0",
      "6.0",
      "45.0",
      "6.0",
      "46.0",
      "6.0",
      "47.0",
      "6.0",
      "48.0",
      "6.0",
      "49.0",
      "6.0",
      "50.0",
      "6.0",
      "51.0",
      "6.0",
      "52.0",
      "6.0",
      "53.0",
      "6.0",
      "54.0",
      "6.0",
      "55.0",
      "6.0",
      "56.0",
      "6.0",
      "57.0",
      "6.0",
      "58.0",
      "6.0",
      "59.0",
      "6.0",
      "60.0",
      "6.0",
      "61.0",
      "6.0",
      "62.0",
      "6.0",
      "63.0",
      "6.0",
      "64.0",
      "6.0",
      "65.0",
      "6.0",
      "66.0",
      "6.0",
      "67.0",
      "6.0",
      "68.0",
      "6.0",
      "69.0",
      "6.0",
      "70.0",
      "6.0",
      "71.0",
      "6.0",
      "72.0",
      "6.0",
      "73.0",
      "6.0",
      "74.0",
      "6.0",
      "75.0",
      "6.0",
      "76.0",
      "6.0",
      "77.0",
      "6.0",
      "78.0",
      "6.0",
      "79.0",
      "6.0",
      "80.0",
      "6.0",
      "81.0",
      "6.0",
      "82.0",
      "6.0",
      "83.0",
      "6.0",
      "84.0",
      "6.0",
      "85.0",
      "6.0",
      "86.0",
      "6.0",
      "87.0",
      "6.0",
      "88.0",
      "6.0",
      "89.0",
      "6.0",
      "90.0",
      "6.0",
      "91.0",
      "6.0",
      "92.0",
      "6.0",
      "93.0",
      "6.0",
      "94.0",
      "6.0",
      "95.0",
      "6.0",
      "96.0",
      "6.0",
      "97.0",
      "6.0",
      "98.0",
      "6.0",
      "99.0",
      "6.0",
      "100.0",
      "7.0",
      "0.0",
      "7.0",
      "1.0",
      "7.0",
      "2.0",
      "7.0",
      "3.0",
      "7.0",
      "4.0",
      "7.0",
      "5.0",
      "7.0",
      "6.0",
      "7.0",
      "7.0",
      "7.0",
      "8.0",
      "7.0",
      "9.0",
      "7.0",
      "10.0",
      "7.0",
      "11.0",
      "7.0",
      "12.0",
      "7.0",
      "13.0",
      "7.0",
      "14.0",
      "7.0",
      "15.0",
      "7.0",
      "16.0",
      "7.0",
      "17.0",
      "7.0",
      "18.0",
      "7.0",
      "19.0",
      "7.0",
      "20.0",
      "7.0",
      "21.0",
      "7.0",
      "22.0",
      "7.0",
      "23.0",
      "7.0",
      "24.0",
      "7.0",
      "25.0",
      "7.0",
      "26.0",
      "7.0",
      "27.0",
      "7.0",
      "28.0",
      "7.0",
      "29.0",
      "7.0",
      "30.0",
      "7.0",
      "31.0",
      "7.0",
      "32.0",
      "7.0",
      "33.0",
      "7.0",
      "34.0",
      "7.0",
      "35.0",
      "7.0",
      "36.0",
      "7.0",
      "37.0",
      "7.0",
      "38.0",
      "7.0",
      "39.0",
      "7.0",
      "40.0",
      "7.0",
      "41.0",
      "7.0",
      "42.0",
      "7.0",
      "43.0",
      "7.0",
      "44.0",
      "7.0",
      "45.0",
      "7.0",
      "46.0",
      "7.0",
      "47.0",
      "7.0",
      "48.0",
      "7.0",
      "49.0",
      "7.0",
      "50.0",
      "7.0",
      "51.0",
      "7.0",
      "52.0",
      "7.0",
      "53.0",
      "7.0",
      "54.0",
      "7.0",
      "55.0",
      "7.0",
      "56.0",
      "7.0",
      "57.0",
      "7.0",
      "58.0",
      "7.0",
      "59.0",
      "7.0",
      "60.0",
      "7.0",
      "61.0",
      "7.0",
      "62.0",
      "7.0",
      "63.0",
      "7.0",
      "64.0",
      "7.0",
      "65.0",
      "7.0",
      "66.0",
      "7.0",
      "67.0",
      "7.0",
      "68.0",
      "7.0",
      "69.0",
      "7.0",
      "70.0",
      "7.0",
      "71.0",
      "7.0",
      "72.0",
      "7.0",
      "73.0",
      "7.0",
      "74.0",
      "7.0",
      "75.0",
      "7.0",
      "76.0",
      "7.0",
      "77.0",
      "7.0",
      "78.0",
      "7.0",
      "79.0",
      "7.0",
      "80.0",
      "7.0",
      "81.0",
      "7.0",
      "82.0",
      "7.0",
      "83.0",
      "7.0",
      "84.0",
      "7.0",
      "85.0",
      "7.0",
      "86.0",
      "7.0",
      "87.0",
      "7.0",
      "88.0",
      "7.0",
      "89.0",
      "7.0",
      "90.0",
      "7.0",
      "91.0",
      "7.0",
      "92.0",
      "7.0",
      "93.0",
      "7.0",
      "94.0",
      "7.0",
      "95.0",
      "7.0",
      "96.0",
      "7.0",
      "97.0",
      "7.0",
      "98.0",
      "7.0",
      "99.0",
      "7.0",
      "100.0",
      "8.0",
      "0.0",
      "8.0",
      "1.0",
      "8.0",
      "2.0",
      "8.0",
      "3.0",
      "8.0",
      "4.0",
      "8.0",
      "5.0",
      "8.0",
      "6.0",
      "8.0",
      "7.0",
      "8.0",
      "8.0",
      "8.0",
      "9.0",
      "8.0",
      "10.0",
      "8.0",
      "11.0",
      "8.0",
      "12.0",
      "8.0",
      "13.0",
      "8.0",
      "14.0",
      "8.0",
      "15.0",
      "8.0",
      "16.0",
      "8.0",
      "17.0",
      "8.0",
      "18.0",
      "8.0",
      "19.0",
      "8.0",
      "20.0",
      "8.0",
      "21.0",
      "8.0",
      "22.0",
      "8.0",
      "23.0",
      "8.0",
      "24.0",
      "8.0",
      "25.0",
      "8.0",
      "26.0",
      "8.0",
      "27.0",
      "8.0",
      "28.0",
      "8.0",
      "29.0",
      "8.0",
      "30.0",
      "8.0",
      "31.0",
      "8.0",
      "32.0",
      "8.0",
      "33.0",
      "8.0",
      "34.0",
      "8.0",
      "35.0",
      "8.0",
      "36.0",
      "8.0",
      "37.0",
      "8.0",
      "38.0",
      "8.0",
      "39.0",
      "8.0",
      "40.0",
      "8.0",
      "41.0",
      "8.0",
      "42.0",
      "8.0",
      "43.0",
      "8.0",
      "44.0",
      "8.0",
      "45.0",
      "8.0",
      "46.0",
      "8.0",
      "47.0",
      "8.0",
      "48.0",
      "8.0",
      "49.0",
      "8.0",
      "50.0",
      "8.0",
      "51.0",
      "8.0",
      "52.0",
      "8.0",
      "53.0",
      "8.0",
      "54.0",
      "8.0",
      "55.0",
      "8.0",
      "56.0",
      "8.0",
      "57.0",
      "8.0",
      "58.0",
      "8.0",
      "59.0",
      "8.0",
      "60.0",
      "8.0",
      "61.0",
      "8.0",
      "62.0",
      "8.0",
      "63.0",
      "8.0",
      "64.0",
      "8.0",
      "65.0",
      "8.0",
      "66.0",
      "8.0",
      "67.0",
      "8.0",
      "68.0",
      "8.0",
      "69.0",
      "8.0",
      "70.0",
      "8.0",
      "71.0",
      "8.0",
      "72.0",
      "8.0",
      "73.0",
      "8.0",
      "74.0",
      "8.0",
      "75.0",
      "8.0",
      "76.0",
      "8.0",
      "77.0",
      "8.0",
      "78.0",
      "8.0",
      "79.0",
      "8.0",
      "80.0",
      "8.0",
      "81.0",
      "8.0",
      "82.0",
      "8.0",
      "83.0",
      "8.0",
      "84.0",
      "8.0",
      "85.0",
      "8.0",
      "86.0",
      "8.0",
      "87.0",
      "8.0",
      "88.0",
      "8.0",
      "89.0",
      "8.0",
      "90.0",
      "8.0",
      "91.0",
      "8.0",
      "92.0",
      "8.0",
      "93.0",
      "8.0",
      "94.0",
      "8.0",
      "95.0",
      "8.0",
      "96.0",
      "8.0",
      "97.0",
      "8.0",
      "98.0",
      "8.0",
      "99.0",
      "8.0",
      "100.0",
      "9.0",
      "0.0",
      "9.0",
      "1.0",
      "9.0",
      "2.0",
      "9.0",
      "3.0",
      "9.0",
      "4.0",
      "9.0",
      "5.0",
      "9.0",
      "6.0",
      "9.0",
      "7.0",
      "9.0",
      "8.0",
      "9.0",
      "9.0",
      "9.0",
      "10.0",
      "9.0",
      "11.0",
      "9.0",
      "12.0",
      "9.0",
      "13.0",
      "9.0",
      "14.0",
      "9.0",
      "15.0",
      "9.0",
      "16.0",
      "9.0",
      "17.0",
      "9.0",
      "18.0",
      "9.0",
      "19.0",
      "9.0",
      "20.0",
      "9.0",
      "21.0",
      "9.0",
      "22.0",
      "9.0",
      "23.0",
      "9.0",
      "24.0",
      "9.0",
      "25.0",
      "9.0",
      "26.0",
      "9.0",
      "27.0",
      "9.0",
      "28.0",
      "9.0",
      "29.0",
      "9.0",
      "30.0",
      "9.0",
      "31.0",
      "9.0",
      "32.0",
      "9.0",
      "33.0",
      "9.0",
      "34.0",
      "9.0",
      "35.0",
      "9.0",
      "36.0",
      "9.0",
      "37.0",
      "9.0",
      "38.0",
      "9.0",
      "39.0",
      "9.0",
      "40.0",
      "9.0",
      "41.0",
      "9.0",
      "42.0",
      "9.0",
      "43.0",
      "9.0",
      "44.0",
      "9.0",
      "45.0",
      "9.0",
      "46.0",
      "9.0",
      "47.0",
      "9.0",
      "48.0",
      "9.0",
      "49.0",
      "9.0",
      "50.0",
      "9.0",
      "51.0",
      "9.0",
      "52.0",
      "9.0",
      "53.0",
      "9.0",
      "54.0",
      "9.0",
      "55.0",
      "9.0",
      "56.0",
      "9.0",
      "57.0",
      "9.0",
      "58.0",
      "9.0",
      "59.0",
      "9.0",
      "60.0",
      "9.0",
      "61.0",
      "9.0",
      "62.0",
      "9.0",
      "63.0",
      "9.0",
      "64.0",
      "9.0",
      "65.0",
      "9.0",
      "66.0",
      "9.0",
      "67.0",
      "9.0",
      "68.0",
      "9.0",
      "69.0",
      "9.0",
      "70.0",
      "9.0",
      "71.0",
      "9.0",
      "72.0",
      "9.0",
      "73.0",
      "9.0",
      "74.0",
      "9.0",
      "75.0",
      "9.0",
      "76.0",
      "9.0",
      "77.0",
      "9.0",
      "78.0",
      "9.0",
      "79.0",
      "9.0",
      "80.0",
      "9.0",
      "81.0",
      "9.0",
      "82.0",
      "9.0",
      "83.0",
      "9.0",
      "84.0",
      "9.0",
      "85.0",
      "9.0",
      "86.0",
      "9.0",
      "87.0",
      "9.0",
      "88.0",
      "9.0",
      "89.0",
      "9.0",
      "90.0",
      "9.0",
      "91.0",
      "9.0",
      "92.0",
      "9.0",
      "93.0",
      "9.0",
      "94.0",
      "9.0",
      "95.0",
      "9.0",
      "96.0",
      "9.0",
      "97.0",
      "9.0",
      "98.0",
      "9.0",
      "99.0",
      "9.0",
      "100.0",
      "10.0",
      "0.0",
      "10.0",
      "1.0",
      "10.0",
      "2.0",
      "10.0",
      "3.0",
      "10.0",
      "4.0",
      "10.0",
      "5.0",
      "10.0",
      "6.0",
      "10.0",
      "7.0",
      "10.0",
      "8.0",
      "10.0",
      "9.0",
      "10.0",
      "10.0",
      "10.0",
      "11.0",
      "10.0",
      "12.0",
      "10.0",
      "13.0",
      "10.0",
      "14.0",
      "10.0",
      "15.0",
      "10.0",
      "16.0",
      "10.0",
      "17.0",
      "10.0",
      "18.0",
      "10.0",
      "19.0",
      "10.0",
      "20.0",
      "10.0",
      "21.0",
      "10.0",
      "22.0",
      "10.0",
      "23.0",
      "10.0",
      "24.0",
      "10.0",
      "25.0",
      "10.0",
      "26.0",
      "10.0",
      "27.0",
      "10.0",
      "28.0",
      "10.0",
      "29.0",
      "10.0",
      "30.0",
      "10.0",
      "31.0",
      "10.0",
      "32.0",
      "10.0",
      "33.0",
      "10.0",
      "34.0",
      "10.0",
      "35.0",
      "10.0",
      "36.0",
      "10.0",
      "37.0",
      "10.0",
      "38.0",
      "10.0",
      "39.0",
      "10.0",
      "40.0",
      "10.0",
      "41.0",
      "10.0",
      "42.0",
      "10.0",
      "43.0",
      "10.0",
      "44.0",
      "10.0",
      "45.0",
      "10.0",
      "46.0",
      "10.0",
      "47.0",
      "10.0",
      "48.0",
      "10.0",
      "49.0",
      "10.0",
      "50.0",
      "10.0",
      "51.0",
      "10.0",
      "52.0",
      "10.0",
      "53.0",
      "10.0",
      "54.0",
      "10.0",
      "55.0",
      "10.0",
      "56.0",
      "10.0",
      "57.0",
      "10.0",
      "58.0",
      "10.0",
      "59.0",
      "10.0",
      "60.0",
      "10.0",
      "61.0",
      "10.0",
      "62.0",
      "10.0",
      "63.0",
      "10.0",
      "64.0",
      "10.0",
      "65.0",
      "10.0",
      "66.0",
      "10.0",
      "67.0",
      "10.0",
      "68.0",
      "10.0",
      "69.0",
      "10.0",
      "70.0",
      "10.0",
      "71.0",
      "10.0",
      "72.0",
      "10.0",
      "73.0",
      "10.0",
      "74.0",
      "10.0",
      "75.0",
      "10.0",
      "76.0",
      "10.0",
      "77.0",
      "10.0",
      "78.0",
      "10.0",
      "79.0",
      "10.0",
      "80.0",
      "10.0",
      "81.0",
      "10.0",
      "82.0",
      "10.0",
      "83.0",
      "10.0",
      "84.0",
      "10.0",
      "85.0",
      "10.0",
      "86.0",
      "10.0",
      "87.0",
      "10.0",
      "88.0",
      "10.0",
      "89.0",
      "10.0",
      "90.0",
      "10.0",
      "91.0",
      "10.0",
      "92.0",
      "10.0",
      "93.0",
      "10.0",
      "94.0",
      "10.0",
      "95.0",
      "10.0",
      "96.0",
      "10.0",
      "97.0",
      "10.0",
      "98.0",
      "10.0",
      "99.0",
      "10.0",
      "100.0",
      "11.0",
      "0.0",
      "11.0",
      "1.0",
      "11.0",
      "2.0",
      "11.0",
      "3.0",
      "11.0",
      "4.0",
      "11.0",
      "5.0",
      "11.0",
      "6.0",
      "11.0",
      "7.0",
      "11.0",
      "8.0",
      "11.0",
      "9.0",
      "11.0",
      "10.0",
      "11.0",
      "11.0",
      "11.0",
      "12.0",
      "11.0",
      "13.0",
      "11.0",
      "14.0",
      "11.0",
      "15.0",
      "11.0",
      "16.0",
      "11.0",
      "17.0",
      "11.0",
      "18.0",
      "11.0",
      "19.0",
      "11.0",
      "20.0",
      "11.0",
      "21.0",
      "11.0",
      "22.0",
      "11.0",
      "23.0",
      "11.0",
      "24.0",
      "11.0",
      "25.0",
      "11.0",
      "26.0",
      "11.0",
      "27.0",
      "11.0",
      "28.0",
      "11.0",
      "29.0",
      "11.0",
      "30.0",
      "11.0",
      "31.0",
      "11.0",
      "32.0",
      "11.0",
      "33.0",
      "11.0",
      "34.0",
      "11.0",
      "35.0",
      "11.0",
      "36.0",
      "11.0",
      "37.0",
      "11.0",
      "38.0",
      "11.0",
      "39.0",
      "11.0",
      "40.0",
      "11.0",
      "41.0",
      "11.0",
      "42.0",
      "11.0",
      "43.0",
      "11.0",
      "44.0",
      "11.0",
      "45.0",
      "11.0",
      "46.0",
      "11.0",
      "47.0",
      "11.0",
      "48.0",
      "11.0",
      "49.0",
      "11.0",
      "50.0",
      "11.0",
      "51.0",
      "11.0",
      "52.0",
      "11.0",
      "53.0",
      "11.0",
      "54.0",
      "11.0",
      "55.0",
      "11.0",
      "56.0",
      "11.0",
      "57.0",
      "11.0",
      "58.0",
      "11.0",
      "59.0",
      "11.0",
      "60.0",
      "11.0",
      "61.0",
      "11.0",
      "62.0",
      "11.0",
      "63.0",
      "11.0",
      "64.0",
      "11.0",
      "65.0",
      "11.0",
      "66.0",
      "11.0",
      "67.0",
      "11.0",
      "68.0",
      "11.0",
      "69.0",
      "11.0",
      "70.0",
      "11.0",
      "71.0",
      "11.0",
      "72.0",
      "11.0",
      "73.0",
      "11.0",
      "74.0",
      "11.0",
      "75.0",
      "11.0",
      "76.0",
      "11.0",
      "77.0",
      "11.0",
      "78.0",
      "11.0",
      "79.0",
      "11.0",
      "80.0",
      "11.0",
      "81.0",
      "11.0",
      "82.0",
      "11.0",
      "83.0",
      "11.0",
      "84.0",
      "11.0",
      "85.0",
      "11.0",
      "86.0",
      "11.0",
      "87.0",
      "11.0",
      "88.0",
      "11.0",
      "89.0",
      "11.0",
      "90.0",
      "11.0",
      "91.0",
      "11.0",
      "92.0",
      "11.0",
      "93.0",
      "11.0",
      "94.0",
      "11.0",
      "95.0",
      "11.0",
      "96.0",
      "11.0",
      "97.0",
      "11.0",
      "98.0",
      "11.0",
      "99.0",
      "11.0",
      "100.0",
      "12.0",
      "0.0",
      "12.0",
      "1.0",
      "12.0",
      "2.0",
      "12.0",
      "3.0",
      "12.0",
      "4.0",
      "12.0",
      "5.0",
      "12.0",
      "6.0",
      "12.0",
      "7.0",
      "12.0",
      "8.0",
      "12.0",
      "9.0",
      "12.0",
      "10.0",
      "12.0",
      "11.0",
      "12.0",
      "12.0",
      "12.0",
      "13.0",
      "12.0",
      "14.0",
      "12.0",
      "15.0",
      "12.0",
      "16.0",
      "12.0",
      "17.0",
      "12.0",
      "18.0",
      "12.0",
      "19.0",
      "12.0",
      "20.0",
      "12.0",
      "21.0",
      "12.0",
      "22.0",
      "12.0",
      "23.0",
      "12.0",
      "24.0",
      "12.0",
      "25.0",
      "12.0",
      "26.0",
      "12.0",
      "27.0",
      "12.0",
      "28.0",
      "12.0",
      "29.0",
      "12.0",
      "30.0",
      "12.0",
      "31.0",
      "12.0",
      "32.0",
      "12.0",
      "33.0",
      "12.0",
      "34.0",
      "12.0",
      "35.0",
      "12.0",
      "36.0",
      "12.0",
      "37.0",
      "12.0",
      "38.0",
      "12.0",
      "39.0",
      "12.0",
      "40.0",
      "12.0",
      "41.0",
      "12.0",
      "42.0",
      "12.0",
      "43.0",
      "12.0",
      "44.0",
      "12.0",
      "45.0",
      "12.0",
      "46.0",
      "12.0",
      "47.0",
      "12.0",
      "48.0",
      "12.0",
      "49.0",
      "12.0",
      "50.0",
      "12.0",
      "51.0",
      "12.0",
      "52.0",
      "12.0",
      "53.0",
      "12.0",
      "54.0",
      "12.0",
      "55.0",
      "12.0",
      "56.0",
      "12.0",
      "57.0",
      "12.0",
      "58.0",
      "12.0",
      "59.0",
      "12.0",
      "60.0",
      "12.0",
      "61.0",
      "12.0",
      "62.0",
      "12.0",
      "63.0",
      "12.0",
      "64.0",
      "12.0",
      "65.0",
      "12.0",
      "66.0",
      "12.0",
      "67.0",
      "12.0",
      "68.0",
      "12.0",
      "69.0",
      "12.0",
      "70.0",
      "12.0",
      "71.0",
      "12.0",
      "72.0",
      "12.0",
      "73.0",
      "12.0",
      "74.0",
      "12.0",
      "75.0",
      "12.0",
      "76.0",
      "12.0",
      "77.0",
      "12.0",
      "78.0",
      "12.0",
      "79.0",
      "12.0",
      "80.0",
      "12.0",
      "81.0",
      "12.0",
      "82.0",
      "12.0",
      "83.0",
      "12.0",
      "84.0",
      "12.0",
      "85.0",
      "12.0",
      "86.0",
      "12.0",
      "87.0",
      "12.0",
      "88.0",
      "12.0",
      "89.0",
      "12.0",
      "90.0",
      "12.0",
      "91.0",
      "12.0",
      "92.0",
      "12.0",
      "93.0",
      "12.0",
      "94.0",
      "12.0",
      "95.0",
      "12.0",
      "96.0",
      "12.0",
      "97.0",
      "12.0",
      "98.0",
      "12.0",
      "99.0",
      "12.0",
      "100.0",
      "13.0",
      "0.0",
      "13.0",
      "1.0",
      "13.0",
      "2.0",
      "13.0",
      "3.0",
      "13.0",
      "4.0",
      "13.0",
      "5.0",
      "13.0",
      "6.0",
      "13.0",
      "7.0",
      "13.0",
      "8.0",
      "13.0",
      "9.0",
      "13.0",
      "10.0",
      "13.0",
      "11.0",
      "13.0",
      "12.0",
      "13.0",
      "13.0",
      "13.0",
      "14.0",
      "13.0",
      "15.0",
      "13.0",
      "16.0",
      "13.0",
      "17.0",
      "13.0",
      "18.0",
      "13.0",
      "19.0",
      "13.0",
      "20.0",
      "13.0",
      "21.0",
      "13.0",
      "22.0",
      "13.0",
      "23.0",
      "13.0",
      "24.0",
      "13.0",
      "25.0",
      "13.0",
      "26.0",
      "13.0",
      "27.0",
      "13.0",
      "28.0",
      "13.0",
      "29.0",
      "13.0",
      "30.0",
      "13.0",
      "31.0",
      "13.0",
      "32.0",
      "13.0",
      "33.0",
      "13.0",
      "34.0",
      "13.0",
      "35.0",
      "13.0",
      "36.0",
      "13.0",
      "37.0",
      "13.0",
      "38.0",
      "13.0",
      "39.0",
      "13.0",
      "40.0",
      "13.0",
      "41.0",
      "13.0",
      "42.0",
      "13.0",
      "43.0",
      "13.0",
      "44.0",
      "13.0",
      "45.0",
      "13.0",
      "46.0",
      "13.0",
      "47.0",
      "13.0",
      "48.0",
      "13.0",
      "49.0",
      "13.0",
      "50.0",
      "13.0",
      "51.0",
      "13.0",
      "52.0",
      "13.0",
      "53.0",
      "13.0",
      "54.0",
      "13.0",
      "55.0",
      "13.0",
      "56.0",
      "13.0",
      "57.0",
      "13.0",
      "58.0",
      "13.0",
      "59.0",
      "13.0",
      "60.0",
      "13.0",
      "61.0",
      "13.0",
      "62.0",
      "13.0",
      "63.0",
      "13.0",
      "64.0",
      "13.0",
      "65.0",
      "13.0",
      "66.0",
      "13.0",
      "67.0",
      "13.0",
      "68.0",
      "13.0",
      "69.0",
      "13.0",
      "70.0",
      "13.0",
      "71.0",
      "13.0",
      "72.0",
      "13.0",
      "73.0",
      "13.0",
      "74.0",
      "13.0",
      "75.0",
      "13.0",
      "76.0",
      "13.0",
      "77.0",
      "13.0",
      "78.0",
      "13.0",
      "79.0",
      "13.0",
      "80.0",
      "13.0",
      "81.0",
      "13.0",
      "82.0",
      "13.0",
      "83.0",
      "13.0",
      "84.0",
      "13.0",
      "85.0",
      "13.0",
      "86.0",
      "13.0",
      "87.0",
      "13.0",
      "88.0",
      "13.0",
      "89.0",
      "13.0",
      "90.0",
      "13.0",
      "91.0",
      "13.0",
      "92.0",
      "13.0",
      "93.0",
      "13.0",
      "94.0",
      "13.0",
      "95.0",
      "13.0",
      "96.0",
      "13.0",
      "97.0",
      "13.0",
      "98.0",
      "13.0",
      "99.0",
      "13.0",
      "100.0",
      "14.0",
      "0.0",
      "14.0",
      "1.0",
      "14.0",
      "2.0",
      "14.0",
      "3.0",
      "14.0",
      "4.0",
      "14.0",
      "5.0",
      "14.0",
      "6.0",
      "14.0",
      "7.0",
      "14.0",
      "8.0",
      "14.0",
      "9.0",
      "14.0",
      "10.0",
      "14.0",
      "11.0",
      "14.0",
      "12.0",
      "14.0",
      "13.0",
      "14.0",
      "14.0",
      "14.0",
      "15.0",
      "14.0",
      "16.0",
      "14.0",
      "17.0",
      "14.0",
      "18.0",
      "14.0",
      "19.0",
      "14.0",
      "20.0",
      "14.0",
      "21.0",
      "14.0",
      "22.0",
      "14.0",
      "23.0",
      "14.0",
      "24.0",
      "14.0",
      "25.0",
      "14.0",
      "26.0",
      "14.0",
      "27.0",
      "14.0",
      "28.0",
      "14.0",
      "29.0",
      "14.0",
      "30.0",
      "14.0",
      "31.0",
      "14.0",
      "32.0",
      "14.0",
      "33.0",
      "14.0",
      "34.0",
      "14.0",
      "35.0",
      "14.0",
      "36.0",
      "14.0",
      "37.0",
      "14.0",
      "38.0",
      "14.0",
      "39.0",
      "14.0",
      "40.0",
      "14.0",
      "41.0",
      "14.0",
      "42.0",
      "14.0",
      "43.0",
      "14.0",
      "44.0",
      "14.0",
      "45.0",
      "14.0",
      "46.0",
      "14.0",
      "47.0",
      "14.0",
      "48.0",
      "14.0",
      "49.0",
      "14.0",
      "50.0",
      "14.0",
      "51.0",
      "14.0",
      "52.0",
      "14.0",
      "53.0",
      "14.0",
      "54.0",
      "14.0",
      "55.0",
      "14.0",
      "56.0",
      "14.0",
      "57.0",
      "14.0",
      "58.0",
      "14.0",
      "59.0",
      "14.0",
      "60.0",
      "14.0",
      "61.0",
      "14.0",
      "62.0",
      "14.0",
      "63.0",
      "14.0",
      "64.0",
      "14.0",
      "65.0",
      "14.0",
      "66.0",
      "14.0",
      "67.0",
      "14.0",
      "68.0",
      "14.0",
      "69.0",
      "14.0",
      "70.0",
      "14.0",
      "71.0",
      "14.0",
      "72.0",
      "14.0",
      "73.0",
      "14.0",
      "74.0",
      "14.0",
      "75.0",
      "14.0",
      "76.0",
      "14.0",
      "77.0",
      "14.0",
      "78.0",
      "14.0",
      "79.0",
      "14.0",
      "80.0",
      "14.0",
      "81.0",
      "14.0",
      "82.0",
      "14.0",
      "83.0",
      "14.0",
      "84.0",
      "14.0",
      "85.0",
      "14.0",
      "86.0",
      "14.0",
      "87.0",
      "14.0",
      "88.0",
      "14.0",
      "89.0",
      "14.0",
      "90.0",
      "14.0",
      "91.0",
      "14.0",
      "92.0",
      "14.0",
      "93.0",
      "14.0",
      "94.0",
      "14.0",
      "95.0",
      "14.0",
      "96.0",
      "14.0",
      "97.0",
      "14.0",
      "98.0",
      "14.0",
      "99.0",
      "14.0",
      "100.0",
      "15.0",
      "0.0",
      "15.0",
      "1.0",
      "15.0",
      "2.0",
      "15.0",
      "3.0",
      "15.0",
      "4.0",
      "15.0",
      "5.0",
      "15.0",
      "6.0",
      "15.0",
      "7.0",
      "15.0",
      "8.0",
      "15.0",
      "9.0",
      "15.0",
      "10.0",
      "15.0",
      "11.0",
      "15.0",
      "12.0",
      "15.0",
      "13.0",
      "15.0",
      "14.0",
      "15.0",
      "15.0",
      "15.0",
      "16.0",
      "15.0",
      "17.0",
      "15.0",
      "18.0",
      "15.0",
      "19.0",
      "15.0",
      "20.0",
      "15.0",
      "21.0",
      "15.0",
      "22.0",
      "15.0",
      "23.0",
      "15.0",
      "24.0",
      "15.0",
      "25.0",
      "15.0",
      "26.0",
      "15.0",
      "27.0",
      "15.0",
      "28.0",
      "15.0",
      "29.0",
      "15.0",
      "30.0",
      "15.0",
      "31.0",
      "15.0",
      "32.0",
      "15.0",
      "33.0",
      "15.0",
      "34.0",
      "15.0",
      "35.0",
      "15.0",
      "36.0",
      "15.0",
      "37.0",
      "15.0",
      "38.0",
      "15.0",
      "39.0",
      "15.0",
      "40.0",
      "15.0",
      "41.0",
      "15.0",
      "42.0",
      "15.0",
      "43.0",
      "15.0",
      "44.0",
      "15.0",
      "45.0",
      "15.0",
      "46.0",
      "15.0",
      "47.0",
      "15.0",
      "48.0",
      "15.0",
      "49.0",
      "15.0",
      "50.0",
      "15.0",
      "51.0",
      "15.0",
      "52.0",
      "15.0",
      "53.0",
      "15.0",
      "54.0",
      "15.0",
      "55.0",
      "15.0",
      "56.0",
      "15.0",
      "57.0",
      "15.0",
      "58.0",
      "15.0",
      "59.0",
      "15.0",
      "60.0",
      "15.0",
      "61.0",
      "15.0",
      "62.0",
      "15.0",
      "63.0",
      "15.0",
      "64.0",
      "15.0",
      "65.0",
      "15.0",
      "66.0",
      "15.0",
      "67.0",
      "15.0",
      "68.0",
      "15.0",
      "69.0",
      "15.0",
      "70.0",
      "15.0",
      "71.0",
      "15.0",
      "72.0",
      "15.0",
      "73.0",
      "15.0",
      "74.0",
      "15.0",
      "75.0",
      "15.0",
      "76.0",
      "15.0",
      "77.0",
      "15.0",
      "78.0",
      "15.0",
      "79.0",
      "15.0",
      "80.0",
      "15.0",
      "81.0",
      "15.0",
      "82.0",
      "15.0",
      "83.0",
      "15.0",
      "84.0",
      "15.0",
      "85.0",
      "15.0",
      "86.0",
      "15.0",
      "87.0",
      "15.0",
      "88.0",
      "15.0",
      "89.0",
      "15.0",
      "90.0",
      "15.0",
      "91.0",
      "15.0",
      "92.0",
      "15.0",
      "93.0",
      "15.0",
      "94.0",
      "15.0",
      "95.0",
      "15.0",
      "96.0",
      "15.0",
      "97.0",
      "15.0",
      "98.0",
      "15.0",
      "99.0",
      "15.0",
      "100.0",
      "16.0",
      "0.0",
      "16.0",
      "1.0",
      "16.0",
      "2.0",
      "16.0",
      "3.0",
      "16.0",
      "4.0",
      "16.0",
      "5.0",
      "16.0",
      "6.0",
      "16.0",
      "7.0",
      "16.0",
      "8.0",
      "16.0",
      "9.0",
      "16.0",
      "10.0",
      "16.0",
      "11.0",
      "16.0",
      "12.0",
      "16.0",
      "13.0",
      "16.0",
      "14.0",
      "16.0",
      "15.0",
      "16.0",
      "16.0",
      "16.0",
      "17.0",
      "16.0",
      "18.0",
      "16.0",
      "19.0",
      "16.0",
      "20.0",
      "16.0",
      "21.0",
      "16.0",
      "22.0",
      "16.0",
      "23.0",
      "16.0",
      "24.0",
      "16.0",
      "25.0",
      "16.0",
      "26.0",
      "16.0",
      "27.0",
      "16.0",
      "28.0",
      "16.0",
      "29.0",
      "16.0",
      "30.0",
      "16.0",
      "31.0",
      "16.0",
      "32.0",
      "16.0",
      "33.0",
      "16.0",
      "34.0",
      "16.0",
      "35.0",
      "16.0",
      "36.0",
      "16.0",
      "37.0",
      "16.0",
      "38.0",
      "16.0",
      "39.0",
      "16.0",
      "40.0",
      "16.0",
      "41.0",
      "16.0",
      "42.0",
      "16.0",
      "43.0",
      "16.0",
      "44.0",
      "16.0",
      "45.0",
      "16.0",
      "46.0",
      "16.0",
      "47.0",
      "16.0",
      "48.0",
      "16.0",
      "49.0",
      "16.0",
      "50.0",
      "16.0",
      "51.0",
      "16.0",
      "52.0",
      "16.0",
      "53.0",
      "16.0",
      "54.0",
      "16.0",
      "55.0",
      "16.0",
      "56.0",
      "16.0",
      "57.0",
      "16.0",
      "58.0",
      "16.0",
      "59.0",
      "16.0",
      "60.0",
      "16.0",
      "61.0",
      "16.0",
      "62.0",
      "16.0",
      "63.0",
      "16.0",
      "64.0",
      "16.0",
      "65.0",
      "16.0",
      "66.0",
      "16.0",
      "67.0",
      "16.0",
      "68.0",
      "16.0",
      "69.0",
      "16.0",
      "70.0",
      "16.0",
      "71.0",
      "16.0",
      "72.0",
      "16.0",
      "73.0",
      "16.0",
      "74.0",
      "16.0",
      "75.0",
      "16.0",
      "76.0",
      "16.0",
      "77.0",
      "16.0",
      "78.0",
      "16.0",
      "79.0",
      "16.0",
      "80.0",
      "16.0",
      "81.0",
      "16.0",
      "82.0",
      "16.0",
      "83.0",
      "16.0",
      "84.0",
      "16.0",
      "85.0",
      "16.0",
      "86.0",
      "16.0",
      "87.0",
      "16.0",
      "88.0",
      "16.0",
      "89.0",
      "16.0",
      "90.0",
      "16.0",
      "91.0",
      "16.0",
      "92.0",
      "16.0",
      "93.0",
      "16.0",
      "94.0",
      "16.0",
      "95.0",
      "16.0",
      "96.0",
      "16.0",
      "97.0",
      "16.0",
      "98.0",
      "16.0",
      "99.0",
      "16.0",
      "100.0",
      "17.0",
      "0.0",
      "17.0",
      "1.0",
      "17.0",
      "2.0",
      "17.0",
      "3.0",
      "17.0",
      "4.0",
      "17.0",
      "5.0",
      "17.0",
      "6.0",
      "17.0",
      "7.0",
      "17.0",
      "8.0",
      "17.0",
      "9.0",
      "17.0",
      "10.0",
      "17.0",
      "11.0",
      "17.0",
      "12.0",
      "17.0",
      "13.0",
      "17.0",
      "14.0",
      "17.0",
      "15.0",
      "17.0",
      "16.0",
      "17.0",
      "17.0",
      "17.0",
      "18.0",
      "17.0",
      "19.0",
      "17.0",
      "20.0",
      "17.0",
      "21.0",
      "17.0",
      "22.0",
      "17.0",
      "23.0",
      "17.0",
      "24.0",
      "17.0",
      "25.0",
      "17.0",
      "26.0",
      "17.0",
      "27.0",
      "17.0",
      "28.0",
      "17.0",
      "29.0",
      "17.0",
      "30.0",
      "17.0",
      "31.0",
      "17.0",
      "32.0",
      "17.0",
      "33.0",
      "17.0",
      "34.0",
      "17.0",
      "35.0",
      "17.0",
      "36.0",
      "17.0",
      "37.0",
      "17.0",
      "38.0",
      "17.0",
      "39.0",
      "17.0",
      "40.0",
      "17.0",
      "41.0",
      "17.0",
      "42.0",
      "17.0",
      "43.0",
      "17.0",
      "44.0",
      "17.0",
      "45.0",
      "17.0",
      "46.0",
      "17.0",
      "47.0",
      "17.0",
      "48.0",
      "17.0",
      "49.0",
      "17.0",
      "50.0",
      "17.0",
      "51.0",
      "17.0",
      "52.0",
      "17.0",
      "53.0",
      "17.0",
      "54.0",
      "17.0",
      "55.0",
      "17.0",
      "56.0",
      "17.0",
      "57.0",
      "17.0",
      "58.0",
      "17.0",
      "59.0",
      "17.0",
      "60.0",
      "17.0",
      "61.0",
      "17.0",
      "62.0",
      "17.0",
      "63.0",
      "17.0",
      "64.0",
      "17.0",
      "65.0",
      "17.0",
      "66.0",
      "17.0",
      "67.0",
      "17.0",
      "68.0",
      "17.0",
      "69.0",
      "17.0",
      "70.0",
      "17.0",
      "71.0",
      "17.0",
      "72.0",
      "17.0",
      "73.0",
      "17.0",
      "74.0",
      "17.0",
      "75.0",
      "17.0",
      "76.0",
      "17.0",
      "77.0",
      "17.0",
      "78.0",
      "17.0",
      "79.0",
      "17.0",
      "80.0",
      "17.0",
      "81.0",
      "17.0",
      "82.0",
      "17.0",
      "83.0",
      "17.0",
      "84.0",
      "17.0",
      "85.0",
      "17.0",
      "86.0",
      "17.0",
      "87.0",
      "17.0",
      "88.0",
      "17.0",
      "89.0",
      "17.0",
      "90.0",
      "17.0",
      "91.0",
      "17.0",
      "92.0",
      "17.0",
      "93.0",
      "17.0",
      "94.0",
      "17.0",
      "95.0",
      "17.0",
      "96.0",
      "17.0",
      "97.0",
      "17.0",
      "98.0",
      "17.0",
      "99.0",
      "17.0",
      "100.0",
      "18.0",
      "0.0",
      "18.0",
      "1.0",
      "18.0",
      "2.0",
      "18.0",
      "3.0",
      "18.0",
      "4.0",
      "18.0",
      "5.0",
      "18.0",
      "6.0",
      "18.0",
      "7.0",
      "18.0",
      "8.0",
      "18.0",
      "9.0",
      "18.0",
      "10.0",
      "18.0",
      "11.0",
      "18.0",
      "12.0",
      "18.0",
      "13.0",
      "18.0",
      "14.0",
      "18.0",
      "15.0",
      "18.0",
      "16.0",
      "18.0",
      "17.0",
      "18.0",
      "18.0",
      "18.0",
      "19.0",
      "18.0",
      "20.0",
      "18.0",
      "21.0",
      "18.0",
      "22.0",
      "18.0",
      "23.0",
      "18.0",
      "24.0",
      "18.0",
      "25.0",
      "18.0",
      "26.0",
      "18.0",
      "27.0",
      "18.0",
      "28.0",
      "18.0",
      "29.0",
      "18.0",
      "30.0",
      "18.0",
      "31.0",
      "18.0",
      "32.0",
      "18.0",
      "33.0",
      "18.0",
      "34.0",
      "18.0",
      "35.0",
      "18.0",
      "36.0",
      "18.0",
      "37.0",
      "18.0",
      "38.0",
      "18.0",
      "39.0",
      "18.0",
      "40.0",
      "18.0",
      "41.0",
      "18.0",
      "42.0",
      "18.0",
      "43.0",
      "18.0",
      "44.0",
      "18.0",
      "45.0",
      "18.0",
      "46.0",
      "18.0",
      "47.0",
      "18.0",
      "48.0",
      "18.0",
      "49.0",
      "18.0",
      "50.0",
      "18.0",
      "51.0",
      "18.0",
      "52.0",
      "18.0",
      "53.0",
      "18.0",
      "54.0",
      "18.0",
      "55.0",
      "18.0",
      "56.0",
      "18.0",
      "57.0",
      "18.0",
      "58.0",
      "18.0",
      "59.0",
      "18.0",
      "60.0",
      "18.0",
      "61.0",
      "18.0",
      "62.0",
      "18.0",
      "63.0",
      "18.0",
      "64.0",
      "18.0",
      "65.0",
      "18.0",
      "66.0",
      "18.0",
      "67.0",
      "18.0",
      "68.0",
      "18.0",
      "69.0",
      "18.0",
      "70.0",
      "18.0",
      "71.0",
      "18.0",
      "72.0",
      "18.0",
      "73.0",
      "18.0",
      "74.0",
      "18.0",
      "75.0",
      "18.0",
      "76.0",
      "18.0",
      "77.0",
      "18.0",
      "78.0",
      "18.0",
      "79.0",
      "18.0",
      "80.0",
      "18.0",
      "81.0",
      "18.0",
      "82.0",
      "18.0",
      "83.0",
      "18.0",
      "84.0",
      "18.0",
      "85.0",
      "18.0",
      "86.0",
      "18.0",
      "87.0",
      "18.0",
      "88.0",
      "18.0",
      "89.0",
      "18.0",
      "90.0",
      "18.0",
      "91.0",
      "18.0",
      "92.0",
      "18.0",
      "93.0",
      "18.0",
      "94.0",
      "18.0",
      "95.0",
      "18.0",
      "96.0",
      "18.0",
      "97.0",
      "18.0",
      "98.0",
      "18.0",
      "99.0",
      "18.0",
      "100.0",
      "19.0",
      "0.0",
      "19.0",
      "1.0",
      "19.0",
      "2.0",
      "19.0",
      "3.0",
      "19.0",
      "4.0",
      "19.0",
      "5.0",
      "19.0",
      "6.0",
      "19.0",
      "7.0",
      "19.0",
      "8.0",
      "19.0",
      "9.0",
      "19.0",
      "10.0",
      "19.0",
      "11.0",
      "19.0",
      "12.0",
      "19.0",
      "13.0",
      "19.0",
      "14.0",
      "19.0",
      "15.0",
      "19.0",
      "16.0",
      "19.0",
      "17.0",
      "19.0",
      "18.0",
      "19.0",
      "19.0",
      "19.0",
      "20.0",
      "19.0",
      "21.0",
      "19.0",
      "22.0",
      "19.0",
      "23.0",
      "19.0",
      "24.0",
      "19.0",
      "25.0",
      "19.0",
      "26.0",
      "19.0",
      "27.0",
      "19.0",
      "28.0",
      "19.0",
      "29.0",
      "19.0",
      "30.0",
      "19.0",
      "31.0",
      "19.0",
      "32.0",
      "19.0",
      "33.0",
      "19.0",
      "34.0",
      "19.0",
      "35.0",
      "19.0",
      "36.0",
      "19.0",
      "37.0",
      "19.0",
      "38.0",
      "19.0",
      "39.0",
      "19.0",
      "40.0",
      "19.0",
      "41.0",
      "19.0",
      "42.0",
      "19.0",
      "43.0",
      "19.0",
      "44.0",
      "19.0",
      "45.0",
      "19.0",
      "46.0",
      "19.0",
      "47.0",
      "19.0",
      "48.0",
      "19.0",
      "49.0",
      "19.0",
      "50.0",
      "19.0",
      "51.0",
      "19.0",
      "52.0",
      "19.0",
      "53.0",
      "19.0",
      "54.0",
      "19.0",
      "55.0",
      "19.0",
      "56.0",
      "19.0",
      "57.0",
      "19.0",
      "58.0",
      "19.0",
      "59.0",
      "19.0",
      "60.0",
      "19.0",
      "61.0",
      "19.0",
      "62.0",
      "19.0",
      "63.0",
      "19.0",
      "64.0",
      "19.0",
      "65.0",
      "19.0",
      "66.0",
      "19.0",
      "67.0",
      "19.0",
      "68.0",
      "19.0",
      "69.0",
      "19.0",
      "70.0",
      "19.0",
      "71.0",
      "19.0",
      "72.0",
      "19.0",
      "73.0",
      "19.0",
      "74.0",
      "19.0",
      "75.0",
      "19.0",
      "76.0",
      "19.0",
      "77.0",
      "19.0",
      "78.0",
      "19.0",
      "79.0",
      "19.0",
      "80.0",
      "19.0",
      "81.0",
      "19.0",
      "82.0",
      "19.0",
      "83.0",
      "19.0",
      "84.0",
      "19.0",
      "85.0",
      "19.0",
      "86.0",
      "19.0",
      "87.0",
      "19.0",
      "88.0",
      "19.0",
      "89.0",
      "19.0",
      "90.0",
      "19.0",
      "91.0",
      "19.0",
      "92.0",
      "19.0",
      "93.0",
      "19.0",
      "94.0",
      "19.0",
      "95.0",
      "19.0",
      "96.0",
      "19.0",
      "97.0",
      "19.0",
      "98.0",
      "19.0",
      "99.0",
      "19.0",
      "100.0",
      "20.0",
      "0.0",
      "20.0",
      "1.0",
      "20.0",
      "2.0",
      "20.0",
      "3.0",
      "20.0",
      "4.0",
      "20.0",
      "5.0",
      "20.0",
      "6.0",
      "20.0",
      "7.0",
      "20.0",
      "8.0",
      "20.0",
      "9.0",
      "20.0",
      "10.0",
      "20.0",
      "11.0",
      "20.0",
      "12.0",
      "20.0",
      "13.0",
      "20.0",
      "14.0",
      "20.0",
      "15.0",
      "20.0",
      "16.0",
      "20.0",
      "17.0",
      "20.0",
      "18.0",
      "20.0",
      "19.0",
      "20.0",
      "20.0",
      "20.0",
      "21.0",
      "20.0",
      "22.0",
      "20.0",
      "23.0",
      "20.0",
      "24.0",
      "20.0",
      "25.0",
      "20.0",
      "26.0",
      "20.0",
      "27.0",
      "20.0",
      "28.0",
      "20.0",
      "29.0",
      "20.0",
      "30.0",
      "20.0",
      "31.0",
      "20.0",
      "32.0",
      "20.0",
      "33.0",
      "20.0",
      "34.0",
      "20.0",
      "35.0",
      "20.0",
      "36.0",
      "20.0",
      "37.0",
      "20.0",
      "38.0",
      "20.0",
      "39.0",
      "20.0",
      "40.0",
      "20.0",
      "41.0",
      "20.0",
      "42.0",
      "20.0",
      "43.0",
      "20.0",
      "44.0",
      "20.0",
      "45.0",
      "20.0",
      "46.0",
      "20.0",
      "47.0",
      "20.0",
      "48.0",
      "20.0",
      "49.0",
      "20.0",
      "50.0",
      "20.0",
      "51.0",
      "20.0",
      "52.0",
      "20.0",
      "53.0",
      "20.0",
      "54.0",
      "20.0",
      "55.0",
      "20.0",
      "56.0",
      "20.0",
      "57.0",
      "20.0",
      "58.0",
      "20.0",
      "59.0",
      "20.0",
      "60.0",
      "20.0",
      "61.0",
      "20.0",
      "62.0",
      "20.0",
      "63.0",
      "20.0",
      "64.0",
      "20.0",
      "65.0",
      "20.0",
      "66.0",
      "20.0",
      "67.0",
      "20.0",
      "68.0",
      "20.0",
      "69.0",
      "20.0",
      "70.0",
      "20.0",
      "71.0",
      "20.0",
      "72.0",
      "20.0",
      "73.0",
      "20.0",
      "74.0",
      "20.0",
      "75.0",
      "20.0",
      "76.0",
      "20.0",
      "77.0",
      "20.0",
      "78.0",
      "20.0",
      "79.0",
      "20.0",
      "80.0",
      "20.0",
      "81.0",
      "20.0",
      "82.0",
      "20.0",
      "83.0",
      "20.0",
      "84.0",
      "20.0",
      "85.0",
      "20.0",
      "86.0",
      "20.0",
      "87.0",
      "20.0",
      "88.0",
      "20.0",
      "89.0",
      "20.0",
      "90.0",
      "20.0",
      "91.0",
      "20.0",
      "92.0",
      "20.0",
      "93.0",
      "20.0",
      "94.0",
      "20.0",
      "95.0",
      "20.0",
      "96.0",
      "20.0",
      "97.0",
      "20.0",
      "98.0",
      "20.0",
      "99.0",
      "20.0",
      "100.0",
      "21.0",
      "0.0",
      "21.0",
      "1.0",
      "21.0",
      "2.0",
      "21.0",
      "3.0",
      "21.0",
      "4.0",
      "21.0",
      "5.0",
      "21.0",
      "6.0",
      "21.0",
      "7.0",
      "21.0",
      "8.0",
      "21.0",
      "9.0",
      "21.0",
      "10.0",
      "21.0",
      "11.0",
      "21.0",
      "12.0",
      "21.0",
      "13.0",
      "21.0",
      "14.0",
      "21.0",
      "15.0",
      "21.0",
      "16.0",
      "21.0",
      "17.0",
      "21.0",
      "18.0",
      "21.0",
      "19.0",
      "21.0",
      "20.0",
      "21.0",
      "21.0",
      "21.0",
      "22.0",
      "21.0",
      "23.0",
      "21.0",
      "24.0",
      "21.0",
      "25.0",
      "21.0",
      "26.0",
      "21.0",
      "27.0",
      "21.0",
      "28.0",
      "21.0",
      "29.0",
      "21.0",
      "30.0",
      "21.0",
      "31.0",
      "21.0",
      "32.0",
      "21.0",
      "33.0",
      "21.0",
      "34.0",
      "21.0",
      "35.0",
      "21.0",
      "36.0",
      "21.0",
      "37.0",
      "21.0",
      "38.0",
      "21.0",
      "39.0",
      "21.0",
      "40.0",
      "21.0",
      "41.0",
      "21.0",
      "42.0",
      "21.0",
      "43.0",
      "21.0",
      "44.0",
      "21.0",
      "45.0",
      "21.0",
      "46.0",
      "21.0",
      "47.0",
      "21.0",
      "48.0",
      "21.0",
      "49.0",
      "21.0",
      "50.0",
      "21.0",
      "51.0",
      "21.0",
      "52.0",
      "21.0",
      "53.0",
      "21.0",
      "54.0",
      "21.0",
      "55.0",
      "21.0",
      "56.0",
      "21.0",
      "57.0",
      "21.0",
      "58.0",
      "21.0",
      "59.0",
      "21.0",
      "60.0",
      "21.0",
      "61.0",
      "21.0",
      "62.0",
      "21.0",
      "63.0",
      "21.0",
      "64.0",
      "21.0",
      "65.0",
      "21.0",
      "66.0",
      "21.0",
      "67.0",
      "21.0",
      "68.0",
      "21.0",
      "69.0",
      "21.0",
      "70.0",
      "21.0",
      "71.0",
      "21.0",
      "72.0",
      "21.0",
      "73.0",
      "21.0",
      "74.0",
      "21.0",
      "75.0",
      "21.0",
      "76.0",
      "21.0",
      "77.0",
      "21.0",
      "78.0",
      "21.0",
      "79.0",
      "21.0",
      "80.0",
      "21.0",
      "81.0",
      "21.0",
      "82.0",
      "21.0",
      "83.0",
      "21.0",
      "84.0",
      "21.0",
      "85.0",
      "21.0",
      "86.0",
      "21.0",
      "87.0",
      "21.0",
      "88.0",
      "21.0",
      "89.0",
      "21.0",
      "90.0",
      "21.0",
      "91.0",
      "21.0",
      "92.0",
      "21.0",
      "93.0",
      "21.0",
      "94.0",
      "21.0",
      "95.0",
      "21.0",
      "96.0",
      "21.0",
      "97.0",
      "21.0",
      "98.0",
      "21.0",
      "99.0",
      "21.0",
      "100.0",
      "22.0",
      "0.0",
      "22.0",
      "1.0",
      "22.0",
      "2.0",
      "22.0",
      "3.0",
      "22.0",
      "4.0",
      "22.0",
      "5.0",
      "22.0",
      "6.0",
      "22.0",
      "7.0",
      "22.0",
      "8.0",
      "22.0",
      "9.0",
      "22.0",
      "10.0",
      "22.0",
      "11.0",
      "22.0",
      "12.0",
      "22.0",
      "13.0",
      "22.0",
      "14.0",
      "22.0",
      "15.0",
      "22.0",
      "16.0",
      "22.0",
      "17.0",
      "22.0",
      "18.0",
      "22.0",
      "19.0",
      "22.0",
      "20.0",
      "22.0",
      "21.0",
      "22.0",
      "22.0",
      "22.0",
      "23.0",
      "22.0",
      "24.0",
      "22.0",
      "25.0",
      "22.0",
      "26.0",
      "22.0",
      "27.0",
      "22.0",
      "28.0",
      "22.0",
      "29.0",
      "22.0",
      "30.0",
      "22.0",
      "31.0",
      "22.0",
      "32.0",
      "22.0",
      "33.0",
      "22.0",
      "34.0",
      "22.0",
      "35.0",
      "22.0",
      "36.0",
      "22.0",
      "37.0",
      "22.0",
      "38.0",
      "22.0",
      "39.0",
      "22.0",
      "40.0",
      "22.0",
      "41.0",
      "22.0",
      "42.0",
      "22.0",
      "43.0",
      "22.0",
      "44.0",
      "22.0",
      "45.0",
      "22.0",
      "46.0",
      "22.0",
      "47.0",
      "22.0",
      "48.0",
      "22.0",
      "49.0",
      "22.0",
      "50.0",
      "22.0",
      "51.0",
      "22.0",
      "52.0",
      "22.0",
      "53.0",
      "22.0",
      "54.0",
      "22.0",
      "55.0",
      "22.0",
      "56.0",
      "22.0",
      "57.0",
      "22.0",
      "58.0",
      "22.0",
      "59.0",
      "22.0",
      "60.0",
      "22.0",
      "61.0",
      "22.0",
      "62.0",
      "22.0",
      "63.0",
      "22.0",
      "64.0",
      "22.0",
      "65.0",
      "22.0",
      "66.0",
      "22.0",
      "67.0",
      "22.0",
      "68.0",
      "22.0",
      "69.0",
      "22.0",
      "70.0",
      "22.0",
      "71.0",
      "22.0",
      "72.0",
      "22.0",
      "73.0",
      "22.0",
      "74.0",
      "22.0",
      "75.0",
      "22.0",
      "76.0",
      "22.0",
      "77.0",
      "22.0",
      "78.0",
      "22.0",
      "79.0",
      "22.0",
      "80.0",
      "22.0",
      "81.0",
      "22.0",
      "82.0",
      "22.0",
      "83.0",
      "22.0",
      "84.0",
      "22.0",
      "85.0",
      "22.0",
      "86.0",
      "22.0",
      "87.0",
      "22.0",
      "88.0",
      "22.0",
      "89.0",
      "22.0",
      "90.0",
      "22.0",
      "91.0",
      "22.0",
      "92.0",
      "22.0",
      "93.0",
      "22.0",
      "94.0",
      "22.0",
      "95.0",
      "22.0",
      "96.0",
      "22.0",
      "97.0",
      "22.0",
      "98.0",
      "22.0",
      "99.0",
      "22.0",
      "100.0",
      "23.0",
      "0.0",
      "23.0",
      "1.0",
      "23.0",
      "2.0",
      "23.0",
      "3.0",
      "23.0",
      "4.0",
      "23.0",
      "5.0",
      "23.0",
      "6.0",
      "23.0",
      "7.0",
      "23.0",
      "8.0",
      "23.0",
      "9.0",
      "23.0",
      "10.0",
      "23.0",
      "11.0",
      "23.0",
      "12.0",
      "23.0",
      "13.0",
      "23.0",
      "14.0",
      "23.0",
      "15.0",
      "23.0",
      "16.0",
      "23.0",
      "17.0",
      "23.0",
      "18.0",
      "23.0",
      "19.0",
      "23.0",
      "20.0",
      "23.0",
      "21.0",
      "23.0",
      "22.0",
      "23.0",
      "23.0",
      "23.0",
      "24.0",
      "23.0",
      "25.0",
      "23.0",
      "26.0",
      "23.0",
      "27.0",
      "23.0",
      "28.0",
      "23.0",
      "29.0",
      "23.0",
      "30.0",
      "23.0",
      "31.0",
      "23.0",
      "32.0",
      "23.0",
      "33.0",
      "23.0",
      "34.0",
      "23.0",
      "35.0",
      "23.0",
      "36.0",
      "23.0",
      "37.0",
      "23.0",
      "38.0",
      "23.0",
      "39.0",
      "23.0",
      "40.0",
      "23.0",
      "41.0",
      "23.0",
      "42.0",
      "23.0",
      "43.0",
      "23.0",
      "44.0",
      "23.0",
      "45.0",
      "23.0",
      "46.0",
      "23.0",
      "47.0",
      "23.0",
      "48.0",
      "23.0",
      "49.0",
      "23.0",
      "50.0",
      "23.0",
      "51.0",
      "23.0",
      "52.0",
      "23.0",
      "53.0",
      "23.0",
      "54.0",
      "23.0",
      "55.0",
      "23.0",
      "56.0",
      "23.0",
      "57.0",
      "23.0",
      "58.0",
      "23.0",
      "59.0",
      "23.0",
      "60.0",
      "23.0",
      "61.0",
      "23.0",
      "62.0",
      "23.0",
      "63.0",
      "23.0",
      "64.0",
      "23.0",
      "65.0",
      "23.0",
      "66.0",
      "23.0",
      "67.0",
      "23.0",
      "68.0",
      "23.0",
      "69.0",
      "23.0",
      "70.0",
      "23.0",
      "71.0",
      "23.0",
      "72.0",
      "23.0",
      "73.0",
      "23.0",
      "74.0",
      "23.0",
      "75.0",
      "23.0",
      "76.0",
      "23.0",
      "77.0",
      "23.0",
      "78.0",
      "23.0",
      "79.0",
      "23.0",
      "80.0",
      "23.0",
      "81.0",
      "23.0",
      "82.0",
      "23.0",
      "83.0",
      "23.0",
      "84.0",
      "23.0",
      "85.0",
      "23.0",
      "86.0",
      "23.0",
      "87.0",
      "23.0",
      "88.0",
      "23.0",
      "89.0",
      "23.0",
      "90.0",
      "23.0",
      "91.0",
      "23.0",
      "92.0",
      "23.0",
      "93.0",
      "23.0",
      "94.0",
      "23.0",
      "95.0",
      "23.0",
      "96.0",
      "23.0",
      "97.0",
      "23.0",
      "98.0",
      "23.0",
      "99.0",
      "23.0",
      "100.0",
      "24.0",
      "0.0",
      "24.0",
      "1.0",
      "24.0",
      "2.0",
      "24.0",
      "3.0",
      "24.0",
      "4.0",
      "24.0",
      "5.0",
      "24.0",
      "6.0",
      "24.0",
      "7.0",
      "24.0",
      "8.0",
      "24.0",
      "9.0",
      "24.0",
      "10.0",
      "24.0",
      "11.0",
      "24.0",
      "12.0",
      "24.0",
      "13.0",
      "24.0",
      "14.0",
      "24.0",
      "15.0",
      "24.0",
      "16.0",
      "24.0",
      "17.0",
      "24.0",
      "18.0",
      "24.0",
      "19.0",
      "24.0",
      "20.0",
      "24.0",
      "21.0",
      "24.0",
      "22.0",
      "24.0",
      "23.0",
      "24.0",
      "24.0",
      "24.0",
      "25.0",
      "24.0",
      "26.0",
      "24.0",
      "27.0",
      "24.0",
      "28.0",
      "24.0",
      "29.0",
      "24.0",
      "30.0",
      "24.0",
      "31.0",
      "24.0",
      "32.0",
      "24.0",
      "33.0",
      "24.0",
      "34.0",
      "24.0",
      "35.0",
      "24.0",
      "36.0",
      "24.0",
      "37.0",
      "24.0",
      "38.0",
      "24.0",
      "39.0",
      "24.0",
      "40.0",
      "24.0",
      "41.0",
      "24.0",
      "42.0",
      "24.0",
      "43.0",
      "24.0",
      "44.0",
      "24.0",
      "45.0",
      "24.0",
      "46.0",
      "24.0",
      "47.0",
      "24.0",
      "48.0",
      "24.0",
      "49.0",
      "24.0",
      "50.0",
      "24.0",
      "51.0",
      "24.0",
      "52.0",
      "24.0",
      "53.0",
      "24.0",
      "54.0",
      "24.0",
      "55.0",
      "24.0",
      "56.0",
      "24.0",
      "57.0",
      "24.0",
      "58.0",
      "24.0",
      "59.0",
      "24.0",
      "60.0",
      "24.0",
      "61.0",
      "24.0",
      "62.0",
      "24.0",
      "63.0",
      "24.0",
      "64.0",
      "24.0",
      "65.0",
      "24.0",
      "66.0",
      "24.0",
      "67.0",
      "24.0",
      "68.0",
      "24.0",
      "69.0",
      "24.0",
      "70.0",
      "24.0",
      "71.0",
      "24.0",
      "72.0",
      "24.0",
      "73.0",
      "24.0",
      "74.0",
      "24.0",
      "75.0",
      "24.0",
      "76.0",
      "24.0",
      "77.0",
      "24.0",
      "78.0",
      "24.0",
      "79.0",
      "24.0",
      "80.0",
      "24.0",
      "81.0",
      "24.0",
      "82.0",
      "24.0",
      "83.0",
      "24.0",
      "84.0",
      "24.0",
      "85.0",
      "24.0",
      "86.0",
      "24.0",
      "87.0",
      "24.0",
      "88.0",
      "24.0",
      "89.0",
      "24.0",
      "90.0",
      "24.0",
      "91.0",
      "24.0",
      "92.0",
      "24.0",
      "93.0",
      "24.0",
      "94.0",
      "24.0",
      "95.0",
      "24.0",
      "96.0",
      "24.0",
      "97.0",
      "24.0",
      "98.0",
      "24.0",
      "99.0",
      "24.0",
      "100.0",
      "25.0",
      "0.0",
      "25.0",
      "1.0",
      "25.0",
      "2.0",
      "25.0",
      "3.0",
      "25.0",
      "4.0",
      "25.0",
      "5.0",
      "25.0",
      "6.0",
      "25.0",
      "7.0",
      "25.0",
      "8.0",
      "25.0",
      "9.0",
      "25.0",
      "10.0",
      "25.0",
      "11.0",
      "25.0",
      "12.0",
      "25.0",
      "13.0",
      "25.0",
      "14.0",
      "25.0",
      "15.0",
      "25.0",
      "16.0",
      "25.0",
      "17.0",
      "25.0",
      "18.0",
      "25.0",
      "19.0",
      "25.0",
      "20.0",
      "25.0",
      "21.0",
      "25.0",
      "22.0",
      "25.0",
      "23.0",
      "25.0",
      "24.0",
      "25.0",
      "25.0",
      "25.0",
      "26.0",
      "25.0",
      "27.0",
      "25.0",
      "28.0",
      "25.0",
      "29.0",
      "25.0",
      "30.0",
      "25.0",
      "31.0",
      "25.0",
      "32.0",
      "25.0",
      "33.0",
      "25.0",
      "34.0",
      "25.0",
      "35.0",
      "25.0",
      "36.0",
      "25.0",
      "37.0",
      "25.0",
      "38.0",
      "25.0",
      "39.0",
      "25.0",
      "40.0",
      "25.0",
      "41.0",
      "25.0",
      "42.0",
      "25.0",
      "43.0",
      "25.0",
      "44.0",
      "25.0",
      "45.0",
      "25.0",
      "46.0",
      "25.0",
      "47.0",
      "25.0",
      "48.0",
      "25.0",
      "49.0",
      "25.0",
      "50.0",
      "25.0",
      "51.0",
      "25.0",
      "52.0",
      "25.0",
      "53.0",
      "25.0",
      "54.0",
      "25.0",
      "55.0",
      "25.0",
      "56.0",
      "25.0",
      "57.0",
      "25.0",
      "58.0",
      "25.0",
      "59.0",
      "25.0",
      "60.0",
      "25.0",
      "61.0",
      "25.0",
      "62.0",
      "25.0",
      "63.0",
      "25.0",
      "64.0",
      "25.0",
      "65.0",
      "25.0",
      "66.0",
      "25.0",
      "67.0",
      "25.0",
      "68.0",
      "25.0",
      "69.0",
      "25.0",
      "70.0",
      "25.0",
      "71.0",
      "25.0",
      "72.0",
      "25.0",
      "73.0",
      "25.0",
      "74.0",
      "25.0",
      "75.0",
      "25.0",
      "76.0",
      "25.0",
      "77.0",
      "25.0",
      "78.0",
      "25.0",
      "79.0",
      "25.0",
      "80.0",
      "25.0",
      "81.0",
      "25.0",
      "82.0",
      "25.0",
      "83.0",
      "25.0",
      "84.0",
      "25.0",
      "85.0",
      "25.0",
      "86.0",
      "25.0",
      "87.0",
      "25.0",
      "88.0",
      "25.0",
      "89.0",
      "25.0",
      "90.0",
      "25.0",
      "91.0",
      "25.0",
      "92.0",
      "25.0",
      "93.0",
      "25.0",
      "94.0",
      "25.0",
      "95.0",
      "25.0",
      "96.0",
      "25.0",
      "97.0",
      "25.0",
      "98.0",
      "25.0",
      "99.0",
      "25.0",
      "100.0",
      "26.0",
      "0.0",
      "26.0",
      "1.0",
      "26.0",
      "2.0",
      "26.0",
      "3.0",
      "26.0",
      "4.0",
      "26.0",
      "5.0",
      "26.0",
      "6.0",
      "26.0",
      "7.0",
      "26.0",
      "8.0",
      "26.0",
      "9.0",
      "26.0",
      "10.0",
      "26.0",
      "11.0",
      "26.0",
      "12.0",
      "26.0",
      "13.0",
      "26.0",
      "14.0",
      "26.0",
      "15.0",
      "26.0",
      "16.0",
      "26.0",
      "17.0",
      "26.0",
      "18.0",
      "26.0",
      "19.0",
      "26.0",
      "20.0",
      "26.0",
      "21.0",
      "26.0",
      "22.0",
      "26.0",
      "23.0",
      "26.0",
      "24.0",
      "26.0",
      "25.0",
      "26.0",
      "26.0",
      "26.0",
      "27.0",
      "26.0",
      "28.0",
      "26.0",
      "29.0",
      "26.0",
      "30.0",
      "26.0",
      "31.0",
      "26.0",
      "32.0",
      "26.0",
      "33.0",
      "26.0",
      "34.0",
      "26.0",
      "35.0",
      "26.0",
      "36.0",
      "26.0",
      "37.0",
      "26.0",
      "38.0",
      "26.0",
      "39.0",
      "26.0",
      "40.0",
      "26.0",
      "41.0",
      "26.0",
      "42.0",
      "26.0",
      "43.0",
      "26.0",
      "44.0",
      "26.0",
      "45.0",
      "26.0",
      "46.0",
      "26.0",
      "47.0",
      "26.0",
      "48.0",
      "26.0",
      "49.0",
      "26.0",
      "50.0",
      "26.0",
      "51.0",
      "26.0",
      "52.0",
      "26.0",
      "53.0",
      "26.0",
      "54.0",
      "26.0",
      "55.0",
      "26.0",
      "56.0",
      "26.0",
      "57.0",
      "26.0",
      "58.0",
      "26.0",
      "59.0",
      "26.0",
      "60.0",
      "26.0",
      "61.0",
      "26.0",
      "62.0",
      "26.0",
      "63.0",
      "26.0",
      "64.0",
      "26.0",
      "65.0",
      "26.0",
      "66.0",
      "26.0",
      "67.0",
      "26.0",
      "68.0",
      "26.0",
      "69.0",
      "26.0",
      "70.0",
      "26.0",
      "71.0",
      "26.0",
      "72.0",
      "26.0",
      "73.0",
      "26.0",
      "74.0",
      "26.0",
      "75.0",
      "26.0",
      "76.0",
      "26.0",
      "77.0",
      "26.0",
      "78.0",
      "26.0",
      "79.0",
      "26.0",
      "80.0",
      "26.0",
      "81.0",
      "26.0",
      "82.0",
      "26.0",
      "83.0",
      "26.0",
      "84.0",
      "26.0",
      "85.0",
      "26.0",
      "86.0",
      "26.0",
      "87.0",
      "26.0",
      "88.0",
      "26.0",
      "89.0",
      "26.0",
      "90.0",
      "26.0",
      "91.0",
      "26.0",
      "92.0",
      "26.0",
      "93.0",
      "26.0",
      "94.0",
      "26.0",
      "95.0",
      "26.0",
      "96.0",
      "26.0",
      "97.0",
      "26.0",
      "98.0",
      "26.0",
      "99.0",
      "26.0",
      "100.0",
      "27.0",
      "0.0",
      "27.0",
      "1.0",
      "27.0",
      "2.0",
      "27.0",
      "3.0",
      "27.0",
      "4.0",
      "27.0",
      "5.0",
      "27.0",
      "6.0",
      "27.0",
      "7.0",
      "27.0",
      "8.0",
      "27.0",
      "9.0",
      "27.0",
      "10.0",
      "27.0",
      "11.0",
      "27.0",
      "12.0",
      "27.0",
      "13.0",
      "27.0",
      "14.0",
      "27.0",
      "15.0",
      "27.0",
      "16.0",
      "27.0",
      "17.0",
      "27.0",
      "18.0",
      "27.0",
      "19.0",
      "27.0",
      "20.0",
      "27.0",
      "21.0",
      "27.0",
      "22.0",
      "27.0",
      "23.0",
      "27.0",
      "24.0",
      "27.0",
      "25.0",
      "27.0",
      "26.0",
      "27.0",
      "27.0",
      "27.0",
      "28.0",
      "27.0",
      "29.0",
      "27.0",
      "30.0",
      "27.0",
      "31.0",
      "27.0",
      "32.0",
      "27.0",
      "33.0",
      "27.0",
      "34.0",
      "27.0",
      "35.0",
      "27.0",
      "36.0",
      "27.0",
      "37.0",
      "27.0",
      "38.0",
      "27.0",
      "39.0",
      "27.0",
      "40.0",
      "27.0",
      "41.0",
      "27.0",
      "42.0",
      "27.0",
      "43.0",
      "27.0",
      "44.0",
      "27.0",
      "45.0",
      "27.0",
      "46.0",
      "27.0",
      "47.0",
      "27.0",
      "48.0",
      "27.0",
      "49.0",
      "27.0",
      "50.0",
      "27.0",
      "51.0",
      "27.0",
      "52.0",
      "27.0",
      "53.0",
      "27.0",
      "54.0",
      "27.0",
      "55.0",
      "27.0",
      "56.0",
      "27.0",
      "57.0",
      "27.0",
      "58.0",
      "27.0",
      "59.0",
      "27.0",
      "60.0",
      "27.0",
      "61.0",
      "27.0",
      "62.0",
      "27.0",
      "63.0",
      "27.0",
      "64.0",
      "27.0",
      "65.0",
      "27.0",
      "66.0",
      "27.0",
      "67.0",
      "27.0",
      "68.0",
      "27.0",
      "69.0",
      "27.0",
      "70.0",
      "27.0",
      "71.0",
      "27.0",
      "72.0",
      "27.0",
      "73.0",
      "27.0",
      "74.0",
      "27.0",
      "75.0",
      "27.0",
      "76.0",
      "27.0",
      "77.0",
      "27.0",
      "78.0",
      "27.0",
      "79.0",
      "27.0",
      "80.0",
      "27.0",
      "81.0",
      "27.0",
      "82.0",
      "27.0",
      "83.0",
      "27.0",
      "84.0",
      "27.0",
      "85.0",
      "27.0",
      "86.0",
      "27.0",
      "87.0",
      "27.0",
      "88.0",
      "27.0",
      "89.0",
      "27.0",
      "90.0",
      "27.0",
      "91.0",
      "27.0",
      "92.0",
      "27.0",
      "93.0",
      "27.0",
      "94.0",
      "27.0",
      "95.0",
      "27.0",
      "96.0",
      "27.0",
      "97.0",
      "27.0",
      "98.0",
      "27.0",
      "99.0",
      "27.0",
      "100.0",
      "28.0",
      "0.0",
      "28.0",
      "1.0",
      "28.0",
      "2.0",
      "28.0",
      "3.0",
      "28.0",
      "4.0",
      "28.0",
      "5.0",
      "28.0",
      "6.0",
      "28.0",
      "7.0",
      "28.0",
      "8.0",
      "28.0",
      "9.0",
      "28.0",
      "10.0",
      "28.0",
      "11.0",
      "28.0",
      "12.0",
      "28.0",
      "13.0",
      "28.0",
      "14.0",
      "28.0",
      "15.0",
      "28.0",
      "16.0",
      "28.0",
      "17.0",
      "28.0",
      "18.0",
      "28.0",
      "19.0",
      "28.0",
      "20.0",
      "28.0",
      "21.0",
      "28.0",
      "22.0",
      "28.0",
      "23.0",
      "28.0",
      "24.0",
      "28.0",
      "25.0",
      "28.0",
      "26.0",
      "28.0",
      "27.0",
      "28.0",
      "28.0",
      "28.0",
      "29.0",
      "28.0",
      "30.0",
      "28.0",
      "31.0",
      "28.0",
      "32.0",
      "28.0",
      "33.0",
      "28.0",
      "34.0",
      "28.0",
      "35.0",
      "28.0",
      "36.0",
      "28.0",
      "37.0",
      "28.0",
      "38.0",
      "28.0",
      "39.0",
      "28.0",
      "40.0",
      "28.0",
      "41.0",
      "28.0",
      "42.0",
      "28.0",
      "43.0",
      "28.0",
      "44.0",
      "28.0",
      "45.0",
      "28.0",
      "46.0",
      "28.0",
      "47.0",
      "28.0",
      "48.0",
      "28.0",
      "49.0",
      "28.0",
      "50.0",
      "28.0",
      "51.0",
      "28.0",
      "52.0",
      "28.0",
      "53.0",
      "28.0",
      "54.0",
      "28.0",
      "55.0",
      "28.0",
      "56.0",
      "28.0",
      "57.0",
      "28.0",
      "58.0",
      "28.0",
      "59.0",
      "28.0",
      "60.0",
      "28.0",
      "61.0",
      "28.0",
      "62.0",
      "28.0",
      "63.0",
      "28.0",
      "64.0",
      "28.0",
      "65.0",
      "28.0",
      "66.0",
      "28.0",
      "67.0",
      "28.0",
      "68.0",
      "28.0",
      "69.0",
      "28.0",
      "70.0",
      "28.0",
      "71.0",
      "28.0",
      "72.0",
      "28.0",
      "73.0",
      "28.0",
      "74.0",
      "28.0",
      "75.0",
      "28.0",
      "76.0",
      "28.0",
      "77.0",
      "28.0",
      "78.0",
      "28.0",
      "79.0",
      "28.0",
      "80.0",
      "28.0",
      "81.0",
      "28.0",
      "82.0",
      "28.0",
      "83.0",
      "28.0",
      "84.0",
      "28.0",
      "85.0",
      "28.0",
      "86.0",
      "28.0",
      "87.0",
      "28.0",
      "88.0",
      "28.0",
      "89.0",
      "28.0",
      "90.0",
      "28.0",
      "91.0",
      "28.0",
      "92.0",
      "28.0",
      "93.0",
      "28.0",
      "94.0",
      "28.0",
      "95.0",
      "28.0",
      "96.0",
      "28.0",
      "97.0",
      "28.0",
      "98.0",
      "28.0",
      "99.0",
      "28.0",
      "100.0",
      "29.0",
      "0.0",
      "29.0",
      "1.0",
      "29.0",
      "2.0",
      "29.0",
      "3.0",
      "29.0",
      "4.0",
      "29.0",
      "5.0",
      "29.0",
      "6.0",
      "29.0",
      "7.0",
      "29.0",
      "8.0",
      "29.0",
      "9.0",
      "29.0",
      "10.0",
      "29.0",
      "11.0",
      "29.0",
      "12.0",
      "29.0",
      "13.0",
      "29.0",
      "14.0",
      "29.0",
      "15.0",
      "29.0",
      "16.0",
      "29.0",
      "17.0",
      "29.0",
      "18.0",
      "29.0",
      "19.0",
      "29.0",
      "20.0",
      "29.0",
      "21.0",
      "29.0",
      "22.0",
      "29.0",
      "23.0",
      "29.0",
      "24.0",
      "29.0",
      "25.0",
      "29.0",
      "26.0",
      "29.0",
      "27.0",
      "29.0",
      "28.0",
      "29.0",
      "29.0",
      "29.0",
      "30.0",
      "29.0",
      "31.0",
      "29.0",
      "32.0",
      "29.0",
      "33.0",
      "29.0",
      "34.0",
      "29.0",
      "35.0",
      "29.0",
      "36.0",
      "29.0",
      "37.0",
      "29.0",
      "38.0",
      "29.0",
      "39.0",
      "29.0",
      "40.0",
      "29.0",
      "41.0",
      "29.0",
      "42.0",
      "29.0",
      "43.0",
      "29.0",
      "44.0",
      "29.0",
      "45.0",
      "29.0",
      "46.0",
      "29.0",
      "47.0",
      "29.0",
      "48.0",
      "29.0",
      "49.0",
      "29.0",
      "50.0",
      "29.0",
      "51.0",
      "29.0",
      "52.0",
      "29.0",
      "53.0",
      "29.0",
      "54.0",
      "29.0",
      "55.0",
      "29.0",
      "56.0",
      "29.0",
      "57.0",
      "29.0",
      "58.0",
      "29.0",
      "59.0",
      "29.0",
      "60.0",
      "29.0",
      "61.0",
      "29.0",
      "62.0",
      "29.0",
      "63.0",
      "29.0",
      "64.0",
      "29.0",
      "65.0",
      "29.0",
      "66.0",
      "29.0",
      "67.0",
      "29.0",
      "68.0",
      "29.0",
      "69.0",
      "29.0",
      "70.0",
      "29.0",
      "71.0",
      "29.0",
      "72.0",
      "29.0",
      "73.0",
      "29.0",
      "74.0",
      "29.0",
      "75.0",
      "29.0",
      "76.0",
      "29.0",
      "77.0",
      "29.0",
      "78.0",
      "29.0",
      "79.0",
      "29.0",
      "80.0",
      "29.0",
      "81.0",
      "29.0",
      "82.0",
      "29.0",
      "83.0",
      "29.0",
      "84.0",
      "29.0",
      "85.0",
      "29.0",
      "86.0",
      "29.0",
      "87.0",
      "29.0",
      "88.0",
      "29.0",
      "89.0",
      "29.0",
      "90.0",
      "29.0",
      "91.0",
      "29.0",
      "92.0",
      "29.0",
      "93.0",
      "29.0",
      "94.0",
      "29.0",
      "95.0",
      "29.0",
      "96.0",
      "29.0",
      "97.0",
      "29.0",
      "98.0",
      "29.0",
      "99.0",
      "29.0",
      "100.0",
      "30.0",
      "0.0",
      "30.0",
      "1.0",
      "30.0",
      "2.0",
      "30.0",
      "3.0",
      "30.0",
      "4.0",
      "30.0",
      "5.0",
      "30.0",
      "6.0",
      "30.0",
      "7.0",
      "30.0",
      "8.0",
      "30.0",
      "9.0",
      "30.0",
      "10.0",
      "30.0",
      "11.0",
      "30.0",
      "12.0",
      "30.0",
      "13.0",
      "30.0",
      "14.0",
      "30.0",
      "15.0",
      "30.0",
      "16.0",
      "30.0",
      "17.0",
      "30.0",
      "18.0",
      "30.0",
      "19.0",
      "30.0",
      "20.0",
      "30.0",
      "21.0",
      "30.0",
      "22.0",
      "30.0",
      "23.0",
      "30.0",
      "24.0",
      "30.0",
      "25.0",
      "30.0",
      "26.0",
      "30.0",
      "27.0",
      "30.0",
      "28.0",
      "30.0",
      "29.0",
      "30.0",
      "30.0",
      "30.0",
      "31.0",
      "30.0",
      "32.0",
      "30.0",
      "33.0",
      "30.0",
      "34.0",
      "30.0",
      "35.0",
      "30.0",
      "36.0",
      "30.0",
      "37.0",
      "30.0",
      "38.0",
      "30.0",
      "39.0",
      "30.0",
      "40.0",
      "30.0",
      "41.0",
      "30.0",
      "42.0",
      "30.0",
      "43.0",
      "30.0",
      "44.0",
      "30.0",
      "45.0",
      "30.0",
      "46.0",
      "30.0",
      "47.0",
      "30.0",
      "48.0",
      "30.0",
      "49.0",
      "30.0",
      "50.0",
      "30.0",
      "51.0",
      "30.0",
      "52.0",
      "30.0",
      "53.0",
      "30.0",
      "54.0",
      "30.0",
      "55.0",
      "30.0",
      "56.0",
      "30.0",
      "57.0",
      "30.0",
      "58.0",
      "30.0",
      "59.0",
      "30.0",
      "60.0",
      "30.0",
      "61.0",
      "30.0",
      "62.0",
      "30.0",
      "63.0",
      "30.0",
      "64.0",
      "30.0",
      "65.0",
      "30.0",
      "66.0",
      "30.0",
      "67.0",
      "30.0",
      "68.0",
      "30.0",
      "69.0",
      "30.0",
      "70.0",
      "30.0",
      "71.0",
      "30.0",
      "72.0",
      "30.0",
      "73.0",
      "30.0",
      "74.0",
      "30.0",
      "75.0",
      "30.0",
      "76.0",
      "30.0",
      "77.0",
      "30.0",
      "78.0",
      "30.0",
      "79.0",
      "30.0",
      "80.0",
      "30.0",
      "81.0",
      "30.0",
      "82.0",
      "30.0",
      "83.0",
      "30.0",
      "84.0",
      "30.0",
      "85.0",
      "30.0",
      "86.0",
      "30.0",
      "87.0",
      "30.0",
      "88.0",
      "30.0",
      "89.0",
      "30.0",
      "90.0",
      "30.0",
      "91.0",
      "30.0",
      "92.0",
      "30.0",
      "93.0",
      "30.0",
      "94.0",
      "30.0",
      "95.0",
      "30.0",
      "96.0",
      "30.0",
      "97.0",
      "30.0",
      "98.0",
      "30.0",
      "99.0",
      "30.0",
      "100.0",
      "31.0",
      "0.0",
      "31.0",
      "1.0",
      "31.0",
      "2.0",
      "31.0",
      "3.0",
      "31.0",
      "4.0",
      "31.0",
      "5.0",
      "31.0",
      "6.0",
      "31.0",
      "7.0",
      "31.0",
      "8.0",
      "31.0",
      "9.0",
      "31.0",
      "10.0",
      "31.0",
      "11.0",
      "31.0",
      "12.0",
      "31.0",
      "13.0",
      "31.0",
      "14.0",
      "31.0",
      "15.0",
      "31.0",
      "16.0",
      "31.0",
      "17.0",
      "31.0",
      "18.0",
      "31.0",
      "19.0",
      "31.0",
      "20.0",
      "31.0",
      "21.0",
      "31.0",
      "22.0",
      "31.0",
      "23.0",
      "31.0",
      "24.0",
      "31.0",
      "25.0",
      "31.0",
      "26.0",
      "31.0",
      "27.0",
      "31.0",
      "28.0",
      "31.0",
      "29.0",
      "31.0",
      "30.0",
      "31.0",
      "31.0",
      "31.0",
      "32.0",
      "31.0",
      "33.0",
      "31.0",
      "34.0",
      "31.0",
      "35.0",
      "31.0",
      "36.0",
      "31.0",
      "37.0",
      "31.0",
      "38.0",
      "31.0",
      "39.0",
      "31.0",
      "40.0",
      "31.0",
      "41.0",
      "31.0",
      "42.0",
      "31.0",
      "43.0",
      "31.0",
      "44.0",
      "31.0",
      "45.0",
      "31.0",
      "46.0",
      "31.0",
      "47.0",
      "31.0",
      "48.0",
      "31.0",
      "49.0",
      "31.0",
      "50.0",
      "31.0",
      "51.0",
      "31.0",
      "52.0",
      "31.0",
      "53.0",
      "31.0",
      "54.0",
      "31.0",
      "55.0",
      "31.0",
      "56.0",
      "31.0",
      "57.0",
      "31.0",
      "58.0",
      "31.0",
      "59.0",
      "31.0",
      "60.0",
      "31.0",
      "61.0",
      "31.0",
      "62.0",
      "31.0",
      "63.0",
      "31.0",
      "64.0",
      "31.0",
      "65.0",
      "31.0",
      "66.0",
      "31.0",
      "67.0",
      "31.0",
      "68.0",
      "31.0",
      "69.0",
      "31.0",
      "70.0",
      "31.0",
      "71.0",
      "31.0",
      "72.0",
      "31.0",
      "73.0",
      "31.0",
      "74.0",
      "31.0",
      "75.0",
      "31.0",
      "76.0",
      "31.0",
      "77.0",
      "31.0",
      "78.0",
      "31.0",
      "79.0",
      "31.0",
      "80.0",
      "31.0",
      "81.0",
      "31.0",
      "82.0",
      "31.0",
      "83.0",
      "31.0",
      "84.0",
      "31.0",
      "85.0",
      "31.0",
      "86.0",
      "31.0",
      "87.0",
      "31.0",
      "88.0",
      "31.0",
      "89.0",
      "31.0",
      "90.0",
      "31.0",
      "91.0",
      "31.0",
      "92.0",
      "31.0",
      "93.0",
      "31.0",
      "94.0",
      "31.0",
      "95.0",
      "31.0",
      "96.0",
      "31.0",
      "97.0",
      "31.0",
      "98.0",
      "31.0",
      "99.0",
      "31.0",
      "100.0",
      "32.0",
      "0.0",
      "32.0",
      "1.0",
      "32.0",
      "2.0",
      "32.0",
      "3.0",
      "32.0",
      "4.0",
      "32.0",
      "5.0",
      "32.0",
      "6.0",
      "32.0",
      "7.0",
      "32.0",
      "8.0",
      "32.0",
      "9.0",
      "32.0",
      "10.0",
      "32.0",
      "11.0",
      "32.0",
      "12.0",
      "32.0",
      "13.0",
      "32.0",
      "14.0",
      "32.0",
      "15.0",
      "32.0",
      "16.0",
      "32.0",
      "17.0",
      "32.0",
      "18.0",
      "32.0",
      "19.0",
      "32.0",
      "20.0",
      "32.0",
      "21.0",
      "32.0",
      "22.0",
      "32.0",
      "23.0",
      "32.0",
      "24.0",
      "32.0",
      "25.0",
      "32.0",
      "26.0",
      "32.0",
      "27.0",
      "32.0",
      "28.0",
      "32.0",
      "29.0",
      "32.0",
      "30.0",
      "32.0",
      "31.0",
      "32.0",
      "32.0",
      "32.0",
      "33.0",
      "32.0",
      "34.0",
      "32.0",
      "35.0",
      "32.0",
      "36.0",
      "32.0",
      "37.0",
      "32.0",
      "38.0",
      "32.0",
      "39.0",
      "32.0",
      "40.0",
      "32.0",
      "41.0",
      "32.0",
      "42.0",
      "32.0",
      "43.0",
      "32.0",
      "44.0",
      "32.0",
      "45.0",
      "32.0",
      "46.0",
      "32.0",
      "47.0",
      "32.0",
      "48.0",
      "32.0",
      "49.0",
      "32.0",
      "50.0",
      "32.0",
      "51.0",
      "32.0",
      "52.0",
      "32.0",
      "53.0",
      "32.0",
      "54.0",
      "32.0",
      "55.0",
      "32.0",
      "56.0",
      "32.0",
      "57.0",
      "32.0",
      "58.0",
      "32.0",
      "59.0",
      "32.0",
      "60.0",
      "32.0",
      "61.0",
      "32.0",
      "62.0",
      "32.0",
      "63.0",
      "32.0",
      "64.0",
      "32.0",
      "65.0",
      "32.0",
      "66.0",
      "32.0",
      "67.0",
      "32.0",
      "68.0",
      "32.0",
      "69.0",
      "32.0",
      "70.0",
      "32.0",
      "71.0",
      "32.0",
      "72.0",
      "32.0",
      "73.0",
      "32.0",
      "74.0",
      "32.0",
      "75.0",
      "32.0",
      "76.0",
      "32.0",
      "77.0",
      "32.0",
      "78.0",
      "32.0",
      "79.0",
      "32.0",
      "80.0",
      "32.0",
      "81.0",
      "32.0",
      "82.0",
      "32.0",
      "83.0",
      "32.0",
      "84.0",
      "32.0",
      "85.0",
      "32.0",
      "86.0",
      "32.0",
      "87.0",
      "32.0",
      "88.0",
      "32.0",
      "89.0",
      "32.0",
      "90.0",
      "32.0",
      "91.0",
      "32.0",
      "92.0",
      "32.0",
      "93.0",
      "32.0",
      "94.0",
      "32.0",
      "95.0",
      "32.0",
      "96.0",
      "32.0",
      "97.0",
      "32.0",
      "98.0",
      "32.0",
      "99.0",
      "32.0",
      "100.0",
      "33.0",
      "0.0",
      "33.0",
      "1.0",
      "33.0",
      "2.0",
      "33.0",
      "3.0",
      "33.0",
      "4.0",
      "33.0",
      "5.0",
      "33.0",
      "6.0",
      "33.0",
      "7.0",
      "33.0",
      "8.0",
      "33.0",
      "9.0",
      "33.0",
      "10.0",
      "33.0",
      "11.0",
      "33.0",
      "12.0",
      "33.0",
      "13.0",
      "33.0",
      "14.0",
      "33.0",
      "15.0",
      "33.0",
      "16.0",
      "33.0",
      "17.0",
      "33.0",
      "18.0",
      "33.0",
      "19.0",
      "33.0",
      "20.0",
      "33.0",
      "21.0",
      "33.0",
      "22.0",
      "33.0",
      "23.0",
      "33.0",
      "24.0",
      "33.0",
      "25.0",
      "33.0",
      "26.0",
      "33.0",
      "27.0",
      "33.0",
      "28.0",
      "33.0",
      "29.0",
      "33.0",
      "30.0",
      "33.0",
      "31.0",
      "33.0",
      "32.0",
      "33.0",
      "33.0",
      "33.0",
      "34.0",
      "33.0",
      "35.0",
      "33.0",
      "36.0",
      "33.0",
      "37.0",
      "33.0",
      "38.0",
      "33.0",
      "39.0",
      "33.0",
      "40.0",
      "33.0",
      "41.0",
      "33.0",
      "42.0",
      "33.0",
      "43.0",
      "33.0",
      "44.0",
      "33.0",
      "45.0",
      "33.0",
      "46.0",
      "33.0",
      "47.0",
      "33.0",
      "48.0",
      "33.0",
      "49.0",
      "33.0",
      "50.0",
      "33.0",
      "51.0",
      "33.0",
      "52.0",
      "33.0",
      "53.0",
      "33.0",
      "54.0",
      "33.0",
      "55.0",
      "33.0",
      "56.0",
      "33.0",
      "57.0",
      "33.0",
      "58.0",
      "33.0",
      "59.0",
      "33.0",
      "60.0",
      "33.0",
      "61.0",
      "33.0",
      "62.0",
      "33.0",
      "63.0",
      "33.0",
      "64.0",
      "33.0",
      "65.0",
      "33.0",
      "66.0",
      "33.0",
      "67.0",
      "33.0",
      "68.0",
      "33.0",
      "69.0",
      "33.0",
      "70.0",
      "33.0",
      "71.0",
      "33.0",
      "72.0",
      "33.0",
      "73.0",
      "33.0",
      "74.0",
      "33.0",
      "75.0",
      "33.0",
      "76.0",
      "33.0",
      "77.0",
      "33.0",
      "78.0",
      "33.0",
      "79.0",
      "33.0",
      "80.0",
      "33.0",
      "81.0",
      "33.0",
      "82.0",
      "33.0",
      "83.0",
      "33.0",
      "84.0",
      "33.0",
      "85.0",
      "33.0",
      "86.0",
      "33.0",
      "87.0",
      "33.0",
      "88.0",
      "33.0",
      "89.0",
      "33.0",
      "90.0",
      "33.0",
      "91.0",
      "33.0",
      "92.0",
      "33.0",
      "93.0",
      "33.0",
      "94.0",
      "33.0",
      "95.0",
      "33.0",
      "96.0",
      "33.0",
      "97.0",
      "33.0",
      "98.0",
      "33.0",
      "99.0",
      "33.0",
      "100.0",
      "34.0",
      "0.0",
      "34.0",
      "1.0",
      "34.0",
      "2.0",
      "34.0",
      "3.0",
      "34.0",
      "4.0",
      "34.0",
      "5.0",
      "34.0",
      "6.0",
      "34.0",
      "7.0",
      "34.0",
      "8.0",
      "34.0",
      "9.0",
      "34.0",
      "10.0",
      "34.0",
      "11.0",
      "34.0",
      "12.0",
      "34.0",
      "13.0",
      "34.0",
      "14.0",
      "34.0",
      "15.0",
      "34.0",
      "16.0",
      "34.0",
      "17.0",
      "34.0",
      "18.0",
      "34.0",
      "19.0",
      "34.0",
      "20.0",
      "34.0",
      "21.0",
      "34.0",
      "22.0",
      "34.0",
      "23.0",
      "34.0",
      "24.0",
      "34.0",
      "25.0",
      "34.0",
      "26.0",
      "34.0",
      "27.0",
      "34.0",
      "28.0",
      "34.0",
      "29.0",
      "34.0",
      "30.0",
      "34.0",
      "31.0",
      "34.0",
      "32.0",
      "34.0",
      "33.0",
      "34.0",
      "34.0",
      "34.0",
      "35.0",
      "34.0",
      "36.0",
      "34.0",
      "37.0",
      "34.0",
      "38.0",
      "34.0",
      "39.0",
      "34.0",
      "40.0",
      "34.0",
      "41.0",
      "34.0",
      "42.0",
      "34.0",
      "43.0",
      "34.0",
      "44.0",
      "34.0",
      "45.0",
      "34.0",
      "46.0",
      "34.0",
      "47.0",
      "34.0",
      "48.0",
      "34.0",
      "49.0",
      "34.0",
      "50.0",
      "34.0",
      "51.0",
      "34.0",
      "52.0",
      "34.0",
      "53.0",
      "34.0",
      "54.0",
      "34.0",
      "55.0",
      "34.0",
      "56.0",
      "34.0",
      "57.0",
      "34.0",
      "58.0",
      "34.0",
      "59.0",
      "34.0",
      "60.0",
      "34.0",
      "61.0",
      "34.0",
      "62.0",
      "34.0",
      "63.0",
      "34.0",
      "64.0",
      "34.0",
      "65.0",
      "34.0",
      "66.0",
      "34.0",
      "67.0",
      "34.0",
      "68.0",
      "34.0",
      "69.0",
      "34.0",
      "70.0",
      "34.0",
      "71.0",
      "34.0",
      "72.0",
      "34.0",
      "73.0",
      "34.0",
      "74.0",
      "34.0",
      "75.0",
      "34.0",
      "76.0",
      "34.0",
      "77.0",
      "34.0",
      "78.0",
      "34.0",
      "79.0",
      "34.0",
      "80.0",
      "34.0",
      "81.0",
      "34.0",
      "82.0",
      "34.0",
      "83.0",
      "34.0",
      "84.0",
      "34.0",
      "85.0",
      "34.0",
      "86.0",
      "34.0",
      "87.0",
      "34.0",
      "88.0",
      "34.0",
      "89.0",
      "34.0",
      "90.0",
      "34.0",
      "91.0",
      "34.0",
      "92.0",
      "34.0",
      "93.0",
      "34.0",
      "94.0",
      "34.0",
      "95.0",
      "34.0",
      "96.0",
      "34.0",
      "97.0",
      "34.0",
      "98.0",
      "34.0",
      "99.0",
      "34.0",
      "100.0",
      "35.0",
      "0.0",
      "35.0",
      "1.0",
      "35.0",
      "2.0",
      "35.0",
      "3.0",
      "35.0",
      "4.0",
      "35.0",
      "5.0",
      "35.0",
      "6.0",
      "35.0",
      "7.0",
      "35.0",
      "8.0",
      "35.0",
      "9.0",
      "35.0",
      "10.0",
      "35.0",
      "11.0",
      "35.0",
      "12.0",
      "35.0",
      "13.0",
      "35.0",
      "14.0",
      "35.0",
      "15.0",
      "35.0",
      "16.0",
      "35.0",
      "17.0",
      "35.0",
      "18.0",
      "35.0",
      "19.0",
      "35.0",
      "20.0",
      "35.0",
      "21.0",
      "35.0",
      "22.0",
      "35.0",
      "23.0",
      "35.0",
      "24.0",
      "35.0",
      "25.0",
      "35.0",
      "26.0",
      "35.0",
      "27.0",
      "35.0",
      "28.0",
      "35.0",
      "29.0",
      "35.0",
      "30.0",
      "35.0",
      "31.0",
      "35.0",
      "32.0",
      "35.0",
      "33.0",
      "35.0",
      "34.0",
      "35.0",
      "35.0",
      "35.0",
      "36.0",
      "35.0",
      "37.0",
      "35.0",
      "38.0",
      "35.0",
      "39.0",
      "35.0",
      "40.0",
      "35.0",
      "41.0",
      "35.0",
      "42.0",
      "35.0",
      "43.0",
      "35.0",
      "44.0",
      "35.0",
      "45.0",
      "35.0",
      "46.0",
      "35.0",
      "47.0",
      "35.0",
      "48.0",
      "35.0",
      "49.0",
      "35.0",
      "50.0",
      "35.0",
      "51.0",
      "35.0",
      "52.0",
      "35.0",
      "53.0",
      "35.0",
      "54.0",
      "35.0",
      "55.0",
      "35.0",
      "56.0",
      "35.0",
      "57.0",
      "35.0",
      "58.0",
      "35.0",
      "59.0",
      "35.0",
      "60.0",
      "35.0",
      "61.0",
      "35.0",
      "62.0",
      "35.0",
      "63.0",
      "35.0",
      "64.0",
      "35.0",
      "65.0",
      "35.0",
      "66.0",
      "35.0",
      "67.0",
      "35.0",
      "68.0",
      "35.0",
      "69.0",
      "35.0",
      "70.0",
      "35.0",
      "71.0",
      "35.0",
      "72.0",
      "35.0",
      "73.0",
      "35.0",
      "74.0",
      "35.0",
      "75.0",
      "35.0",
      "76.0",
      "35.0",
      "77.0",
      "35.0",
      "78.0",
      "35.0",
      "79.0",
      "35.0",
      "80.0",
      "35.0",
      "81.0",
      "35.0",
      "82.0",
      "35.0",
      "83.0",
      "35.0",
      "84.0",
      "35.0",
      "85.0",
      "35.0",
      "86.0",
      "35.0",
      "87.0",
      "35.0",
      "88.0",
      "35.0",
      "89.0",
      "35.0",
      "90.0",
      "35.0",
      "91.0",
      "35.0",
      "92.0",
      "35.0",
      "93.0",
      "35.0",
      "94.0",
      "35.0",
      "95.0",
      "35.0",
      "96.0",
      "35.0",
      "97.0",
      "35.0",
      "98.0",
      "35.0",
      "99.0",
      "35.0",
      "100.0",
      "36.0",
      "0.0",
      "36.0",
      "1.0",
      "36.0",
      "2.0",
      "36.0",
      "3.0",
      "36.0",
      "4.0",
      "36.0",
      "5.0",
      "36.0",
      "6.0",
      "36.0",
      "7.0",
      "36.0",
      "8.0",
      "36.0",
      "9.0",
      "36.0",
      "10.0",
      "36.0",
      "11.0",
      "36.0",
      "12.0",
      "36.0",
      "13.0",
      "36.0",
      "14.0",
      "36.0",
      "15.0",
      "36.0",
      "16.0",
      "36.0",
      "17.0",
      "36.0",
      "18.0",
      "36.0",
      "19.0",
      "36.0",
      "20.0",
      "36.0",
      "21.0",
      "36.0",
      "22.0",
      "36.0",
      "23.0",
      "36.0",
      "24.0",
      "36.0",
      "25.0",
      "36.0",
      "26.0",
      "36.0",
      "27.0",
      "36.0",
      "28.0",
      "36.0",
      "29.0",
      "36.0",
      "30.0",
      "36.0",
      "31.0",
      "36.0",
      "32.0",
      "36.0",
      "33.0",
      "36.0",
      "34.0",
      "36.0",
      "35.0",
      "36.0",
      "36.0",
      "36.0",
      "37.0",
      "36.0",
      "38.0",
      "36.0",
      "39.0",
      "36.0",
      "40.0",
      "36.0",
      "41.0",
      "36.0",
      "42.0",
      "36.0",
      "43.0",
      "36.0",
      "44.0",
      "36.0",
      "45.0",
      "36.0",
      "46.0",
      "36.0",
      "47.0",
      "36.0",
      "48.0",
      "36.0",
      "49.0",
      "36.0",
      "50.0",
      "36.0",
      "51.0",
      "36.0",
      "52.0",
      "36.0",
      "53.0",
      "36.0",
      "54.0",
      "36.0",
      "55.0",
      "36.0",
      "56.0",
      "36.0",
      "57.0",
      "36.0",
      "58.0",
      "36.0",
      "59.0",
      "36.0",
      "60.0",
      "36.0",
      "61.0",
      "36.0",
      "62.0",
      "36.0",
      "63.0",
      "36.0",
      "64.0",
      "36.0",
      "65.0",
      "36.0",
      "66.0",
      "36.0",
      "67.0",
      "36.0",
      "68.0",
      "36.0",
      "69.0",
      "36.0",
      "70.0",
      "36.0",
      "71.0",
      "36.0",
      "72.0",
      "36.0",
      "73.0",
      "36.0",
      "74.0",
      "36.0",
      "75.0",
      "36.0",
      "76.0",
      "36.0",
      "77.0",
      "36.0",
      "78.0",
      "36.0",
      "79.0",
      "36.0",
      "80.0",
      "36.0",
      "81.0",
      "36.0",
      "82.0",
      "36.0",
      "83.0",
      "36.0",
      "84.0",
      "36.0",
      "85.0",
      "36.0",
      "86.0",
      "36.0",
      "87.0",
      "36.0",
      "88.0",
      "36.0",
      "89.0",
      "36.0",
      "90.0",
      "36.0",
      "91.0",
      "36.0",
      "92.0",
      "36.0",
      "93.0",
      "36.0",
      "94.0",
      "36.0",
      "95.0",
      "36.0",
      "96.0",
      "36.0",
      "97.0",
      "36.0",
      "98.0",
      "36.0",
      "99.0",
      "36.0",
      "100.0",
      "37.0",
      "0.0",
      "37.0",
      "1.0",
      "37.0",
      "2.0",
      "37.0",
      "3.0",
      "37.0",
      "4.0",
      "37.0",
      "5.0",
      "37.0",
      "6.0",
      "37.0",
      "7.0",
      "37.0",
      "8.0",
      "37.0",
      "9.0",
      "37.0",
      "10.0",
      "37.0",
      "11.0",
      "37.0",
      "12.0",
      "37.0",
      "13.0",
      "37.0",
      "14.0",
      "37.0",
      "15.0",
      "37.0",
      "16.0",
      "37.0",
      "17.0",
      "37.0",
      "18.0",
      "37.0",
      "19.0",
      "37.0",
      "20.0",
      "37.0",
      "21.0",
      "37.0",
      "22.0",
      "37.0",
      "23.0",
      "37.0",
      "24.0",
      "37.0",
      "25.0",
      "37.0",
      "26.0",
      "37.0",
      "27.0",
      "37.0",
      "28.0",
      "37.0",
      "29.0",
      "37.0",
      "30.0",
      "37.0",
      "31.0",
      "37.0",
      "32.0",
      "37.0",
      "33.0",
      "37.0",
      "34.0",
      "37.0",
      "35.0",
      "37.0",
      "36.0",
      "37.0",
      "37.0",
      "37.0",
      "38.0",
      "37.0",
      "39.0",
      "37.0",
      "40.0",
      "37.0",
      "41.0",
      "37.0",
      "42.0",
      "37.0",
      "43.0",
      "37.0",
      "44.0",
      "37.0",
      "45.0",
      "37.0",
      "46.0",
      "37.0",
      "47.0",
      "37.0",
      "48.0",
      "37.0",
      "49.0",
      "37.0",
      "50.0",
      "37.0",
      "51.0",
      "37.0",
      "52.0",
      "37.0",
      "53.0",
      "37.0",
      "54.0",
      "37.0",
      "55.0",
      "37.0",
      "56.0",
      "37.0",
      "57.0",
      "37.0",
      "58.0",
      "37.0",
      "59.0",
      "37.0",
      "60.0",
      "37.0",
      "61.0",
      "37.0",
      "62.0",
      "37.0",
      "63.0",
      "37.0",
      "64.0",
      "37.0",
      "65.0",
      "37.0",
      "66.0",
      "37.0",
      "67.0",
      "37.0",
      "68.0",
      "37.0",
      "69.0",
      "37.0",
      "70.0",
      "37.0",
      "71.0",
      "37.0",
      "72.0",
      "37.0",
      "73.0",
      "37.0",
      "74.0",
      "37.0",
      "75.0",
      "37.0",
      "76.0",
      "37.0",
      "77.0",
      "37.0",
      "78.0",
      "37.0",
      "79.0",
      "37.0",
      "80.0",
      "37.0",
      "81.0",
      "37.0",
      "82.0",
      "37.0",
      "83.0",
      "37.0",
      "84.0",
      "37.0",
      "85.0",
      "37.0",
      "86.0",
      "37.0",
      "87.0",
      "37.0",
      "88.0",
      "37.0",
      "89.0",
      "37.0",
      "90.0",
      "37.0",
      "91.0",
      "37.0",
      "92.0",
      "37.0",
      "93.0",
      "37.0",
      "94.0",
      "37.0",
      "95.0",
      "37.0",
      "96.0",
      "37.0",
      "97.0",
      "37.0",
      "98.0",
      "37.0",
      "99.0",
      "37.0",
      "100.0",
      "38.0",
      "0.0",
      "38.0",
      "1.0",
      "38.0",
      "2.0",
      "38.0",
      "3.0",
      "38.0",
      "4.0",
      "38.0",
      "5.0",
      "38.0",
      "6.0",
      "38.0",
      "7.0",
      "38.0",
      "8.0",
      "38.0",
      "9.0",
      "38.0",
      "10.0",
      "38.0",
      "11.0",
      "38.0",
      "12.0",
      "38.0",
      "13.0",
      "38.0",
      "14.0",
      "38.0",
      "15.0",
      "38.0",
      "16.0",
      "38.0",
      "17.0",
      "38.0",
      "18.0",
      "38.0",
      "19.0",
      "38.0",
      "20.0",
      "38.0",
      "21.0",
      "38.0",
      "22.0",
      "38.0",
      "23.0",
      "38.0",
      "24.0",
      "38.0",
      "25.0",
      "38.0",
      "26.0",
      "38.0",
      "27.0",
      "38.0",
      "28.0",
      "38.0",
      "29.0",
      "38.0",
      "30.0",
      "38.0",
      "31.0",
      "38.0",
      "32.0",
      "38.0",
      "33.0",
      "38.0",
      "34.0",
      "38.0",
      "35.0",
      "38.0",
      "36.0",
      "38.0",
      "37.0",
      "38.0",
      "38.0",
      "38.0",
      "39.0",
      "38.0",
      "40.0",
      "38.0",
      "41.0",
      "38.0",
      "42.0",
      "38.0",
      "43.0",
      "38.0",
      "44.0",
      "38.0",
      "45.0",
      "38.0",
      "46.0",
      "38.0",
      "47.0",
      "38.0",
      "48.0",
      "38.0",
      "49.0",
      "38.0",
      "50.0",
      "38.0",
      "51.0",
      "38.0",
      "52.0",
      "38.0",
      "53.0",
      "38.0",
      "54.0",
      "38.0",
      "55.0",
      "38.0",
      "56.0",
      "38.0",
      "57.0",
      "38.0",
      "58.0",
      "38.0",
      "59.0",
      "38.0",
      "60.0",
      "38.0",
      "61.0",
      "38.0",
      "62.0",
      "38.0",
      "63.0",
      "38.0",
      "64.0",
      "38.0",
      "65.0",
      "38.0",
      "66.0",
      "38.0",
      "67.0",
      "38.0",
      "68.0",
      "38.0",
      "69.0",
      "38.0",
      "70.0",
      "38.0",
      "71.0",
      "38.0",
      "72.0",
      "38.0",
      "73.0",
      "38.0",
      "74.0",
      "38.0",
      "75.0",
      "38.0",
      "76.0",
      "38.0",
      "77.0",
      "38.0",
      "78.0",
      "38.0",
      "79.0",
      "38.0",
      "80.0",
      "38.0",
      "81.0",
      "38.0",
      "82.0",
      "38.0",
      "83.0",
      "38.0",
      "84.0",
      "38.0",
      "85.0",
      "38.0",
      "86.0",
      "38.0",
      "87.0",
      "38.0",
      "88.0",
      "38.0",
      "89.0",
      "38.0",
      "90.0",
      "38.0",
      "91.0",
      "38.0",
      "92.0",
      "38.0",
      "93.0",
      "38.0",
      "94.0",
      "38.0",
      "95.0",
      "38.0",
      "96.0",
      "38.0",
      "97.0",
      "38.0",
      "98.0",
      "38.0",
      "99.0",
      "38.0",
      "100.0",
      "39.0",
      "0.0",
      "39.0",
      "1.0",
      "39.0",
      "2.0",
      "39.0",
      "3.0",
      "39.0",
      "4.0",
      "39.0",
      "5.0",
      "39.0",
      "6.0",
      "39.0",
      "7.0",
      "39.0",
      "8.0",
      "39.0",
      "9.0",
      "39.0",
      "10.0",
      "39.0",
      "11.0",
      "39.0",
      "12.0",
      "39.0",
      "13.0",
      "39.0",
      "14.0",
      "39.0",
      "15.0",
      "39.0",
      "16.0",
      "39.0",
      "17.0",
      "39.0",
      "18.0",
      "39.0",
      "19.0",
      "39.0",
      "20.0",
      "39.0",
      "21.0",
      "39.0",
      "22.0",
      "39.0",
      "23.0",
      "39.0",
      "24.0",
      "39.0",
      "25.0",
      "39.0",
      "26.0",
      "39.0",
      "27.0",
      "39.0",
      "28.0",
      "39.0",
      "29.0",
      "39.0",
      "30.0",
      "39.0",
      "31.0",
      "39.0",
      "32.0",
      "39.0",
      "33.0",
      "39.0",
      "34.0",
      "39.0",
      "35.0",
      "39.0",
      "36.0",
      "39.0",
      "37.0",
      "39.0",
      "38.0",
      "39.0",
      "39.0",
      "39.0",
      "40.0",
      "39.0",
      "41.0",
      "39.0",
      "42.0",
      "39.0",
      "43.0",
      "39.0",
      "44.0",
      "39.0",
      "45.0",
      "39.0",
      "46.0",
      "39.0",
      "47.0",
      "39.0",
      "48.0",
      "39.0",
      "49.0",
      "39.0",
      "50.0",
      "39.0",
      "51.0",
      "39.0",
      "52.0",
      "39.0",
      "53.0",
      "39.0",
      "54.0",
      "39.0",
      "55.0",
      "39.0",
      "56.0",
      "39.0",
      "57.0",
      "39.0",
      "58.0",
      "39.0",
      "59.0",
      "39.0",
      "60.0",
      "39.0",
      "61.0",
      "39.0",
      "62.0",
      "39.0",
      "63.0",
      "39.0",
      "64.0",
      "39.0",
      "65.0",
      "39.0",
      "66.0",
      "39.0",
      "67.0",
      "39.0",
      "68.0",
      "39.0",
      "69.0",
      "39.0",
      "70.0",
      "39.0",
      "71.0",
      "39.0",
      "72.0",
      "39.0",
      "73.0",
      "39.0",
      "74.0",
      "39.0",
      "75.0",
      "39.0",
      "76.0",
      "39.0",
      "77.0",
      "39.0",
      "78.0",
      "39.0",
      "79.0",
      "39.0",
      "80.0",
      "39.0",
      "81.0",
      "39.0",
      "82.0",
      "39.0",
      "83.0",
      "39.0",
      "84.0",
      "39.0",
      "85.0",
      "39.0",
      "86.0",
      "39.0",
      "87.0",
      "39.0",
      "88.0",
      "39.0",
      "89.0",
      "39.0",
      "90.0",
      "39.0",
      "91.0",
      "39.0",
      "92.0",
      "39.0",
      "93.0",
      "39.0",
      "94.0",
      "39.0",
      "95.0",
      "39.0",
      "96.0",
      "39.0",
      "97.0",
      "39.0",
      "98.0",
      "39.0",
      "99.0",
      "39.0",
      "100.0",
      "40.0",
      "0.0",
      "40.0",
      "1.0",
      "40.0",
      "2.0",
      "40.0",
      "3.0",
      "40.0",
      "4.0",
      "40.0",
      "5.0",
      "40.0",
      "6.0",
      "40.0",
      "7.0",
      "40.0",
      "8.0",
      "40.0",
      "9.0",
      "40.0",
      "10.0",
      "40.0",
      "11.0",
      "40.0",
      "12.0",
      "40.0",
      "13.0",
      "40.0",
      "14.0",
      "40.0",
      "15.0",
      "40.0",
      "16.0",
      "40.0",
      "17.0",
      "40.0",
      "18.0",
      "40.0",
      "19.0",
      "40.0",
      "20.0",
      "40.0",
      "21.0",
      "40.0",
      "22.0",
      "40.0",
      "23.0",
      "40.0",
      "24.0",
      "40.0",
      "25.0",
      "40.0",
      "26.0",
      "40.0",
      "27.0",
      "40.0",
      "28.0",
      "40.0",
      "29.0",
      "40.0",
      "30.0",
      "40.0",
      "31.0",
      "40.0",
      "32.0",
      "40.0",
      "33.0",
      "40.0",
      "34.0",
      "40.0",
      "35.0",
      "40.0",
      "36.0",
      "40.0",
      "37.0",
      "40.0",
      "38.0",
      "40.0",
      "39.0",
      "40.0",
      "40.0",
      "40.0",
      "41.0",
      "40.0",
      "42.0",
      "40.0",
      "43.0",
      "40.0",
      "44.0",
      "40.0",
      "45.0",
      "40.0",
      "46.0",
      "40.0",
      "47.0",
      "40.0",
      "48.0",
      "40.0",
      "49.0",
      "40.0",
      "50.0",
      "40.0",
      "51.0",
      "40.0",
      "52.0",
      "40.0",
      "53.0",
      "40.0",
      "54.0",
      "40.0",
      "55.0",
      "40.0",
      "56.0",
      "40.0",
      "57.0",
      "40.0",
      "58.0",
      "40.0",
      "59.0",
      "40.0",
      "60.0",
      "40.0",
      "61.0",
      "40.0",
      "62.0",
      "40.0",
      "63.0",
      "40.0",
      "64.0",
      "40.0",
      "65.0",
      "40.0",
      "66.0",
      "40.0",
      "67.0",
      "40.0",
      "68.0",
      "40.0",
      "69.0",
      "40.0",
      "70.0",
      "40.0",
      "71.0",
      "40.0",
      "72.0",
      "40.0",
      "73.0",
      "40.0",
      "74.0",
      "40.0",
      "75.0",
      "40.0",
      "76.0",
      "40.0",
      "77.0",
      "40.0",
      "78.0",
      "40.0",
      "79.0",
      "40.0",
      "80.0",
      "40.0",
      "81.0",
      "40.0",
      "82.0",
      "40.0",
      "83.0",
      "40.0",
      "84.0",
      "40.0",
      "85.0",
      "40.0",
      "86.0",
      "40.0",
      "87.0",
      "40.0",
      "88.0",
      "40.0",
      "89.0",
      "40.0",
      "90.0",
      "40.0",
      "91.0",
      "40.0",
      "92.0",
      "40.0",
      "93.0",
      "40.0",
      "94.0",
      "40.0",
      "95.0",
      "40.0",
      "96.0",
      "40.0",
      "97.0",
      "40.0",
      "98.0",
      "40.0",
      "99.0",
      "40.0",
      "100.0",
      "41.0",
      "0.0",
      "41.0",
      "1.0",
      "41.0",
      "2.0",
      "41.0",
      "3.0",
      "41.0",
      "4.0",
      "41.0",
      "5.0",
      "41.0",
      "6.0",
      "41.0",
      "7.0",
      "41.0",
      "8.0",
      "41.0",
      "9.0",
      "41.0",
      "10.0",
      "41.0",
      "11.0",
      "41.0",
      "12.0",
      "41.0",
      "13.0",
      "41.0",
      "14.0",
      "41.0",
      "15.0",
      "41.0",
      "16.0",
      "41.0",
      "17.0",
      "41.0",
      "18.0",
      "41.0",
      "19.0",
      "41.0",
      "20.0",
      "41.0",
      "21.0",
      "41.0",
      "22.0",
      "41.0",
      "23.0",
      "41.0",
      "24.0",
      "41.0",
      "25.0",
      "41.0",
      "26.0",
      "41.0",
      "27.0",
      "41.0",
      "28.0",
      "41.0",
      "29.0",
      "41.0",
      "30.0",
      "41.0",
      "31.0",
      "41.0",
      "32.0",
      "41.0",
      "33.0",
      "41.0",
      "34.0",
      "41.0",
      "35.0",
      "41.0",
      "36.0",
      "41.0",
      "37.0",
      "41.0",
      "38.0",
      "41.0",
      "39.0",
      "41.0",
      "40.0",
      "41.0",
      "41.0",
      "41.0",
      "42.0",
      "41.0",
      "43.0",
      "41.0",
      "44.0",
      "41.0",
      "45.0",
      "41.0",
      "46.0",
      "41.0",
      "47.0",
      "41.0",
      "48.0",
      "41.0",
      "49.0",
      "41.0",
      "50.0",
      "41.0",
      "51.0",
      "41.0",
      "52.0",
      "41.0",
      "53.0",
      "41.0",
      "54.0",
      "41.0",
      "55.0",
      "41.0",
      "56.0",
      "41.0",
      "57.0",
      "41.0",
      "58.0",
      "41.0",
      "59.0",
      "41.0",
      "60.0",
      "41.0",
      "61.0",
      "41.0",
      "62.0",
      "41.0",
      "63.0",
      "41.0",
      "64.0",
      "41.0",
      "65.0",
      "41.0",
      "66.0",
      "41.0",
      "67.0",
      "41.0",
      "68.0",
      "41.0",
      "69.0",
      "41.0",
      "70.0",
      "41.0",
      "71.0",
      "41.0",
      "72.0",
      "41.0",
      "73.0",
      "41.0",
      "74.0",
      "41.0",
      "75.0",
      "41.0",
      "76.0",
      "41.0",
      "77.0",
      "41.0",
      "78.0",
      "41.0",
      "79.0",
      "41.0",
      "80.0",
      "41.0",
      "81.0",
      "41.0",
      "82.0",
      "41.0",
      "83.0",
      "41.0",
      "84.0",
      "41.0",
      "85.0",
      "41.0",
      "86.0",
      "41.0",
      "87.0",
      "41.0",
      "88.0",
      "41.0",
      "89.0",
      "41.0",
      "90.0",
      "41.0",
      "91.0",
      "41.0",
      "92.0",
      "41.0",
      "93.0",
      "41.0",
      "94.0",
      "41.0",
      "95.0",
      "41.0",
      "96.0",
      "41.0",
      "97.0",
      "41.0",
      "98.0",
      "41.0",
      "99.0",
      "41.0",
      "100.0",
      "42.0",
      "0.0",
      "42.0",
      "1.0",
      "42.0",
      "2.0",
      "42.0",
      "3.0",
      "42.0",
      "4.0",
      "42.0",
      "5.0",
      "42.0",
      "6.0",
      "42.0",
      "7.0",
      "42.0",
      "8.0",
      "42.0",
      "9.0",
      "42.0",
      "10.0",
      "42.0",
      "11.0",
      "42.0",
      "12.0",
      "42.0",
      "13.0",
      "42.0",
      "14.0",
      "42.0",
      "15.0",
      "42.0",
      "16.0",
      "42.0",
      "17.0",
      "42.0",
      "18.0",
      "42.0",
      "19.0",
      "42.0",
      "20.0",
      "42.0",
      "21.0",
      "42.0",
      "22.0",
      "42.0",
      "23.0",
      "42.0",
      "24.0",
      "42.0",
      "25.0",
      "42.0",
      "26.0",
      "42.0",
      "27.0",
      "42.0",
      "28.0",
      "42.0",
      "29.0",
      "42.0",
      "30.0",
      "42.0",
      "31.0",
      "42.0",
      "32.0",
      "42.0",
      "33.0",
      "42.0",
      "34.0",
      "42.0",
      "35.0",
      "42.0",
      "36.0",
      "42.0",
      "37.0",
      "42.0",
      "38.0",
      "42.0",
      "39.0",
      "42.0",
      "40.0",
      "42.0",
      "41.0",
      "42.0",
      "42.0",
      "42.0",
      "43.0",
      "42.0",
      "44.0",
      "42.0",
      "45.0",
      "42.0",
      "46.0",
      "42.0",
      "47.0",
      "42.0",
      "48.0",
      "42.0",
      "49.0",
      "42.0",
      "50.0",
      "42.0",
      "51.0",
      "42.0",
      "52.0",
      "42.0",
      "53.0",
      "42.0",
      "54.0",
      "42.0",
      "55.0",
      "42.0",
      "56.0",
      "42.0",
      "57.0",
      "42.0",
      "58.0",
      "42.0",
      "59.0",
      "42.0",
      "60.0",
      "42.0",
      "61.0",
      "42.0",
      "62.0",
      "42.0",
      "63.0",
      "42.0",
      "64.0",
      "42.0",
      "65.0",
      "42.0",
      "66.0",
      "42.0",
      "67.0",
      "42.0",
      "68.0",
      "42.0",
      "69.0",
      "42.0",
      "70.0",
      "42.0",
      "71.0",
      "42.0",
      "72.0",
      "42.0",
      "73.0",
      "42.0",
      "74.0",
      "42.0",
      "75.0",
      "42.0",
      "76.0",
      "42.0",
      "77.0",
      "42.0",
      "78.0",
      "42.0",
      "79.0",
      "42.0",
      "80.0",
      "42.0",
      "81.0",
      "42.0",
      "82.0",
      "42.0",
      "83.0",
      "42.0",
      "84.0",
      "42.0",
      "85.0",
      "42.0",
      "86.0",
      "42.0",
      "87.0",
      "42.0",
      "88.0",
      "42.0",
      "89.0",
      "42.0",
      "90.0",
      "42.0",
      "91.0",
      "42.0",
      "92.0",
      "42.0",
      "93.0",
      "42.0",
      "94.0",
      "42.0",
      "95.0",
      "42.0",
      "96.0",
      "42.0",
      "97.0",
      "42.0",
      "98.0",
      "42.0",
      "99.0",
      "42.0",
      "100.0",
      "43.0",
      "0.0",
      "43.0",
      "1.0",
      "43.0",
      "2.0",
      "43.0",
      "3.0",
      "43.0",
      "4.0",
      "43.0",
      "5.0",
      "43.0",
      "6.0",
      "43.0",
      "7.0",
      "43.0",
      "8.0",
      "43.0",
      "9.0",
      "43.0",
      "10.0",
      "43.0",
      "11.0",
      "43.0",
      "12.0",
      "43.0",
      "13.0",
      "43.0",
      "14.0",
      "43.0",
      "15.0",
      "43.0",
      "16.0",
      "43.0",
      "17.0",
      "43.0",
      "18.0",
      "43.0",
      "19.0",
      "43.0",
      "20.0",
      "43.0",
      "21.0",
      "43.0",
      "22.0",
      "43.0",
      "23.0",
      "43.0",
      "24.0",
      "43.0",
      "25.0",
      "43.0",
      "26.0",
      "43.0",
      "27.0",
      "43.0",
      "28.0",
      "43.0",
      "29.0",
      "43.0",
      "30.0",
      "43.0",
      "31.0",
      "43.0",
      "32.0",
      "43.0",
      "33.0",
      "43.0",
      "34.0",
      "43.0",
      "35.0",
      "43.0",
      "36.0",
      "43.0",
      "37.0",
      "43.0",
      "38.0",
      "43.0",
      "39.0",
      "43.0",
      "40.0",
      "43.0",
      "41.0",
      "43.0",
      "42.0",
      "43.0",
      "43.0",
      "43.0",
      "44.0",
      "43.0",
      "45.0",
      "43.0",
      "46.0",
      "43.0",
      "47.0",
      "43.0",
      "48.0",
      "43.0",
      "49.0",
      "43.0",
      "50.0",
      "43.0",
      "51.0",
      "43.0",
      "52.0",
      "43.0",
      "53.0",
      "43.0",
      "54.0",
      "43.0",
      "55.0",
      "43.0",
      "56.0",
      "43.0",
      "57.0",
      "43.0",
      "58.0",
      "43.0",
      "59.0",
      "43.0",
      "60.0",
      "43.0",
      "61.0",
      "43.0",
      "62.0",
      "43.0",
      "63.0",
      "43.0",
      "64.0",
      "43.0",
      "65.0",
      "43.0",
      "66.0",
      "43.0",
      "67.0",
      "43.0",
      "68.0",
      "43.0",
      "69.0",
      "43.0",
      "70.0",
      "43.0",
      "71.0",
      "43.0",
      "72.0",
      "43.0",
      "73.0",
      "43.0",
      "74.0",
      "43.0",
      "75.0",
      "43.0",
      "76.0",
      "43.0",
      "77.0",
      "43.0",
      "78.0",
      "43.0",
      "79.0",
      "43.0",
      "80.0",
      "43.0",
      "81.0",
      "43.0",
      "82.0",
      "43.0",
      "83.0",
      "43.0",
      "84.0",
      "43.0",
      "85.0",
      "43.0",
      "86.0",
      "43.0",
      "87.0",
      "43.0",
      "88.0",
      "43.0",
      "89.0",
      "43.0",
      "90.0",
      "43.0",
      "91.0",
      "43.0",
      "92.0",
      "43.0",
      "93.0",
      "43.0",
      "94.0",
      "43.0",
      "95.0",
      "43.0",
      "96.0",
      "43.0",
      "97.0",
      "43.0",
      "98.0",
      "43.0",
      "99.0",
      "43.0",
      "100.0",
      "44.0",
      "0.0",
      "44.0",
      "1.0",
      "44.0",
      "2.0",
      "44.0",
      "3.0",
      "44.0",
      "4.0",
      "44.0",
      "5.0",
      "44.0",
      "6.0",
      "44.0",
      "7.0",
      "44.0",
      "8.0",
      "44.0",
      "9.0",
      "44.0",
      "10.0",
      "44.0",
      "11.0",
      "44.0",
      "12.0",
      "44.0",
      "13.0",
      "44.0",
      "14.0",
      "44.0",
      "15.0",
      "44.0",
      "16.0",
      "44.0",
      "17.0",
      "44.0",
      "18.0",
      "44.0",
      "19.0",
      "44.0",
      "20.0",
      "44.0",
      "21.0",
      "44.0",
      "22.0",
      "44.0",
      "23.0",
      "44.0",
      "24.0",
      "44.0",
      "25.0",
      "44.0",
      "26.0",
      "44.0",
      "27.0",
      "44.0",
      "28.0",
      "44.0",
      "29.0",
      "44.0",
      "30.0",
      "44.0",
      "31.0",
      "44.0",
      "32.0",
      "44.0",
      "33.0",
      "44.0",
      "34.0",
      "44.0",
      "35.0",
      "44.0",
      "36.0",
      "44.0",
      "37.0",
      "44.0",
      "38.0",
      "44.0",
      "39.0",
      "44.0",
      "40.0",
      "44.0",
      "41.0",
      "44.0",
      "42.0",
      "44.0",
      "43.0",
      "44.0",
      "44.0",
      "44.0",
      "45.0",
      "44.0",
      "46.0",
      "44.0",
      "47.0",
      "44.0",
      "48.0",
      "44.0",
      "49.0",
      "44.0",
      "50.0",
      "44.0",
      "51.0",
      "44.0",
      "52.0",
      "44.0",
      "53.0",
      "44.0",
      "54.0",
      "44.0",
      "55.0",
      "44.0",
      "56.0",
      "44.0",
      "57.0",
      "44.0",
      "58.0",
      "44.0",
      "59.0",
      "44.0",
      "60.0",
      "44.0",
      "61.0",
      "44.0",
      "62.0",
      "44.0",
      "63.0",
      "44.0",
      "64.0",
      "44.0",
      "65.0",
      "44.0",
      "66.0",
      "44.0",
      "67.0",
      "44.0",
      "68.0",
      "44.0",
      "69.0",
      "44.0",
      "70.0",
      "44.0",
      "71.0",
      "44.0",
      "72.0",
      "44.0",
      "73.0",
      "44.0",
      "74.0",
      "44.0",
      "75.0",
      "44.0",
      "76.0",
      "44.0",
      "77.0",
      "44.0",
      "78.0",
      "44.0",
      "79.0",
      "44.0",
      "80.0",
      "44.0",
      "81.0",
      "44.0",
      "82.0",
      "44.0",
      "83.0",
      "44.0",
      "84.0",
      "44.0",
      "85.0",
      "44.0",
      "86.0",
      "44.0",
      "87.0",
      "44.0",
      "88.0",
      "44.0",
      "89.0",
      "44.0",
      "90.0",
      "44.0",
      "91.0",
      "44.0",
      "92.0",
      "44.0",
      "93.0",
      "44.0",
      "94.0",
      "44.0",
      "95.0",
      "44.0",
      "96.0",
      "44.0",
      "97.0",
      "44.0",
      "98.0",
      "44.0",
      "99.0",
      "44.0",
      "100.0",
      "45.0",
      "0.0",
      "45.0",
      "1.0",
      "45.0",
      "2.0",
      "45.0",
      "3.0",
      "45.0",
      "4.0",
      "45.0",
      "5.0",
      "45.0",
      "6.0",
      "45.0",
      "7.0",
      "45.0",
      "8.0",
      "45.0",
      "9.0",
      "45.0",
      "10.0",
      "45.0",
      "11.0",
      "45.0",
      "12.0",
      "45.0",
      "13.0",
      "45.0",
      "14.0",
      "45.0",
      "15.0",
      "45.0",
      "16.0",
      "45.0",
      "17.0",
      "45.0",
      "18.0",
      "45.0",
      "19.0",
      "45.0",
      "20.0",
      "45.0",
      "21.0",
      "45.0",
      "22.0",
      "45.0",
      "23.0",
      "45.0",
      "24.0",
      "45.0",
      "25.0",
      "45.0",
      "26.0",
      "45.0",
      "27.0",
      "45.0",
      "28.0",
      "45.0",
      "29.0",
      "45.0",
      "30.0",
      "45.0",
      "31.0",
      "45.0",
      "32.0",
      "45.0",
      "33.0",
      "45.0",
      "34.0",
      "45.0",
      "35.0",
      "45.0",
      "36.0",
      "45.0",
      "37.0",
      "45.0",
      "38.0",
      "45.0",
      "39.0",
      "45.0",
      "40.0",
      "45.0",
      "41.0",
      "45.0",
      "42.0",
      "45.0",
      "43.0",
      "45.0",
      "44.0",
      "45.0",
      "45.0",
      "45.0",
      "46.0",
      "45.0",
      "47.0",
      "45.0",
      "48.0",
      "45.0",
      "49.0",
      "45.0",
      "50.0",
      "45.0",
      "51.0",
      "45.0",
      "52.0",
      "45.0",
      "53.0",
      "45.0",
      "54.0",
      "45.0",
      "55.0",
      "45.0",
      "56.0",
      "45.0",
      "57.0",
      "45.0",
      "58.0",
      "45.0",
      "59.0",
      "45.0",
      "60.0",
      "45.0",
      "61.0",
      "45.0",
      "62.0",
      "45.0",
      "63.0",
      "45.0",
      "64.0",
      "45.0",
      "65.0",
      "45.0",
      "66.0",
      "45.0",
      "67.0",
      "45.0",
      "68.0",
      "45.0",
      "69.0",
      "45.0",
      "70.0",
      "45.0",
      "71.0",
      "45.0",
      "72.0",
      "45.0",
      "73.0",
      "45.0",
      "74.0",
      "45.0",
      "75.0",
      "45.0",
      "76.0",
      "45.0",
      "77.0",
      "45.0",
      "78.0",
      "45.0",
      "79.0",
      "45.0",
      "80.0",
      "45.0",
      "81.0",
      "45.0",
      "82.0",
      "45.0",
      "83.0",
      "45.0",
      "84.0",
      "45.0",
      "85.0",
      "45.0",
      "86.0",
      "45.0",
      "87.0",
      "45.0",
      "88.0",
      "45.0",
      "89.0",
      "45.0",
      "90.0",
      "45.0",
      "91.0",
      "45.0",
      "92.0",
      "45.0",
      "93.0",
      "45.0",
      "94.0",
      "45.0",
      "95.0",
      "45.0",
      "96.0",
      "45.0",
      "97.0",
      "45.0",
      "98.0",
      "45.0",
      "99.0",
      "45.0",
      "100.0",
      "46.0",
      "0.0",
      "46.0",
      "1.0",
      "46.0",
      "2.0",
      "46.0",
      "3.0",
      "46.0",
      "4.0",
      "46.0",
      "5.0",
      "46.0",
      "6.0",
      "46.0",
      "7.0",
      "46.0",
      "8.0",
      "46.0",
      "9.0",
      "46.0",
      "10.0",
      "46.0",
      "11.0",
      "46.0",
      "12.0",
      "46.0",
      "13.0",
      "46.0",
      "14.0",
      "46.0",
      "15.0",
      "46.0",
      "16.0",
      "46.0",
      "17.0",
      "46.0",
      "18.0",
      "46.0",
      "19.0",
      "46.0",
      "20.0",
      "46.0",
      "21.0",
      "46.0",
      "22.0",
      "46.0",
      "23.0",
      "46.0",
      "24.0",
      "46.0",
      "25.0",
      "46.0",
      "26.0",
      "46.0",
      "27.0",
      "46.0",
      "28.0",
      "46.0",
      "29.0",
      "46.0",
      "30.0",
      "46.0",
      "31.0",
      "46.0",
      "32.0",
      "46.0",
      "33.0",
      "46.0",
      "34.0",
      "46.0",
      "35.0",
      "46.0",
      "36.0",
      "46.0",
      "37.0",
      "46.0",
      "38.0",
      "46.0",
      "39.0",
      "46.0",
      "40.0",
      "46.0",
      "41.0",
      "46.0",
      "42.0",
      "46.0",
      "43.0",
      "46.0",
      "44.0",
      "46.0",
      "45.0",
      "46.0",
      "46.0",
      "46.0",
      "47.0",
      "46.0",
      "48.0",
      "46.0",
      "49.0",
      "46.0",
      "50.0",
      "46.0",
      "51.0",
      "46.0",
      "52.0",
      "46.0",
      "53.0",
      "46.0",
      "54.0",
      "46.0",
      "55.0",
      "46.0",
      "56.0",
      "46.0",
      "57.0",
      "46.0",
      "58.0",
      "46.0",
      "59.0",
      "46.0",
      "60.0",
      "46.0",
      "61.0",
      "46.0",
      "62.0",
      "46.0",
      "63.0",
      "46.0",
      "64.0",
      "46.0",
      "65.0",
      "46.0",
      "66.0",
      "46.0",
      "67.0",
      "46.0",
      "68.0",
      "46.0",
      "69.0",
      "46.0",
      "70.0",
      "46.0",
      "71.0",
      "46.0",
      "72.0",
      "46.0",
      "73.0",
      "46.0",
      "74.0",
      "46.0",
      "75.0",
      "46.0",
      "76.0",
      "46.0",
      "77.0",
      "46.0",
      "78.0",
      "46.0",
      "79.0",
      "46.0",
      "80.0",
      "46.0",
      "81.0",
      "46.0",
      "82.0",
      "46.0",
      "83.0",
      "46.0",
      "84.0",
      "46.0",
      "85.0",
      "46.0",
      "86.0",
      "46.0",
      "87.0",
      "46.0",
      "88.0",
      "46.0",
      "89.0",
      "46.0",
      "90.0",
      "46.0",
      "91.0",
      "46.0",
      "92.0",
      "46.0",
      "93.0",
      "46.0",
      "94.0",
      "46.0",
      "95.0",
      "46.0",
      "96.0",
      "46.0",
      "97.0",
      "46.0",
      "98.0",
      "46.0",
      "99.0",
      "46.0",
      "100.0",
      "47.0",
      "0.0",
      "47.0",
      "1.0",
      "47.0",
      "2.0",
      "47.0",
      "3.0",
      "47.0",
      "4.0",
      "47.0",
      "5.0",
      "47.0",
      "6.0",
      "47.0",
      "7.0",
      "47.0",
      "8.0",
      "47.0",
      "9.0",
      "47.0",
      "10.0",
      "47.0",
      "11.0",
      "47.0",
      "12.0",
      "47.0",
      "13.0",
      "47.0",
      "14.0",
      "47.0",
      "15.0",
      "47.0",
      "16.0",
      "47.0",
      "17.0",
      "47.0",
      "18.0",
      "47.0",
      "19.0",
      "47.0",
      "20.0",
      "47.0",
      "21.0",
      "47.0",
      "22.0",
      "47.0",
      "23.0",
      "47.0",
      "24.0",
      "47.0",
      "25.0",
      "47.0",
      "26.0",
      "47.0",
      "27.0",
      "47.0",
      "28.0",
      "47.0",
      "29.0",
      "47.0",
      "30.0",
      "47.0",
      "31.0",
      "47.0",
      "32.0",
      "47.0",
      "33.0",
      "47.0",
      "34.0",
      "47.0",
      "35.0",
      "47.0",
      "36.0",
      "47.0",
      "37.0",
      "47.0",
      "38.0",
      "47.0",
      "39.0",
      "47.0",
      "40.0",
      "47.0",
      "41.0",
      "47.0",
      "42.0",
      "47.0",
      "43.0",
      "47.0",
      "44.0",
      "47.0",
      "45.0",
      "47.0",
      "46.0",
      "47.0",
      "47.0",
      "47.0",
      "48.0",
      "47.0",
      "49.0",
      "47.0",
      "50.0",
      "47.0",
      "51.0",
      "47.0",
      "52.0",
      "47.0",
      "53.0",
      "47.0",
      "54.0",
      "47.0",
      "55.0",
      "47.0",
      "56.0",
      "47.0",
      "57.0",
      "47.0",
      "58.0",
      "47.0",
      "59.0",
      "47.0",
      "60.0",
      "47.0",
      "61.0",
      "47.0",
      "62.0",
      "47.0",
      "63.0",
      "47.0",
      "64.0",
      "47.0",
      "65.0",
      "47.0",
      "66.0",
      "47.0",
      "67.0",
      "47.0",
      "68.0",
      "47.0",
      "69.0",
      "47.0",
      "70.0",
      "47.0",
      "71.0",
      "47.0",
      "72.0",
      "47.0",
      "73.0",
      "47.0",
      "74.0",
      "47.0",
      "75.0",
      "47.0",
      "76.0",
      "47.0",
      "77.0",
      "47.0",
      "78.0",
      "47.0",
      "79.0",
      "47.0",
      "80.0",
      "47.0",
      "81.0",
      "47.0",
      "82.0",
      "47.0",
      "83.0",
      "47.0",
      "84.0",
      "47.0",
      "85.0",
      "47.0",
      "86.0",
      "47.0",
      "87.0",
      "47.0",
      "88.0",
      "47.0",
      "89.0",
      "47.0",
      "90.0",
      "47.0",
      "91.0",
      "47.0",
      "92.0",
      "47.0",
      "93.0",
      "47.0",
      "94.0",
      "47.0",
      "95.0",
      "47.0",
      "96.0",
      "47.0",
      "97.0",
      "47.0",
      "98.0",
      "47.0",
      "99.0",
      "47.0",
      "100.0",
      "48.0",
      "0.0",
      "48.0",
      "1.0",
      "48.0",
      "2.0",
      "48.0",
      "3.0",
      "48.0",
      "4.0",
      "48.0",
      "5.0",
      "48.0",
      "6.0",
      "48.0",
      "7.0",
      "48.0",
      "8.0",
      "48.0",
      "9.0",
      "48.0",
      "10.0",
      "48.0",
      "11.0",
      "48.0",
      "12.0",
      "48.0",
      "13.0",
      "48.0",
      "14.0",
      "48.0",
      "15.0",
      "48.0",
      "16.0",
      "48.0",
      "17.0",
      "48.0",
      "18.0",
      "48.0",
      "19.0",
      "48.0",
      "20.0",
      "48.0",
      "21.0",
      "48.0",
      "22.0",
      "48.0",
      "23.0",
      "48.0",
      "24.0",
      "48.0",
      "25.0",
      "48.0",
      "26.0",
      "48.0",
      "27.0",
      "48.0",
      "28.0",
      "48.0",
      "29.0",
      "48.0",
      "30.0",
      "48.0",
      "31.0",
      "48.0",
      "32.0",
      "48.0",
      "33.0",
      "48.0",
      "34.0",
      "48.0",
      "35.0",
      "48.0",
      "36.0",
      "48.0",
      "37.0",
      "48.0",
      "38.0",
      "48.0",
      "39.0",
      "48.0",
      "40.0",
      "48.0",
      "41.0",
      "48.0",
      "42.0",
      "48.0",
      "43.0",
      "48.0",
      "44.0",
      "48.0",
      "45.0",
      "48.0",
      "46.0",
      "48.0",
      "47.0",
      "48.0",
      "48.0",
      "48.0",
      "49.0",
      "48.0",
      "50.0",
      "48.0",
      "51.0",
      "48.0",
      "52.0",
      "48.0",
      "53.0",
      "48.0",
      "54.0",
      "48.0",
      "55.0",
      "48.0",
      "56.0",
      "48.0",
      "57.0",
      "48.0",
      "58.0",
      "48.0",
      "59.0",
      "48.0",
      "60.0",
      "48.0",
      "61.0",
      "48.0",
      "62.0",
      "48.0",
      "63.0",
      "48.0",
      "64.0",
      "48.0",
      "65.0",
      "48.0",
      "66.0",
      "48.0",
      "67.0",
      "48.0",
      "68.0",
      "48.0",
      "69.0",
      "48.0",
      "70.0",
      "48.0",
      "71.0",
      "48.0",
      "72.0",
      "48.0",
      "73.0",
      "48.0",
      "74.0",
      "48.0",
      "75.0",
      "48.0",
      "76.0",
      "48.0",
      "77.0",
      "48.0",
      "78.0",
      "48.0",
      "79.0",
      "48.0",
      "80.0",
      "48.0",
      "81.0",
      "48.0",
      "82.0",
      "48.0",
      "83.0",
      "48.0",
      "84.0",
      "48.0",
      "85.0",
      "48.0",
      "86.0",
      "48.0",
      "87.0",
      "48.0",
      "88.0",
      "48.0",
      "89.0",
      "48.0",
      "90.0",
      "48.0",
      "91.0",
      "48.0",
      "92.0",
      "48.0",
      "93.0",
      "48.0",
      "94.0",
      "48.0",
      "95.0",
      "48.0",
      "96.0",
      "48.0",
      "97.0",
      "48.0",
      "98.0",
      "48.0",
      "99.0",
      "48.0",
      "100.0",
      "49.0",
      "0.0",
      "49.0",
      "1.0",
      "49.0",
      "2.0",
      "49.0",
      "3.0",
      "49.0",
      "4.0",
      "49.0",
      "5.0",
      "49.0",
      "6.0",
      "49.0",
      "7.0",
      "49.0",
      "8.0",
      "49.0",
      "9.0",
      "49.0",
      "10.0",
      "49.0",
      "11.0",
      "49.0",
      "12.0",
      "49.0",
      "13.0",
      "49.0",
      "14.0",
      "49.0",
      "15.0",
      "49.0",
      "16.0",
      "49.0",
      "17.0",
      "49.0",
      "18.0",
      "49.0",
      "19.0",
      "49.0",
      "20.0",
      "49.0",
      "21.0",
      "49.0",
      "22.0",
      "49.0",
      "23.0",
      "49.0",
      "24.0",
      "49.0",
      "25.0",
      "49.0",
      "26.0",
      "49.0",
      "27.0",
      "49.0",
      "28.0",
      "49.0",
      "29.0",
      "49.0",
      "30.0",
      "49.0",
      "31.0",
      "49.0",
      "32.0",
      "49.0",
      "33.0",
      "49.0",
      "34.0",
      "49.0",
      "35.0",
      "49.0",
      "36.0",
      "49.0",
      "37.0",
      "49.0",
      "38.0",
      "49.0",
      "39.0",
      "49.0",
      "40.0",
      "49.0",
      "41.0",
      "49.0",
      "42.0",
      "49.0",
      "43.0",
      "49.0",
      "44.0",
      "49.0",
      "45.0",
      "49.0",
      "46.0",
      "49.0",
      "47.0",
      "49.0",
      "48.0",
      "49.0",
      "49.0",
      "49.0",
      "50.0",
      "49.0",
      "51.0",
      "49.0",
      "52.0",
      "49.0",
      "53.0",
      "49.0",
      "54.0",
      "49.0",
      "55.0",
      "49.0",
      "56.0",
      "49.0",
      "57.0",
      "49.0",
      "58.0",
      "49.0",
      "59.0",
      "49.0",
      "60.0",
      "49.0",
      "61.0",
      "49.0",
      "62.0",
      "49.0",
      "63.0",
      "49.0",
      "64.0",
      "49.0",
      "65.0",
      "49.0",
      "66.0",
      "49.0",
      "67.0",
      "49.0",
      "68.0",
      "49.0",
      "69.0",
      "49.0",
      "70.0",
      "49.0",
      "71.0",
      "49.0",
      "72.0",
      "49.0",
      "73.0",
      "49.0",
      "74.0",
      "49.0",
      "75.0",
      "49.0",
      "76.0",
      "49.0",
      "77.0",
      "49.0",
      "78.0",
      "49.0",
      "79.0",
      "49.0",
      "80.0",
      "49.0",
      "81.0",
      "49.0",
      "82.0",
      "49.0",
      "83.0",
      "49.0",
      "84.0",
      "49.0",
      "85.0",
      "49.0",
      "86.0",
      "49.0",
      "87.0",
      "49.0",
      "88.0",
      "49.0",
      "89.0",
      "49.0",
      "90.0",
      "49.0",
      "91.0",
      "49.0",
      "92.0",
      "49.0",
      "93.0",
      "49.0",
      "94.0",
      "49.0",
      "95.0",
      "49.0",
      "96.0",
      "49.0",
      "97.0",
      "49.0",
      "98.0",
      "49.0",
      "99.0",
      "49.0",
      "100.0",
      "50.0",
      "0.0",
      "50.0",
      "1.0",
      "50.0",
      "2.0",
      "50.0",
      "3.0",
      "50.0",
      "4.0",
      "50.0",
      "5.0",
      "50.0",
      "6.0",
      "50.0",
      "7.0",
      "50.0",
      "8.0",
      "50.0",
      "9.0",
      "50.0",
      "10.0",
      "50.0",
      "11.0",
      "50.0",
      "12.0",
      "50.0",
      "13.0",
      "50.0",
      "14.0",
      "50.0",
      "15.0",
      "50.0",
      "16.0",
      "50.0",
      "17.0",
      "50.0",
      "18.0",
      "50.0",
      "19.0",
      "50.0",
      "20.0",
      "50.0",
      "21.0",
      "50.0",
      "22.0",
      "50.0",
      "23.0",
      "50.0",
      "24.0",
      "50.0",
      "25.0",
      "50.0",
      "26.0",
      "50.0",
      "27.0",
      "50.0",
      "28.0",
      "50.0",
      "29.0",
      "50.0",
      "30.0",
      "50.0",
      "31.0",
      "50.0",
      "32.0",
      "50.0",
      "33.0",
      "50.0",
      "34.0",
      "50.0",
      "35.0",
      "50.0",
      "36.0",
      "50.0",
      "37.0",
      "50.0",
      "38.0",
      "50.0",
      "39.0",
      "50.0",
      "40.0",
      "50.0",
      "41.0",
      "50.0",
      "42.0",
      "50.0",
      "43.0",
      "50.0",
      "44.0",
      "50.0",
      "45.0",
      "50.0",
      "46.0",
      "50.0",
      "47.0",
      "50.0",
      "48.0",
      "50.0",
      "49.0",
      "50.0",
      "50.0",
      "50.0",
      "51.0",
      "50.0",
      "52.0",
      "50.0",
      "53.0",
      "50.0",
      "54.0",
      "50.0",
      "55.0",
      "50.0",
      "56.0",
      "50.0",
      "57.0",
      "50.0",
      "58.0",
      "50.0",
      "59.0",
      "50.0",
      "60.0",
      "50.0",
      "61.0",
      "50.0",
      "62.0",
      "50.0",
      "63.0",
      "50.0",
      "64.0",
      "50.0",
      "65.0",
      "50.0",
      "66.0",
      "50.0",
      "67.0",
      "50.0",
      "68.0",
      "50.0",
      "69.0",
      "50.0",
      "70.0",
      "50.0",
      "71.0",
      "50.0",
      "72.0",
      "50.0",
      "73.0",
      "50.0",
      "74.0",
      "50.0",
      "75.0",
      "50.0",
      "76.0",
      "50.0",
      "77.0",
      "50.0",
      "78.0",
      "50.0",
      "79.0",
      "50.0",
      "80.0",
      "50.0",
      "81.0",
      "50.0",
      "82.0",
      "50.0",
      "83.0",
      "50.0",
      "84.0",
      "50.0",
      "85.0",
      "50.0",
      "86.0",
      "50.0",
      "87.0",
      "50.0",
      "88.0",
      "50.0",
      "89.0",
      "50.0",
      "90.0",
      "50.0",
      "91.0",
      "50.0",
      "92.0",
      "50.0",
      "93.0",
      "50.0",
      "94.0",
      "50.0",
      "95.0",
      "50.0",
      "96.0",
      "50.0",
      "97.0",
      "50.0",
      "98.0",
      "50.0",
      "99.0",
      "50.0",
      "100.0",
      "51.0",
      "0.0",
      "51.0",
      "1.0",
      "51.0",
      "2.0",
      "51.0",
      "3.0",
      "51.0",
      "4.0",
      "51.0",
      "5.0",
      "51.0",
      "6.0",
      "51.0",
      "7.0",
      "51.0",
      "8.0",
      "51.0",
      "9.0",
      "51.0",
      "10.0",
      "51.0",
      "11.0",
      "51.0",
      "12.0",
      "51.0",
      "13.0",
      "51.0",
      "14.0",
      "51.0",
      "15.0",
      "51.0",
      "16.0",
      "51.0",
      "17.0",
      "51.0",
      "18.0",
      "51.0",
      "19.0",
      "51.0",
      "20.0",
      "51.0",
      "21.0",
      "51.0",
      "22.0",
      "51.0",
      "23.0",
      "51.0",
      "24.0",
      "51.0",
      "25.0",
      "51.0",
      "26.0",
      "51.0",
      "27.0",
      "51.0",
      "28.0",
      "51.0",
      "29.0",
      "51.0",
      "30.0",
      "51.0",
      "31.0",
      "51.0",
      "32.0",
      "51.0",
      "33.0",
      "51.0",
      "34.0",
      "51.0",
      "35.0",
      "51.0",
      "36.0",
      "51.0",
      "37.0",
      "51.0",
      "38.0",
      "51.0",
      "39.0",
      "51.0",
      "40.0",
      "51.0",
      "41.0",
      "51.0",
      "42.0",
      "51.0",
      "43.0",
      "51.0",
      "44.0",
      "51.0",
      "45.0",
      "51.0",
      "46.0",
      "51.0",
      "47.0",
      "51.0",
      "48.0",
      "51.0",
      "49.0",
      "51.0",
      "50.0",
      "51.0",
      "51.0",
      "51.0",
      "52.0",
      "51.0",
      "53.0",
      "51.0",
      "54.0",
      "51.0",
      "55.0",
      "51.0",
      "56.0",
      "51.0",
      "57.0",
      "51.0",
      "58.0",
      "51.0",
      "59.0",
      "51.0",
      "60.0",
      "51.0",
      "61.0",
      "51.0",
      "62.0",
      "51.0",
      "63.0",
      "51.0",
      "64.0",
      "51.0",
      "65.0",
      "51.0",
      "66.0",
      "51.0",
      "67.0",
      "51.0",
      "68.0",
      "51.0",
      "69.0",
      "51.0",
      "70.0",
      "51.0",
      "71.0",
      "51.0",
      "72.0",
      "51.0",
      "73.0",
      "51.0",
      "74.0",
      "51.0",
      "75.0",
      "51.0",
      "76.0",
      "51.0",
      "77.0",
      "51.0",
      "78.0",
      "51.0",
      "79.0",
      "51.0",
      "80.0",
      "51.0",
      "81.0",
      "51.0",
      "82.0",
      "51.0",
      "83.0",
      "51.0",
      "84.0",
      "51.0",
      "85.0",
      "51.0",
      "86.0",
      "51.0",
      "87.0",
      "51.0",
      "88.0",
      "51.0",
      "89.0",
      "51.0",
      "90.0",
      "51.0",
      "91.0",
      "51.0",
      "92.0",
      "51.0",
      "93.0",
      "51.0",
      "94.0",
      "51.0",
      "95.0",
      "51.0",
      "96.0",
      "51.0",
      "97.0",
      "51.0",
      "98.0",
      "51.0",
      "99.0",
      "51.0",
      "100.0",
      "52.0",
      "0.0",
      "52.0",
      "1.0",
      "52.0",
      "2.0",
      "52.0",
      "3.0",
      "52.0",
      "4.0",
      "52.0",
      "5.0",
      "52.0",
      "6.0",
      "52.0",
      "7.0",
      "52.0",
      "8.0",
      "52.0",
      "9.0",
      "52.0",
      "10.0",
      "52.0",
      "11.0",
      "52.0",
      "12.0",
      "52.0",
      "13.0",
      "52.0",
      "14.0",
      "52.0",
      "15.0",
      "52.0",
      "16.0",
      "52.0",
      "17.0",
      "52.0",
      "18.0",
      "52.0",
      "19.0",
      "52.0",
      "20.0",
      "52.0",
      "21.0",
      "52.0",
      "22.0",
      "52.0",
      "23.0",
      "52.0",
      "24.0",
      "52.0",
      "25.0",
      "52.0",
      "26.0",
      "52.0",
      "27.0",
      "52.0",
      "28.0",
      "52.0",
      "29.0",
      "52.0",
      "30.0",
      "52.0",
      "31.0",
      "52.0",
      "32.0",
      "52.0",
      "33.0",
      "52.0",
      "34.0",
      "52.0",
      "35.0",
      "52.0",
      "36.0",
      "52.0",
      "37.0",
      "52.0",
      "38.0",
      "52.0",
      "39.0",
      "52.0",
      "40.0",
      "52.0",
      "41.0",
      "52.0",
      "42.0",
      "52.0",
      "43.0",
      "52.0",
      "44.0",
      "52.0",
      "45.0",
      "52.0",
      "46.0",
      "52.0",
      "47.0",
      "52.0",
      "48.0",
      "52.0",
      "49.0",
      "52.0",
      "50.0",
      "52.0",
      "51.0",
      "52.0",
      "52.0",
      "52.0",
      "53.0",
      "52.0",
      "54.0",
      "52.0",
      "55.0",
      "52.0",
      "56.0",
      "52.0",
      "57.0",
      "52.0",
      "58.0",
      "52.0",
      "59.0",
      "52.0",
      "60.0",
      "52.0",
      "61.0",
      "52.0",
      "62.0",
      "52.0",
      "63.0",
      "52.0",
      "64.0",
      "52.0",
      "65.0",
      "52.0",
      "66.0",
      "52.0",
      "67.0",
      "52.0",
      "68.0",
      "52.0",
      "69.0",
      "52.0",
      "70.0",
      "52.0",
      "71.0",
      "52.0",
      "72.0",
      "52.0",
      "73.0",
      "52.0",
      "74.0",
      "52.0",
      "75.0",
      "52.0",
      "76.0",
      "52.0",
      "77.0",
      "52.0",
      "78.0",
      "52.0",
      "79.0",
      "52.0",
      "80.0",
      "52.0",
      "81.0",
      "52.0",
      "82.0",
      "52.0",
      "83.0",
      "52.0",
      "84.0",
      "52.0",
      "85.0",
      "52.0",
      "86.0",
      "52.0",
      "87.0",
      "52.0",
      "88.0",
      "52.0",
      "89.0",
      "52.0",
      "90.0",
      "52.0",
      "91.0",
      "52.0",
      "92.0",
      "52.0",
      "93.0",
      "52.0",
      "94.0",
      "52.0",
      "95.0",
      "52.0",
      "96.0",
      "52.0",
      "97.0",
      "52.0",
      "98.0",
      "52.0",
      "99.0",
      "52.0",
      "100.0",
      "53.0",
      "0.0",
      "53.0",
      "1.0",
      "53.0",
      "2.0",
      "53.0",
      "3.0",
      "53.0",
      "4.0",
      "53.0",
      "5.0",
      "53.0",
      "6.0",
      "53.0",
      "7.0",
      "53.0",
      "8.0",
      "53.0",
      "9.0",
      "53.0",
      "10.0",
      "53.0",
      "11.0",
      "53.0",
      "12.0",
      "53.0",
      "13.0",
      "53.0",
      "14.0",
      "53.0",
      "15.0",
      "53.0",
      "16.0",
      "53.0",
      "17.0",
      "53.0",
      "18.0",
      "53.0",
      "19.0",
      "53.0",
      "20.0",
      "53.0",
      "21.0",
      "53.0",
      "22.0",
      "53.0",
      "23.0",
      "53.0",
      "24.0",
      "53.0",
      "25.0",
      "53.0",
      "26.0",
      "53.0",
      "27.0",
      "53.0",
      "28.0",
      "53.0",
      "29.0",
      "53.0",
      "30.0",
      "53.0",
      "31.0",
      "53.0",
      "32.0",
      "53.0",
      "33.0",
      "53.0",
      "34.0",
      "53.0",
      "35.0",
      "53.0",
      "36.0",
      "53.0",
      "37.0",
      "53.0",
      "38.0",
      "53.0",
      "39.0",
      "53.0",
      "40.0",
      "53.0",
      "41.0",
      "53.0",
      "42.0",
      "53.0",
      "43.0",
      "53.0",
      "44.0",
      "53.0",
      "45.0",
      "53.0",
      "46.0",
      "53.0",
      "47.0",
      "53.0",
      "48.0",
      "53.0",
      "49.0",
      "53.0",
      "50.0",
      "53.0",
      "51.0",
      "53.0",
      "52.0",
      "53.0",
      "53.0",
      "53.0",
      "54.0",
      "53.0",
      "55.0",
      "53.0",
      "56.0",
      "53.0",
      "57.0",
      "53.0",
      "58.0",
      "53.0",
      "59.0",
      "53.0",
      "60.0",
      "53.0",
      "61.0",
      "53.0",
      "62.0",
      "53.0",
      "63.0",
      "53.0",
      "64.0",
      "53.0",
      "65.0",
      "53.0",
      "66.0",
      "53.0",
      "67.0",
      "53.0",
      "68.0",
      "53.0",
      "69.0",
      "53.0",
      "70.0",
      "53.0",
      "71.0",
      "53.0",
      "72.0",
      "53.0",
      "73.0",
      "53.0",
      "74.0",
      "53.0",
      "75.0",
      "53.0",
      "76.0",
      "53.0",
      "77.0",
      "53.0",
      "78.0",
      "53.0",
      "79.0",
      "53.0",
      "80.0",
      "53.0",
      "81.0",
      "53.0",
      "82.0",
      "53.0",
      "83.0",
      "53.0",
      "84.0",
      "53.0",
      "85.0",
      "53.0",
      "86.0",
      "53.0",
      "87.0",
      "53.0",
      "88.0",
      "53.0",
      "89.0",
      "53.0",
      "90.0",
      "53.0",
      "91.0",
      "53.0",
      "92.0",
      "53.0",
      "93.0",
      "53.0",
      "94.0",
      "53.0",
      "95.0",
      "53.0",
      "96.0",
      "53.0",
      "97.0",
      "53.0",
      "98.0",
      "53.0",
      "99.0",
      "53.0",
      "100.0",
      "54.0",
      "0.0",
      "54.0",
      "1.0",
      "54.0",
      "2.0",
      "54.0",
      "3.0",
      "54.0",
      "4.0",
      "54.0",
      "5.0",
      "54.0",
      "6.0",
      "54.0",
      "7.0",
      "54.0",
      "8.0",
      "54.0",
      "9.0",
      "54.0",
      "10.0",
      "54.0",
      "11.0",
      "54.0",
      "12.0",
      "54.0",
      "13.0",
      "54.0",
      "14.0",
      "54.0",
      "15.0",
      "54.0",
      "16.0",
      "54.0",
      "17.0",
      "54.0",
      "18.0",
      "54.0",
      "19.0",
      "54.0",
      "20.0",
      "54.0",
      "21.0",
      "54.0",
      "22.0",
      "54.0",
      "23.0",
      "54.0",
      "24.0",
      "54.0",
      "25.0",
      "54.0",
      "26.0",
      "54.0",
      "27.0",
      "54.0",
      "28.0",
      "54.0",
      "29.0",
      "54.0",
      "30.0",
      "54.0",
      "31.0",
      "54.0",
      "32.0",
      "54.0",
      "33.0",
      "54.0",
      "34.0",
      "54.0",
      "35.0",
      "54.0",
      "36.0",
      "54.0",
      "37.0",
      "54.0",
      "38.0",
      "54.0",
      "39.0",
      "54.0",
      "40.0",
      "54.0",
      "41.0",
      "54.0",
      "42.0",
      "54.0",
      "43.0",
      "54.0",
      "44.0",
      "54.0",
      "45.0",
      "54.0",
      "46.0",
      "54.0",
      "47.0",
      "54.0",
      "48.0",
      "54.0",
      "49.0",
      "54.0",
      "50.0",
      "54.0",
      "51.0",
      "54.0",
      "52.0",
      "54.0",
      "53.0",
      "54.0",
      "54.0",
      "54.0",
      "55.0",
      "54.0",
      "56.0",
      "54.0",
      "57.0",
      "54.0",
      "58.0",
      "54.0",
      "59.0",
      "54.0",
      "60.0",
      "54.0",
      "61.0",
      "54.0",
      "62.0",
      "54.0",
      "63.0",
      "54.0",
      "64.0",
      "54.0",
      "65.0",
      "54.0",
      "66.0",
      "54.0",
      "67.0",
      "54.0",
      "68.0",
      "54.0",
      "69.0",
      "54.0",
      "70.0",
      "54.0",
      "71.0",
      "54.0",
      "72.0",
      "54.0",
      "73.0",
      "54.0",
      "74.0",
      "54.0",
      "75.0",
      "54.0",
      "76.0",
      "54.0",
      "77.0",
      "54.0",
      "78.0",
      "54.0",
      "79.0",
      "54.0",
      "80.0",
      "54.0",
      "81.0",
      "54.0",
      "82.0",
      "54.0",
      "83.0",
      "54.0",
      "84.0",
      "54.0",
      "85.0",
      "54.0",
      "86.0",
      "54.0",
      "87.0",
      "54.0",
      "88.0",
      "54.0",
      "89.0",
      "54.0",
      "90.0",
      "54.0",
      "91.0",
      "54.0",
      "92.0",
      "54.0",
      "93.0",
      "54.0",
      "94.0",
      "54.0",
      "95.0",
      "54.0",
      "96.0",
      "54.0",
      "97.0",
      "54.0",
      "98.0",
      "54.0",
      "99.0",
      "54.0",
      "100.0",
      "55.0",
      "0.0",
      "55.0",
      "1.0",
      "55.0",
      "2.0",
      "55.0",
      "3.0",
      "55.0",
      "4.0",
      "55.0",
      "5.0",
      "55.0",
      "6.0",
      "55.0",
      "7.0",
      "55.0",
      "8.0",
      "55.0",
      "9.0",
      "55.0",
      "10.0",
      "55.0",
      "11.0",
      "55.0",
      "12.0",
      "55.0",
      "13.0",
      "55.0",
      "14.0",
      "55.0",
      "15.0",
      "55.0",
      "16.0",
      "55.0",
      "17.0",
      "55.0",
      "18.0",
      "55.0",
      "19.0",
      "55.0",
      "20.0",
      "55.0",
      "21.0",
      "55.0",
      "22.0",
      "55.0",
      "23.0",
      "55.0",
      "24.0",
      "55.0",
      "25.0",
      "55.0",
      "26.0",
      "55.0",
      "27.0",
      "55.0",
      "28.0",
      "55.0",
      "29.0",
      "55.0",
      "30.0",
      "55.0",
      "31.0",
      "55.0",
      "32.0",
      "55.0",
      "33.0",
      "55.0",
      "34.0",
      "55.0",
      "35.0",
      "55.0",
      "36.0",
      "55.0",
      "37.0",
      "55.0",
      "38.0",
      "55.0",
      "39.0",
      "55.0",
      "40.0",
      "55.0",
      "41.0",
      "55.0",
      "42.0",
      "55.0",
      "43.0",
      "55.0",
      "44.0",
      "55.0",
      "45.0",
      "55.0",
      "46.0",
      "55.0",
      "47.0",
      "55.0",
      "48.0",
      "55.0",
      "49.0",
      "55.0",
      "50.0",
      "55.0",
      "51.0",
      "55.0",
      "52.0",
      "55.0",
      "53.0",
      "55.0",
      "54.0",
      "55.0",
      "55.0",
      "55.0",
      "56.0",
      "55.0",
      "57.0",
      "55.0",
      "58.0",
      "55.0",
      "59.0",
      "55.0",
      "60.0",
      "55.0",
      "61.0",
      "55.0",
      "62.0",
      "55.0",
      "63.0",
      "55.0",
      "64.0",
      "55.0",
      "65.0",
      "55.0",
      "66.0",
      "55.0",
      "67.0",
      "55.0",
      "68.0",
      "55.0",
      "69.0",
      "55.0",
      "70.0",
      "55.0",
      "71.0",
      "55.0",
      "72.0",
      "55.0",
      "73.0",
      "55.0",
      "74.0",
      "55.0",
      "75.0",
      "55.0",
      "76.0",
      "55.0",
      "77.0",
      "55.0",
      "78.0",
      "55.0",
      "79.0",
      "55.0",
      "80.0",
      "55.0",
      "81.0",
      "55.0",
      "82.0",
      "55.0",
      "83.0",
      "55.0",
      "84.0",
      "55.0",
      "85.0",
      "55.0",
      "86.0",
      "55.0",
      "87.0",
      "55.0",
      "88.0",
      "55.0",
      "89.0",
      "55.0",
      "90.0",
      "55.0",
      "91.0",
      "55.0",
      "92.0",
      "55.0",
      "93.0",
      "55.0",
      "94.0",
      "55.0",
      "95.0",
      "55.0",
      "96.0",
      "55.0",
      "97.0",
      "55.0",
      "98.0",
      "55.0",
      "99.0",
      "55.0",
      "100.0",
      "56.0",
      "0.0",
      "56.0",
      "1.0",
      "56.0",
      "2.0",
      "56.0",
      "3.0",
      "56.0",
      "4.0",
      "56.0",
      "5.0",
      "56.0",
      "6.0",
      "56.0",
      "7.0",
      "56.0",
      "8.0",
      "56.0",
      "9.0",
      "56.0",
      "10.0",
      "56.0",
      "11.0",
      "56.0",
      "12.0",
      "56.0",
      "13.0",
      "56.0",
      "14.0",
      "56.0",
      "15.0",
      "56.0",
      "16.0",
      "56.0",
      "17.0",
      "56.0",
      "18.0",
      "56.0",
      "19.0",
      "56.0",
      "20.0",
      "56.0",
      "21.0",
      "56.0",
      "22.0",
      "56.0",
      "23.0",
      "56.0",
      "24.0",
      "56.0",
      "25.0",
      "56.0",
      "26.0",
      "56.0",
      "27.0",
      "56.0",
      "28.0",
      "56.0",
      "29.0",
      "56.0",
      "30.0",
      "56.0",
      "31.0",
      "56.0",
      "32.0",
      "56.0",
      "33.0",
      "56.0",
      "34.0",
      "56.0",
      "35.0",
      "56.0",
      "36.0",
      "56.0",
      "37.0",
      "56.0",
      "38.0",
      "56.0",
      "39.0",
      "56.0",
      "40.0",
      "56.0",
      "41.0",
      "56.0",
      "42.0",
      "56.0",
      "43.0",
      "56.0",
      "44.0",
      "56.0",
      "45.0",
      "56.0",
      "46.0",
      "56.0",
      "47.0",
      "56.0",
      "48.0",
      "56.0",
      "49.0",
      "56.0",
      "50.0",
      "56.0",
      "51.0",
      "56.0",
      "52.0",
      "56.0",
      "53.0",
      "56.0",
      "54.0",
      "56.0",
      "55.0",
      "56.0",
      "56.0",
      "56.0",
      "57.0",
      "56.0",
      "58.0",
      "56.0",
      "59.0",
      "56.0",
      "60.0",
      "56.0",
      "61.0",
      "56.0",
      "62.0",
      "56.0",
      "63.0",
      "56.0",
      "64.0",
      "56.0",
      "65.0",
      "56.0",
      "66.0",
      "56.0",
      "67.0",
      "56.0",
      "68.0",
      "56.0",
      "69.0",
      "56.0",
      "70.0",
      "56.0",
      "71.0",
      "56.0",
      "72.0",
      "56.0",
      "73.0",
      "56.0",
      "74.0",
      "56.0",
      "75.0",
      "56.0",
      "76.0",
      "56.0",
      "77.0",
      "56.0",
      "78.0",
      "56.0",
      "79.0",
      "56.0",
      "80.0",
      "56.0",
      "81.0",
      "56.0",
      "82.0",
      "56.0",
      "83.0",
      "56.0",
      "84.0",
      "56.0",
      "85.0",
      "56.0",
      "86.0",
      "56.0",
      "87.0",
      "56.0",
      "88.0",
      "56.0",
      "89.0",
      "56.0",
      "90.0",
      "56.0",
      "91.0",
      "56.0",
      "92.0",
      "56.0",
      "93.0",
      "56.0",
      "94.0",
      "56.0",
      "95.0",
      "56.0",
      "96.0",
      "56.0",
      "97.0",
      "56.0",
      "98.0",
      "56.0",
      "99.0",
      "56.0",
      "100.0",
      "57.0",
      "0.0",
      "57.0",
      "1.0",
      "57.0",
      "2.0",
      "57.0",
      "3.0",
      "57.0",
      "4.0",
      "57.0",
      "5.0",
      "57.0",
      "6.0",
      "57.0",
      "7.0",
      "57.0",
      "8.0",
      "57.0",
      "9.0",
      "57.0",
      "10.0",
      "57.0",
      "11.0",
      "57.0",
      "12.0",
      "57.0",
      "13.0",
      "57.0",
      "14.0",
      "57.0",
      "15.0",
      "57.0",
      "16.0",
      "57.0",
      "17.0",
      "57.0",
      "18.0",
      "57.0",
      "19.0",
      "57.0",
      "20.0",
      "57.0",
      "21.0",
      "57.0",
      "22.0",
      "57.0",
      "23.0",
      "57.0",
      "24.0",
      "57.0",
      "25.0",
      "57.0",
      "26.0",
      "57.0",
      "27.0",
      "57.0",
      "28.0",
      "57.0",
      "29.0",
      "57.0",
      "30.0",
      "57.0",
      "31.0",
      "57.0",
      "32.0",
      "57.0",
      "33.0",
      "57.0",
      "34.0",
      "57.0",
      "35.0",
      "57.0",
      "36.0",
      "57.0",
      "37.0",
      "57.0",
      "38.0",
      "57.0",
      "39.0",
      "57.0",
      "40.0",
      "57.0",
      "41.0",
      "57.0",
      "42.0",
      "57.0",
      "43.0",
      "57.0",
      "44.0",
      "57.0",
      "45.0",
      "57.0",
      "46.0",
      "57.0",
      "47.0",
      "57.0",
      "48.0",
      "57.0",
      "49.0",
      "57.0",
      "50.0",
      "57.0",
      "51.0",
      "57.0",
      "52.0",
      "57.0",
      "53.0",
      "57.0",
      "54.0",
      "57.0",
      "55.0",
      "57.0",
      "56.0",
      "57.0",
      "57.0",
      "57.0",
      "58.0",
      "57.0",
      "59.0",
      "57.0",
      "60.0",
      "57.0",
      "61.0",
      "57.0",
      "62.0",
      "57.0",
      "63.0",
      "57.0",
      "64.0",
      "57.0",
      "65.0",
      "57.0",
      "66.0",
      "57.0",
      "67.0",
      "57.0",
      "68.0",
      "57.0",
      "69.0",
      "57.0",
      "70.0",
      "57.0",
      "71.0",
      "57.0",
      "72.0",
      "57.0",
      "73.0",
      "57.0",
      "74.0",
      "57.0",
      "75.0",
      "57.0",
      "76.0",
      "57.0",
      "77.0",
      "57.0",
      "78.0",
      "57.0",
      "79.0",
      "57.0",
      "80.0",
      "57.0",
      "81.0",
      "57.0",
      "82.0",
      "57.0",
      "83.0",
      "57.0",
      "84.0",
      "57.0",
      "85.0",
      "57.0",
      "86.0",
      "57.0",
      "87.0",
      "57.0",
      "88.0",
      "57.0",
      "89.0",
      "57.0",
      "90.0",
      "57.0",
      "91.0",
      "57.0",
      "92.0",
      "57.0",
      "93.0",
      "57.0",
      "94.0",
      "57.0",
      "95.0",
      "57.0",
      "96.0",
      "57.0",
      "97.0",
      "57.0",
      "98.0",
      "57.0",
      "99.0",
      "57.0",
      "100.0",
      "58.0",
      "0.0",
      "58.0",
      "1.0",
      "58.0",
      "2.0",
      "58.0",
      "3.0",
      "58.0",
      "4.0",
      "58.0",
      "5.0",
      "58.0",
      "6.0",
      "58.0",
      "7.0",
      "58.0",
      "8.0",
      "58.0",
      "9.0",
      "58.0",
      "10.0",
      "58.0",
      "11.0",
      "58.0",
      "12.0",
      "58.0",
      "13.0",
      "58.0",
      "14.0",
      "58.0",
      "15.0",
      "58.0",
      "16.0",
      "58.0",
      "17.0",
      "58.0",
      "18.0",
      "58.0",
      "19.0",
      "58.0",
      "20.0",
      "58.0",
      "21.0",
      "58.0",
      "22.0",
      "58.0",
      "23.0",
      "58.0",
      "24.0",
      "58.0",
      "25.0",
      "58.0",
      "26.0",
      "58.0",
      "27.0",
      "58.0",
      "28.0",
      "58.0",
      "29.0",
      "58.0",
      "30.0",
      "58.0",
      "31.0",
      "58.0",
      "32.0",
      "58.0",
      "33.0",
      "58.0",
      "34.0",
      "58.0",
      "35.0",
      "58.0",
      "36.0",
      "58.0",
      "37.0",
      "58.0",
      "38.0",
      "58.0",
      "39.0",
      "58.0",
      "40.0",
      "58.0",
      "41.0",
      "58.0",
      "42.0",
      "58.0",
      "43.0",
      "58.0",
      "44.0",
      "58.0",
      "45.0",
      "58.0",
      "46.0",
      "58.0",
      "47.0",
      "58.0",
      "48.0",
      "58.0",
      "49.0",
      "58.0",
      "50.0",
      "58.0",
      "51.0",
      "58.0",
      "52.0",
      "58.0",
      "53.0",
      "58.0",
      "54.0",
      "58.0",
      "55.0",
      "58.0",
      "56.0",
      "58.0",
      "57.0",
      "58.0",
      "58.0",
      "58.0",
      "59.0",
      "58.0",
      "60.0",
      "58.0",
      "61.0",
      "58.0",
      "62.0",
      "58.0",
      "63.0",
      "58.0",
      "64.0",
      "58.0",
      "65.0",
      "58.0",
      "66.0",
      "58.0",
      "67.0",
      "58.0",
      "68.0",
      "58.0",
      "69.0",
      "58.0",
      "70.0",
      "58.0",
      "71.0",
      "58.0",
      "72.0",
      "58.0",
      "73.0",
      "58.0",
      "74.0",
      "58.0",
      "75.0",
      "58.0",
      "76.0",
      "58.0",
      "77.0",
      "58.0",
      "78.0",
      "58.0",
      "79.0",
      "58.0",
      "80.0",
      "58.0",
      "81.0",
      "58.0",
      "82.0",
      "58.0",
      "83.0",
      "58.0",
      "84.0",
      "58.0",
      "85.0",
      "58.0",
      "86.0",
      "58.0",
      "87.0",
      "58.0",
      "88.0",
      "58.0",
      "89.0",
      "58.0",
      "90.0",
      "58.0",
      "91.0",
      "58.0",
      "92.0",
      "58.0",
      "93.0",
      "58.0",
      "94.0",
      "58.0",
      "95.0",
      "58.0",
      "96.0",
      "58.0",
      "97.0",
      "58.0",
      "98.0",
      "58.0",
      "99.0",
      "58.0",
      "100.0",
      "59.0",
      "0.0",
      "59.0",
      "1.0",
      "59.0",
      "2.0",
      "59.0",
      "3.0",
      "59.0",
      "4.0",
      "59.0",
      "5.0",
      "59.0",
      "6.0",
      "59.0",
      "7.0",
      "59.0",
      "8.0",
      "59.0",
      "9.0",
      "59.0",
      "10.0",
      "59.0",
      "11.0",
      "59.0",
      "12.0",
      "59.0",
      "13.0",
      "59.0",
      "14.0",
      "59.0",
      "15.0",
      "59.0",
      "16.0",
      "59.0",
      "17.0",
      "59.0",
      "18.0",
      "59.0",
      "19.0",
      "59.0",
      "20.0",
      "59.0",
      "21.0",
      "59.0",
      "22.0",
      "59.0",
      "23.0",
      "59.0",
      "24.0",
      "59.0",
      "25.0",
      "59.0",
      "26.0",
      "59.0",
      "27.0",
      "59.0",
      "28.0",
      "59.0",
      "29.0",
      "59.0",
      "30.0",
      "59.0",
      "31.0",
      "59.0",
      "32.0",
      "59.0",
      "33.0",
      "59.0",
      "34.0",
      "59.0",
      "35.0",
      "59.0",
      "36.0",
      "59.0",
      "37.0",
      "59.0",
      "38.0",
      "59.0",
      "39.0",
      "59.0",
      "40.0",
      "59.0",
      "41.0",
      "59.0",
      "42.0",
      "59.0",
      "43.0",
      "59.0",
      "44.0",
      "59.0",
      "45.0",
      "59.0",
      "46.0",
      "59.0",
      "47.0",
      "59.0",
      "48.0",
      "59.0",
      "49.0",
      "59.0",
      "50.0",
      "59.0",
      "51.0",
      "59.0",
      "52.0",
      "59.0",
      "53.0",
      "59.0",
      "54.0",
      "59.0",
      "55.0",
      "59.0",
      "56.0",
      "59.0",
      "57.0",
      "59.0",
      "58.0",
      "59.0",
      "59.0",
      "59.0",
      "60.0",
      "59.0",
      "61.0",
      "59.0",
      "62.0",
      "59.0",
      "63.0",
      "59.0",
      "64.0",
      "59.0",
      "65.0",
      "59.0",
      "66.0",
      "59.0",
      "67.0",
      "59.0",
      "68.0",
      "59.0",
      "69.0",
      "59.0",
      "70.0",
      "59.0",
      "71.0",
      "59.0",
      "72.0",
      "59.0",
      "73.0",
      "59.0",
      "74.0",
      "59.0",
      "75.0",
      "59.0",
      "76.0",
      "59.0",
      "77.0",
      "59.0",
      "78.0",
      "59.0",
      "79.0",
      "59.0",
      "80.0",
      "59.0",
      "81.0",
      "59.0",
      "82.0",
      "59.0",
      "83.0",
      "59.0",
      "84.0",
      "59.0",
      "85.0",
      "59.0",
      "86.0",
      "59.0",
      "87.0",
      "59.0",
      "88.0",
      "59.0",
      "89.0",
      "59.0",
      "90.0",
      "59.0",
      "91.0",
      "59.0",
      "92.0",
      "59.0",
      "93.0",
      "59.0",
      "94.0",
      "59.0",
      "95.0",
      "59.0",
      "96.0",
      "59.0",
      "97.0",
      "59.0",
      "98.0",
      "59.0",
      "99.0",
      "59.0",
      "100.0",
      "60.0",
      "0.0",
      "60.0",
      "1.0",
      "60.0",
      "2.0",
      "60.0",
      "3.0",
      "60.0",
      "4.0",
      "60.0",
      "5.0",
      "60.0",
      "6.0",
      "60.0",
      "7.0",
      "60.0",
      "8.0",
      "60.0",
      "9.0",
      "60.0",
      "10.0",
      "60.0",
      "11.0",
      "60.0",
      "12.0",
      "60.0",
      "13.0",
      "60.0",
      "14.0",
      "60.0",
      "15.0",
      "60.0",
      "16.0",
      "60.0",
      "17.0",
      "60.0",
      "18.0",
      "60.0",
      "19.0",
      "60.0",
      "20.0",
      "60.0",
      "21.0",
      "60.0",
      "22.0",
      "60.0",
      "23.0",
      "60.0",
      "24.0",
      "60.0",
      "25.0",
      "60.0",
      "26.0",
      "60.0",
      "27.0",
      "60.0",
      "28.0",
      "60.0",
      "29.0",
      "60.0",
      "30.0",
      "60.0",
      "31.0",
      "60.0",
      "32.0",
      "60.0",
      "33.0",
      "60.0",
      "34.0",
      "60.0",
      "35.0",
      "60.0",
      "36.0",
      "60.0",
      "37.0",
      "60.0",
      "38.0",
      "60.0",
      "39.0",
      "60.0",
      "40.0",
      "60.0",
      "41.0",
      "60.0",
      "42.0",
      "60.0",
      "43.0",
      "60.0",
      "44.0",
      "60.0",
      "45.0",
      "60.0",
      "46.0",
      "60.0",
      "47.0",
      "60.0",
      "48.0",
      "60.0",
      "49.0",
      "60.0",
      "50.0",
      "60.0",
      "51.0",
      "60.0",
      "52.0",
      "60.0",
      "53.0",
      "60.0",
      "54.0",
      "60.0",
      "55.0",
      "60.0",
      "56.0",
      "60.0",
      "57.0",
      "60.0",
      "58.0",
      "60.0",
      "59.0",
      "60.0",
      "60.0",
      "60.0",
      "61.0",
      "60.0",
      "62.0",
      "60.0",
      "63.0",
      "60.0",
      "64.0",
      "60.0",
      "65.0",
      "60.0",
      "66.0",
      "60.0",
      "67.0",
      "60.0",
      "68.0",
      "60.0",
      "69.0",
      "60.0",
      "70.0",
      "60.0",
      "71.0",
      "60.0",
      "72.0",
      "60.0",
      "73.0",
      "60.0",
      "74.0",
      "60.0",
      "75.0",
      "60.0",
      "76.0",
      "60.0",
      "77.0",
      "60.0",
      "78.0",
      "60.0",
      "79.0",
      "60.0",
      "80.0",
      "60.0",
      "81.0",
      "60.0",
      "82.0",
      "60.0",
      "83.0",
      "60.0",
      "84.0",
      "60.0",
      "85.0",
      "60.0",
      "86.0",
      "60.0",
      "87.0",
      "60.0",
      "88.0",
      "60.0",
      "89.0",
      "60.0",
      "90.0",
      "60.0",
      "91.0",
      "60.0",
      "92.0",
      "60.0",
      "93.0",
      "60.0",
      "94.0",
      "60.0",
      "95.0",
      "60.0",
      "96.0",
      "60.0",
      "97.0",
      "60.0",
      "98.0",
      "60.0",
      "99.0",
      "60.0",
      "100.0",
      "61.0",
      "0.0",
      "61.0",
      "1.0",
      "61.0",
      "2.0",
      "61.0",
      "3.0",
      "61.0",
      "4.0",
      "61.0",
      "5.0",
      "61.0",
      "6.0",
      "61.0",
      "7.0",
      "61.0",
      "8.0",
      "61.0",
      "9.0",
      "61.0",
      "10.0",
      "61.0",
      "11.0",
      "61.0",
      "12.0",
      "61.0",
      "13.0",
      "61.0",
      "14.0",
      "61.0",
      "15.0",
      "61.0",
      "16.0",
      "61.0",
      "17.0",
      "61.0",
      "18.0",
      "61.0",
      "19.0",
      "61.0",
      "20.0",
      "61.0",
      "21.0",
      "61.0",
      "22.0",
      "61.0",
      "23.0",
      "61.0",
      "24.0",
      "61.0",
      "25.0",
      "61.0",
      "26.0",
      "61.0",
      "27.0",
      "61.0",
      "28.0",
      "61.0",
      "29.0",
      "61.0",
      "30.0",
      "61.0",
      "31.0",
      "61.0",
      "32.0",
      "61.0",
      "33.0",
      "61.0",
      "34.0",
      "61.0",
      "35.0",
      "61.0",
      "36.0",
      "61.0",
      "37.0",
      "61.0",
      "38.0",
      "61.0",
      "39.0",
      "61.0",
      "40.0",
      "61.0",
      "41.0",
      "61.0",
      "42.0",
      "61.0",
      "43.0",
      "61.0",
      "44.0",
      "61.0",
      "45.0",
      "61.0",
      "46.0",
      "61.0",
      "47.0",
      "61.0",
      "48.0",
      "61.0",
      "49.0",
      "61.0",
      "50.0",
      "61.0",
      "51.0",
      "61.0",
      "52.0",
      "61.0",
      "53.0",
      "61.0",
      "54.0",
      "61.0",
      "55.0",
      "61.0",
      "56.0",
      "61.0",
      "57.0",
      "61.0",
      "58.0",
      "61.0",
      "59.0",
      "61.0",
      "60.0",
      "61.0",
      "61.0",
      "61.0",
      "62.0",
      "61.0",
      "63.0",
      "61.0",
      "64.0",
      "61.0",
      "65.0",
      "61.0",
      "66.0",
      "61.0",
      "67.0",
      "61.0",
      "68.0",
      "61.0",
      "69.0",
      "61.0",
      "70.0",
      "61.0",
      "71.0",
      "61.0",
      "72.0",
      "61.0",
      "73.0",
      "61.0",
      "74.0",
      "61.0",
      "75.0",
      "61.0",
      "76.0",
      "61.0",
      "77.0",
      "61.0",
      "78.0",
      "61.0",
      "79.0",
      "61.0",
      "80.0",
      "61.0",
      "81.0",
      "61.0",
      "82.0",
      "61.0",
      "83.0",
      "61.0",
      "84.0",
      "61.0",
      "85.0",
      "61.0",
      "86.0",
      "61.0",
      "87.0",
      "61.0",
      "88.0",
      "61.0",
      "89.0",
      "61.0",
      "90.0",
      "61.0",
      "91.0",
      "61.0",
      "92.0",
      "61.0",
      "93.0",
      "61.0",
      "94.0",
      "61.0",
      "95.0",
      "61.0",
      "96.0",
      "61.0",
      "97.0",
      "61.0",
      "98.0",
      "61.0",
      "99.0",
      "61.0",
      "100.0",
      "62.0",
      "0.0",
      "62.0",
      "1.0",
      "62.0",
      "2.0",
      "62.0",
      "3.0",
      "62.0",
      "4.0",
      "62.0",
      "5.0",
      "62.0",
      "6.0",
      "62.0",
      "7.0",
      "62.0",
      "8.0",
      "62.0",
      "9.0",
      "62.0",
      "10.0",
      "62.0",
      "11.0",
      "62.0",
      "12.0",
      "62.0",
      "13.0",
      "62.0",
      "14.0",
      "62.0",
      "15.0",
      "62.0",
      "16.0",
      "62.0",
      "17.0",
      "62.0",
      "18.0",
      "62.0",
      "19.0",
      "62.0",
      "20.0",
      "62.0",
      "21.0",
      "62.0",
      "22.0",
      "62.0",
      "23.0",
      "62.0",
      "24.0",
      "62.0",
      "25.0",
      "62.0",
      "26.0",
      "62.0",
      "27.0",
      "62.0",
      "28.0",
      "62.0",
      "29.0",
      "62.0",
      "30.0",
      "62.0",
      "31.0",
      "62.0",
      "32.0",
      "62.0",
      "33.0",
      "62.0",
      "34.0",
      "62.0",
      "35.0",
      "62.0",
      "36.0",
      "62.0",
      "37.0",
      "62.0",
      "38.0",
      "62.0",
      "39.0",
      "62.0",
      "40.0",
      "62.0",
      "41.0",
      "62.0",
      "42.0",
      "62.0",
      "43.0",
      "62.0",
      "44.0",
      "62.0",
      "45.0",
      "62.0",
      "46.0",
      "62.0",
      "47.0",
      "62.0",
      "48.0",
      "62.0",
      "49.0",
      "62.0",
      "50.0",
      "62.0",
      "51.0",
      "62.0",
      "52.0",
      "62.0",
      "53.0",
      "62.0",
      "54.0",
      "62.0",
      "55.0",
      "62.0",
      "56.0",
      "62.0",
      "57.0",
      "62.0",
      "58.0",
      "62.0",
      "59.0",
      "62.0",
      "60.0",
      "62.0",
      "61.0",
      "62.0",
      "62.0",
      "62.0",
      "63.0",
      "62.0",
      "64.0",
      "62.0",
      "65.0",
      "62.0",
      "66.0",
      "62.0",
      "67.0",
      "62.0",
      "68.0",
      "62.0",
      "69.0",
      "62.0",
      "70.0",
      "62.0",
      "71.0",
      "62.0",
      "72.0",
      "62.0",
      "73.0",
      "62.0",
      "74.0",
      "62.0",
      "75.0",
      "62.0",
      "76.0",
      "62.0",
      "77.0",
      "62.0",
      "78.0",
      "62.0",
      "79.0",
      "62.0",
      "80.0",
      "62.0",
      "81.0",
      "62.0",
      "82.0",
      "62.0",
      "83.0",
      "62.0",
      "84.0",
      "62.0",
      "85.0",
      "62.0",
      "86.0",
      "62.0",
      "87.0",
      "62.0",
      "88.0",
      "62.0",
      "89.0",
      "62.0",
      "90.0",
      "62.0",
      "91.0",
      "62.0",
      "92.0",
      "62.0",
      "93.0",
      "62.0",
      "94.0",
      "62.0",
      "95.0",
      "62.0",
      "96.0",
      "62.0",
      "97.0",
      "62.0",
      "98.0",
      "62.0",
      "99.0",
      "62.0",
      "100.0",
      "63.0",
      "0.0",
      "63.0",
      "1.0",
      "63.0",
      "2.0",
      "63.0",
      "3.0",
      "63.0",
      "4.0",
      "63.0",
      "5.0",
      "63.0",
      "6.0",
      "63.0",
      "7.0",
      "63.0",
      "8.0",
      "63.0",
      "9.0",
      "63.0",
      "10.0",
      "63.0",
      "11.0",
      "63.0",
      "12.0",
      "63.0",
      "13.0",
      "63.0",
      "14.0",
      "63.0",
      "15.0",
      "63.0",
      "16.0",
      "63.0",
      "17.0",
      "63.0",
      "18.0",
      "63.0",
      "19.0",
      "63.0",
      "20.0",
      "63.0",
      "21.0",
      "63.0",
      "22.0",
      "63.0",
      "23.0",
      "63.0",
      "24.0",
      "63.0",
      "25.0",
      "63.0",
      "26.0",
      "63.0",
      "27.0",
      "63.0",
      "28.0",
      "63.0",
      "29.0",
      "63.0",
      "30.0",
      "63.0",
      "31.0",
      "63.0",
      "32.0",
      "63.0",
      "33.0",
      "63.0",
      "34.0",
      "63.0",
      "35.0",
      "63.0",
      "36.0",
      "63.0",
      "37.0",
      "63.0",
      "38.0",
      "63.0",
      "39.0",
      "63.0",
      "40.0",
      "63.0",
      "41.0",
      "63.0",
      "42.0",
      "63.0",
      "43.0",
      "63.0",
      "44.0",
      "63.0",
      "45.0",
      "63.0",
      "46.0",
      "63.0",
      "47.0",
      "63.0",
      "48.0",
      "63.0",
      "49.0",
      "63.0",
      "50.0",
      "63.0",
      "51.0",
      "63.0",
      "52.0",
      "63.0",
      "53.0",
      "63.0",
      "54.0",
      "63.0",
      "55.0",
      "63.0",
      "56.0",
      "63.0",
      "57.0",
      "63.0",
      "58.0",
      "63.0",
      "59.0",
      "63.0",
      "60.0",
      "63.0",
      "61.0",
      "63.0",
      "62.0",
      "63.0",
      "63.0",
      "63.0",
      "64.0",
      "63.0",
      "65.0",
      "63.0",
      "66.0",
      "63.0",
      "67.0",
      "63.0",
      "68.0",
      "63.0",
      "69.0",
      "63.0",
      "70.0",
      "63.0",
      "71.0",
      "63.0",
      "72.0",
      "63.0",
      "73.0",
      "63.0",
      "74.0",
      "63.0",
      "75.0",
      "63.0",
      "76.0",
      "63.0",
      "77.0",
      "63.0",
      "78.0",
      "63.0",
      "79.0",
      "63.0",
      "80.0",
      "63.0",
      "81.0",
      "63.0",
      "82.0",
      "63.0",
      "83.0",
      "63.0",
      "84.0",
      "63.0",
      "85.0",
      "63.0",
      "86.0",
      "63.0",
      "87.0",
      "63.0",
      "88.0",
      "63.0",
      "89.0",
      "63.0",
      "90.0",
      "63.0",
      "91.0",
      "63.0",
      "92.0",
      "63.0",
      "93.0",
      "63.0",
      "94.0",
      "63.0",
      "95.0",
      "63.0",
      "96.0",
      "63.0",
      "97.0",
      "63.0",
      "98.0",
      "63.0",
      "99.0",
      "63.0",
      "100.0",
      "64.0",
      "0.0",
      "64.0",
      "1.0",
      "64.0",
      "2.0",
      "64.0",
      "3.0",
      "64.0",
      "4.0",
      "64.0",
      "5.0",
      "64.0",
      "6.0",
      "64.0",
      "7.0",
      "64.0",
      "8.0",
      "64.0",
      "9.0",
      "64.0",
      "10.0",
      "64.0",
      "11.0",
      "64.0",
      "12.0",
      "64.0",
      "13.0",
      "64.0",
      "14.0",
      "64.0",
      "15.0",
      "64.0",
      "16.0",
      "64.0",
      "17.0",
      "64.0",
      "18.0",
      "64.0",
      "19.0",
      "64.0",
      "20.0",
      "64.0",
      "21.0",
      "64.0",
      "22.0",
      "64.0",
      "23.0",
      "64.0",
      "24.0",
      "64.0",
      "25.0",
      "64.0",
      "26.0",
      "64.0",
      "27.0",
      "64.0",
      "28.0",
      "64.0",
      "29.0",
      "64.0",
      "30.0",
      "64.0",
      "31.0",
      "64.0",
      "32.0",
      "64.0",
      "33.0",
      "64.0",
      "34.0",
      "64.0",
      "35.0",
      "64.0",
      "36.0",
      "64.0",
      "37.0",
      "64.0",
      "38.0",
      "64.0",
      "39.0",
      "64.0",
      "40.0",
      "64.0",
      "41.0",
      "64.0",
      "42.0",
      "64.0",
      "43.0",
      "64.0",
      "44.0",
      "64.0",
      "45.0",
      "64.0",
      "46.0",
      "64.0",
      "47.0",
      "64.0",
      "48.0",
      "64.0",
      "49.0",
      "64.0",
      "50.0",
      "64.0",
      "51.0",
      "64.0",
      "52.0",
      "64.0",
      "53.0",
      "64.0",
      "54.0",
      "64.0",
      "55.0",
      "64.0",
      "56.0",
      "64.0",
      "57.0",
      "64.0",
      "58.0",
      "64.0",
      "59.0",
      "64.0",
      "60.0",
      "64.0",
      "61.0",
      "64.0",
      "62.0",
      "64.0",
      "63.0",
      "64.0",
      "64.0",
      "64.0",
      "65.0",
      "64.0",
      "66.0",
      "64.0",
      "67.0",
      "64.0",
      "68.0",
      "64.0",
      "69.0",
      "64.0",
      "70.0",
      "64.0",
      "71.0",
      "64.0",
      "72.0",
      "64.0",
      "73.0",
      "64.0",
      "74.0",
      "64.0",
      "75.0",
      "64.0",
      "76.0",
      "64.0",
      "77.0",
      "64.0",
      "78.0",
      "64.0",
      "79.0",
      "64.0",
      "80.0",
      "64.0",
      "81.0",
      "64.0",
      "82.0",
      "64.0",
      "83.0",
      "64.0",
      "84.0",
      "64.0",
      "85.0",
      "64.0",
      "86.0",
      "64.0",
      "87.0",
      "64.0",
      "88.0",
      "64.0",
      "89.0",
      "64.0",
      "90.0",
      "64.0",
      "91.0",
      "64.0",
      "92.0",
      "64.0",
      "93.0",
      "64.0",
      "94.0",
      "64.0",
      "95.0",
      "64.0",
      "96.0",
      "64.0",
      "97.0",
      "64.0",
      "98.0",
      "64.0",
      "99.0",
      "64.0",
      "100.0",
      "65.0",
      "0.0",
      "65.0",
      "1.0",
      "65.0",
      "2.0",
      "65.0",
      "3.0",
      "65.0",
      "4.0",
      "65.0",
      "5.0",
      "65.0",
      "6.0",
      "65.0",
      "7.0",
      "65.0",
      "8.0",
      "65.0",
      "9.0",
      "65.0",
      "10.0",
      "65.0",
      "11.0",
      "65.0",
      "12.0",
      "65.0",
      "13.0",
      "65.0",
      "14.0",
      "65.0",
      "15.0",
      "65.0",
      "16.0",
      "65.0",
      "17.0",
      "65.0",
      "18.0",
      "65.0",
      "19.0",
      "65.0",
      "20.0",
      "65.0",
      "21.0",
      "65.0",
      "22.0",
      "65.0",
      "23.0",
      "65.0",
      "24.0",
      "65.0",
      "25.0",
      "65.0",
      "26.0",
      "65.0",
      "27.0",
      "65.0",
      "28.0",
      "65.0",
      "29.0",
      "65.0",
      "30.0",
      "65.0",
      "31.0",
      "65.0",
      "32.0",
      "65.0",
      "33.0",
      "65.0",
      "34.0",
      "65.0",
      "35.0",
      "65.0",
      "36.0",
      "65.0",
      "37.0",
      "65.0",
      "38.0",
      "65.0",
      "39.0",
      "65.0",
      "40.0",
      "65.0",
      "41.0",
      "65.0",
      "42.0",
      "65.0",
      "43.0",
      "65.0",
      "44.0",
      "65.0",
      "45.0",
      "65.0",
      "46.0",
      "65.0",
      "47.0",
      "65.0",
      "48.0",
      "65.0",
      "49.0",
      "65.0",
      "50.0",
      "65.0",
      "51.0",
      "65.0",
      "52.0",
      "65.0",
      "53.0",
      "65.0",
      "54.0",
      "65.0",
      "55.0",
      "65.0",
      "56.0",
      "65.0",
      "57.0",
      "65.0",
      "58.0",
      "65.0",
      "59.0",
      "65.0",
      "60.0",
      "65.0",
      "61.0",
      "65.0",
      "62.0",
      "65.0",
      "63.0",
      "65.0",
      "64.0",
      "65.0",
      "65.0",
      "65.0",
      "66.0",
      "65.0",
      "67.0",
      "65.0",
      "68.0",
      "65.0",
      "69.0",
      "65.0",
      "70.0",
      "65.0",
      "71.0",
      "65.0",
      "72.0",
      "65.0",
      "73.0",
      "65.0",
      "74.0",
      "65.0",
      "75.0",
      "65.0",
      "76.0",
      "65.0",
      "77.0",
      "65.0",
      "78.0",
      "65.0",
      "79.0",
      "65.0",
      "80.0",
      "65.0",
      "81.0",
      "65.0",
      "82.0",
      "65.0",
      "83.0",
      "65.0",
      "84.0",
      "65.0",
      "85.0",
      "65.0",
      "86.0",
      "65.0",
      "87.0",
      "65.0",
      "88.0",
      "65.0",
      "89.0",
      "65.0",
      "90.0",
      "65.0",
      "91.0",
      "65.0",
      "92.0",
      "65.0",
      "93.0",
      "65.0",
      "94.0",
      "65.0",
      "95.0",
      "65.0",
      "96.0",
      "65.0",
      "97.0",
      "65.0",
      "98.0",
      "65.0",
      "99.0",
      "65.0",
      "100.0",
      "66.0",
      "0.0",
      "66.0",
      "1.0",
      "66.0",
      "2.0",
      "66.0",
      "3.0",
      "66.0",
      "4.0",
      "66.0",
      "5.0",
      "66.0",
      "6.0",
      "66.0",
      "7.0",
      "66.0",
      "8.0",
      "66.0",
      "9.0",
      "66.0",
      "10.0",
      "66.0",
      "11.0",
      "66.0",
      "12.0",
      "66.0",
      "13.0",
      "66.0",
      "14.0",
      "66.0",
      "15.0",
      "66.0",
      "16.0",
      "66.0",
      "17.0",
      "66.0",
      "18.0",
      "66.0",
      "19.0",
      "66.0",
      "20.0",
      "66.0",
      "21.0",
      "66.0",
      "22.0",
      "66.0",
      "23.0",
      "66.0",
      "24.0",
      "66.0",
      "25.0",
      "66.0",
      "26.0",
      "66.0",
      "27.0",
      "66.0",
      "28.0",
      "66.0",
      "29.0",
      "66.0",
      "30.0",
      "66.0",
      "31.0",
      "66.0",
      "32.0",
      "66.0",
      "33.0",
      "66.0",
      "34.0",
      "66.0",
      "35.0",
      "66.0",
      "36.0",
      "66.0",
      "37.0",
      "66.0",
      "38.0",
      "66.0",
      "39.0",
      "66.0",
      "40.0",
      "66.0",
      "41.0",
      "66.0",
      "42.0",
      "66.0",
      "43.0",
      "66.0",
      "44.0",
      "66.0",
      "45.0",
      "66.0",
      "46.0",
      "66.0",
      "47.0",
      "66.0",
      "48.0",
      "66.0",
      "49.0",
      "66.0",
      "50.0",
      "66.0",
      "51.0",
      "66.0",
      "52.0",
      "66.0",
      "53.0",
      "66.0",
      "54.0",
      "66.0",
      "55.0",
      "66.0",
      "56.0",
      "66.0",
      "57.0",
      "66.0",
      "58.0",
      "66.0",
      "59.0",
      "66.0",
      "60.0",
      "66.0",
      "61.0",
      "66.0",
      "62.0",
      "66.0",
      "63.0",
      "66.0",
      "64.0",
      "66.0",
      "65.0",
      "66.0",
      "66.0",
      "66.0",
      "67.0",
      "66.0",
      "68.0",
      "66.0",
      "69.0",
      "66.0",
      "70.0",
      "66.0",
      "71.0",
      "66.0",
      "72.0",
      "66.0",
      "73.0",
      "66.0",
      "74.0",
      "66.0",
      "75.0",
      "66.0",
      "76.0",
      "66.0",
      "77.0",
      "66.0",
      "78.0",
      "66.0",
      "79.0",
      "66.0",
      "80.0",
      "66.0",
      "81.0",
      "66.0",
      "82.0",
      "66.0",
      "83.0",
      "66.0",
      "84.0",
      "66.0",
      "85.0",
      "66.0",
      "86.0",
      "66.0",
      "87.0",
      "66.0",
      "88.0",
      "66.0",
      "89.0",
      "66.0",
      "90.0",
      "66.0",
      "91.0",
      "66.0",
      "92.0",
      "66.0",
      "93.0",
      "66.0",
      "94.0",
      "66.0",
      "95.0",
      "66.0",
      "96.0",
      "66.0",
      "97.0",
      "66.0",
      "98.0",
      "66.0",
      "99.0",
      "66.0",
      "100.0",
      "67.0",
      "0.0",
      "67.0",
      "1.0",
      "67.0",
      "2.0",
      "67.0",
      "3.0",
      "67.0",
      "4.0",
      "67.0",
      "5.0",
      "67.0",
      "6.0",
      "67.0",
      "7.0",
      "67.0",
      "8.0",
      "67.0",
      "9.0",
      "67.0",
      "10.0",
      "67.0",
      "11.0",
      "67.0",
      "12.0",
      "67.0",
      "13.0",
      "67.0",
      "14.0",
      "67.0",
      "15.0",
      "67.0",
      "16.0",
      "67.0",
      "17.0",
      "67.0",
      "18.0",
      "67.0",
      "19.0",
      "67.0",
      "20.0",
      "67.0",
      "21.0",
      "67.0",
      "22.0",
      "67.0",
      "23.0",
      "67.0",
      "24.0",
      "67.0",
      "25.0",
      "67.0",
      "26.0",
      "67.0",
      "27.0",
      "67.0",
      "28.0",
      "67.0",
      "29.0",
      "67.0",
      "30.0",
      "67.0",
      "31.0",
      "67.0",
      "32.0",
      "67.0",
      "33.0",
      "67.0",
      "34.0",
      "67.0",
      "35.0",
      "67.0",
      "36.0",
      "67.0",
      "37.0",
      "67.0",
      "38.0",
      "67.0",
      "39.0",
      "67.0",
      "40.0",
      "67.0",
      "41.0",
      "67.0",
      "42.0",
      "67.0",
      "43.0",
      "67.0",
      "44.0",
      "67.0",
      "45.0",
      "67.0",
      "46.0",
      "67.0",
      "47.0",
      "67.0",
      "48.0",
      "67.0",
      "49.0",
      "67.0",
      "50.0",
      "67.0",
      "51.0",
      "67.0",
      "52.0",
      "67.0",
      "53.0",
      "67.0",
      "54.0",
      "67.0",
      "55.0",
      "67.0",
      "56.0",
      "67.0",
      "57.0",
      "67.0",
      "58.0",
      "67.0",
      "59.0",
      "67.0",
      "60.0",
      "67.0",
      "61.0",
      "67.0",
      "62.0",
      "67.0",
      "63.0",
      "67.0",
      "64.0",
      "67.0",
      "65.0",
      "67.0",
      "66.0",
      "67.0",
      "67.0",
      "67.0",
      "68.0",
      "67.0",
      "69.0",
      "67.0",
      "70.0",
      "67.0",
      "71.0",
      "67.0",
      "72.0",
      "67.0",
      "73.0",
      "67.0",
      "74.0",
      "67.0",
      "75.0",
      "67.0",
      "76.0",
      "67.0",
      "77.0",
      "67.0",
      "78.0",
      "67.0",
      "79.0",
      "67.0",
      "80.0",
      "67.0",
      "81.0",
      "67.0",
      "82.0",
      "67.0",
      "83.0",
      "67.0",
      "84.0",
      "67.0",
      "85.0",
      "67.0",
      "86.0",
      "67.0",
      "87.0",
      "67.0",
      "88.0",
      "67.0",
      "89.0",
      "67.0",
      "90.0",
      "67.0",
      "91.0",
      "67.0",
      "92.0",
      "67.0",
      "93.0",
      "67.0",
      "94.0",
      "67.0",
      "95.0",
      "67.0",
      "96.0",
      "67.0",
      "97.0",
      "67.0",
      "98.0",
      "67.0",
      "99.0",
      "67.0",
      "100.0",
      "68.0",
      "0.0",
      "68.0",
      "1.0",
      "68.0",
      "2.0",
      "68.0",
      "3.0",
      "68.0",
      "4.0",
      "68.0",
      "5.0",
      "68.0",
      "6.0",
      "68.0",
      "7.0",
      "68.0",
      "8.0",
      "68.0",
      "9.0",
      "68.0",
      "10.0",
      "68.0",
      "11.0",
      "68.0",
      "12.0",
      "68.0",
      "13.0",
      "68.0",
      "14.0",
      "68.0",
      "15.0",
      "68.0",
      "16.0",
      "68.0",
      "17.0",
      "68.0",
      "18.0",
      "68.0",
      "19.0",
      "68.0",
      "20.0",
      "68.0",
      "21.0",
      "68.0",
      "22.0",
      "68.0",
      "23.0",
      "68.0",
      "24.0",
      "68.0",
      "25.0",
      "68.0",
      "26.0",
      "68.0",
      "27.0",
      "68.0",
      "28.0",
      "68.0",
      "29.0",
      "68.0",
      "30.0",
      "68.0",
      "31.0",
      "68.0",
      "32.0",
      "68.0",
      "33.0",
      "68.0",
      "34.0",
      "68.0",
      "35.0",
      "68.0",
      "36.0",
      "68.0",
      "37.0",
      "68.0",
      "38.0",
      "68.0",
      "39.0",
      "68.0",
      "40.0",
      "68.0",
      "41.0",
      "68.0",
      "42.0",
      "68.0",
      "43.0",
      "68.0",
      "44.0",
      "68.0",
      "45.0",
      "68.0",
      "46.0",
      "68.0",
      "47.0",
      "68.0",
      "48.0",
      "68.0",
      "49.0",
      "68.0",
      "50.0",
      "68.0",
      "51.0",
      "68.0",
      "52.0",
      "68.0",
      "53.0",
      "68.0",
      "54.0",
      "68.0",
      "55.0",
      "68.0",
      "56.0",
      "68.0",
      "57.0",
      "68.0",
      "58.0",
      "68.0",
      "59.0",
      "68.0",
      "60.0",
      "68.0",
      "61.0",
      "68.0",
      "62.0",
      "68.0",
      "63.0",
      "68.0",
      "64.0",
      "68.0",
      "65.0",
      "68.0",
      "66.0",
      "68.0",
      "67.0",
      "68.0",
      "68.0",
      "68.0",
      "69.0",
      "68.0",
      "70.0",
      "68.0",
      "71.0",
      "68.0",
      "72.0",
      "68.0",
      "73.0",
      "68.0",
      "74.0",
      "68.0",
      "75.0",
      "68.0",
      "76.0",
      "68.0",
      "77.0",
      "68.0",
      "78.0",
      "68.0",
      "79.0",
      "68.0",
      "80.0",
      "68.0",
      "81.0",
      "68.0",
      "82.0",
      "68.0",
      "83.0",
      "68.0",
      "84.0",
      "68.0",
      "85.0",
      "68.0",
      "86.0",
      "68.0",
      "87.0",
      "68.0",
      "88.0",
      "68.0",
      "89.0",
      "68.0",
      "90.0",
      "68.0",
      "91.0",
      "68.0",
      "92.0",
      "68.0",
      "93.0",
      "68.0",
      "94.0",
      "68.0",
      "95.0",
      "68.0",
      "96.0",
      "68.0",
      "97.0",
      "68.0",
      "98.0",
      "68.0",
      "99.0",
      "68.0",
      "100.0",
      "69.0",
      "0.0",
      "69.0",
      "1.0",
      "69.0",
      "2.0",
      "69.0",
      "3.0",
      "69.0",
      "4.0",
      "69.0",
      "5.0",
      "69.0",
      "6.0",
      "69.0",
      "7.0",
      "69.0",
      "8.0",
      "69.0",
      "9.0",
      "69.0",
      "10.0",
      "69.0",
      "11.0",
      "69.0",
      "12.0",
      "69.0",
      "13.0",
      "69.0",
      "14.0",
      "69.0",
      "15.0",
      "69.0",
      "16.0",
      "69.0",
      "17.0",
      "69.0",
      "18.0",
      "69.0",
      "19.0",
      "69.0",
      "20.0",
      "69.0",
      "21.0",
      "69.0",
      "22.0",
      "69.0",
      "23.0",
      "69.0",
      "24.0",
      "69.0",
      "25.0",
      "69.0",
      "26.0",
      "69.0",
      "27.0",
      "69.0",
      "28.0",
      "69.0",
      "29.0",
      "69.0",
      "30.0",
      "69.0",
      "31.0",
      "69.0",
      "32.0",
      "69.0",
      "33.0",
      "69.0",
      "34.0",
      "69.0",
      "35.0",
      "69.0",
      "36.0",
      "69.0",
      "37.0",
      "69.0",
      "38.0",
      "69.0",
      "39.0",
      "69.0",
      "40.0",
      "69.0",
      "41.0",
      "69.0",
      "42.0",
      "69.0",
      "43.0",
      "69.0",
      "44.0",
      "69.0",
      "45.0",
      "69.0",
      "46.0",
      "69.0",
      "47.0",
      "69.0",
      "48.0",
      "69.0",
      "49.0",
      "69.0",
      "50.0",
      "69.0",
      "51.0",
      "69.0",
      "52.0",
      "69.0",
      "53.0",
      "69.0",
      "54.0",
      "69.0",
      "55.0",
      "69.0",
      "56.0",
      "69.0",
      "57.0",
      "69.0",
      "58.0",
      "69.0",
      "59.0",
      "69.0",
      "60.0",
      "69.0",
      "61.0",
      "69.0",
      "62.0",
      "69.0",
      "63.0",
      "69.0",
      "64.0",
      "69.0",
      "65.0",
      "69.0",
      "66.0",
      "69.0",
      "67.0",
      "69.0",
      "68.0",
      "69.0",
      "69.0",
      "69.0",
      "70.0",
      "69.0",
      "71.0",
      "69.0",
      "72.0",
      "69.0",
      "73.0",
      "69.0",
      "74.0",
      "69.0",
      "75.0",
      "69.0",
      "76.0",
      "69.0",
      "77.0",
      "69.0",
      "78.0",
      "69.0",
      "79.0",
      "69.0",
      "80.0",
      "69.0",
      "81.0",
      "69.0",
      "82.0",
      "69.0",
      "83.0",
      "69.0",
      "84.0",
      "69.0",
      "85.0",
      "69.0",
      "86.0",
      "69.0",
      "87.0",
      "69.0",
      "88.0",
      "69.0",
      "89.0",
      "69.0",
      "90.0",
      "69.0",
      "91.0",
      "69.0",
      "92.0",
      "69.0",
      "93.0",
      "69.0",
      "94.0",
      "69.0",
      "95.0",
      "69.0",
      "96.0",
      "69.0",
      "97.0",
      "69.0",
      "98.0",
      "69.0",
      "99.0",
      "69.0",
      "100.0",
      "70.0",
      "0.0",
      "70.0",
      "1.0",
      "70.0",
      "2.0",
      "70.0",
      "3.0",
      "70.0",
      "4.0",
      "70.0",
      "5.0",
      "70.0",
      "6.0",
      "70.0",
      "7.0",
      "70.0",
      "8.0",
      "70.0",
      "9.0",
      "70.0",
      "10.0",
      "70.0",
      "11.0",
      "70.0",
      "12.0",
      "70.0",
      "13.0",
      "70.0",
      "14.0",
      "70.0",
      "15.0",
      "70.0",
      "16.0",
      "70.0",
      "17.0",
      "70.0",
      "18.0",
      "70.0",
      "19.0",
      "70.0",
      "20.0",
      "70.0",
      "21.0",
      "70.0",
      "22.0",
      "70.0",
      "23.0",
      "70.0",
      "24.0",
      "70.0",
      "25.0",
      "70.0",
      "26.0",
      "70.0",
      "27.0",
      "70.0",
      "28.0",
      "70.0",
      "29.0",
      "70.0",
      "30.0",
      "70.0",
      "31.0",
      "70.0",
      "32.0",
      "70.0",
      "33.0",
      "70.0",
      "34.0",
      "70.0",
      "35.0",
      "70.0",
      "36.0",
      "70.0",
      "37.0",
      "70.0",
      "38.0",
      "70.0",
      "39.0",
      "70.0",
      "40.0",
      "70.0",
      "41.0",
      "70.0",
      "42.0",
      "70.0",
      "43.0",
      "70.0",
      "44.0",
      "70.0",
      "45.0",
      "70.0",
      "46.0",
      "70.0",
      "47.0",
      "70.0",
      "48.0",
      "70.0",
      "49.0",
      "70.0",
      "50.0",
      "70.0",
      "51.0",
      "70.0",
      "52.0",
      "70.0",
      "53.0",
      "70.0",
      "54.0",
      "70.0",
      "55.0",
      "70.0",
      "56.0",
      "70.0",
      "57.0",
      "70.0",
      "58.0",
      "70.0",
      "59.0",
      "70.0",
      "60.0",
      "70.0",
      "61.0",
      "70.0",
      "62.0",
      "70.0",
      "63.0",
      "70.0",
      "64.0",
      "70.0",
      "65.0",
      "70.0",
      "66.0",
      "70.0",
      "67.0",
      "70.0",
      "68.0",
      "70.0",
      "69.0",
      "70.0",
      "70.0",
      "70.0",
      "71.0",
      "70.0",
      "72.0",
      "70.0",
      "73.0",
      "70.0",
      "74.0",
      "70.0",
      "75.0",
      "70.0",
      "76.0",
      "70.0",
      "77.0",
      "70.0",
      "78.0",
      "70.0",
      "79.0",
      "70.0",
      "80.0",
      "70.0",
      "81.0",
      "70.0",
      "82.0",
      "70.0",
      "83.0",
      "70.0",
      "84.0",
      "70.0",
      "85.0",
      "70.0",
      "86.0",
      "70.0",
      "87.0",
      "70.0",
      "88.0",
      "70.0",
      "89.0",
      "70.0",
      "90.0",
      "70.0",
      "91.0",
      "70.0",
      "92.0",
      "70.0",
      "93.0",
      "70.0",
      "94.0",
      "70.0",
      "95.0",
      "70.0",
      "96.0",
      "70.0",
      "97.0",
      "70.0",
      "98.0",
      "70.0",
      "99.0",
      "70.0",
      "100.0",
      "71.0",
      "0.0",
      "71.0",
      "1.0",
      "71.0",
      "2.0",
      "71.0",
      "3.0",
      "71.0",
      "4.0",
      "71.0",
      "5.0",
      "71.0",
      "6.0",
      "71.0",
      "7.0",
      "71.0",
      "8.0",
      "71.0",
      "9.0",
      "71.0",
      "10.0",
      "71.0",
      "11.0",
      "71.0",
      "12.0",
      "71.0",
      "13.0",
      "71.0",
      "14.0",
      "71.0",
      "15.0",
      "71.0",
      "16.0",
      "71.0",
      "17.0",
      "71.0",
      "18.0",
      "71.0",
      "19.0",
      "71.0",
      "20.0",
      "71.0",
      "21.0",
      "71.0",
      "22.0",
      "71.0",
      "23.0",
      "71.0",
      "24.0",
      "71.0",
      "25.0",
      "71.0",
      "26.0",
      "71.0",
      "27.0",
      "71.0",
      "28.0",
      "71.0",
      "29.0",
      "71.0",
      "30.0",
      "71.0",
      "31.0",
      "71.0",
      "32.0",
      "71.0",
      "33.0",
      "71.0",
      "34.0",
      "71.0",
      "35.0",
      "71.0",
      "36.0",
      "71.0",
      "37.0",
      "71.0",
      "38.0",
      "71.0",
      "39.0",
      "71.0",
      "40.0",
      "71.0",
      "41.0",
      "71.0",
      "42.0",
      "71.0",
      "43.0",
      "71.0",
      "44.0",
      "71.0",
      "45.0",
      "71.0",
      "46.0",
      "71.0",
      "47.0",
      "71.0",
      "48.0",
      "71.0",
      "49.0",
      "71.0",
      "50.0",
      "71.0",
      "51.0",
      "71.0",
      "52.0",
      "71.0",
      "53.0",
      "71.0",
      "54.0",
      "71.0",
      "55.0",
      "71.0",
      "56.0",
      "71.0",
      "57.0",
      "71.0",
      "58.0",
      "71.0",
      "59.0",
      "71.0",
      "60.0",
      "71.0",
      "61.0",
      "71.0",
      "62.0",
      "71.0",
      "63.0",
      "71.0",
      "64.0",
      "71.0",
      "65.0",
      "71.0",
      "66.0",
      "71.0",
      "67.0",
      "71.0",
      "68.0",
      "71.0",
      "69.0",
      "71.0",
      "70.0",
      "71.0",
      "71.0",
      "71.0",
      "72.0",
      "71.0",
      "73.0",
      "71.0",
      "74.0",
      "71.0",
      "75.0",
      "71.0",
      "76.0",
      "71.0",
      "77.0",
      "71.0",
      "78.0",
      "71.0",
      "79.0",
      "71.0",
      "80.0",
      "71.0",
      "81.0",
      "71.0",
      "82.0",
      "71.0",
      "83.0",
      "71.0",
      "84.0",
      "71.0",
      "85.0",
      "71.0",
      "86.0",
      "71.0",
      "87.0",
      "71.0",
      "88.0",
      "71.0",
      "89.0",
      "71.0",
      "90.0",
      "71.0",
      "91.0",
      "71.0",
      "92.0",
      "71.0",
      "93.0",
      "71.0",
      "94.0",
      "71.0",
      "95.0",
      "71.0",
      "96.0",
      "71.0",
      "97.0",
      "71.0",
      "98.0",
      "71.0",
      "99.0",
      "71.0",
      "100.0",
      "72.0",
      "0.0",
      "72.0",
      "1.0",
      "72.0",
      "2.0",
      "72.0",
      "3.0",
      "72.0",
      "4.0",
      "72.0",
      "5.0",
      "72.0",
      "6.0",
      "72.0",
      "7.0",
      "72.0",
      "8.0",
      "72.0",
      "9.0",
      "72.0",
      "10.0",
      "72.0",
      "11.0",
      "72.0",
      "12.0",
      "72.0",
      "13.0",
      "72.0",
      "14.0",
      "72.0",
      "15.0",
      "72.0",
      "16.0",
      "72.0",
      "17.0",
      "72.0",
      "18.0",
      "72.0",
      "19.0",
      "72.0",
      "20.0",
      "72.0",
      "21.0",
      "72.0",
      "22.0",
      "72.0",
      "23.0",
      "72.0",
      "24.0",
      "72.0",
      "25.0",
      "72.0",
      "26.0",
      "72.0",
      "27.0",
      "72.0",
      "28.0",
      "72.0",
      "29.0",
      "72.0",
      "30.0",
      "72.0",
      "31.0",
      "72.0",
      "32.0",
      "72.0",
      "33.0",
      "72.0",
      "34.0",
      "72.0",
      "35.0",
      "72.0",
      "36.0",
      "72.0",
      "37.0",
      "72.0",
      "38.0",
      "72.0",
      "39.0",
      "72.0",
      "40.0",
      "72.0",
      "41.0",
      "72.0",
      "42.0",
      "72.0",
      "43.0",
      "72.0",
      "44.0",
      "72.0",
      "45.0",
      "72.0",
      "46.0",
      "72.0",
      "47.0",
      "72.0",
      "48.0",
      "72.0",
      "49.0",
      "72.0",
      "50.0",
      "72.0",
      "51.0",
      "72.0",
      "52.0",
      "72.0",
      "53.0",
      "72.0",
      "54.0",
      "72.0",
      "55.0",
      "72.0",
      "56.0",
      "72.0",
      "57.0",
      "72.0",
      "58.0",
      "72.0",
      "59.0",
      "72.0",
      "60.0",
      "72.0",
      "61.0",
      "72.0",
      "62.0",
      "72.0",
      "63.0",
      "72.0",
      "64.0",
      "72.0",
      "65.0",
      "72.0",
      "66.0",
      "72.0",
      "67.0",
      "72.0",
      "68.0",
      "72.0",
      "69.0",
      "72.0",
      "70.0",
      "72.0",
      "71.0",
      "72.0",
      "72.0",
      "72.0",
      "73.0",
      "72.0",
      "74.0",
      "72.0",
      "75.0",
      "72.0",
      "76.0",
      "72.0",
      "77.0",
      "72.0",
      "78.0",
      "72.0",
      "79.0",
      "72.0",
      "80.0",
      "72.0",
      "81.0",
      "72.0",
      "82.0",
      "72.0",
      "83.0",
      "72.0",
      "84.0",
      "72.0",
      "85.0",
      "72.0",
      "86.0",
      "72.0",
      "87.0",
      "72.0",
      "88.0",
      "72.0",
      "89.0",
      "72.0",
      "90.0",
      "72.0",
      "91.0",
      "72.0",
      "92.0",
      "72.0",
      "93.0",
      "72.0",
      "94.0",
      "72.0",
      "95.0",
      "72.0",
      "96.0",
      "72.0",
      "97.0",
      "72.0",
      "98.0",
      "72.0",
      "99.0",
      "72.0",
      "100.0",
      "73.0",
      "0.0",
      "73.0",
      "1.0",
      "73.0",
      "2.0",
      "73.0",
      "3.0",
      "73.0",
      "4.0",
      "73.0",
      "5.0",
      "73.0",
      "6.0",
      "73.0",
      "7.0",
      "73.0",
      "8.0",
      "73.0",
      "9.0",
      "73.0",
      "10.0",
      "73.0",
      "11.0",
      "73.0",
      "12.0",
      "73.0",
      "13.0",
      "73.0",
      "14.0",
      "73.0",
      "15.0",
      "73.0",
      "16.0",
      "73.0",
      "17.0",
      "73.0",
      "18.0",
      "73.0",
      "19.0",
      "73.0",
      "20.0",
      "73.0",
      "21.0",
      "73.0",
      "22.0",
      "73.0",
      "23.0",
      "73.0",
      "24.0",
      "73.0",
      "25.0",
      "73.0",
      "26.0",
      "73.0",
      "27.0",
      "73.0",
      "28.0",
      "73.0",
      "29.0",
      "73.0",
      "30.0",
      "73.0",
      "31.0",
      "73.0",
      "32.0",
      "73.0",
      "33.0",
      "73.0",
      "34.0",
      "73.0",
      "35.0",
      "73.0",
      "36.0",
      "73.0",
      "37.0",
      "73.0",
      "38.0",
      "73.0",
      "39.0",
      "73.0",
      "40.0",
      "73.0",
      "41.0",
      "73.0",
      "42.0",
      "73.0",
      "43.0",
      "73.0",
      "44.0",
      "73.0",
      "45.0",
      "73.0",
      "46.0",
      "73.0",
      "47.0",
      "73.0",
      "48.0",
      "73.0",
      "49.0",
      "73.0",
      "50.0",
      "73.0",
      "51.0",
      "73.0",
      "52.0",
      "73.0",
      "53.0",
      "73.0",
      "54.0",
      "73.0",
      "55.0",
      "73.0",
      "56.0",
      "73.0",
      "57.0",
      "73.0",
      "58.0",
      "73.0",
      "59.0",
      "73.0",
      "60.0",
      "73.0",
      "61.0",
      "73.0",
      "62.0",
      "73.0",
      "63.0",
      "73.0",
      "64.0",
      "73.0",
      "65.0",
      "73.0",
      "66.0",
      "73.0",
      "67.0",
      "73.0",
      "68.0",
      "73.0",
      "69.0",
      "73.0",
      "70.0",
      "73.0",
      "71.0",
      "73.0",
      "72.0",
      "73.0",
      "73.0",
      "73.0",
      "74.0",
      "73.0",
      "75.0",
      "73.0",
      "76.0",
      "73.0",
      "77.0",
      "73.0",
      "78.0",
      "73.0",
      "79.0",
      "73.0",
      "80.0",
      "73.0",
      "81.0",
      "73.0",
      "82.0",
      "73.0",
      "83.0",
      "73.0",
      "84.0",
      "73.0",
      "85.0",
      "73.0",
      "86.0",
      "73.0",
      "87.0",
      "73.0",
      "88.0",
      "73.0",
      "89.0",
      "73.0",
      "90.0",
      "73.0",
      "91.0",
      "73.0",
      "92.0",
      "73.0",
      "93.0",
      "73.0",
      "94.0",
      "73.0",
      "95.0",
      "73.0",
      "96.0",
      "73.0",
      "97.0",
      "73.0",
      "98.0",
      "73.0",
      "99.0",
      "73.0",
      "100.0",
      "74.0",
      "0.0",
      "74.0",
      "1.0",
      "74.0",
      "2.0",
      "74.0",
      "3.0",
      "74.0",
      "4.0",
      "74.0",
      "5.0",
      "74.0",
      "6.0",
      "74.0",
      "7.0",
      "74.0",
      "8.0",
      "74.0",
      "9.0",
      "74.0",
      "10.0",
      "74.0",
      "11.0",
      "74.0",
      "12.0",
      "74.0",
      "13.0",
      "74.0",
      "14.0",
      "74.0",
      "15.0",
      "74.0",
      "16.0",
      "74.0",
      "17.0",
      "74.0",
      "18.0",
      "74.0",
      "19.0",
      "74.0",
      "20.0",
      "74.0",
      "21.0",
      "74.0",
      "22.0",
      "74.0",
      "23.0",
      "74.0",
      "24.0",
      "74.0",
      "25.0",
      "74.0",
      "26.0",
      "74.0",
      "27.0",
      "74.0",
      "28.0",
      "74.0",
      "29.0",
      "74.0",
      "30.0",
      "74.0",
      "31.0",
      "74.0",
      "32.0",
      "74.0",
      "33.0",
      "74.0",
      "34.0",
      "74.0",
      "35.0",
      "74.0",
      "36.0",
      "74.0",
      "37.0",
      "74.0",
      "38.0",
      "74.0",
      "39.0",
      "74.0",
      "40.0",
      "74.0",
      "41.0",
      "74.0",
      "42.0",
      "74.0",
      "43.0",
      "74.0",
      "44.0",
      "74.0",
      "45.0",
      "74.0",
      "46.0",
      "74.0",
      "47.0",
      "74.0",
      "48.0",
      "74.0",
      "49.0",
      "74.0",
      "50.0",
      "74.0",
      "51.0",
      "74.0",
      "52.0",
      "74.0",
      "53.0",
      "74.0",
      "54.0",
      "74.0",
      "55.0",
      "74.0",
      "56.0",
      "74.0",
      "57.0",
      "74.0",
      "58.0",
      "74.0",
      "59.0",
      "74.0",
      "60.0",
      "74.0",
      "61.0",
      "74.0",
      "62.0",
      "74.0",
      "63.0",
      "74.0",
      "64.0",
      "74.0",
      "65.0",
      "74.0",
      "66.0",
      "74.0",
      "67.0",
      "74.0",
      "68.0",
      "74.0",
      "69.0",
      "74.0",
      "70.0",
      "74.0",
      "71.0",
      "74.0",
      "72.0",
      "74.0",
      "73.0",
      "74.0",
      "74.0",
      "74.0",
      "75.0",
      "74.0",
      "76.0",
      "74.0",
      "77.0",
      "74.0",
      "78.0",
      "74.0",
      "79.0",
      "74.0",
      "80.0",
      "74.0",
      "81.0",
      "74.0",
      "82.0",
      "74.0",
      "83.0",
      "74.0",
      "84.0",
      "74.0",
      "85.0",
      "74.0",
      "86.0",
      "74.0",
      "87.0",
      "74.0",
      "88.0",
      "74.0",
      "89.0",
      "74.0",
      "90.0",
      "74.0",
      "91.0",
      "74.0",
      "92.0",
      "74.0",
      "93.0",
      "74.0",
      "94.0",
      "74.0",
      "95.0",
      "74.0",
      "96.0",
      "74.0",
      "97.0",
      "74.0",
      "98.0",
      "74.0",
      "99.0",
      "74.0",
      "100.0",
      "75.0",
      "0.0",
      "75.0",
      "1.0",
      "75.0",
      "2.0",
      "75.0",
      "3.0",
      "75.0",
      "4.0",
      "75.0",
      "5.0",
      "75.0",
      "6.0",
      "75.0",
      "7.0",
      "75.0",
      "8.0",
      "75.0",
      "9.0",
      "75.0",
      "10.0",
      "75.0",
      "11.0",
      "75.0",
      "12.0",
      "75.0",
      "13.0",
      "75.0",
      "14.0",
      "75.0",
      "15.0",
      "75.0",
      "16.0",
      "75.0",
      "17.0",
      "75.0",
      "18.0",
      "75.0",
      "19.0",
      "75.0",
      "20.0",
      "75.0",
      "21.0",
      "75.0",
      "22.0",
      "75.0",
      "23.0",
      "75.0",
      "24.0",
      "75.0",
      "25.0",
      "75.0",
      "26.0",
      "75.0",
      "27.0",
      "75.0",
      "28.0",
      "75.0",
      "29.0",
      "75.0",
      "30.0",
      "75.0",
      "31.0",
      "75.0",
      "32.0",
      "75.0",
      "33.0",
      "75.0",
      "34.0",
      "75.0",
      "35.0",
      "75.0",
      "36.0",
      "75.0",
      "37.0",
      "75.0",
      "38.0",
      "75.0",
      "39.0",
      "75.0",
      "40.0",
      "75.0",
      "41.0",
      "75.0",
      "42.0",
      "75.0",
      "43.0",
      "75.0",
      "44.0",
      "75.0",
      "45.0",
      "75.0",
      "46.0",
      "75.0",
      "47.0",
      "75.0",
      "48.0",
      "75.0",
      "49.0",
      "75.0",
      "50.0",
      "75.0",
      "51.0",
      "75.0",
      "52.0",
      "75.0",
      "53.0",
      "75.0",
      "54.0",
      "75.0",
      "55.0",
      "75.0",
      "56.0",
      "75.0",
      "57.0",
      "75.0",
      "58.0",
      "75.0",
      "59.0",
      "75.0",
      "60.0",
      "75.0",
      "61.0",
      "75.0",
      "62.0",
      "75.0",
      "63.0",
      "75.0",
      "64.0",
      "75.0",
      "65.0",
      "75.0",
      "66.0",
      "75.0",
      "67.0",
      "75.0",
      "68.0",
      "75.0",
      "69.0",
      "75.0",
      "70.0",
      "75.0",
      "71.0",
      "75.0",
      "72.0",
      "75.0",
      "73.0",
      "75.0",
      "74.0",
      "75.0",
      "75.0",
      "75.0",
      "76.0",
      "75.0",
      "77.0",
      "75.0",
      "78.0",
      "75.0",
      "79.0",
      "75.0",
      "80.0",
      "75.0",
      "81.0",
      "75.0",
      "82.0",
      "75.0",
      "83.0",
      "75.0",
      "84.0",
      "75.0",
      "85.0",
      "75.0",
      "86.0",
      "75.0",
      "87.0",
      "75.0",
      "88.0",
      "75.0",
      "89.0",
      "75.0",
      "90.0",
      "75.0",
      "91.0",
      "75.0",
      "92.0",
      "75.0",
      "93.0",
      "75.0",
      "94.0",
      "75.0",
      "95.0",
      "75.0",
      "96.0",
      "75.0",
      "97.0",
      "75.0",
      "98.0",
      "75.0",
      "99.0",
      "75.0",
      "100.0",
      "76.0",
      "0.0",
      "76.0",
      "1.0",
      "76.0",
      "2.0",
      "76.0",
      "3.0",
      "76.0",
      "4.0",
      "76.0",
      "5.0",
      "76.0",
      "6.0",
      "76.0",
      "7.0",
      "76.0",
      "8.0",
      "76.0",
      "9.0",
      "76.0",
      "10.0",
      "76.0",
      "11.0",
      "76.0",
      "12.0",
      "76.0",
      "13.0",
      "76.0",
      "14.0",
      "76.0",
      "15.0",
      "76.0",
      "16.0",
      "76.0",
      "17.0",
      "76.0",
      "18.0",
      "76.0",
      "19.0",
      "76.0",
      "20.0",
      "76.0",
      "21.0",
      "76.0",
      "22.0",
      "76.0",
      "23.0",
      "76.0",
      "24.0",
      "76.0",
      "25.0",
      "76.0",
      "26.0",
      "76.0",
      "27.0",
      "76.0",
      "28.0",
      "76.0",
      "29.0",
      "76.0",
      "30.0",
      "76.0",
      "31.0",
      "76.0",
      "32.0",
      "76.0",
      "33.0",
      "76.0",
      "34.0",
      "76.0",
      "35.0",
      "76.0",
      "36.0",
      "76.0",
      "37.0",
      "76.0",
      "38.0",
      "76.0",
      "39.0",
      "76.0",
      "40.0",
      "76.0",
      "41.0",
      "76.0",
      "42.0",
      "76.0",
      "43.0",
      "76.0",
      "44.0",
      "76.0",
      "45.0",
      "76.0",
      "46.0",
      "76.0",
      "47.0",
      "76.0",
      "48.0",
      "76.0",
      "49.0",
      "76.0",
      "50.0",
      "76.0",
      "51.0",
      "76.0",
      "52.0",
      "76.0",
      "53.0",
      "76.0",
      "54.0",
      "76.0",
      "55.0",
      "76.0",
      "56.0",
      "76.0",
      "57.0",
      "76.0",
      "58.0",
      "76.0",
      "59.0",
      "76.0",
      "60.0",
      "76.0",
      "61.0",
      "76.0",
      "62.0",
      "76.0",
      "63.0",
      "76.0",
      "64.0",
      "76.0",
      "65.0",
      "76.0",
      "66.0",
      "76.0",
      "67.0",
      "76.0",
      "68.0",
      "76.0",
      "69.0",
      "76.0",
      "70.0",
      "76.0",
      "71.0",
      "76.0",
      "72.0",
      "76.0",
      "73.0",
      "76.0",
      "74.0",
      "76.0",
      "75.0",
      "76.0",
      "76.0",
      "76.0",
      "77.0",
      "76.0",
      "78.0",
      "76.0",
      "79.0",
      "76.0",
      "80.0",
      "76.0",
      "81.0",
      "76.0",
      "82.0",
      "76.0",
      "83.0",
      "76.0",
      "84.0",
      "76.0",
      "85.0",
      "76.0",
      "86.0",
      "76.0",
      "87.0",
      "76.0",
      "88.0",
      "76.0",
      "89.0",
      "76.0",
      "90.0",
      "76.0",
      "91.0",
      "76.0",
      "92.0",
      "76.0",
      "93.0",
      "76.0",
      "94.0",
      "76.0",
      "95.0",
      "76.0",
      "96.0",
      "76.0",
      "97.0",
      "76.0",
      "98.0",
      "76.0",
      "99.0",
      "76.0",
      "100.0",
      "77.0",
      "0.0",
      "77.0",
      "1.0",
      "77.0",
      "2.0",
      "77.0",
      "3.0",
      "77.0",
      "4.0",
      "77.0",
      "5.0",
      "77.0",
      "6.0",
      "77.0",
      "7.0",
      "77.0",
      "8.0",
      "77.0",
      "9.0",
      "77.0",
      "10.0",
      "77.0",
      "11.0",
      "77.0",
      "12.0",
      "77.0",
      "13.0",
      "77.0",
      "14.0",
      "77.0",
      "15.0",
      "77.0",
      "16.0",
      "77.0",
      "17.0",
      "77.0",
      "18.0",
      "77.0",
      "19.0",
      "77.0",
      "20.0",
      "77.0",
      "21.0",
      "77.0",
      "22.0",
      "77.0",
      "23.0",
      "77.0",
      "24.0",
      "77.0",
      "25.0",
      "77.0",
      "26.0",
      "77.0",
      "27.0",
      "77.0",
      "28.0",
      "77.0",
      "29.0",
      "77.0",
      "30.0",
      "77.0",
      "31.0",
      "77.0",
      "32.0",
      "77.0",
      "33.0",
      "77.0",
      "34.0",
      "77.0",
      "35.0",
      "77.0",
      "36.0",
      "77.0",
      "37.0",
      "77.0",
      "38.0",
      "77.0",
      "39.0",
      "77.0",
      "40.0",
      "77.0",
      "41.0",
      "77.0",
      "42.0",
      "77.0",
      "43.0",
      "77.0",
      "44.0",
      "77.0",
      "45.0",
      "77.0",
      "46.0",
      "77.0",
      "47.0",
      "77.0",
      "48.0",
      "77.0",
      "49.0",
      "77.0",
      "50.0",
      "77.0",
      "51.0",
      "77.0",
      "52.0",
      "77.0",
      "53.0",
      "77.0",
      "54.0",
      "77.0",
      "55.0",
      "77.0",
      "56.0",
      "77.0",
      "57.0",
      "77.0",
      "58.0",
      "77.0",
      "59.0",
      "77.0",
      "60.0",
      "77.0",
      "61.0",
      "77.0",
      "62.0",
      "77.0",
      "63.0",
      "77.0",
      "64.0",
      "77.0",
      "65.0",
      "77.0",
      "66.0",
      "77.0",
      "67.0",
      "77.0",
      "68.0",
      "77.0",
      "69.0",
      "77.0",
      "70.0",
      "77.0",
      "71.0",
      "77.0",
      "72.0",
      "77.0",
      "73.0",
      "77.0",
      "74.0",
      "77.0",
      "75.0",
      "77.0",
      "76.0",
      "77.0",
      "77.0",
      "77.0",
      "78.0",
      "77.0",
      "79.0",
      "77.0",
      "80.0",
      "77.0",
      "81.0",
      "77.0",
      "82.0",
      "77.0",
      "83.0",
      "77.0",
      "84.0",
      "77.0",
      "85.0",
      "77.0",
      "86.0",
      "77.0",
      "87.0",
      "77.0",
      "88.0",
      "77.0",
      "89.0",
      "77.0",
      "90.0",
      "77.0",
      "91.0",
      "77.0",
      "92.0",
      "77.0",
      "93.0",
      "77.0",
      "94.0",
      "77.0",
      "95.0",
      "77.0",
      "96.0",
      "77.0",
      "97.0",
      "77.0",
      "98.0",
      "77.0",
      "99.0",
      "77.0",
      "100.0",
      "78.0",
      "0.0",
      "78.0",
      "1.0",
      "78.0",
      "2.0",
      "78.0",
      "3.0",
      "78.0",
      "4.0",
      "78.0",
      "5.0",
      "78.0",
      "6.0",
      "78.0",
      "7.0",
      "78.0",
      "8.0",
      "78.0",
      "9.0",
      "78.0",
      "10.0",
      "78.0",
      "11.0",
      "78.0",
      "12.0",
      "78.0",
      "13.0",
      "78.0",
      "14.0",
      "78.0",
      "15.0",
      "78.0",
      "16.0",
      "78.0",
      "17.0",
      "78.0",
      "18.0",
      "78.0",
      "19.0",
      "78.0",
      "20.0",
      "78.0",
      "21.0",
      "78.0",
      "22.0",
      "78.0",
      "23.0",
      "78.0",
      "24.0",
      "78.0",
      "25.0",
      "78.0",
      "26.0",
      "78.0",
      "27.0",
      "78.0",
      "28.0",
      "78.0",
      "29.0",
      "78.0",
      "30.0",
      "78.0",
      "31.0",
      "78.0",
      "32.0",
      "78.0",
      "33.0",
      "78.0",
      "34.0",
      "78.0",
      "35.0",
      "78.0",
      "36.0",
      "78.0",
      "37.0",
      "78.0",
      "38.0",
      "78.0",
      "39.0",
      "78.0",
      "40.0",
      "78.0",
      "41.0",
      "78.0",
      "42.0",
      "78.0",
      "43.0",
      "78.0",
      "44.0",
      "78.0",
      "45.0",
      "78.0",
      "46.0",
      "78.0",
      "47.0",
      "78.0",
      "48.0",
      "78.0",
      "49.0",
      "78.0",
      "50.0",
      "78.0",
      "51.0",
      "78.0",
      "52.0",
      "78.0",
      "53.0",
      "78.0",
      "54.0",
      "78.0",
      "55.0",
      "78.0",
      "56.0",
      "78.0",
      "57.0",
      "78.0",
      "58.0",
      "78.0",
      "59.0",
      "78.0",
      "60.0",
      "78.0",
      "61.0",
      "78.0",
      "62.0",
      "78.0",
      "63.0",
      "78.0",
      "64.0",
      "78.0",
      "65.0",
      "78.0",
      "66.0",
      "78.0",
      "67.0",
      "78.0",
      "68.0",
      "78.0",
      "69.0",
      "78.0",
      "70.0",
      "78.0",
      "71.0",
      "78.0",
      "72.0",
      "78.0",
      "73.0",
      "78.0",
      "74.0",
      "78.0",
      "75.0",
      "78.0",
      "76.0",
      "78.0",
      "77.0",
      "78.0",
      "78.0",
      "78.0",
      "79.0",
      "78.0",
      "80.0",
      "78.0",
      "81.0",
      "78.0",
      "82.0",
      "78.0",
      "83.0",
      "78.0",
      "84.0",
      "78.0",
      "85.0",
      "78.0",
      "86.0",
      "78.0",
      "87.0",
      "78.0",
      "88.0",
      "78.0",
      "89.0",
      "78.0",
      "90.0",
      "78.0",
      "91.0",
      "78.0",
      "92.0",
      "78.0",
      "93.0",
      "78.0",
      "94.0",
      "78.0",
      "95.0",
      "78.0",
      "96.0",
      "78.0",
      "97.0",
      "78.0",
      "98.0",
      "78.0",
      "99.0",
      "78.0",
      "100.0",
      "79.0",
      "0.0",
      "79.0",
      "1.0",
      "79.0",
      "2.0",
      "79.0",
      "3.0",
      "79.0",
      "4.0",
      "79.0",
      "5.0",
      "79.0",
      "6.0",
      "79.0",
      "7.0",
      "79.0",
      "8.0",
      "79.0",
      "9.0",
      "79.0",
      "10.0",
      "79.0",
      "11.0",
      "79.0",
      "12.0",
      "79.0",
      "13.0",
      "79.0",
      "14.0",
      "79.0",
      "15.0",
      "79.0",
      "16.0",
      "79.0",
      "17.0",
      "79.0",
      "18.0",
      "79.0",
      "19.0",
      "79.0",
      "20.0",
      "79.0",
      "21.0",
      "79.0",
      "22.0",
      "79.0",
      "23.0",
      "79.0",
      "24.0",
      "79.0",
      "25.0",
      "79.0",
      "26.0",
      "79.0",
      "27.0",
      "79.0",
      "28.0",
      "79.0",
      "29.0",
      "79.0",
      "30.0",
      "79.0",
      "31.0",
      "79.0",
      "32.0",
      "79.0",
      "33.0",
      "79.0",
      "34.0",
      "79.0",
      "35.0",
      "79.0",
      "36.0",
      "79.0",
      "37.0",
      "79.0",
      "38.0",
      "79.0",
      "39.0",
      "79.0",
      "40.0",
      "79.0",
      "41.0",
      "79.0",
      "42.0",
      "79.0",
      "43.0",
      "79.0",
      "44.0",
      "79.0",
      "45.0",
      "79.0",
      "46.0",
      "79.0",
      "47.0",
      "79.0",
      "48.0",
      "79.0",
      "49.0",
      "79.0",
      "50.0",
      "79.0",
      "51.0",
      "79.0",
      "52.0",
      "79.0",
      "53.0",
      "79.0",
      "54.0",
      "79.0",
      "55.0",
      "79.0",
      "56.0",
      "79.0",
      "57.0",
      "79.0",
      "58.0",
      "79.0",
      "59.0",
      "79.0",
      "60.0",
      "79.0",
      "61.0",
      "79.0",
      "62.0",
      "79.0",
      "63.0",
      "79.0",
      "64.0",
      "79.0",
      "65.0",
      "79.0",
      "66.0",
      "79.0",
      "67.0",
      "79.0",
      "68.0",
      "79.0",
      "69.0",
      "79.0",
      "70.0",
      "79.0",
      "71.0",
      "79.0",
      "72.0",
      "79.0",
      "73.0",
      "79.0",
      "74.0",
      "79.0",
      "75.0",
      "79.0",
      "76.0",
      "79.0",
      "77.0",
      "79.0",
      "78.0",
      "79.0",
      "79.0",
      "79.0",
      "80.0",
      "79.0",
      "81.0",
      "79.0",
      "82.0",
      "79.0",
      "83.0",
      "79.0",
      "84.0",
      "79.0",
      "85.0",
      "79.0",
      "86.0",
      "79.0",
      "87.0",
      "79.0",
      "88.0",
      "79.0",
      "89.0",
      "79.0",
      "90.0",
      "79.0",
      "91.0",
      "79.0",
      "92.0",
      "79.0",
      "93.0",
      "79.0",
      "94.0",
      "79.0",
      "95.0",
      "79.0",
      "96.0",
      "79.0",
      "97.0",
      "79.0",
      "98.0",
      "79.0",
      "99.0",
      "79.0",
      "100.0",
      "80.0",
      "0.0",
      "80.0",
      "1.0",
      "80.0",
      "2.0",
      "80.0",
      "3.0",
      "80.0",
      "4.0",
      "80.0",
      "5.0",
      "80.0",
      "6.0",
      "80.0",
      "7.0",
      "80.0",
      "8.0",
      "80.0",
      "9.0",
      "80.0",
      "10.0",
      "80.0",
      "11.0",
      "80.0",
      "12.0",
      "80.0",
      "13.0",
      "80.0",
      "14.0",
      "80.0",
      "15.0",
      "80.0",
      "16.0",
      "80.0",
      "17.0",
      "80.0",
      "18.0",
      "80.0",
      "19.0",
      "80.0",
      "20.0",
      "80.0",
      "21.0",
      "80.0",
      "22.0",
      "80.0",
      "23.0",
      "80.0",
      "24.0",
      "80.0",
      "25.0",
      "80.0",
      "26.0",
      "80.0",
      "27.0",
      "80.0",
      "28.0",
      "80.0",
      "29.0",
      "80.0",
      "30.0",
      "80.0",
      "31.0",
      "80.0",
      "32.0",
      "80.0",
      "33.0",
      "80.0",
      "34.0",
      "80.0",
      "35.0",
      "80.0",
      "36.0",
      "80.0",
      "37.0",
      "80.0",
      "38.0",
      "80.0",
      "39.0",
      "80.0",
      "40.0",
      "80.0",
      "41.0",
      "80.0",
      "42.0",
      "80.0",
      "43.0",
      "80.0",
      "44.0",
      "80.0",
      "45.0",
      "80.0",
      "46.0",
      "80.0",
      "47.0",
      "80.0",
      "48.0",
      "80.0",
      "49.0",
      "80.0",
      "50.0",
      "80.0",
      "51.0",
      "80.0",
      "52.0",
      "80.0",
      "53.0",
      "80.0",
      "54.0",
      "80.0",
      "55.0",
      "80.0",
      "56.0",
      "80.0",
      "57.0",
      "80.0",
      "58.0",
      "80.0",
      "59.0",
      "80.0",
      "60.0",
      "80.0",
      "61.0",
      "80.0",
      "62.0",
      "80.0",
      "63.0",
      "80.0",
      "64.0",
      "80.0",
      "65.0",
      "80.0",
      "66.0",
      "80.0",
      "67.0",
      "80.0",
      "68.0",
      "80.0",
      "69.0",
      "80.0",
      "70.0",
      "80.0",
      "71.0",
      "80.0",
      "72.0",
      "80.0",
      "73.0",
      "80.0",
      "74.0",
      "80.0",
      "75.0",
      "80.0",
      "76.0",
      "80.0",
      "77.0",
      "80.0",
      "78.0",
      "80.0",
      "79.0",
      "80.0",
      "80.0",
      "80.0",
      "81.0",
      "80.0",
      "82.0",
      "80.0",
      "83.0",
      "80.0",
      "84.0",
      "80.0",
      "85.0",
      "80.0",
      "86.0",
      "80.0",
      "87.0",
      "80.0",
      "88.0",
      "80.0",
      "89.0",
      "80.0",
      "90.0",
      "80.0",
      "91.0",
      "80.0",
      "92.0",
      "80.0",
      "93.0",
      "80.0",
      "94.0",
      "80.0",
      "95.0",
      "80.0",
      "96.0",
      "80.0",
      "97.0",
      "80.0",
      "98.0",
      "80.0",
      "99.0",
      "80.0",
      "100.0",
      "81.0",
      "0.0",
      "81.0",
      "1.0",
      "81.0",
      "2.0",
      "81.0",
      "3.0",
      "81.0",
      "4.0",
      "81.0",
      "5.0",
      "81.0",
      "6.0",
      "81.0",
      "7.0",
      "81.0",
      "8.0",
      "81.0",
      "9.0",
      "81.0",
      "10.0",
      "81.0",
      "11.0",
      "81.0",
      "12.0",
      "81.0",
      "13.0",
      "81.0",
      "14.0",
      "81.0",
      "15.0",
      "81.0",
      "16.0",
      "81.0",
      "17.0",
      "81.0",
      "18.0",
      "81.0",
      "19.0",
      "81.0",
      "20.0",
      "81.0",
      "21.0",
      "81.0",
      "22.0",
      "81.0",
      "23.0",
      "81.0",
      "24.0",
      "81.0",
      "25.0",
      "81.0",
      "26.0",
      "81.0",
      "27.0",
      "81.0",
      "28.0",
      "81.0",
      "29.0",
      "81.0",
      "30.0",
      "81.0",
      "31.0",
      "81.0",
      "32.0",
      "81.0",
      "33.0",
      "81.0",
      "34.0",
      "81.0",
      "35.0",
      "81.0",
      "36.0",
      "81.0",
      "37.0",
      "81.0",
      "38.0",
      "81.0",
      "39.0",
      "81.0",
      "40.0",
      "81.0",
      "41.0",
      "81.0",
      "42.0",
      "81.0",
      "43.0",
      "81.0",
      "44.0",
      "81.0",
      "45.0",
      "81.0",
      "46.0",
      "81.0",
      "47.0",
      "81.0",
      "48.0",
      "81.0",
      "49.0",
      "81.0",
      "50.0",
      "81.0",
      "51.0",
      "81.0",
      "52.0",
      "81.0",
      "53.0",
      "81.0",
      "54.0",
      "81.0",
      "55.0",
      "81.0",
      "56.0",
      "81.0",
      "57.0",
      "81.0",
      "58.0",
      "81.0",
      "59.0",
      "81.0",
      "60.0",
      "81.0",
      "61.0",
      "81.0",
      "62.0",
      "81.0",
      "63.0",
      "81.0",
      "64.0",
      "81.0",
      "65.0",
      "81.0",
      "66.0",
      "81.0",
      "67.0",
      "81.0",
      "68.0",
      "81.0",
      "69.0",
      "81.0",
      "70.0",
      "81.0",
      "71.0",
      "81.0",
      "72.0",
      "81.0",
      "73.0",
      "81.0",
      "74.0",
      "81.0",
      "75.0",
      "81.0",
      "76.0",
      "81.0",
      "77.0",
      "81.0",
      "78.0",
      "81.0",
      "79.0",
      "81.0",
      "80.0",
      "81.0",
      "81.0",
      "81.0",
      "82.0",
      "81.0",
      "83.0",
      "81.0",
      "84.0",
      "81.0",
      "85.0",
      "81.0",
      "86.0",
      "81.0",
      "87.0",
      "81.0",
      "88.0",
      "81.0",
      "89.0",
      "81.0",
      "90.0",
      "81.0",
      "91.0",
      "81.0",
      "92.0",
      "81.0",
      "93.0",
      "81.0",
      "94.0",
      "81.0",
      "95.0",
      "81.0",
      "96.0",
      "81.0",
      "97.0",
      "81.0",
      "98.0",
      "81.0",
      "99.0",
      "81.0",
      "100.0",
      "82.0",
      "0.0",
      "82.0",
      "1.0",
      "82.0",
      "2.0",
      "82.0",
      "3.0",
      "82.0",
      "4.0",
      "82.0",
      "5.0",
      "82.0",
      "6.0",
      "82.0",
      "7.0",
      "82.0",
      "8.0",
      "82.0",
      "9.0",
      "82.0",
      "10.0",
      "82.0",
      "11.0",
      "82.0",
      "12.0",
      "82.0",
      "13.0",
      "82.0",
      "14.0",
      "82.0",
      "15.0",
      "82.0",
      "16.0",
      "82.0",
      "17.0",
      "82.0",
      "18.0",
      "82.0",
      "19.0",
      "82.0",
      "20.0",
      "82.0",
      "21.0",
      "82.0",
      "22.0",
      "82.0",
      "23.0",
      "82.0",
      "24.0",
      "82.0",
      "25.0",
      "82.0",
      "26.0",
      "82.0",
      "27.0",
      "82.0",
      "28.0",
      "82.0",
      "29.0",
      "82.0",
      "30.0",
      "82.0",
      "31.0",
      "82.0",
      "32.0",
      "82.0",
      "33.0",
      "82.0",
      "34.0",
      "82.0",
      "35.0",
      "82.0",
      "36.0",
      "82.0",
      "37.0",
      "82.0",
      "38.0",
      "82.0",
      "39.0",
      "82.0",
      "40.0",
      "82.0",
      "41.0",
      "82.0",
      "42.0",
      "82.0",
      "43.0",
      "82.0",
      "44.0",
      "82.0",
      "45.0",
      "82.0",
      "46.0",
      "82.0",
      "47.0",
      "82.0",
      "48.0",
      "82.0",
      "49.0",
      "82.0",
      "50.0",
      "82.0",
      "51.0",
      "82.0",
      "52.0",
      "82.0",
      "53.0",
      "82.0",
      "54.0",
      "82.0",
      "55.0",
      "82.0",
      "56.0",
      "82.0",
      "57.0",
      "82.0",
      "58.0",
      "82.0",
      "59.0",
      "82.0",
      "60.0",
      "82.0",
      "61.0",
      "82.0",
      "62.0",
      "82.0",
      "63.0",
      "82.0",
      "64.0",
      "82.0",
      "65.0",
      "82.0",
      "66.0",
      "82.0",
      "67.0",
      "82.0",
      "68.0",
      "82.0",
      "69.0",
      "82.0",
      "70.0",
      "82.0",
      "71.0",
      "82.0",
      "72.0",
      "82.0",
      "73.0",
      "82.0",
      "74.0",
      "82.0",
      "75.0",
      "82.0",
      "76.0",
      "82.0",
      "77.0",
      "82.0",
      "78.0",
      "82.0",
      "79.0",
      "82.0",
      "80.0",
      "82.0",
      "81.0",
      "82.0",
      "82.0",
      "82.0",
      "83.0",
      "82.0",
      "84.0",
      "82.0",
      "85.0",
      "82.0",
      "86.0",
      "82.0",
      "87.0",
      "82.0",
      "88.0",
      "82.0",
      "89.0",
      "82.0",
      "90.0",
      "82.0",
      "91.0",
      "82.0",
      "92.0",
      "82.0",
      "93.0",
      "82.0",
      "94.0",
      "82.0",
      "95.0",
      "82.0",
      "96.0",
      "82.0",
      "97.0",
      "82.0",
      "98.0",
      "82.0",
      "99.0",
      "82.0",
      "100.0",
      "83.0",
      "0.0",
      "83.0",
      "1.0",
      "83.0",
      "2.0",
      "83.0",
      "3.0",
      "83.0",
      "4.0",
      "83.0",
      "5.0",
      "83.0",
      "6.0",
      "83.0",
      "7.0",
      "83.0",
      "8.0",
      "83.0",
      "9.0",
      "83.0",
      "10.0",
      "83.0",
      "11.0",
      "83.0",
      "12.0",
      "83.0",
      "13.0",
      "83.0",
      "14.0",
      "83.0",
      "15.0",
      "83.0",
      "16.0",
      "83.0",
      "17.0",
      "83.0",
      "18.0",
      "83.0",
      "19.0",
      "83.0",
      "20.0",
      "83.0",
      "21.0",
      "83.0",
      "22.0",
      "83.0",
      "23.0",
      "83.0",
      "24.0",
      "83.0",
      "25.0",
      "83.0",
      "26.0",
      "83.0",
      "27.0",
      "83.0",
      "28.0",
      "83.0",
      "29.0",
      "83.0",
      "30.0",
      "83.0",
      "31.0",
      "83.0",
      "32.0",
      "83.0",
      "33.0",
      "83.0",
      "34.0",
      "83.0",
      "35.0",
      "83.0",
      "36.0",
      "83.0",
      "37.0",
      "83.0",
      "38.0",
      "83.0",
      "39.0",
      "83.0",
      "40.0",
      "83.0",
      "41.0",
      "83.0",
      "42.0",
      "83.0",
      "43.0",
      "83.0",
      "44.0",
      "83.0",
      "45.0",
      "83.0",
      "46.0",
      "83.0",
      "47.0",
      "83.0",
      "48.0",
      "83.0",
      "49.0",
      "83.0",
      "50.0",
      "83.0",
      "51.0",
      "83.0",
      "52.0",
      "83.0",
      "53.0",
      "83.0",
      "54.0",
      "83.0",
      "55.0",
      "83.0",
      "56.0",
      "83.0",
      "57.0",
      "83.0",
      "58.0",
      "83.0",
      "59.0",
      "83.0",
      "60.0",
      "83.0",
      "61.0",
      "83.0",
      "62.0",
      "83.0",
      "63.0",
      "83.0",
      "64.0",
      "83.0",
      "65.0",
      "83.0",
      "66.0",
      "83.0",
      "67.0",
      "83.0",
      "68.0",
      "83.0",
      "69.0",
      "83.0",
      "70.0",
      "83.0",
      "71.0",
      "83.0",
      "72.0",
      "83.0",
      "73.0",
      "83.0",
      "74.0",
      "83.0",
      "75.0",
      "83.0",
      "76.0",
      "83.0",
      "77.0",
      "83.0",
      "78.0",
      "83.0",
      "79.0",
      "83.0",
      "80.0",
      "83.0",
      "81.0",
      "83.0",
      "82.0",
      "83.0",
      "83.0",
      "83.0",
      "84.0",
      "83.0",
      "85.0",
      "83.0",
      "86.0",
      "83.0",
      "87.0",
      "83.0",
      "88.0",
      "83.0",
      "89.0",
      "83.0",
      "90.0",
      "83.0",
      "91.0",
      "83.0",
      "92.0",
      "83.0",
      "93.0",
      "83.0",
      "94.0",
      "83.0",
      "95.0",
      "83.0",
      "96.0",
      "83.0",
      "97.0",
      "83.0",
      "98.0",
      "83.0",
      "99.0",
      "83.0",
      "100.0",
      "84.0",
      "0.0",
      "84.0",
      "1.0",
      "84.0",
      "2.0",
      "84.0",
      "3.0",
      "84.0",
      "4.0",
      "84.0",
      "5.0",
      "84.0",
      "6.0",
      "84.0",
      "7.0",
      "84.0",
      "8.0",
      "84.0",
      "9.0",
      "84.0",
      "10.0",
      "84.0",
      "11.0",
      "84.0",
      "12.0",
      "84.0",
      "13.0",
      "84.0",
      "14.0",
      "84.0",
      "15.0",
      "84.0",
      "16.0",
      "84.0",
      "17.0",
      "84.0",
      "18.0",
      "84.0",
      "19.0",
      "84.0",
      "20.0",
      "84.0",
      "21.0",
      "84.0",
      "22.0",
      "84.0",
      "23.0",
      "84.0",
      "24.0",
      "84.0",
      "25.0",
      "84.0",
      "26.0",
      "84.0",
      "27.0",
      "84.0",
      "28.0",
      "84.0",
      "29.0",
      "84.0",
      "30.0",
      "84.0",
      "31.0",
      "84.0",
      "32.0",
      "84.0",
      "33.0",
      "84.0",
      "34.0",
      "84.0",
      "35.0",
      "84.0",
      "36.0",
      "84.0",
      "37.0",
      "84.0",
      "38.0",
      "84.0",
      "39.0",
      "84.0",
      "40.0",
      "84.0",
      "41.0",
      "84.0",
      "42.0",
      "84.0",
      "43.0",
      "84.0",
      "44.0",
      "84.0",
      "45.0",
      "84.0",
      "46.0",
      "84.0",
      "47.0",
      "84.0",
      "48.0",
      "84.0",
      "49.0",
      "84.0",
      "50.0",
      "84.0",
      "51.0",
      "84.0",
      "52.0",
      "84.0",
      "53.0",
      "84.0",
      "54.0",
      "84.0",
      "55.0",
      "84.0",
      "56.0",
      "84.0",
      "57.0",
      "84.0",
      "58.0",
      "84.0",
      "59.0",
      "84.0",
      "60.0",
      "84.0",
      "61.0",
      "84.0",
      "62.0",
      "84.0",
      "63.0",
      "84.0",
      "64.0",
      "84.0",
      "65.0",
      "84.0",
      "66.0",
      "84.0",
      "67.0",
      "84.0",
      "68.0",
      "84.0",
      "69.0",
      "84.0",
      "70.0",
      "84.0",
      "71.0",
      "84.0",
      "72.0",
      "84.0",
      "73.0",
      "84.0",
      "74.0",
      "84.0",
      "75.0",
      "84.0",
      "76.0",
      "84.0",
      "77.0",
      "84.0",
      "78.0",
      "84.0",
      "79.0",
      "84.0",
      "80.0",
      "84.0",
      "81.0",
      "84.0",
      "82.0",
      "84.0",
      "83.0",
      "84.0",
      "84.0",
      "84.0",
      "85.0",
      "84.0",
      "86.0",
      "84.0",
      "87.0",
      "84.0",
      "88.0",
      "84.0",
      "89.0",
      "84.0",
      "90.0",
      "84.0",
      "91.0",
      "84.0",
      "92.0",
      "84.0",
      "93.0",
      "84.0",
      "94.0",
      "84.0",
      "95.0",
      "84.0",
      "96.0",
      "84.0",
      "97.0",
      "84.0",
      "98.0",
      "84.0",
      "99.0",
      "84.0",
      "100.0",
      "85.0",
      "0.0",
      "85.0",
      "1.0",
      "85.0",
      "2.0",
      "85.0",
      "3.0",
      "85.0",
      "4.0",
      "85.0",
      "5.0",
      "85.0",
      "6.0",
      "85.0",
      "7.0",
      "85.0",
      "8.0",
      "85.0",
      "9.0",
      "85.0",
      "10.0",
      "85.0",
      "11.0",
      "85.0",
      "12.0",
      "85.0",
      "13.0",
      "85.0",
      "14.0",
      "85.0",
      "15.0",
      "85.0",
      "16.0",
      "85.0",
      "17.0",
      "85.0",
      "18.0",
      "85.0",
      "19.0",
      "85.0",
      "20.0",
      "85.0",
      "21.0",
      "85.0",
      "22.0",
      "85.0",
      "23.0",
      "85.0",
      "24.0",
      "85.0",
      "25.0",
      "85.0",
      "26.0",
      "85.0",
      "27.0",
      "85.0",
      "28.0",
      "85.0",
      "29.0",
      "85.0",
      "30.0",
      "85.0",
      "31.0",
      "85.0",
      "32.0",
      "85.0",
      "33.0",
      "85.0",
      "34.0",
      "85.0",
      "35.0",
      "85.0",
      "36.0",
      "85.0",
      "37.0",
      "85.0",
      "38.0",
      "85.0",
      "39.0",
      "85.0",
      "40.0",
      "85.0",
      "41.0",
      "85.0",
      "42.0",
      "85.0",
      "43.0",
      "85.0",
      "44.0",
      "85.0",
      "45.0",
      "85.0",
      "46.0",
      "85.0",
      "47.0",
      "85.0",
      "48.0",
      "85.0",
      "49.0",
      "85.0",
      "50.0",
      "85.0",
      "51.0",
      "85.0",
      "52.0",
      "85.0",
      "53.0",
      "85.0",
      "54.0",
      "85.0",
      "55.0",
      "85.0",
      "56.0",
      "85.0",
      "57.0",
      "85.0",
      "58.0",
      "85.0",
      "59.0",
      "85.0",
      "60.0",
      "85.0",
      "61.0",
      "85.0",
      "62.0",
      "85.0",
      "63.0",
      "85.0",
      "64.0",
      "85.0",
      "65.0",
      "85.0",
      "66.0",
      "85.0",
      "67.0",
      "85.0",
      "68.0",
      "85.0",
      "69.0",
      "85.0",
      "70.0",
      "85.0",
      "71.0",
      "85.0",
      "72.0",
      "85.0",
      "73.0",
      "85.0",
      "74.0",
      "85.0",
      "75.0",
      "85.0",
      "76.0",
      "85.0",
      "77.0",
      "85.0",
      "78.0",
      "85.0",
      "79.0",
      "85.0",
      "80.0",
      "85.0",
      "81.0",
      "85.0",
      "82.0",
      "85.0",
      "83.0",
      "85.0",
      "84.0",
      "85.0",
      "85.0",
      "85.0",
      "86.0",
      "85.0",
      "87.0",
      "85.0",
      "88.0",
      "85.0",
      "89.0",
      "85.0",
      "90.0",
      "85.0",
      "91.0",
      "85.0",
      "92.0",
      "85.0",
      "93.0",
      "85.0",
      "94.0",
      "85.0",
      "95.0",
      "85.0",
      "96.0",
      "85.0",
      "97.0",
      "85.0",
      "98.0",
      "85.0",
      "99.0",
      "85.0",
      "100.0",
      "86.0",
      "0.0",
      "86.0",
      "1.0",
      "86.0",
      "2.0",
      "86.0",
      "3.0",
      "86.0",
      "4.0",
      "86.0",
      "5.0",
      "86.0",
      "6.0",
      "86.0",
      "7.0",
      "86.0",
      "8.0",
      "86.0",
      "9.0",
      "86.0",
      "10.0",
      "86.0",
      "11.0",
      "86.0",
      "12.0",
      "86.0",
      "13.0",
      "86.0",
      "14.0",
      "86.0",
      "15.0",
      "86.0",
      "16.0",
      "86.0",
      "17.0",
      "86.0",
      "18.0",
      "86.0",
      "19.0",
      "86.0",
      "20.0",
      "86.0",
      "21.0",
      "86.0",
      "22.0",
      "86.0",
      "23.0",
      "86.0",
      "24.0",
      "86.0",
      "25.0",
      "86.0",
      "26.0",
      "86.0",
      "27.0",
      "86.0",
      "28.0",
      "86.0",
      "29.0",
      "86.0",
      "30.0",
      "86.0",
      "31.0",
      "86.0",
      "32.0",
      "86.0",
      "33.0",
      "86.0",
      "34.0",
      "86.0",
      "35.0",
      "86.0",
      "36.0",
      "86.0",
      "37.0",
      "86.0",
      "38.0",
      "86.0",
      "39.0",
      "86.0",
      "40.0",
      "86.0",
      "41.0",
      "86.0",
      "42.0",
      "86.0",
      "43.0",
      "86.0",
      "44.0",
      "86.0",
      "45.0",
      "86.0",
      "46.0",
      "86.0",
      "47.0",
      "86.0",
      "48.0",
      "86.0",
      "49.0",
      "86.0",
      "50.0",
      "86.0",
      "51.0",
      "86.0",
      "52.0",
      "86.0",
      "53.0",
      "86.0",
      "54.0",
      "86.0",
      "55.0",
      "86.0",
      "56.0",
      "86.0",
      "57.0",
      "86.0",
      "58.0",
      "86.0",
      "59.0",
      "86.0",
      "60.0",
      "86.0",
      "61.0",
      "86.0",
      "62.0",
      "86.0",
      "63.0",
      "86.0",
      "64.0",
      "86.0",
      "65.0",
      "86.0",
      "66.0",
      "86.0",
      "67.0",
      "86.0",
      "68.0",
      "86.0",
      "69.0",
      "86.0",
      "70.0",
      "86.0",
      "71.0",
      "86.0",
      "72.0",
      "86.0",
      "73.0",
      "86.0",
      "74.0",
      "86.0",
      "75.0",
      "86.0",
      "76.0",
      "86.0",
      "77.0",
      "86.0",
      "78.0",
      "86.0",
      "79.0",
      "86.0",
      "80.0",
      "86.0",
      "81.0",
      "86.0",
      "82.0",
      "86.0",
      "83.0",
      "86.0",
      "84.0",
      "86.0",
      "85.0",
      "86.0",
      "86.0",
      "86.0",
      "87.0",
      "86.0",
      "88.0",
      "86.0",
      "89.0",
      "86.0",
      "90.0",
      "86.0",
      "91.0",
      "86.0",
      "92.0",
      "86.0",
      "93.0",
      "86.0",
      "94.0",
      "86.0",
      "95.0",
      "86.0",
      "96.0",
      "86.0",
      "97.0",
      "86.0",
      "98.0",
      "86.0",
      "99.0",
      "86.0",
      "100.0",
      "87.0",
      "0.0",
      "87.0",
      "1.0",
      "87.0",
      "2.0",
      "87.0",
      "3.0",
      "87.0",
      "4.0",
      "87.0",
      "5.0",
      "87.0",
      "6.0",
      "87.0",
      "7.0",
      "87.0",
      "8.0",
      "87.0",
      "9.0",
      "87.0",
      "10.0",
      "87.0",
      "11.0",
      "87.0",
      "12.0",
      "87.0",
      "13.0",
      "87.0",
      "14.0",
      "87.0",
      "15.0",
      "87.0",
      "16.0",
      "87.0",
      "17.0",
      "87.0",
      "18.0",
      "87.0",
      "19.0",
      "87.0",
      "20.0",
      "87.0",
      "21.0",
      "87.0",
      "22.0",
      "87.0",
      "23.0",
      "87.0",
      "24.0",
      "87.0",
      "25.0",
      "87.0",
      "26.0",
      "87.0",
      "27.0",
      "87.0",
      "28.0",
      "87.0",
      "29.0",
      "87.0",
      "30.0",
      "87.0",
      "31.0",
      "87.0",
      "32.0",
      "87.0",
      "33.0",
      "87.0",
      "34.0",
      "87.0",
      "35.0",
      "87.0",
      "36.0",
      "87.0",
      "37.0",
      "87.0",
      "38.0",
      "87.0",
      "39.0",
      "87.0",
      "40.0",
      "87.0",
      "41.0",
      "87.0",
      "42.0",
      "87.0",
      "43.0",
      "87.0",
      "44.0",
      "87.0",
      "45.0",
      "87.0",
      "46.0",
      "87.0",
      "47.0",
      "87.0",
      "48.0",
      "87.0",
      "49.0",
      "87.0",
      "50.0",
      "87.0",
      "51.0",
      "87.0",
      "52.0",
      "87.0",
      "53.0",
      "87.0",
      "54.0",
      "87.0",
      "55.0",
      "87.0",
      "56.0",
      "87.0",
      "57.0",
      "87.0",
      "58.0",
      "87.0",
      "59.0",
      "87.0",
      "60.0",
      "87.0",
      "61.0",
      "87.0",
      "62.0",
      "87.0",
      "63.0",
      "87.0",
      "64.0",
      "87.0",
      "65.0",
      "87.0",
      "66.0",
      "87.0",
      "67.0",
      "87.0",
      "68.0",
      "87.0",
      "69.0",
      "87.0",
      "70.0",
      "87.0",
      "71.0",
      "87.0",
      "72.0",
      "87.0",
      "73.0",
      "87.0",
      "74.0",
      "87.0",
      "75.0",
      "87.0",
      "76.0",
      "87.0",
      "77.0",
      "87.0",
      "78.0",
      "87.0",
      "79.0",
      "87.0",
      "80.0",
      "87.0",
      "81.0",
      "87.0",
      "82.0",
      "87.0",
      "83.0",
      "87.0",
      "84.0",
      "87.0",
      "85.0",
      "87.0",
      "86.0",
      "87.0",
      "87.0",
      "87.0",
      "88.0",
      "87.0",
      "89.0",
      "87.0",
      "90.0",
      "87.0",
      "91.0",
      "87.0",
      "92.0",
      "87.0",
      "93.0",
      "87.0",
      "94.0",
      "87.0",
      "95.0",
      "87.0",
      "96.0",
      "87.0",
      "97.0",
      "87.0",
      "98.0",
      "87.0",
      "99.0",
      "87.0",
      "100.0",
      "88.0",
      "0.0",
      "88.0",
      "1.0",
      "88.0",
      "2.0",
      "88.0",
      "3.0",
      "88.0",
      "4.0",
      "88.0",
      "5.0",
      "88.0",
      "6.0",
      "88.0",
      "7.0",
      "88.0",
      "8.0",
      "88.0",
      "9.0",
      "88.0",
      "10.0",
      "88.0",
      "11.0",
      "88.0",
      "12.0",
      "88.0",
      "13.0",
      "88.0",
      "14.0",
      "88.0",
      "15.0",
      "88.0",
      "16.0",
      "88.0",
      "17.0",
      "88.0",
      "18.0",
      "88.0",
      "19.0",
      "88.0",
      "20.0",
      "88.0",
      "21.0",
      "88.0",
      "22.0",
      "88.0",
      "23.0",
      "88.0",
      "24.0",
      "88.0",
      "25.0",
      "88.0",
      "26.0",
      "88.0",
      "27.0",
      "88.0",
      "28.0",
      "88.0",
      "29.0",
      "88.0",
      "30.0",
      "88.0",
      "31.0",
      "88.0",
      "32.0",
      "88.0",
      "33.0",
      "88.0",
      "34.0",
      "88.0",
      "35.0",
      "88.0",
      "36.0",
      "88.0",
      "37.0",
      "88.0",
      "38.0",
      "88.0",
      "39.0",
      "88.0",
      "40.0",
      "88.0",
      "41.0",
      "88.0",
      "42.0",
      "88.0",
      "43.0",
      "88.0",
      "44.0",
      "88.0",
      "45.0",
      "88.0",
      "46.0",
      "88.0",
      "47.0",
      "88.0",
      "48.0",
      "88.0",
      "49.0",
      "88.0",
      "50.0",
      "88.0",
      "51.0",
      "88.0",
      "52.0",
      "88.0",
      "53.0",
      "88.0",
      "54.0",
      "88.0",
      "55.0",
      "88.0",
      "56.0",
      "88.0",
      "57.0",
      "88.0",
      "58.0",
      "88.0",
      "59.0",
      "88.0",
      "60.0",
      "88.0",
      "61.0",
      "88.0",
      "62.0",
      "88.0",
      "63.0",
      "88.0",
      "64.0",
      "88.0",
      "65.0",
      "88.0",
      "66.0",
      "88.0",
      "67.0",
      "88.0",
      "68.0",
      "88.0",
      "69.0",
      "88.0",
      "70.0",
      "88.0",
      "71.0",
      "88.0",
      "72.0",
      "88.0",
      "73.0",
      "88.0",
      "74.0",
      "88.0",
      "75.0",
      "88.0",
      "76.0",
      "88.0",
      "77.0",
      "88.0",
      "78.0",
      "88.0",
      "79.0",
      "88.0",
      "80.0",
      "88.0",
      "81.0",
      "88.0",
      "82.0",
      "88.0",
      "83.0",
      "88.0",
      "84.0",
      "88.0",
      "85.0",
      "88.0",
      "86.0",
      "88.0",
      "87.0",
      "88.0",
      "88.0",
      "88.0",
      "89.0",
      "88.0",
      "90.0",
      "88.0",
      "91.0",
      "88.0",
      "92.0",
      "88.0",
      "93.0",
      "88.0",
      "94.0",
      "88.0",
      "95.0",
      "88.0",
      "96.0",
      "88.0",
      "97.0",
      "88.0",
      "98.0",
      "88.0",
      "99.0",
      "88.0",
      "100.0",
      "89.0",
      "0.0",
      "89.0",
      "1.0",
      "89.0",
      "2.0",
      "89.0",
      "3.0",
      "89.0",
      "4.0",
      "89.0",
      "5.0",
      "89.0",
      "6.0",
      "89.0",
      "7.0",
      "89.0",
      "8.0",
      "89.0",
      "9.0",
      "89.0",
      "10.0",
      "89.0",
      "11.0",
      "89.0",
      "12.0",
      "89.0",
      "13.0",
      "89.0",
      "14.0",
      "89.0",
      "15.0",
      "89.0",
      "16.0",
      "89.0",
      "17.0",
      "89.0",
      "18.0",
      "89.0",
      "19.0",
      "89.0",
      "20.0",
      "89.0",
      "21.0",
      "89.0",
      "22.0",
      "89.0",
      "23.0",
      "89.0",
      "24.0",
      "89.0",
      "25.0",
      "89.0",
      "26.0",
      "89.0",
      "27.0",
      "89.0",
      "28.0",
      "89.0",
      "29.0",
      "89.0",
      "30.0",
      "89.0",
      "31.0",
      "89.0",
      "32.0",
      "89.0",
      "33.0",
      "89.0",
      "34.0",
      "89.0",
      "35.0",
      "89.0",
      "36.0",
      "89.0",
      "37.0",
      "89.0",
      "38.0",
      "89.0",
      "39.0",
      "89.0",
      "40.0",
      "89.0",
      "41.0",
      "89.0",
      "42.0",
      "89.0",
      "43.0",
      "89.0",
      "44.0",
      "89.0",
      "45.0",
      "89.0",
      "46.0",
      "89.0",
      "47.0",
      "89.0",
      "48.0",
      "89.0",
      "49.0",
      "89.0",
      "50.0",
      "89.0",
      "51.0",
      "89.0",
      "52.0",
      "89.0",
      "53.0",
      "89.0",
      "54.0",
      "89.0",
      "55.0",
      "89.0",
      "56.0",
      "89.0",
      "57.0",
      "89.0",
      "58.0",
      "89.0",
      "59.0",
      "89.0",
      "60.0",
      "89.0",
      "61.0",
      "89.0",
      "62.0",
      "89.0",
      "63.0",
      "89.0",
      "64.0",
      "89.0",
      "65.0",
      "89.0",
      "66.0",
      "89.0",
      "67.0",
      "89.0",
      "68.0",
      "89.0",
      "69.0",
      "89.0",
      "70.0",
      "89.0",
      "71.0",
      "89.0",
      "72.0",
      "89.0",
      "73.0",
      "89.0",
      "74.0",
      "89.0",
      "75.0",
      "89.0",
      "76.0",
      "89.0",
      "77.0",
      "89.0",
      "78.0",
      "89.0",
      "79.0",
      "89.0",
      "80.0",
      "89.0",
      "81.0",
      "89.0",
      "82.0",
      "89.0",
      "83.0",
      "89.0",
      "84.0",
      "89.0",
      "85.0",
      "89.0",
      "86.0",
      "89.0",
      "87.0",
      "89.0",
      "88.0",
      "89.0",
      "89.0",
      "89.0",
      "90.0",
      "89.0",
      "91.0",
      "89.0",
      "92.0",
      "89.0",
      "93.0",
      "89.0",
      "94.0",
      "89.0",
      "95.0",
      "89.0",
      "96.0",
      "89.0",
      "97.0",
      "89.0",
      "98.0",
      "89.0",
      "99.0",
      "89.0",
      "100.0",
      "90.0",
      "0.0",
      "90.0",
      "1.0",
      "90.0",
      "2.0",
      "90.0",
      "3.0",
      "90.0",
      "4.0",
      "90.0",
      "5.0",
      "90.0",
      "6.0",
      "90.0",
      "7.0",
      "90.0",
      "8.0",
      "90.0",
      "9.0",
      "90.0",
      "10.0",
      "90.0",
      "11.0",
      "90.0",
      "12.0",
      "90.0",
      "13.0",
      "90.0",
      "14.0",
      "90.0",
      "15.0",
      "90.0",
      "16.0",
      "90.0",
      "17.0",
      "90.0",
      "18.0",
      "90.0",
      "19.0",
      "90.0",
      "20.0",
      "90.0",
      "21.0",
      "90.0",
      "22.0",
      "90.0",
      "23.0",
      "90.0",
      "24.0",
      "90.0",
      "25.0",
      "90.0",
      "26.0",
      "90.0",
      "27.0",
      "90.0",
      "28.0",
      "90.0",
      "29.0",
      "90.0",
      "30.0",
      "90.0",
      "31.0",
      "90.0",
      "32.0",
      "90.0",
      "33.0",
      "90.0",
      "34.0",
      "90.0",
      "35.0",
      "90.0",
      "36.0",
      "90.0",
      "37.0",
      "90.0",
      "38.0",
      "90.0",
      "39.0",
      "90.0",
      "40.0",
      "90.0",
      "41.0",
      "90.0",
      "42.0",
      "90.0",
      "43.0",
      "90.0",
      "44.0",
      "90.0",
      "45.0",
      "90.0",
      "46.0",
      "90.0",
      "47.0",
      "90.0",
      "48.0",
      "90.0",
      "49.0",
      "90.0",
      "50.0",
      "90.0",
      "51.0",
      "90.0",
      "52.0",
      "90.0",
      "53.0",
      "90.0",
      "54.0",
      "90.0",
      "55.0",
      "90.0",
      "56.0",
      "90.0",
      "57.0",
      "90.0",
      "58.0",
      "90.0",
      "59.0",
      "90.0",
      "60.0",
      "90.0",
      "61.0",
      "90.0",
      "62.0",
      "90.0",
      "63.0",
      "90.0",
      "64.0",
      "90.0",
      "65.0",
      "90.0",
      "66.0",
      "90.0",
      "67.0",
      "90.0",
      "68.0",
      "90.0",
      "69.0",
      "90.0",
      "70.0",
      "90.0",
      "71.0",
      "90.0",
      "72.0",
      "90.0",
      "73.0",
      "90.0",
      "74.0",
      "90.0",
      "75.0",
      "90.0",
      "76.0",
      "90.0",
      "77.0",
      "90.0",
      "78.0",
      "90.0",
      "79.0",
      "90.0",
      "80.0",
      "90.0",
      "81.0",
      "90.0",
      "82.0",
      "90.0",
      "83.0",
      "90.0",
      "84.0",
      "90.0",
      "85.0",
      "90.0",
      "86.0",
      "90.0",
      "87.0",
      "90.0",
      "88.0",
      "90.0",
      "89.0",
      "90.0",
      "90.0",
      "90.0",
      "91.0",
      "90.0",
      "92.0",
      "90.0",
      "93.0",
      "90.0",
      "94.0",
      "90.0",
      "95.0",
      "90.0",
      "96.0",
      "90.0",
      "97.0",
      "90.0",
      "98.0",
      "90.0",
      "99.0",
      "90.0",
      "100.0",
      "91.0",
      "0.0",
      "91.0",
      "1.0",
      "91.0",
      "2.0",
      "91.0",
      "3.0",
      "91.0",
      "4.0",
      "91.0",
      "5.0",
      "91.0",
      "6.0",
      "91.0",
      "7.0",
      "91.0",
      "8.0",
      "91.0",
      "9.0",
      "91.0",
      "10.0",
      "91.0",
      "11.0",
      "91.0",
      "12.0",
      "91.0",
      "13.0",
      "91.0",
      "14.0",
      "91.0",
      "15.0",
      "91.0",
      "16.0",
      "91.0",
      "17.0",
      "91.0",
      "18.0",
      "91.0",
      "19.0",
      "91.0",
      "20.0",
      "91.0",
      "21.0",
      "91.0",
      "22.0",
      "91.0",
      "23.0",
      "91.0",
      "24.0",
      "91.0",
      "25.0",
      "91.0",
      "26.0",
      "91.0",
      "27.0",
      "91.0",
      "28.0",
      "91.0",
      "29.0",
      "91.0",
      "30.0",
      "91.0",
      "31.0",
      "91.0",
      "32.0",
      "91.0",
      "33.0",
      "91.0",
      "34.0",
      "91.0",
      "35.0",
      "91.0",
      "36.0",
      "91.0",
      "37.0",
      "91.0",
      "38.0",
      "91.0",
      "39.0",
      "91.0",
      "40.0",
      "91.0",
      "41.0",
      "91.0",
      "42.0",
      "91.0",
      "43.0",
      "91.0",
      "44.0",
      "91.0",
      "45.0",
      "91.0",
      "46.0",
      "91.0",
      "47.0",
      "91.0",
      "48.0",
      "91.0",
      "49.0",
      "91.0",
      "50.0",
      "91.0",
      "51.0",
      "91.0",
      "52.0",
      "91.0",
      "53.0",
      "91.0",
      "54.0",
      "91.0",
      "55.0",
      "91.0",
      "56.0",
      "91.0",
      "57.0",
      "91.0",
      "58.0",
      "91.0",
      "59.0",
      "91.0",
      "60.0",
      "91.0",
      "61.0",
      "91.0",
      "62.0",
      "91.0",
      "63.0",
      "91.0",
      "64.0",
      "91.0",
      "65.0",
      "91.0",
      "66.0",
      "91.0",
      "67.0",
      "91.0",
      "68.0",
      "91.0",
      "69.0",
      "91.0",
      "70.0",
      "91.0",
      "71.0",
      "91.0",
      "72.0",
      "91.0",
      "73.0",
      "91.0",
      "74.0",
      "91.0",
      "75.0",
      "91.0",
      "76.0",
      "91.0",
      "77.0",
      "91.0",
      "78.0",
      "91.0",
      "79.0",
      "91.0",
      "80.0",
      "91.0",
      "81.0",
      "91.0",
      "82.0",
      "91.0",
      "83.0",
      "91.0",
      "84.0",
      "91.0",
      "85.0",
      "91.0",
      "86.0",
      "91.0",
      "87.0",
      "91.0",
      "88.0",
      "91.0",
      "89.0",
      "91.0",
      "90.0",
      "91.0",
      "91.0",
      "91.0",
      "92.0",
      "91.0",
      "93.0",
      "91.0",
      "94.0",
      "91.0",
      "95.0",
      "91.0",
      "96.0",
      "91.0",
      "97.0",
      "91.0",
      "98.0",
      "91.0",
      "99.0",
      "91.0",
      "100.0",
      "92.0",
      "0.0",
      "92.0",
      "1.0",
      "92.0",
      "2.0",
      "92.0",
      "3.0",
      "92.0",
      "4.0",
      "92.0",
      "5.0",
      "92.0",
      "6.0",
      "92.0",
      "7.0",
      "92.0",
      "8.0",
      "92.0",
      "9.0",
      "92.0",
      "10.0",
      "92.0",
      "11.0",
      "92.0",
      "12.0",
      "92.0",
      "13.0",
      "92.0",
      "14.0",
      "92.0",
      "15.0",
      "92.0",
      "16.0",
      "92.0",
      "17.0",
      "92.0",
      "18.0",
      "92.0",
      "19.0",
      "92.0",
      "20.0",
      "92.0",
      "21.0",
      "92.0",
      "22.0",
      "92.0",
      "23.0",
      "92.0",
      "24.0",
      "92.0",
      "25.0",
      "92.0",
      "26.0",
      "92.0",
      "27.0",
      "92.0",
      "28.0",
      "92.0",
      "29.0",
      "92.0",
      "30.0",
      "92.0",
      "31.0",
      "92.0",
      "32.0",
      "92.0",
      "33.0",
      "92.0",
      "34.0",
      "92.0",
      "35.0",
      "92.0",
      "36.0",
      "92.0",
      "37.0",
      "92.0",
      "38.0",
      "92.0",
      "39.0",
      "92.0",
      "40.0",
      "92.0",
      "41.0",
      "92.0",
      "42.0",
      "92.0",
      "43.0",
      "92.0",
      "44.0",
      "92.0",
      "45.0",
      "92.0",
      "46.0",
      "92.0",
      "47.0",
      "92.0",
      "48.0",
      "92.0",
      "49.0",
      "92.0",
      "50.0",
      "92.0",
      "51.0",
      "92.0",
      "52.0",
      "92.0",
      "53.0",
      "92.0",
      "54.0",
      "92.0",
      "55.0",
      "92.0",
      "56.0",
      "92.0",
      "57.0",
      "92.0",
      "58.0",
      "92.0",
      "59.0",
      "92.0",
      "60.0",
      "92.0",
      "61.0",
      "92.0",
      "62.0",
      "92.0",
      "63.0",
      "92.0",
      "64.0",
      "92.0",
      "65.0",
      "92.0",
      "66.0",
      "92.0",
      "67.0",
      "92.0",
      "68.0",
      "92.0",
      "69.0",
      "92.0",
      "70.0",
      "92.0",
      "71.0",
      "92.0",
      "72.0",
      "92.0",
      "73.0",
      "92.0",
      "74.0",
      "92.0",
      "75.0",
      "92.0",
      "76.0",
      "92.0",
      "77.0",
      "92.0",
      "78.0",
      "92.0",
      "79.0",
      "92.0",
      "80.0",
      "92.0",
      "81.0",
      "92.0",
      "82.0",
      "92.0",
      "83.0",
      "92.0",
      "84.0",
      "92.0",
      "85.0",
      "92.0",
      "86.0",
      "92.0",
      "87.0",
      "92.0",
      "88.0",
      "92.0",
      "89.0",
      "92.0",
      "90.0",
      "92.0",
      "91.0",
      "92.0",
      "92.0",
      "92.0",
      "93.0",
      "92.0",
      "94.0",
      "92.0",
      "95.0",
      "92.0",
      "96.0",
      "92.0",
      "97.0",
      "92.0",
      "98.0",
      "92.0",
      "99.0",
      "92.0",
      "100.0",
      "93.0",
      "0.0",
      "93.0",
      "1.0",
      "93.0",
      "2.0",
      "93.0",
      "3.0",
      "93.0",
      "4.0",
      "93.0",
      "5.0",
      "93.0",
      "6.0",
      "93.0",
      "7.0",
      "93.0",
      "8.0",
      "93.0",
      "9.0",
      "93.0",
      "10.0",
      "93.0",
      "11.0",
      "93.0",
      "12.0",
      "93.0",
      "13.0",
      "93.0",
      "14.0",
      "93.0",
      "15.0",
      "93.0",
      "16.0",
      "93.0",
      "17.0",
      "93.0",
      "18.0",
      "93.0",
      "19.0",
      "93.0",
      "20.0",
      "93.0",
      "21.0",
      "93.0",
      "22.0",
      "93.0",
      "23.0",
      "93.0",
      "24.0",
      "93.0",
      "25.0",
      "93.0",
      "26.0",
      "93.0",
      "27.0",
      "93.0",
      "28.0",
      "93.0",
      "29.0",
      "93.0",
      "30.0",
      "93.0",
      "31.0",
      "93.0",
      "32.0",
      "93.0",
      "33.0",
      "93.0",
      "34.0",
      "93.0",
      "35.0",
      "93.0",
      "36.0",
      "93.0",
      "37.0",
      "93.0",
      "38.0",
      "93.0",
      "39.0",
      "93.0",
      "40.0",
      "93.0",
      "41.0",
      "93.0",
      "42.0",
      "93.0",
      "43.0",
      "93.0",
      "44.0",
      "93.0",
      "45.0",
      "93.0",
      "46.0",
      "93.0",
      "47.0",
      "93.0",
      "48.0",
      "93.0",
      "49.0",
      "93.0",
      "50.0",
      "93.0",
      "51.0",
      "93.0",
      "52.0",
      "93.0",
      "53.0",
      "93.0",
      "54.0",
      "93.0",
      "55.0",
      "93.0",
      "56.0",
      "93.0",
      "57.0",
      "93.0",
      "58.0",
      "93.0",
      "59.0",
      "93.0",
      "60.0",
      "93.0",
      "61.0",
      "93.0",
      "62.0",
      "93.0",
      "63.0",
      "93.0",
      "64.0",
      "93.0",
      "65.0",
      "93.0",
      "66.0",
      "93.0",
      "67.0",
      "93.0",
      "68.0",
      "93.0",
      "69.0",
      "93.0",
      "70.0",
      "93.0",
      "71.0",
      "93.0",
      "72.0",
      "93.0",
      "73.0",
      "93.0",
      "74.0",
      "93.0",
      "75.0",
      "93.0",
      "76.0",
      "93.0",
      "77.0",
      "93.0",
      "78.0",
      "93.0",
      "79.0",
      "93.0",
      "80.0",
      "93.0",
      "81.0",
      "93.0",
      "82.0",
      "93.0",
      "83.0",
      "93.0",
      "84.0",
      "93.0",
      "85.0",
      "93.0",
      "86.0",
      "93.0",
      "87.0",
      "93.0",
      "88.0",
      "93.0",
      "89.0",
      "93.0",
      "90.0",
      "93.0",
      "91.0",
      "93.0",
      "92.0",
      "93.0",
      "93.0",
      "93.0",
      "94.0",
      "93.0",
      "95.0",
      "93.0",
      "96.0",
      "93.0",
      "97.0",
      "93.0",
      "98.0",
      "93.0",
      "99.0",
      "93.0",
      "100.0",
      "94.0",
      "0.0",
      "94.0",
      "1.0",
      "94.0",
      "2.0",
      "94.0",
      "3.0",
      "94.0",
      "4.0",
      "94.0",
      "5.0",
      "94.0",
      "6.0",
      "94.0",
      "7.0",
      "94.0",
      "8.0",
      "94.0",
      "9.0",
      "94.0",
      "10.0",
      "94.0",
      "11.0",
      "94.0",
      "12.0",
      "94.0",
      "13.0",
      "94.0",
      "14.0",
      "94.0",
      "15.0",
      "94.0",
      "16.0",
      "94.0",
      "17.0",
      "94.0",
      "18.0",
      "94.0",
      "19.0",
      "94.0",
      "20.0",
      "94.0",
      "21.0",
      "94.0",
      "22.0",
      "94.0",
      "23.0",
      "94.0",
      "24.0",
      "94.0",
      "25.0",
      "94.0",
      "26.0",
      "94.0",
      "27.0",
      "94.0",
      "28.0",
      "94.0",
      "29.0",
      "94.0",
      "30.0",
      "94.0",
      "31.0",
      "94.0",
      "32.0",
      "94.0",
      "33.0",
      "94.0",
      "34.0",
      "94.0",
      "35.0",
      "94.0",
      "36.0",
      "94.0",
      "37.0",
      "94.0",
      "38.0",
      "94.0",
      "39.0",
      "94.0",
      "40.0",
      "94.0",
      "41.0",
      "94.0",
      "42.0",
      "94.0",
      "43.0",
      "94.0",
      "44.0",
      "94.0",
      "45.0",
      "94.0",
      "46.0",
      "94.0",
      "47.0",
      "94.0",
      "48.0",
      "94.0",
      "49.0",
      "94.0",
      "50.0",
      "94.0",
      "51.0",
      "94.0",
      "52.0",
      "94.0",
      "53.0",
      "94.0",
      "54.0",
      "94.0",
      "55.0",
      "94.0",
      "56.0",
      "94.0",
      "57.0",
      "94.0",
      "58.0",
      "94.0",
      "59.0",
      "94.0",
      "60.0",
      "94.0",
      "61.0",
      "94.0",
      "62.0",
      "94.0",
      "63.0",
      "94.0",
      "64.0",
      "94.0",
      "65.0",
      "94.0",
      "66.0",
      "94.0",
      "67.0",
      "94.0",
      "68.0",
      "94.0",
      "69.0",
      "94.0",
      "70.0",
      "94.0",
      "71.0",
      "94.0",
      "72.0",
      "94.0",
      "73.0",
      "94.0",
      "74.0",
      "94.0",
      "75.0",
      "94.0",
      "76.0",
      "94.0",
      "77.0",
      "94.0",
      "78.0",
      "94.0",
      "79.0",
      "94.0",
      "80.0",
      "94.0",
      "81.0",
      "94.0",
      "82.0",
      "94.0",
      "83.0",
      "94.0",
      "84.0",
      "94.0",
      "85.0",
      "94.0",
      "86.0",
      "94.0",
      "87.0",
      "94.0",
      "88.0",
      "94.0",
      "89.0",
      "94.0",
      "90.0",
      "94.0",
      "91.0",
      "94.0",
      "92.0",
      "94.0",
      "93.0",
      "94.0",
      "94.0",
      "94.0",
      "95.0",
      "94.0",
      "96.0",
      "94.0",
      "97.0",
      "94.0",
      "98.0",
      "94.0",
      "99.0",
      "94.0",
      "100.0",
      "95.0",
      "0.0",
      "95.0",
      "1.0",
      "95.0",
      "2.0",
      "95.0",
      "3.0",
      "95.0",
      "4.0",
      "95.0",
      "5.0",
      "95.0",
      "6.0",
      "95.0",
      "7.0",
      "95.0",
      "8.0",
      "95.0",
      "9.0",
      "95.0",
      "10.0",
      "95.0",
      "11.0",
      "95.0",
      "12.0",
      "95.0",
      "13.0",
      "95.0",
      "14.0",
      "95.0",
      "15.0",
      "95.0",
      "16.0",
      "95.0",
      "17.0",
      "95.0",
      "18.0",
      "95.0",
      "19.0",
      "95.0",
      "20.0",
      "95.0",
      "21.0",
      "95.0",
      "22.0",
      "95.0",
      "23.0",
      "95.0",
      "24.0",
      "95.0",
      "25.0",
      "95.0",
      "26.0",
      "95.0",
      "27.0",
      "95.0",
      "28.0",
      "95.0",
      "29.0",
      "95.0",
      "30.0",
      "95.0",
      "31.0",
      "95.0",
      "32.0",
      "95.0",
      "33.0",
      "95.0",
      "34.0",
      "95.0",
      "35.0",
      "95.0",
      "36.0",
      "95.0",
      "37.0",
      "95.0",
      "38.0",
      "95.0",
      "39.0",
      "95.0",
      "40.0",
      "95.0",
      "41.0",
      "95.0",
      "42.0",
      "95.0",
      "43.0",
      "95.0",
      "44.0",
      "95.0",
      "45.0",
      "95.0",
      "46.0",
      "95.0",
      "47.0",
      "95.0",
      "48.0",
      "95.0",
      "49.0",
      "95.0",
      "50.0",
      "95.0",
      "51.0",
      "95.0",
      "52.0",
      "95.0",
      "53.0",
      "95.0",
      "54.0",
      "95.0",
      "55.0",
      "95.0",
      "56.0",
      "95.0",
      "57.0",
      "95.0",
      "58.0",
      "95.0",
      "59.0",
      "95.0",
      "60.0",
      "95.0",
      "61.0",
      "95.0",
      "62.0",
      "95.0",
      "63.0",
      "95.0",
      "64.0",
      "95.0",
      "65.0",
      "95.0",
      "66.0",
      "95.0",
      "67.0",
      "95.0",
      "68.0",
      "95.0",
      "69.0",
      "95.0",
      "70.0",
      "95.0",
      "71.0",
      "95.0",
      "72.0",
      "95.0",
      "73.0",
      "95.0",
      "74.0",
      "95.0",
      "75.0",
      "95.0",
      "76.0",
      "95.0",
      "77.0",
      "95.0",
      "78.0",
      "95.0",
      "79.0",
      "95.0",
      "80.0",
      "95.0",
      "81.0",
      "95.0",
      "82.0",
      "95.0",
      "83.0",
      "95.0",
      "84.0",
      "95.0",
      "85.0",
      "95.0",
      "86.0",
      "95.0",
      "87.0",
      "95.0",
      "88.0",
      "95.0",
      "89.0",
      "95.0",
      "90.0",
      "95.0",
      "91.0",
      "95.0",
      "92.0",
      "95.0",
      "93.0",
      "95.0",
      "94.0",
      "95.0",
      "95.0",
      "95.0",
      "96.0",
      "95.0",
      "97.0",
      "95.0",
      "98.0",
      "95.0",
      "99.0",
      "95.0",
      "100.0",
      "96.0",
      "0.0",
      "96.0",
      "1.0",
      "96.0",
      "2.0",
      "96.0",
      "3.0",
      "96.0",
      "4.0",
      "96.0",
      "5.0",
      "96.0",
      "6.0",
      "96.0",
      "7.0",
      "96.0",
      "8.0",
      "96.0",
      "9.0",
      "96.0",
      "10.0",
      "96.0",
      "11.0",
      "96.0",
      "12.0",
      "96.0",
      "13.0",
      "96.0",
      "14.0",
      "96.0",
      "15.0",
      "96.0",
      "16.0",
      "96.0",
      "17.0",
      "96.0",
      "18.0",
      "96.0",
      "19.0",
      "96.0",
      "20.0",
      "96.0",
      "21.0",
      "96.0",
      "22.0",
      "96.0",
      "23.0",
      "96.0",
      "24.0",
      "96.0",
      "25.0",
      "96.0",
      "26.0",
      "96.0",
      "27.0",
      "96.0",
      "28.0",
      "96.0",
      "29.0",
      "96.0",
      "30.0",
      "96.0",
      "31.0",
      "96.0",
      "32.0",
      "96.0",
      "33.0",
      "96.0",
      "34.0",
      "96.0",
      "35.0",
      "96.0",
      "36.0",
      "96.0",
      "37.0",
      "96.0",
      "38.0",
      "96.0",
      "39.0",
      "96.0",
      "40.0",
      "96.0",
      "41.0",
      "96.0",
      "42.0",
      "96.0",
      "43.0",
      "96.0",
      "44.0",
      "96.0",
      "45.0",
      "96.0",
      "46.0",
      "96.0",
      "47.0",
      "96.0",
      "48.0",
      "96.0",
      "49.0",
      "96.0",
      "50.0",
      "96.0",
      "51.0",
      "96.0",
      "52.0",
      "96.0",
      "53.0",
      "96.0",
      "54.0",
      "96.0",
      "55.0",
      "96.0",
      "56.0",
      "96.0",
      "57.0",
      "96.0",
      "58.0",
      "96.0",
      "59.0",
      "96.0",
      "60.0",
      "96.0",
      "61.0",
      "96.0",
      "62.0",
      "96.0",
      "63.0",
      "96.0",
      "64.0",
      "96.0",
      "65.0",
      "96.0",
      "66.0",
      "96.0",
      "67.0",
      "96.0",
      "68.0",
      "96.0",
      "69.0",
      "96.0",
      "70.0",
      "96.0",
      "71.0",
      "96.0",
      "72.0",
      "96.0",
      "73.0",
      "96.0",
      "74.0",
      "96.0",
      "75.0",
      "96.0",
      "76.0",
      "96.0",
      "77.0",
      "96.0",
      "78.0",
      "96.0",
      "79.0",
      "96.0",
      "80.0",
      "96.0",
      "81.0",
      "96.0",
      "82.0",
      "96.0",
      "83.0",
      "96.0",
      "84.0",
      "96.0",
      "85.0",
      "96.0",
      "86.0",
      "96.0",
      "87.0",
      "96.0",
      "88.0",
      "96.0",
      "89.0",
      "96.0",
      "90.0",
      "96.0",
      "91.0",
      "96.0",
      "92.0",
      "96.0",
      "93.0",
      "96.0",
      "94.0",
      "96.0",
      "95.0",
      "96.0",
      "96.0",
      "96.0",
      "97.0",
      "96.0",
      "98.0",
      "96.0",
      "99.0",
      "96.0",
      "100.0",
      "97.0",
      "0.0",
      "97.0",
      "1.0",
      "97.0",
      "2.0",
      "97.0",
      "3.0",
      "97.0",
      "4.0",
      "97.0",
      "5.0",
      "97.0",
      "6.0",
      "97.0",
      "7.0",
      "97.0",
      "8.0",
      "97.0",
      "9.0",
      "97.0",
      "10.0",
      "97.0",
      "11.0",
      "97.0",
      "12.0",
      "97.0",
      "13.0",
      "97.0",
      "14.0",
      "97.0",
      "15.0",
      "97.0",
      "16.0",
      "97.0",
      "17.0",
      "97.0",
      "18.0",
      "97.0",
      "19.0",
      "97.0",
      "20.0",
      "97.0",
      "21.0",
      "97.0",
      "22.0",
      "97.0",
      "23.0",
      "97.0",
      "24.0",
      "97.0",
      "25.0",
      "97.0",
      "26.0",
      "97.0",
      "27.0",
      "97.0",
      "28.0",
      "97.0",
      "29.0",
      "97.0",
      "30.0",
      "97.0",
      "31.0",
      "97.0",
      "32.0",
      "97.0",
      "33.0",
      "97.0",
      "34.0",
      "97.0",
      "35.0",
      "97.0",
      "36.0",
      "97.0",
      "37.0",
      "97.0",
      "38.0",
      "97.0",
      "39.0",
      "97.0",
      "40.0",
      "97.0",
      "41.0",
      "97.0",
      "42.0",
      "97.0",
      "43.0",
      "97.0",
      "44.0",
      "97.0",
      "45.0",
      "97.0",
      "46.0",
      "97.0",
      "47.0",
      "97.0",
      "48.0",
      "97.0",
      "49.0",
      "97.0",
      "50.0",
      "97.0",
      "51.0",
      "97.0",
      "52.0",
      "97.0",
      "53.0",
      "97.0",
      "54.0",
      "97.0",
      "55.0",
      "97.0",
      "56.0",
      "97.0",
      "57.0",
      "97.0",
      "58.0",
      "97.0",
      "59.0",
      "97.0",
      "60.0",
      "97.0",
      "61.0",
      "97.0",
      "62.0",
      "97.0",
      "63.0",
      "97.0",
      "64.0",
      "97.0",
      "65.0",
      "97.0",
      "66.0",
      "97.0",
      "67.0",
      "97.0",
      "68.0",
      "97.0",
      "69.0",
      "97.0",
      "70.0",
      "97.0",
      "71.0",
      "97.0",
      "72.0",
      "97.0",
      "73.0",
      "97.0",
      "74.0",
      "97.0",
      "75.0",
      "97.0",
      "76.0",
      "97.0",
      "77.0",
      "97.0",
      "78.0",
      "97.0",
      "79.0",
      "97.0",
      "80.0",
      "97.0",
      "81.0",
      "97.0",
      "82.0",
      "97.0",
      "83.0",
      "97.0",
      "84.0",
      "97.0",
      "85.0",
      "97.0",
      "86.0",
      "97.0",
      "87.0",
      "97.0",
      "88.0",
      "97.0",
      "89.0",
      "97.0",
      "90.0",
      "97.0",
      "91.0",
      "97.0",
      "92.0",
      "97.0",
      "93.0",
      "97.0",
      "94.0",
      "97.0",
      "95.0",
      "97.0",
      "96.0",
      "97.0",
      "97.0",
      "97.0",
      "98.0",
      "97.0",
      "99.0",
      "97.0",
      "100.0",
      "98.0",
      "0.0",
      "98.0",
      "1.0",
      "98.0",
      "2.0",
      "98.0",
      "3.0",
      "98.0",
      "4.0",
      "98.0",
      "5.0",
      "98.0",
      "6.0",
      "98.0",
      "7.0",
      "98.0",
      "8.0",
      "98.0",
      "9.0",
      "98.0",
      "10.0",
      "98.0",
      "11.0",
      "98.0",
      "12.0",
      "98.0",
      "13.0",
      "98.0",
      "14.0",
      "98.0",
      "15.0",
      "98.0",
      "16.0",
      "98.0",
      "17.0",
      "98.0",
      "18.0",
      "98.0",
      "19.0",
      "98.0",
      "20.0",
      "98.0",
      "21.0",
      "98.0",
      "22.0",
      "98.0",
      "23.0",
      "98.0",
      "24.0",
      "98.0",
      "25.0",
      "98.0",
      "26.0",
      "98.0",
      "27.0",
      "98.0",
      "28.0",
      "98.0",
      "29.0",
      "98.0",
      "30.0",
      "98.0",
      "31.0",
      "98.0",
      "32.0",
      "98.0",
      "33.0",
      "98.0",
      "34.0",
      "98.0",
      "35.0",
      "98.0",
      "36.0",
      "98.0",
      "37.0",
      "98.0",
      "38.0",
      "98.0",
      "39.0",
      "98.0",
      "40.0",
      "98.0",
      "41.0",
      "98.0",
      "42.0",
      "98.0",
      "43.0",
      "98.0",
      "44.0",
      "98.0",
      "45.0",
      "98.0",
      "46.0",
      "98.0",
      "47.0",
      "98.0",
      "48.0",
      "98.0",
      "49.0",
      "98.0",
      "50.0",
      "98.0",
      "51.0",
      "98.0",
      "52.0",
      "98.0",
      "53.0",
      "98.0",
      "54.0",
      "98.0",
      "55.0",
      "98.0",
      "56.0",
      "98.0",
      "57.0",
      "98.0",
      "58.0",
      "98.0",
      "59.0",
      "98.0",
      "60.0",
      "98.0",
      "61.0",
      "98.0",
      "62.0",
      "98.0",
      "63.0",
      "98.0",
      "64.0",
      "98.0",
      "65.0",
      "98.0",
      "66.0",
      "98.0",
      "67.0",
      "98.0",
      "68.0",
      "98.0",
      "69.0",
      "98.0",
      "70.0",
      "98.0",
      "71.0",
      "98.0",
      "72.0",
      "98.0",
      "73.0",
      "98.0",
      "74.0",
      "98.0",
      "75.0",
      "98.0",
      "76.0",
      "98.0",
      "77.0",
      "98.0",
      "78.0",
      "98.0",
      "79.0",
      "98.0",
      "80.0",
      "98.0",
      "81.0",
      "98.0",
      "82.0",
      "98.0",
      "83.0",
      "98.0",
      "84.0",
      "98.0",
      "85.0",
      "98.0",
      "86.0",
      "98.0",
      "87.0",
      "98.0",
      "88.0",
      "98.0",
      "89.0",
      "98.0",
      "90.0",
      "98.0",
      "91.0",
      "98.0",
      "92.0",
      "98.0",
      "93.0",
      "98.0",
      "94.0",
      "98.0",
      "95.0",
      "98.0",
      "96.0",
      "98.0",
      "97.0",
      "98.0",
      "98.0",
      "98.0",
      "99.0",
      "98.0",
      "100.0",
      "99.0",
      "0.0",
      "99.0",
      "1.0",
      "99.0",
      "2.0",
      "99.0",
      "3.0",
      "99.0",
      "4.0",
      "99.0",
      "5.0",
      "99.0",
      "6.0",
      "99.0",
      "7.0",
      "99.0",
      "8.0",
      "99.0",
      "9.0",
      "99.0",
      "10.0",
      "99.0",
      "11.0",
      "99.0",
      "12.0",
      "99.0",
      "13.0",
      "99.0",
      "14.0",
      "99.0",
      "15.0",
      "99.0",
      "16.0",
      "99.0",
      "17.0",
      "99.0",
      "18.0",
      "99.0",
      "19.0",
      "99.0",
      "20.0",
      "99.0",
      "21.0",
      "99.0",
      "22.0",
      "99.0",
      "23.0",
      "99.0",
      "24.0",
      "99.0",
      "25.0",
      "99.0",
      "26.0",
      "99.0",
      "27.0",
      "99.0",
      "28.0",
      "99.0",
      "29.0",
      "99.0",
      "30.0",
      "99.0",
      "31.0",
      "99.0",
      "32.0",
      "99.0",
      "33.0",
      "99.0",
      "34.0",
      "99.0",
      "35.0",
      "99.0",
      "36.0",
      "99.0",
      "37.0",
      "99.0",
      "38.0",
      "99.0",
      "39.0",
      "99.0",
      "40.0",
      "99.0",
      "41.0",
      "99.0",
      "42.0",
      "99.0",
      "43.0",
      "99.0",
      "44.0",
      "99.0",
      "45.0",
      "99.0",
      "46.0",
      "99.0",
      "47.0",
      "99.0",
      "48.0",
      "99.0",
      "49.0",
      "99.0",
      "50.0",
      "99.0",
      "51.0",
      "99.0",
      "52.0",
      "99.0",
      "53.0",
      "99.0",
      "54.0",
      "99.0",
      "55.0",
      "99.0",
      "56.0",
      "99.0",
      "57.0",
      "99.0",
      "58.0",
      "99.0",
      "59.0",
      "99.0",
      "60.0",
      "99.0",
      "61.0",
      "99.0",
      "62.0",
      "99.0",
      "63.0",
      "99.0",
      "64.0",
      "99.0",
      "65.0",
      "99.0",
      "66.0",
      "99.0",
      "67.0",
      "99.0",
      "68.0",
      "99.0",
      "69.0",
      "99.0",
      "70.0",
      "99.0",
      "71.0",
      "99.0",
      "72.0",
      "99.0",
      "73.0",
      "99.0",
      "74.0",
      "99.0",
      "75.0",
      "99.0",
      "76.0",
      "99.0",
      "77.0",
      "99.0",
      "78.0",
      "99.0",
      "79.0",
      "99.0",
      "80.0",
      "99.0",
      "81.0",
      "99.0",
      "82.0",
      "99.0",
      "83.0",
      "99.0",
      "84.0",
      "99.0",
      "85.0",
      "99.0",
      "86.0",
      "99.0",
      "87.0",
      "99.0",
      "88.0",
      "99.0",
      "89.0",
      "99.0",
      "90.0",
      "99.0",
      "91.0",
      "99.0",
      "92.0",
      "99.0",
      "93.0",
      "99.0",
      "94.0",
      "99.0",
      "95.0",
      "99.0",
      "96.0",
      "99.0",
      "97.0",
      "99.0",
      "98.0",
      "99.0",
      "99.0",
      "99.0",
      "100.0",
      "100.0",
      "0.0",
      "100.0",
      "1.0",
      "100.0",
      "2.0",
      "100.0",
      "3.0",
      "100.0",
      "4.0",
      "100.0",
      "5.0",
      "100.0",
      "6.0",
      "100.0",
      "7.0",
      "100.0",
      "8.0",
      "100.0",
      "9.0",
      "100.0",
      "10.0",
      "100.0",
      "11.0",
      "100.0",
      "12.0",
      "100.0",
      "13.0",
      "100.0",
      "14.0",
      "100.0",
      "15.0",
      "100.0",
      "16.0",
      "100.0",
      "17.0",
      "100.0",
      "18.0",
      "100.0",
      "19.0",
      "100.0",
      "20.0",
      "100.0",
      "21.0",
      "100.0",
      "22.0",
      "100.0",
      "23.0",
      "100.0",
      "24.0",
      "100.0",
      "25.0",
      "100.0",
      "26.0",
      "100.0",
      "27.0",
      "100.0",
      "28.0",
      "100.0",
      "29.0",
      "100.0",
      "30.0",
      "100.0",
      "31.0",
      "100.0",
      "32.0",
      "100.0",
      "33.0",
      "100.0",
      "34.0",
      "100.0",
      "35.0",
      "100.0",
      "36.0",
      "100.0",
      "37.0",
      "100.0",
      "38.0",
      "100.0",
      "39.0",
      "100.0",
      "40.0",
      "100.0",
      "41.0",
      "100.0",
      "42.0",
      "100.0",
      "43.0",
      "100.0",
      "44.0",
      "100.0",
      "45.0",
      "100.0",
      "46.0",
      "100.0",
      "47.0",
      "100.0",
      "48.0",
      "100.0",
      "49.0",
      "100.0",
      "50.0",
      "100.0",
      "51.0",
      "100.0",
      "52.0",
      "100.0",
      "53.0",
      "100.0",
      "54.0",
      "100.0",
      "55.0",
      "100.0",
      "56.0",
      "100.0",
      "57.0",
      "100.0",
      "58.0",
      "100.0",
      "59.0",
      "100.0",
      "60.0",
      "100.0",
      "61.0",
      "100.0",
      "62.0",
      "100.0",
      "63.0",
      "100.0",
      "64.0",
      "100.0",
      "65.0",
      "100.0",
      "66.0",
      "100.0",
      "67.0",
      "100.0",
      "68.0",
      "100.0",
      "69.0",
      "100.0",
      "70.0",
      "100.0",
      "71.0",
      "100.0",
      "72.0",
      "100.0",
      "73.0",
      "100.0",
      "74.0",
      "100.0",
      "75.0",
      "100.0",
      "76.0",
      "100.0",
      "77.0",
      "100.0",
      "78.0",
      "100.0",
      "79.0",
      "100.0",
      "80.0",
      "100.0",
      "81.0",
      "100.0",
      "82.0",
      "100.0",
      "83.0",
      "100.0",
      "84.0",
      "100.0",
      "85.0",
      "100.0",
      "86.0",
      "100.0",
      "87.0",
      "100.0",
      "88.0",
      "100.0",
      "89.0",
      "100.0",
      "90.0",
      "100.0",
      "91.0",
      "100.0",
      "92.0",
      "100.0",
      "93.0",
      "100.0",
      "94.0",
      "100.0",
      "95.0",
      "100.0",
      "96.0",
      "100.0",
      "97.0",
      "100.0",
      "98.0",
      "100.0",
      "99.0",
      "100.0",
      "100.0",
      "1.0",
      "0.0",
      "1.0",
      "0.0",
      "1.0",
      "1.0",
      "1.0",
      "2.0",
      "1.0",
      "3.0",
      "1.0",
      "4.0",
      "1.0",
      "5.0",
      "1.0",
      "6.0",
      "1.0",
      "7.0",
      "1.0",
      "8.0",
      "1.0",
      "9.0",
      "1.0",
      "10.0",
      "1.0",
      "11.0",
      "1.0",
      "12.0",
      "1.0",
      "13.0",
      "1.0",
      "14.0",
      "1.0",
      "15.0",
      "1.0",
      "16.0",
      "1.0",
      "17.0",
      "1.0",
      "18.0",
      "1.0",
      "19.0",
      "1.0",
      "20.0",
      "1.0",
      "21.0",
      "1.0",
      "22.0",
      "1.0",
      "23.0",
      "1.0",
      "24.0",
      "1.0",
      "25.0",
      "1.0",
      "26.0",
      "1.0",
      "27.0",
      "1.0",
      "28.0",
      "1.0",
      "29.0",
      "1.0",
      "30.0",
      "1.0",
      "31.0",
      "1.0",
      "32.0",
      "1.0",
      "33.0",
      "1.0",
      "34.0",
      "1.0",
      "35.0",
      "1.0",
      "36.0",
      "1.0",
      "37.0",
      "1.0",
      "38.0",
      "1.0",
      "39.0",
      "1.0",
      "40.0",
      "1.0",
      "41.0",
      "1.0",
      "42.0",
      "1.0",
      "43.0",
      "1.0",
      "44.0",
      "1.0",
      "45.0",
      "1.0",
      "46.0",
      "1.0",
      "47.0",
      "1.0",
      "48.0",
      "1.0",
      "49.0",
      "1.0",
      "50.0",
      "1.0",
      "51.0",
      "1.0",
      "52.0",
      "1.0",
      "53.0",
      "1.0",
      "54.0",
      "1.0",
      "55.0",
      "1.0",
      "56.0",
      "1.0",
      "57.0",
      "1.0",
      "58.0",
      "1.0",
      "59.0",
      "1.0",
      "60.0",
      "1.0",
      "61.0",
      "1.0",
      "62.0",
      "1.0",
      "63.0",
      "1.0",
      "64.0",
      "1.0",
      "65.0",
      "1.0",
      "66.0",
      "1.0",
      "67.0",
      "1.0",
      "68.0",
      "1.0",
      "69.0",
      "1.0",
      "70.0",
      "1.0",
      "71.0",
      "1.0",
      "72.0",
      "1.0",
      "73.0",
      "1.0",
      "74.0",
      "1.0",
      "75.0",
      "1.0",
      "76.0",
      "1.0",
      "77.0",
      "1.0",
      "78.0",
      "1.0",
      "79.0",
      "1.0",
      "80.0",
      "1.0",
      "81.0",
      "1.0",
      "82.0",
      "1.0",
      "83.0",
      "1.0",
      "84.0",
      "1.0",
      "85.0",
      "1.0",
      "86.0",
      "1.0",
      "87.0",
      "1.0",
      "88.0",
      "1.0",
      "89.0",
      "1.0",
      "90.0",
      "1.0",
      "91.0",
      "1.0",
      "92.0",
      "1.0",
      "93.0",
      "1.0",
      "94.0",
      "1.0",
      "95.0",
      "1.0",
      "96.0",
      "1.0",
      "97.0",
      "1.0",
      "98.0",
      "1.0",
      "99.0",
      "1.0",
      "100.0"
    ],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "import math\n\ndef find_d(a, b, c, d):\n    return (a**2 * b + b**2 * c + c**2 * a) - (a * b**2 + b * c**2 + c * a**2)\n\ndef check_ellipse(a, b, c, d):\n    return (a**2 * b + b**2 * c + c**2 * a) == (a * b**2 + b * c**2 + c * a**2)\n\ndef find_solutions(a, b, c, d):\n    solutions = []\n    for i in range(0, 101):\n        for j in range(0, 101):\n            if check_ellipse(a, b, c, d):\n                solutions.append([i, j])\n    return solutions\n\ndef find_d_solution(a, b, c, d):\n    solutions = find_solutions(a, b, c, d)\n    if len(solutions) == 0:\n        return None\n    return solutions[0]\n\ndef find_d_solutions(a, b, c, d):\n    solutions = find_solutions(a, b, c, d)\n    return solutions\n\ndef find_d_solution_with_value(a, b, c, d, value):\n    solutions = find_solutions(a, b, c, d)\n    for solution in solutions:\n        if solution[0] == value:\n            return solution\n    return None\n\ndef find_d_solutions_with_value(a, b, c, d, value):\n    solutions = find_solutions(a, b, c, d)\n    return [solution for solution in solutions if solution[0] == value]\n\na = 2\nb = 2\nc = 2\nd = 3\n\nprint(find_d_solution(a, b, c, d))\nprint(find_d_solutions(a, b, c, d))\nprint(find_d_solution_with_value(a, b, c, d, 1))\nprint(find_d_solutions_with_value(a, b, c, d, 1))"
  },
  {
    "example_id": 303,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "662.0"
    ],
    "annotated_answers": [
      "1023.0"
    ],
    "solution": "a_1 = 1\na_2 = a_1 + 9\na_3 = a_2 + 9\na_4 = a_3 + 9\na_5 = a_4 + 576\nprint(a_1 + a_2 + a_3 + a_4 + a_5)"
  },
  {
    "example_id": 304,
    "selected_solution_index": 10,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "4.0",
      "0.1",
      "3.8",
      "0.2",
      "3.5999999999999996",
      "0.30000000000000004",
      "3.4000000000000004",
      "0.4",
      "3.2",
      "0.5",
      "3.0",
      "0.6",
      "2.8",
      "0.7",
      "2.5999999999999996",
      "0.7999999999999999",
      "2.4000000000000004",
      "0.8999999999999999",
      "2.2",
      "0.9999999999999999",
      "2.0"
    ],
    "annotated_answers": [
      "30.0"
    ],
    "solution": "import math\n\nx = 0\ny = 0\nwhile x <= 4:\n    if x < 1:\n        y = abs(x - 1) + abs(x - 3)\n    else:\n        y = 8\n    if y < 8:\n        print(x, y)\n    x += 0.1"
  },
  {
    "example_id": 305,
    "selected_solution_index": 0,
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-26.0"
    ],
    "solution": "import sympy\n\nf = sympy.Poly(x**3 - 3*x**2 - 4*x + 4)\nz = sympy.I*sympy.sqrt(3)/2 - 1\ns1 = f.roots[0] + f.roots[1]*z + f.roots[2]*z**2\ns2 = f.roots[0]*z + f.roots[1]*z**2 + f.roots[2]\ns3 = f.roots[0]*z**2 + f.roots[1] + f.roots[2]*z\ng = sympy.Poly(x**3 + s1*x**2 + s2*x + s3)\nprint(g.coeffs[0].real)"
  },
  {
    "example_id": 306,
    "selected_solution_index": 14,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "13.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "x = 4 + 3**0.5\ny = 4 - 3**0.5\nprint(x * y)"
  },
  {
    "example_id": 307,
    "selected_solution_index": 0,
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-9.0"
    ],
    "solution": "x = sympy.Symbol('x')\nexpr = x**3 - 3*x**2 + t*x + 27\nexpr = expr.as_poly()\nt = expr.all_coeffs()[0]\nprint(t)"
  },
  {
    "example_id": 308,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "14.0",
      "-2.0",
      "14.0",
      "2.0",
      "6.0",
      "2.0",
      "6.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "from sympy import Symbol, solve\nx = Symbol('x')\nroots = solve(x**4 - 80*x - 36, x)\nprint(roots)"
  },
  {
    "example_id": 309,
    "selected_solution_index": 11,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "a = 0\nb = 0\nc = 0\nd = 0\nprint(a+2*b+3*c+4*d)"
  },
  {
    "example_id": 310,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "import math\n\ndef solve(lambda_):\n    for x in range(1, 101):\n        for y in range(1, 101):\n            for z in range(1, 101):\n                if x**2 + y**2 + z**2 == 1:\n                    if lambda_ * x * y + y * z <= math.sqrt(5) / 2:\n                        return False\n    return True\n\n\ndef find_largest_positive_lambda():\n    lambda_ = 0\n    while not solve(lambda_):\n        lambda_ += 1\n    return lambda_\n\n\nprint(find_largest_positive_lambda())"
  },
  {
    "example_id": 311,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a = 2\nb = 1\nexpression = a + 1/b*(a-b)\nprint(expression)"
  },
  {
    "example_id": 312,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1810.0"
    ],
    "annotated_answers": [
      "729.0"
    ],
    "solution": "volume = 10*13*14 - 10\nprint(volume)"
  },
  {
    "example_id": 313,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-11.794228634059948"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "import math\n\nx = math.cos(math.pi / 6)\ny = math.sin(math.pi / 6)\nz = -x - y\n\nprint(3 * x + 4 * y + 12 * z)"
  },
  {
    "example_id": 314,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "26.0"
    ],
    "annotated_answers": [
      "134.0"
    ],
    "solution": "# 27 candidates\n# each candidate got a vote\n# and the percentage is less than the number of votes\n# so there are at least 26 members\nprint(26)"
  },
  {
    "example_id": 315,
    "selected_solution_index": 14,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "224.0"
    ],
    "solution": "a = 3\nfor i in range(2006, 2007):\n    a = a * a + 2007\nprint(int(a / a))"
  },
  {
    "example_id": 316,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "75.0"
    ],
    "annotated_answers": [
      "75.0"
    ],
    "solution": "print(abs(9*1j - 12) * abs(3 + 4*1j))"
  },
  {
    "example_id": 317,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "16.333333333333336"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "a = 1\nb = 1\nc = 1\n\nexpression = (2 * a + 1 / 3 * b)**2 + (2 * b + 1 / 3 * c)**2 + (2 * c + 1 / 3 * a)**2\nprint(expression)"
  },
  {
    "example_id": 318,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6807.941843371951"
    ],
    "annotated_answers": [
      "997.0"
    ],
    "solution": "import math\ncircle_radius = 1994\ncenter_x = center_y = 1994\npoint_x = 2 * center_x\npoint_y = 2 * center_y\ndistance = math.hypot(point_x - center_x, point_y - center_y)\nangle = math.atan2(point_y - center_y, point_x - center_x)\na = center_x + circle_radius * math.cos(angle)\nb = center_y + circle_radius * math.sin(angle)\nprint(a + b)"
  },
  {
    "example_id": 319,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "a, b, c = -1, 1, 2\nexpression = (a + b) / (a * b + c)\nprint(expression)"
  },
  {
    "example_id": 320,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "14.0",
      "6.0",
      "20.0",
      "3.0",
      "9.0",
      "2.0",
      "1.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "from sympy import *\nx = Symbol('x')\nq = diff(2*x**7-5*x**4+3*x**3-x+5, x)\nprint(q)"
  },
  {
    "example_id": 321,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6577.0"
    ],
    "annotated_answers": [
      "50.0"
    ],
    "solution": "a = 2\nb = 3\nexpression = a**4 + b**8\nprint(expression)"
  },
  {
    "example_id": 322,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "5.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "from sympy import Symbol\nz = Symbol('z')\nexpression = abs(z**5) / abs(z)**5\nprint(expression)"
  },
  {
    "example_id": 323,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "379.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "x = 379\nprint(x)"
  },
  {
    "example_id": 324,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "5.0",
      "6.0",
      "7.0",
      "2.0"
    ],
    "annotated_answers": [
      "84.0"
    ],
    "solution": "import sympy as sp\n\nx = sp.sqrt(3) + sp.sqrt(5) + sp.sqrt(6) + sp.sqrt(7)\nprint(x**2)"
  },
  {
    "example_id": 325,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "1.0",
      "1.0",
      "0.0",
      "1.0",
      "0.0",
      "0.0",
      "1.0",
      "1.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "from scipy.optimize import minimize\n\n\ndef func(x):\n    return (x - 1)**7 + 3 * (x - 1)**6 + (x - 1)**5 + 1\n\n\ndef func_prime(x):\n    return 7 * (x - 1)**6 + 3 * 6 * (x - 1)**5 + 5 * (x - 1)**4\n\n\nresult = minimize(func, 1.0, method=\"SLSQP\", jac=func_prime)\nprint(result)"
  },
  {
    "example_id": 326,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "26.0"
    ],
    "annotated_answers": [
      "22.0"
    ],
    "solution": "x = 6\ny = 8\nz = 12\nprint(x + y + z)"
  },
  {
    "example_id": 327,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "20270920.0"
    ],
    "annotated_answers": [
      "-338016.0"
    ],
    "solution": "from math import factorial\n\ndef binomial(n, k):\n    return factorial(n) // (factorial(k) * factorial(n - k))\n\ndef power_sum(x, n):\n    return sum([binomial(n, k) * x**k for k in range(n + 1)])\n\ndef power_sum_poly(x, n):\n    return x**n + x**(n - 1) + x**(n - 2) + x**(n - 3) + x**(n - 4) + x**(n - 5) + x**(n - 6)\n\ndef power_sum_poly_derivative(x, n):\n    return n * x**(n - 1) + (n - 1) * x**(n - 2) + (n - 2) * x**(n - 3) + (n - 3) * x**(n - 4) + (n - 4) * x**(n - 5) + (n - 5) * x**(n - 6)\n\ndef power_sum_poly_derivative_2(x, n):\n    return n * (n - 1) * x**(n - 2) + (n - 1) * (n - 2) * x**(n - 3) + (n - 2) * (n - 3) * x**(n - 4) + (n - 3) * (n - 4) * x**(n - 5) + (n - 4) * (n - 5) * x**(n - 6)\n\nx = 1\nn = 2016\n\npower_sum_poly_derivative_2_x = power_sum_poly_derivative_2(x, n)\n\nprint(power_sum_poly_derivative_2_x)"
  },
  {
    "example_id": 328,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "import sympy as sp\nx, y = sp.symbols('x y')\nk = sp.solve(y**2 + x**2 - 1, y)[0]\nprint(k)"
  },
  {
    "example_id": 329,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2008.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "def f(n):\n    return n + 1\n\nprint(f(2007))"
  },
  {
    "example_id": 330,
    "selected_solution_index": 14,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "18.0",
      "11.0",
      "2.0",
      "8.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "from sympy import log, Symbol\n\nx = Symbol('x')\nexpression = log(2 * (x + 8) / (x + 2), 2) + log((x + 2) / (x - 5), 2)\nprint(expression.subs(x, 16))"
  },
  {
    "example_id": 331,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "16.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "expression = abs((1-1j)**8)\nprint(expression)"
  },
  {
    "example_id": 332,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "count = 0\nfor a in range(1, 100):\n    if a**3 - 1 == 0:\n        count += 1\nprint(count)"
  },
  {
    "example_id": 333,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "49.0"
    ],
    "annotated_answers": [
      "996506.0"
    ],
    "solution": "def sequence(n):\n    if n == 1:\n        return 1\n    elif n % 2 == 0:\n        return sequence(n // 2) + 3\n    else:\n        return sequence((n - 1) // 2) + 2\n\nprint(sequence(500000))"
  },
  {
    "example_id": 334,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "1.0",
      "9.0",
      "6.0",
      "3.0",
      "1.0",
      "2.0",
      "1.0",
      "1.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "from sympy import *\nx = Symbol('x')\nexpression = (x**9 - x**6 + x**3 - 1) % (x**2 + x + 1)\nprint(expression)"
  },
  {
    "example_id": 335,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "from sympy import *\n\na = Symbol('a')\nt = 0.8\nm = -2*t\nT = (t, 9 - t**2)\nX = T + (1, m)\nY = T + (1, m)\n\ntriangle_area = 25\n\nprint((X[0] - T[0]) * (Y[1] - T[1]) - (X[1] - T[1]) * (Y[0] - T[0]))"
  },
  {
    "example_id": 336,
    "selected_solution_index": 14,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "24.0",
      "6.0",
      "5.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "from sympy import Point, Circle, Line, Segment\n\n# define the circles\nc1 = Circle((10, 0), 6)\nc2 = Circle((15, 0), 7)\n\n# find the points of intersection\np = c1.intersection(c2)[0]\nq = c1.intersection(c2)[1]\n\n# find the line segment\npq = Segment(p, q)\n\n# find the length of the line segment\nprint(pq.length)"
  },
  {
    "example_id": 337,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "272.25"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a = 9\nb = 4\nc = -54\nd = 40\ne = 145\nh = -c / b\nk = -d / b\na_squared = a**2\nb_squared = b**2\nexpression = (h + k + a + b)**2\nprint(expression)"
  },
  {
    "example_id": 338,
    "selected_solution_index": 11,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.970373692592452",
      "33"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a = [1, 1, 0]\nfor i in range(3, 100):\n    a.append(a[i-2] - 2*a[i-1] + a[i-3])\nprint(sum(a))"
  },
  {
    "example_id": 339,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "count = 0\nfor z1 in range(0, 1000):\n    for z2 in range(0, 1000):\n        if abs(z1) == abs(z2) == 1 and (z1 * z2).imag!= 0 and (z1 / z2).real!= 0:\n            count += 1\nprint(count)"
  },
  {
    "example_id": 340,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-0.5335858003518059"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "import math\nprint(math.log(math.log(math.log(256, 64), 256), 256))"
  },
  {
    "example_id": 341,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "2.0",
      "5.0",
      "1.0",
      "5.0",
      "2.0",
      "5.0",
      "5.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "from sympy import Symbol\n\nr = Symbol('r', real=True)\nexpression = (r - 1) * (r + 2) * (r + 6) * (r + 3)\nprint(expression.subs(r, -1 + 5*Symbol('i')))"
  },
  {
    "example_id": 342,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "k = 12\nprint(k)"
  },
  {
    "example_id": 343,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "a = 3.5\nb = 2.5\nh = 1.5\nk = 2.5\nprint(a + k)"
  },
  {
    "example_id": 344,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "-0.9999999999982254",
      "5.0",
      "-1.0",
      "-1.218",
      "-6.0",
      "5.0",
      "-1.0",
      "7.0",
      "1.252",
      "-6.0",
      "-2.384",
      "-7.0",
      "-8.643",
      "-7.0",
      "7.311",
      "-1.0",
      "-4.851",
      "-1.0",
      "-4.823",
      "-1.0",
      "-4.851",
      "-1.0",
      "4.883",
      "-1.0",
      "4.861",
      "-1.0",
      "-4.823",
      "-1.0",
      "4.861",
      "-1.0",
      "7.335",
      "-1.0",
      "36.0",
      "9.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "from scipy.optimize import minimize\n\ndef function(x):\n    return 2 * x[0]**2 + 5 * x[1]**2 + 2 * x[2]**2 + 4 * x[0] * x[1] - 4 * x[1] * x[2] - 2 * x[2] - 2 * x[0]\n\nresult = minimize(function, [1, 1, 1])\nprint(result)"
  },
  {
    "example_id": 345,
    "selected_solution_index": 11,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "13.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "print(abs(5-12j))"
  },
  {
    "example_id": 346,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.174309748172216",
      "200"
    ],
    "annotated_answers": [
      "203.0"
    ],
    "solution": "def p(x):\n    return (x**100 - x**99 + x**98 - x**97 + x**96 - x**95 + x**94 - x**93 + x**92 - x**91 + x**90 - x**89 + x**88 - x**87 + x**86 - x**85 + x**84 - x**83 + x**82 - x**81 + x**80 - x**79 + x**78 - x**77 + x**76 - x**75 + x**74 - x**73 + x**72 - x**71 + x**70 - x**69 + x**68 - x**67 + x**66 - x**65 + x**64 - x**63 + x**62 - x**61 + x**60 - x**59 + x**58 - x**57 + x**56 - x**55 + x**54 - x**53 + x**52 - x**51 + x**50 - x**49 + x**48 - x**47 + x**46 - x**45 + x**44 - x**43 + x**42 - x**41 + x**40 - x**39 + x**38 - x**37 + x**36 - x**35 + x**34 - x**33 + x**32 - x**31 + x**30 - x**29 + x**28 - x**27 + x**26 - x**25 + x**24 - x**23 + x**22 - x**21 + x**20 - x**19 + x**18 - x**17 + x**16 - x**15 + x**14 - x**13 + x**12 - x**11 + x**10 - x**9 + x**8 - x**7 + x**6 - x**5 + x**4 - x**3 + x**2 - x + 1)\nprint(p(102))"
  },
  {
    "example_id": 347,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "479001599.0"
    ],
    "annotated_answers": [
      "-10.0"
    ],
    "solution": "from math import factorial\n\n\ndef polynom_sum(n):\n    result = 0\n    for i in range(n+1):\n        result += factorial(n-i) * (n+1-i)**2\n    return result\n\n\nprint(polynom_sum(10))"
  },
  {
    "example_id": 348,
    "selected_solution_index": 0,
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-46.0"
    ],
    "solution": "from sympy import *\n\nf = x**4 - 6*x**3 + 26*x**2 + p*x + 65\n\na, b, c, d = f.roots()\n\nprint(a.real, b.real, c.real, d.real)\nprint(a.imag, b.imag, c.imag, d.imag)\nprint(a.is_real, b.is_real, c.is_real, d.is_real)\nprint(p)"
  },
  {
    "example_id": 349,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1384.0"
    ],
    "annotated_answers": [
      "973.0"
    ],
    "solution": "n = 9\na1 = 1\na2 = 2\na3 = 4\na4 = 8\na5 = 16\na6 = 32\na7 = 64\na8 = 128\na9 = 256\na10 = 512\n\nwhile n < 1000:\n    a = (a9 + a10) / 2\n    if a < 1000:\n        n += 1\n    else:\n        break\n\nprint(n + a)"
  },
  {
    "example_id": 350,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "29.0"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "def f(x):\n    return x**2 + 6*x + 1\n\n# area of the region\narea = 0\n# find the points that satisfy the condition\nfor x in range(-100, 100):\n    for y in range(-100, 100):\n        if f(x) + f(y) <= 0 and f(x) - f(y) <= 0:\n            area += 1\nprint(area)"
  },
  {
    "example_id": 351,
    "selected_solution_index": 12,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.346680637175317",
      "0.424595332391238",
      "0.180281196288426",
      "2.0",
      "0.480749856769136",
      "-0.0277777777777778",
      "-0.375",
      "2.0",
      "3.0",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "0.375",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "0.333333333333333",
      "0.5",
      "0.360562392576852",
      "2.0",
      "0.961499713538272",
      "0.612372435695795",
      "-0.25",
      "3.0",
      "2.0",
      "2.0",
      "0.180281196288426",
      "2.0",
      "0.480749856769136",
      "-0.0277777777777778",
      "-0.375",
      "2.0",
      "3.0",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "0.375",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "0.333333333333333",
      "0.5",
      "-0.0277777777777778",
      "-0.375",
      "2.0",
      "3.0",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "0.375",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "0.333333333333333",
      "0.5",
      "2.0",
      "2.0",
      "12.0",
      "4.0",
      "0.0",
      "0.333333333333333",
      "0.433012701892219",
      "0.9306048591021",
      "0.21650635094611",
      "2.0",
      "0.577350269189626",
      "1.0",
      "-0.0833333333333333",
      "2.0",
      "0.25",
      "0.0240562612162344",
      "-0.375",
      "2.0",
      "3.0",
      "0.866025403784439",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "-0.0833333333333333",
      "2.0",
      "0.25",
      "3.0",
      "0.75",
      "-0.0277777777777778",
      "-0.375",
      "2.0",
      "3.0",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "0.375",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "2.0",
      "0.5",
      "0.324759526419165",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "0.333333333333333",
      "0.0240562612162344",
      "-0.375",
      "2.0",
      "3.0",
      "0.866025403784439",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "-0.0833333333333333",
      "2.0",
      "0.25",
      "3.0",
      "0.75",
      "-0.0277777777777778",
      "-0.375",
      "2.0",
      "3.0",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "0.375",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "2.0",
      "0.5",
      "0.324759526419165",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "0.333333333333333",
      "0.5",
      "0.375",
      "2.0",
      "0.866025403784439",
      "-0.0833333333333333",
      "2.0",
      "0.25",
      "0.0240562612162344",
      "-0.375",
      "2.0",
      "3.0",
      "0.866025403784439",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "-0.0833333333333333",
      "2.0",
      "0.25",
      "3.0",
      "0.75",
      "-0.0277777777777778",
      "-0.375",
      "2.0",
      "3.0",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "0.375",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "2.0",
      "0.5",
      "0.324759526419165",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "0.333333333333333",
      "0.697953644326575",
      "-0.25",
      "3.0",
      "2.0",
      "2.0",
      "0.21650635094611",
      "2.0",
      "0.577350269189626",
      "1.0",
      "-0.0833333333333333",
      "2.0",
      "0.25",
      "0.0240562612162344",
      "-0.375",
      "2.0",
      "3.0",
      "0.866025403784439",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "-0.0833333333333333",
      "2.0",
      "0.25",
      "3.0",
      "0.75",
      "-0.0277777777777778",
      "-0.375",
      "2.0",
      "3.0",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "0.375",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "2.0",
      "0.5",
      "0.324759526419165",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "0.333333333333333",
      "0.0240562612162344",
      "-0.375",
      "2.0",
      "3.0",
      "0.866025403784439",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "-0.0833333333333333",
      "2.0",
      "0.25",
      "3.0",
      "0.75",
      "-0.0277777777777778",
      "-0.375",
      "2.0",
      "3.0",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "0.375",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "2.0",
      "0.5",
      "0.324759526419165",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "0.333333333333333",
      "0.5",
      "0.866025403784439",
      "0.0240562612162344",
      "-0.375",
      "2.0",
      "3.0",
      "0.866025403784439",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "-0.0833333333333333",
      "2.0",
      "0.25",
      "3.0",
      "0.75",
      "-0.0277777777777778",
      "-0.375",
      "2.0",
      "3.0",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "0.375",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "2.0",
      "0.5",
      "0.324759526419165",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "0.333333333333333",
      "0.5",
      "2.0",
      "0.346680637175317",
      "0.424595332391238",
      "0.180281196288426",
      "2.0",
      "0.480749856769136",
      "-0.0277777777777778",
      "-0.375",
      "2.0",
      "3.0",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "0.375",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "0.333333333333333",
      "0.5",
      "0.360562392576852",
      "2.0",
      "0.961499713538272",
      "0.612372435695795",
      "-0.25",
      "3.0",
      "2.0",
      "2.0",
      "0.180281196288426",
      "2.0",
      "0.480749856769136",
      "-0.0277777777777778",
      "-0.375",
      "2.0",
      "3.0",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "0.375",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "0.333333333333333",
      "0.5",
      "-0.0277777777777778",
      "-0.375",
      "2.0",
      "3.0",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "0.375",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "0.333333333333333",
      "0.5",
      "2.0",
      "2.0",
      "12.0",
      "4.0",
      "0.0",
      "0.333333333333333",
      "0.433012701892219",
      "0.9306048591021",
      "0.21650635094611",
      "2.0",
      "0.577350269189626",
      "1.0",
      "-0.0833333333333333",
      "2.0",
      "0.25",
      "0.0240562612162344",
      "-0.375",
      "2.0",
      "3.0",
      "0.866025403784439",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "-0.0833333333333333",
      "2.0",
      "0.25",
      "3.0",
      "0.75",
      "-0.0277777777777778",
      "-0.375",
      "2.0",
      "3.0",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "0.375",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "2.0",
      "0.5",
      "0.324759526419165",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "0.333333333333333",
      "0.0240562612162344",
      "-0.375",
      "2.0",
      "3.0",
      "0.866025403784439",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "-0.0833333333333333",
      "2.0",
      "0.25",
      "3.0",
      "0.75",
      "-0.0277777777777778",
      "-0.375",
      "2.0",
      "3.0",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "0.375",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "2.0",
      "0.5",
      "0.324759526419165",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "0.333333333333333",
      "0.5",
      "0.375",
      "2.0",
      "0.866025403784439",
      "-0.0833333333333333",
      "2.0",
      "0.25",
      "0.0240562612162344",
      "-0.375",
      "2.0",
      "3.0",
      "0.866025403784439",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "-0.0833333333333333",
      "2.0",
      "0.25",
      "3.0",
      "0.75",
      "-0.0277777777777778",
      "-0.375",
      "2.0",
      "3.0",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "0.375",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "2.0",
      "0.5",
      "0.324759526419165",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "0.333333333333333",
      "0.697953644326575",
      "-0.25",
      "3.0",
      "2.0",
      "2.0",
      "0.21650635094611",
      "2.0",
      "0.577350269189626",
      "1.0",
      "-0.0833333333333333",
      "2.0",
      "0.25",
      "0.0240562612162344",
      "-0.375",
      "2.0",
      "3.0",
      "0.866025403784439",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "-0.0833333333333333",
      "2.0",
      "0.25",
      "3.0",
      "0.75",
      "-0.0277777777777778",
      "-0.375",
      "2.0",
      "3.0",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "0.375",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "2.0",
      "0.5",
      "0.324759526419165",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "0.333333333333333",
      "0.0240562612162344",
      "-0.375",
      "2.0",
      "3.0",
      "0.866025403784439",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "-0.0833333333333333",
      "2.0",
      "0.25",
      "3.0",
      "0.75",
      "-0.0277777777777778",
      "-0.375",
      "2.0",
      "3.0",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "0.375",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "2.0",
      "0.5",
      "0.324759526419165",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "0.333333333333333",
      "0.5",
      "0.866025403784439",
      "0.0240562612162344",
      "-0.375",
      "2.0",
      "3.0",
      "0.866025403784439",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "-0.0833333333333333",
      "2.0",
      "0.25",
      "3.0",
      "0.75",
      "-0.0277777777777778",
      "-0.375",
      "2.0",
      "3.0",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "0.375",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "2.0",
      "0.5",
      "0.324759526419165",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "0.333333333333333",
      "0.5",
      "2.0",
      "0.346680637175317",
      "0.424595332391238",
      "0.180281196288426",
      "2.0",
      "0.480749856769136",
      "-0.0277777777777778",
      "-0.375",
      "2.0",
      "3.0",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "0.375",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "0.333333333333333",
      "0.5",
      "0.360562392576852",
      "2.0",
      "0.961499713538272",
      "0.612372435695795",
      "-0.25",
      "3.0",
      "2.0",
      "2.0",
      "0.180281196288426",
      "2.0",
      "0.480749856769136",
      "-0.0277777777777778",
      "-0.375",
      "2.0",
      "3.0",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "0.375",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "0.333333333333333",
      "0.5",
      "-0.0277777777777778",
      "-0.375",
      "2.0",
      "3.0",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "0.375",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "0.333333333333333",
      "0.5",
      "2.0",
      "2.0",
      "12.0",
      "4.0",
      "0.0",
      "0.333333333333333",
      "0.433012701892219",
      "0.9306048591021",
      "0.21650635094611",
      "2.0",
      "0.577350269189626",
      "1.0",
      "-0.0833333333333333",
      "2.0",
      "0.25",
      "0.0240562612162344",
      "-0.375",
      "2.0",
      "3.0",
      "0.866025403784439",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "-0.0833333333333333",
      "2.0",
      "0.25",
      "3.0",
      "0.75",
      "-0.0277777777777778",
      "-0.375",
      "2.0",
      "3.0",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "0.375",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "2.0",
      "0.5",
      "0.324759526419165",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "0.333333333333333",
      "0.0240562612162344",
      "-0.375",
      "2.0",
      "3.0",
      "0.866025403784439",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "-0.0833333333333333",
      "2.0",
      "0.25",
      "3.0",
      "0.75",
      "-0.0277777777777778",
      "-0.375",
      "2.0",
      "3.0",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "0.375",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "2.0",
      "0.5",
      "0.324759526419165",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "0.333333333333333",
      "0.5",
      "0.375",
      "2.0",
      "0.866025403784439",
      "-0.0833333333333333",
      "2.0",
      "0.25",
      "0.0240562612162344",
      "-0.375",
      "2.0",
      "3.0",
      "0.866025403784439",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "-0.0833333333333333",
      "2.0",
      "0.25",
      "3.0",
      "0.75",
      "-0.0277777777777778",
      "-0.375",
      "2.0",
      "3.0",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "0.375",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "2.0",
      "0.5",
      "0.324759526419165",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "0.333333333333333",
      "0.697953644326575",
      "-0.25",
      "3.0",
      "2.0",
      "2.0",
      "0.21650635094611",
      "2.0",
      "0.577350269189626",
      "1.0",
      "-0.0833333333333333",
      "2.0",
      "0.25",
      "0.0240562612162344",
      "-0.375",
      "2.0",
      "3.0",
      "0.866025403784439",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "-0.0833333333333333",
      "2.0",
      "0.25",
      "3.0",
      "0.75",
      "-0.0277777777777778",
      "-0.375",
      "2.0",
      "3.0",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "0.375",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "2.0",
      "0.5",
      "0.324759526419165",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "0.333333333333333",
      "0.0240562612162344",
      "-0.375",
      "2.0",
      "3.0",
      "0.866025403784439",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "-0.0833333333333333",
      "2.0",
      "0.25",
      "3.0",
      "0.75",
      "-0.0277777777777778",
      "-0.375",
      "2.0",
      "3.0",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "0.375",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "2.0",
      "0.5",
      "0.324759526419165",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "0.333333333333333",
      "0.5",
      "0.866025403784439",
      "0.0240562612162344",
      "-0.375",
      "2.0",
      "3.0",
      "0.866025403784439",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "-0.0833333333333333",
      "2.0",
      "0.25",
      "3.0",
      "0.75",
      "-0.0277777777777778",
      "-0.375",
      "2.0",
      "3.0",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "0.375",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "2.0",
      "0.5",
      "0.324759526419165",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "0.333333333333333",
      "0.5",
      "2.0",
      "0.346680637175317",
      "0.424595332391238",
      "0.180281196288426",
      "2.0",
      "0.480749856769136",
      "-0.0277777777777778",
      "-0.375",
      "2.0",
      "3.0",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "0.375",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "0.333333333333333",
      "0.5",
      "0.360562392576852",
      "2.0",
      "0.961499713538272",
      "0.612372435695795",
      "-0.25",
      "3.0",
      "2.0",
      "2.0",
      "0.180281196288426",
      "2.0",
      "0.480749856769136",
      "-0.0277777777777778",
      "-0.375",
      "2.0",
      "3.0",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "0.375",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "0.333333333333333",
      "0.5",
      "-0.0277777777777778",
      "-0.375",
      "2.0",
      "3.0",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "0.375",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "0.333333333333333",
      "0.5",
      "2.0",
      "2.0",
      "12.0",
      "4.0",
      "0.0",
      "0.333333333333333",
      "0.433012701892219",
      "0.9306048591021",
      "0.21650635094611",
      "2.0",
      "0.577350269189626",
      "1.0",
      "-0.0833333333333333",
      "2.0",
      "0.25",
      "0.0240562612162344",
      "-0.375",
      "2.0",
      "3.0",
      "0.866025403784439",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "-0.0833333333333333",
      "2.0",
      "0.25",
      "3.0",
      "0.75",
      "-0.0277777777777778",
      "-0.375",
      "2.0",
      "3.0",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "0.375",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "2.0",
      "0.5",
      "0.324759526419165",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "0.333333333333333",
      "0.0240562612162344",
      "-0.375",
      "2.0",
      "3.0",
      "0.866025403784439",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "-0.0833333333333333",
      "2.0",
      "0.25",
      "3.0",
      "0.75",
      "-0.0277777777777778",
      "-0.375",
      "2.0",
      "3.0",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "0.375",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "2.0",
      "0.5",
      "0.324759526419165",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "0.333333333333333",
      "0.5",
      "0.375",
      "2.0",
      "0.866025403784439",
      "-0.0833333333333333",
      "2.0",
      "0.25",
      "0.0240562612162344",
      "-0.375",
      "2.0",
      "3.0",
      "0.866025403784439",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "-0.0833333333333333",
      "2.0",
      "0.25",
      "3.0",
      "0.75",
      "-0.0277777777777778",
      "-0.375",
      "2.0",
      "3.0",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "0.375",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "2.0",
      "0.5",
      "0.324759526419165",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "0.333333333333333",
      "0.697953644326575",
      "-0.25",
      "3.0",
      "2.0",
      "2.0",
      "0.21650635094611",
      "2.0",
      "0.577350269189626",
      "1.0",
      "-0.0833333333333333",
      "2.0",
      "0.25",
      "0.0240562612162344",
      "-0.375",
      "2.0",
      "3.0",
      "0.866025403784439",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "-0.0833333333333333",
      "2.0",
      "0.25",
      "3.0",
      "0.75",
      "-0.0277777777777778",
      "-0.375",
      "2.0",
      "3.0",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "0.375",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "2.0",
      "0.5",
      "0.324759526419165",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "0.333333333333333",
      "0.0240562612162344",
      "-0.375",
      "2.0",
      "3.0",
      "0.866025403784439",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "-0.0833333333333333",
      "2.0",
      "0.25",
      "3.0",
      "0.75",
      "-0.0277777777777778",
      "-0.375",
      "2.0",
      "3.0",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "0.375",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "2.0",
      "0.5",
      "0.324759526419165",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "0.333333333333333",
      "0.5",
      "0.866025403784439",
      "0.0240562612162344",
      "-0.375",
      "2.0",
      "3.0",
      "0.866025403784439",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "-0.0833333333333333",
      "2.0",
      "0.25",
      "3.0",
      "0.75",
      "-0.0277777777777778",
      "-0.375",
      "2.0",
      "3.0",
      "-0.375",
      "2.0",
      "-0.01171875",
      "4.0",
      "0.0625",
      "3.0",
      "0.25",
      "0.375",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "2.0",
      "0.5",
      "0.324759526419165",
      "-0.125",
      "3.0",
      "0.5",
      "2.0",
      "2.0",
      "0.333333333333333",
      "0.5",
      "2.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "from sympy import solve, symbols\n\nK, L, M = symbols('K, L, M')\n\nx = symbols('x')\n\neq = x**4 - K*x**3 + K*x**2 + L*x + M\n\nroots = solve(eq, x)\n\nsum = 0\nfor root in roots:\n    sum += root**2\n\nprint(sum.n())"
  },
  {
    "example_id": 352,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2018.0"
    ],
    "annotated_answers": [
      "4036.0"
    ],
    "solution": "n = 2018\na_n = 1 / (n * (n + 1)**2)\nprint(n)"
  },
  {
    "example_id": 353,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-8.0"
    ],
    "annotated_answers": [
      "-588.0"
    ],
    "solution": "coefficient = 0\nfor i in range(1, 16):\n    coefficient += i * (-1)**i\nprint(coefficient)"
  },
  {
    "example_id": 354,
    "selected_solution_index": 0,
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "19941989.0"
    ],
    "solution": "n = 19941994\nexpression = int(math.sqrt(n**2 - 10*n + 29))\nprint(expression)"
  },
  {
    "example_id": 355,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "count = 0\nfor x in range(1, 101):\n    for y in range(1, 101):\n        if x**2 + 2 * y**2 + 0.5 <= x * (2 * y + 1):\n            count += 1\nprint(count)"
  },
  {
    "example_id": 356,
    "selected_solution_index": 11,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3680.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "def p(x):\n    return 8 if x in [55, 83, 204, 232, 103] else 13\n\nresult = 0\nfor i in range(1, 286):\n    result += p(i)\nprint(result)"
  },
  {
    "example_id": 357,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-150.0"
    ],
    "annotated_answers": [
      "-150.0"
    ],
    "solution": "sum = 0\nfor n in range(1, 101):\n    sum += (-1)**(n+1) * (3 * n + 2)\nprint(sum)"
  },
  {
    "example_id": 358,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "from sympy import solve, Symbol\n\nz = Symbol('z')\nexpression = z**3 + z**2 - z.conjugate()**2 + 2 * z\nsolutions = solve(expression, z)\nprint(sum(solutions))"
  },
  {
    "example_id": 359,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "def f(m, n):\n    if m == 1 or n == 1:\n        return 1\n    return f(m - 1, n) + f(m, n - 1) + f(m - 1, n - 1)\n\n\ndef S(k):\n    return sum(f(a, b) for a in range(1, k + 1) for b in range(1, k + 1))\n\n\ndef pq_finder(k):\n    if k == 2:\n        return 0\n    if k == 3:\n        return 1\n    return pq_finder(k - 1) + pq_finder(k - 2)\n\n\npq = pq_finder(3)\nprint(pq)"
  },
  {
    "example_id": 360,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "a = 2\nb = 1\nexpression = (a**2 + b**2) / (a - b)\nprint(expression)"
  },
  {
    "example_id": 361,
    "selected_solution_index": 10,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-35.0",
      "6.0",
      "8.0",
      "-3.0",
      "2310.0",
      "16.0",
      "6006.0",
      "16.0",
      "715.0",
      "8.0",
      "-35.0",
      "6.0",
      "8.0",
      "-3.0",
      "2310.0",
      "16.0",
      "6006.0",
      "16.0",
      "715.0",
      "8.0",
      "-35.0",
      "6.0",
      "8.0",
      "3.0",
      "2310.0",
      "16.0",
      "6006.0",
      "16.0",
      "715.0",
      "8.0",
      "-35.0",
      "6.0",
      "8.0",
      "3.0",
      "2310.0",
      "16.0",
      "6006.0",
      "16.0",
      "715.0",
      "8.0",
      "35.0",
      "6.0",
      "8.0",
      "-3.0",
      "2310.0",
      "16.0",
      "6006.0",
      "16.0",
      "715.0",
      "8.0",
      "35.0",
      "6.0",
      "8.0",
      "-3.0",
      "2310.0",
      "16.0",
      "6006.0",
      "16.0",
      "715.0",
      "8.0",
      "35.0",
      "6.0",
      "8.0",
      "3.0",
      "2310.0",
      "16.0",
      "6006.0",
      "16.0",
      "715.0",
      "8.0",
      "35.0",
      "6.0",
      "8.0",
      "3.0",
      "2310.0",
      "16.0",
      "6006.0",
      "16.0",
      "715.0",
      "8.0",
      "-35.0",
      "6.0",
      "8.0",
      "-3.0",
      "2310.0",
      "16.0",
      "6006.0",
      "16.0",
      "715.0",
      "8.0",
      "-35.0",
      "6.0",
      "8.0",
      "-3.0",
      "2310.0",
      "16.0",
      "6006.0",
      "16.0",
      "715.0",
      "8.0",
      "-35.0",
      "6.0",
      "8.0",
      "3.0",
      "2310.0",
      "16.0",
      "6006.0",
      "16.0",
      "715.0",
      "8.0",
      "-35.0",
      "6.0",
      "8.0",
      "3.0",
      "2310.0",
      "16.0",
      "6006.0",
      "16.0",
      "715.0",
      "8.0",
      "35.0",
      "6.0",
      "8.0",
      "-3.0",
      "2310.0",
      "16.0",
      "6006.0",
      "16.0",
      "715.0",
      "8.0",
      "35.0",
      "6.0",
      "8.0",
      "-3.0",
      "2310.0",
      "16.0",
      "6006.0",
      "16.0",
      "715.0",
      "8.0",
      "35.0",
      "6.0",
      "8.0",
      "3.0",
      "2310.0",
      "16.0",
      "6006.0",
      "16.0",
      "715.0",
      "8.0",
      "35.0",
      "6.0",
      "8.0",
      "3.0",
      "2310.0",
      "16.0",
      "6006.0",
      "16.0",
      "715.0",
      "8.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "import sympy\nx, y, z, w = sympy.symbols('x,y,z,w')\nconstraints = [\n    x**2 + y**2 + z**2 + w**2 - 1,\n    x**2 / (4**2 - 1) + y**2 / (4**2 - 3**2) + z**2 / (4**2 - 5**2) + w**2 / (4**2 - 7**2) - 1,\n    x**2 / (6**2 - 1) + y**2 / (6**2 - 3**2) + z**2 / (6**2 - 5**2) + w**2 / (6**2 - 7**2) - 1,\n    x**2 / (8**2 - 1) + y**2 / (8**2 - 3**2) + z**2 / (8**2 - 5**2) + w**2 / (8**2 - 7**2) - 1\n]\nsolution = sympy.solve(constraints, [x, y, z, w])\nprint(solution)"
  },
  {
    "example_id": 362,
    "selected_solution_index": 0,
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "expression = sympy.Poly(8*sympy.Symbol('x')**3 - 27)\nprint(expression.factor())"
  },
  {
    "example_id": 363,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-123456789.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "import math\n\ndef phi(n):\n    return (math.sqrt(5) + 1) / 2\n\ndef get_a_and_b(n):\n    a = int(n * phi(n))\n    b = int(n / phi(n))\n    return a, b\n\ndef get_b_minus_a(n):\n    a, b = get_a_and_b(n)\n    return b - a\n\nprint(get_b_minus_a(123456789))"
  },
  {
    "example_id": 364,
    "selected_solution_index": 12,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "from math import fabs\n\ndef is_solution(x):\n    return fabs(x) * fabs(x - 5) == 3\n\ndef sum_solutions(a, b):\n    return sum(filter(is_solution, range(a, b + 1)))\n\nprint(sum_solutions(-10, 10))"
  },
  {
    "example_id": 365,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "-5.0",
      "14.0",
      "5.0",
      "5.0",
      "10.0",
      "5.0",
      "5.0",
      "-5.0",
      "14.0",
      "5.0",
      "10.0",
      "5.0",
      "5.0",
      "5.0",
      "14.0",
      "5.0",
      "10.0",
      "5.0",
      "5.0",
      "5.0",
      "14.0",
      "5.0",
      "10.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "from sympy import solve, Symbol\n\nx = Symbol('x')\nsolutions = solve(5*x**4 - 10*x**3 + 10*x**2 - 5*x - 11, x)\nprint(sum(solutions))"
  },
  {
    "example_id": 366,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.155443620884047",
      "69"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "a = 14\nn = 2\nwhile n < 100:\n    a = 24 - 5 * a\n    n += 1\nprint(a)"
  },
  {
    "example_id": 367,
    "selected_solution_index": 11,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "64.0"
    ],
    "solution": "n = int((144 + 216**0.5) / 96)\nprint(n)"
  },
  {
    "example_id": 368,
    "selected_solution_index": 12,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "6.0",
      "5.0",
      "1.0",
      "3.0",
      "10.0",
      "12.0",
      "5.0",
      "1.0",
      "6.0",
      "5.0",
      "2.0",
      "-1.0",
      "12.0",
      "10.0",
      "2.0",
      "1.0",
      "3.0",
      "10.0",
      "2.0",
      "12.0",
      "5.0",
      "1.0",
      "6.0",
      "5.0",
      "2.0",
      "-1.0",
      "12.0",
      "10.0",
      "2.0",
      "1.0",
      "3.0",
      "10.0",
      "2.0"
    ],
    "annotated_answers": [
      "406.0"
    ],
    "solution": "from sympy import solve, Poly, Symbol\n\nx = Symbol('x')\np = Poly(x**2 - 2*x + 2, x)\nq = Poly(2*x**2 - 4*x + 3, x)\n\np = p.as_expr()\nq = q.as_expr()\n\np_roots = solve(p - 181, x)\nq_roots = solve(q - 181, x)\n\np_root = p_roots[0]\nq_root = q_roots[0]\n\nprint(p_root)\nprint(q_root)\n\np_value = p.subs(x, p_root)\nq_value = q.subs(x, q_root)\n\nprint(p_value)\nprint(q_value)\n\np_value = p_value.as_expr()\nq_value = q_value.as_expr()\n\nprint(p_value)\nprint(q_value)"
  },
  {
    "example_id": 369,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "4.0",
      "4.0",
      "3.0",
      "6.0",
      "2.0",
      "12.0",
      "8.0",
      "4.0",
      "8.0",
      "3.0",
      "24.0",
      "2.0",
      "32.0",
      "16.0",
      "5.0",
      "4.0",
      "8.0",
      "3.0",
      "2.0",
      "2.0",
      "4.0",
      "7.0",
      "4.0",
      "8.0",
      "3.0",
      "24.0",
      "2.0",
      "32.0",
      "16.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "from sympy import *\n\nx = Symbol('x')\n\nexpression = (5*x**4 - 8*x**3 + 2*x**2 + 4*x + 7) / ((x + 2)**4)\n\na, b, c, d, e = symbols('a b c d e')\n\nexpr_list = [expression - a - b/(x + 2) - c/((x + 2)**2) - d/((x + 2)**3) - e/((x + 2)**4)]\n\nsolution = solve(expr_list, [a, b, c, d, e])\n\nprint(solution)"
  },
  {
    "example_id": 370,
    "selected_solution_index": 12,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "def f(x):\n    return -(x**2 + (1 - x)**2) + 2 * x\n\nfor x in range(-100, 100):\n    fx = f(x)\n    if fx == 0:\n        print(x)\n\nalpha = 1\nbeta = 1\nprint(alpha**2 + beta**2)"
  },
  {
    "example_id": 371,
    "selected_solution_index": 11,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "a = -1\nb = -1\nc = 1\nprint((a * b - c) * (a * c - b) * (b * c - a))"
  },
  {
    "example_id": 372,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "576.0"
    ],
    "solution": "x = 16\nwhile x > 0:\n    x = x / 2\nprint(x)"
  },
  {
    "example_id": 373,
    "selected_solution_index": 14,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "44.0"
    ],
    "solution": "a = 1\nb = 1\nc = 1\nwhile True:\n    if (a + b) % c == 0:\n        break\n    a += 1\n    b += 1\n    c += 1\nprint(a + b + c)"
  },
  {
    "example_id": 374,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3968.0"
    ],
    "annotated_answers": [
      "3968.0"
    ],
    "solution": "def f(x):\n    if x**0.5 == int(x**0.5):\n        return x**0.5\n    else:\n        return (f(x-1))**2 - 1\n\nprint(f(8))"
  },
  {
    "example_id": 375,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "13.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "from sympy import solve, Symbol\nx = Symbol('x', positive=True)\nresult = solve(4*x**3 - 41*x**2 + 10*x - 1989, x)\nprint(result)"
  },
  {
    "example_id": 376,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "181.0"
    ],
    "solution": "a = [1, 1, 1, 1]\nfor n in range(3, 1332):\n    a.append(2 * a[-2] - 2 * a[-3] + a[-4])\nprint(a[1331])"
  },
  {
    "example_id": 377,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.850868183078896"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "import math\n\nx = [1 / math.sqrt(101)] * 101\nx[0] = 0\nx = sorted(x)\n\nmax_value = sum(x[:100])\nprint(max_value)"
  },
  {
    "example_id": 378,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "count = 0\nfor n in range(1, 1000):\n    if 3*n**3 - 12*n == 0:\n        count += 1\nprint(count)"
  },
  {
    "example_id": 379,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "18.0",
      "242.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "z = 9 + 1j\nz2 = z**2\nz3 = z**3\nprint(z2.imag)\nprint(z3.imag)"
  },
  {
    "example_id": 380,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "36.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "z1 = 1j\nz2 = 2j\nz3 = 3j\nexpression = abs(9 * z1 * z2 + 4 * z1 * z3 + z2 * z3)\nprint(expression)"
  },
  {
    "example_id": 381,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "from math import log10\nx = 100\nexpression = 2 * log10(x) - log10(1 / x)\nprint(expression)"
  },
  {
    "example_id": 382,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "5.0",
      "4.0",
      "10.0",
      "3.0",
      "10.0",
      "2.0",
      "5.0",
      "9.0",
      "-9.0",
      "12.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "from sympy import Symbol, expand, factor\nx = Symbol('x', real=True)\nf = x**5 + 5*x**4 + 10*x**3 + 10*x**2 - 5*x + 1 - 10\nprint(expand(factor(f)))\nprint(expand(factor(f)).subs(x, 0))\nprint(expand(factor(f)).subs(x, 1))"
  },
  {
    "example_id": 383,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "from math import sqrt\n\ndef f(x):\n    return (2*x-6)/(x**3 - 7*x**2 - 2*x + 6)\n\ndef crosses_horizontal_asymptote(f, x):\n    return f(x) == 0 and (f(x - 1) > 0 and f(x + 1) < 0)\n\nfor x in range(1, 100):\n    if crosses_horizontal_asymptote(f, x):\n        print(x)\n        break"
  },
  {
    "example_id": 384,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "1.0",
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "k_values = [0, 1, 2, 3]\nprint(k_values)"
  },
  {
    "example_id": 385,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "import itertools\n\ndef solve_system(x, y, z):\n    a, b, c = x, y, z\n    if a + 2*b + 4*c == 12 and a*b + 2*a*c + 4*b*c == 22 and a*b*c == 6:\n        return True\n    return False\n\ncount = 0\nfor x, y, z in itertools.product(range(-100, 101), repeat=3):\n    if solve_system(x, y, z):\n        count += 1\nprint(count)"
  },
  {
    "example_id": 386,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "90.0",
      "6.0",
      "4.0",
      "2.0",
      "8.0",
      "-2.0",
      "-4.0",
      "-6.0",
      "-90.0",
      "180.0",
      "96.0",
      "94.0",
      "92.0",
      "8.0",
      "90.0",
      "88.0",
      "86.0",
      "84.0",
      "1.0",
      "90.0"
    ],
    "annotated_answers": [
      "90.0"
    ],
    "solution": "from sympy import Symbol, expand, factor\nz = Symbol('z')\nexpression = expand((z + 1/z)**2 + (z**2 + 1/z**2)**2 + (z**3 + 1/z**3)**2 + (z**45 + 1/z**45)**2)\nprint(expression)\nprint(factor(expression))"
  },
  {
    "example_id": 387,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "from math import gcd\n\na = [2, 66]\n\nfor n in range(1, 100):\n    a.append(int(gcd(a[-1], a[-2]) / 2))\n    if a[-1] == 0:\n        print(a[-2])\n        break"
  },
  {
    "example_id": 388,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-19.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "a = 2\nb = -21\nprint(a + b)"
  },
  {
    "example_id": 389,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "import math\n\na = 16\nb = 8\nc = 0\nresult = math.sqrt(c * (b - c)) + math.sqrt(c * (a - c))\nprint(result)"
  },
  {
    "example_id": 390,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "46.83281572999748"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "from math import sqrt\n\nell = (0, 0) + 7 * (1, 0) + 49 * (0, 1)\nF1 = (4, 0)\nF2 = (-4, 0)\nP = (0, 3)\nQ = (P[0] - 5 * (F2[0] - P[0]), P[1] + 5 * (F2[1] - P[1]))\n\ndef distance(p1, p2):\n    return sqrt((p1[0] - p2[0])**2 + (p1[1] - p2[1])**2)\n\nprint(distance(Q, F1) + distance(Q, F2))"
  },
  {
    "example_id": 391,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-59.0",
      "3097.0",
      "144.0",
      "906594.0",
      "36.0",
      "178307.0",
      "1728.0",
      "1.0",
      "3.0",
      "59.0",
      "12.0",
      "906594.0",
      "36.0",
      "178307.0",
      "1728.0",
      "1.0",
      "3.0",
      "2.0",
      "4.0",
      "3097.0",
      "144.0",
      "906594.0",
      "36.0",
      "178307.0",
      "1728.0",
      "1.0",
      "3.0",
      "59.0",
      "12.0",
      "906594.0",
      "36.0",
      "178307.0",
      "1728.0",
      "1.0",
      "3.0",
      "3.0",
      "59.0",
      "59.0",
      "12.0",
      "3097.0",
      "144.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "906594.0",
      "36.0",
      "178307.0",
      "1728.0",
      "1.0",
      "3.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "906594.0",
      "36.0",
      "178307.0",
      "1728.0",
      "1.0",
      "3.0",
      "2.0",
      "4.0",
      "59.0",
      "12.0",
      "3097.0",
      "144.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "906594.0",
      "36.0",
      "178307.0",
      "1728.0",
      "1.0",
      "3.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "906594.0",
      "36.0",
      "178307.0",
      "1728.0",
      "1.0",
      "3.0",
      "3.0",
      "4.0",
      "59.0",
      "12.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "906594.0",
      "36.0",
      "178307.0",
      "1728.0",
      "1.0",
      "3.0",
      "3097.0",
      "144.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "906594.0",
      "36.0",
      "178307.0",
      "1728.0",
      "1.0",
      "3.0",
      "3.0",
      "59.0",
      "59.0",
      "12.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "906594.0",
      "36.0",
      "178307.0",
      "1728.0",
      "1.0",
      "3.0",
      "3097.0",
      "144.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "906594.0",
      "36.0",
      "178307.0",
      "1728.0",
      "1.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "-376.0"
    ],
    "solution": "from sympy import Symbol, solve\nx = Symbol('x')\nroots = solve(4*x**3 - 59*x**2 + 32*x - 32, x)\nf = lambda x: 4*x**3 - 59*x**2\nprint(f(roots[0]) + f(roots[1]) + f(roots[2]))"
  },
  {
    "example_id": 392,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "31.0",
      "1.0"
    ],
    "annotated_answers": [
      "1024.0"
    ],
    "solution": "from math import gcd\n\nfor b in range(1, 10000):\n    a = int((31 * b) / gcd(31, b))\n    if a > 0:\n        print(a, b)\n        break"
  },
  {
    "example_id": 393,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5000.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "count = 0\nfor x in range(10000):\n    if (x**2 + 1) % 2 == 0 and (x**2 - 1) % 2 == 0:\n        count += 1\nprint(count)"
  },
  {
    "example_id": 394,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "47.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x = 3\ny = 4\nz = 5\nexpression = x * y + x * z + y * z\nprint(expression)"
  },
  {
    "example_id": 395,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "163.0"
    ],
    "solution": "count = 0\nfor a in range(-100, 101):\n    for b in range(-100, 101):\n        if (a**2 + b) * (a**2 - 2*b) == 2010:\n            count += 1\nprint(count)"
  },
  {
    "example_id": 396,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "375.0",
      "3.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "import sympy as sp\n\na, b = sp.symbols(\"a b\")\nexpression = 3 * a**3 * sp.sqrt(3) + 2 / (a * b - 2 * b**2)\nprint(expression.subs({a: 5, b: 1}))"
  },
  {
    "example_id": 397,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "5.0",
      "2.0",
      "14.0",
      "5.0",
      "5.0",
      "2.0",
      "14.0",
      "5.0",
      "5.0",
      "4.0",
      "5.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "import sympy as sy\n\nx, y = sy.symbols('x y')\n\nf1 = 4 * x**2 - 8 * x + y**2 + 4 * y - 8\nf2 = x**2 - y**2\n\nd = sy.solve(f1 + f2, x)\nprint(d)"
  },
  {
    "example_id": 398,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6039063.0"
    ],
    "annotated_answers": [
      "27.0"
    ],
    "solution": "from math import ceil\n\n\ndef find_min_abs_sum(n):\n    prev = 0\n    abs_sum = 0\n    for k in range(1, n + 1):\n        prev = abs(prev + 3)\n        abs_sum += prev\n    return abs_sum\n\n\nprint(find_min_abs_sum(2006))"
  },
  {
    "example_id": 399,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-49495.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "p = 5\nfor x in range(1, 100):\n    p -= 10 * x\n    if p % 2 == 0:\n        p //= 2\n        if p % 2 == 0:\n            p //= 2\n            if p % 2 == 0:\n                p //= 2\n                if p % 2 == 0:\n                    p //= 2\n                    break\nprint(p)"
  },
  {
    "example_id": 400,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = 1\ny = 1\nz = 1\nexpression = (x*y + z) * (x*z + y)\nprint(expression)"
  },
  {
    "example_id": 401,
    "selected_solution_index": 0,
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "from sympy import *\n\nalpha, beta, gamma, delta = roots(x**4 + k*x**2 + 90*x - 2009)\n\nif alpha * beta == 49:\n    print(k)"
  },
  {
    "example_id": 402,
    "selected_solution_index": 10,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1000.0"
    ],
    "annotated_answers": [
      "501.0"
    ],
    "solution": "import numpy as np\n\ncount = 0\nfor k in np.arange(-500, 500):\n    if np.isreal(np.log(k * np.exp(2 * np.log(np.exp(2))))):\n        count += 1\nprint(count)"
  },
  {
    "example_id": 403,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "from math import log, exp\n\ndef f(x):\n    return (x**3 - x**2 + x) / (6*x**2 - 9*x)\n\ndef count_asymptotes(f, a, b, c, d):\n    count = 0\n    for x in range(1, 100):\n        if abs(f(x)) < 1e-10:\n            count += 1\n    return count\n\ndef count_holes(f, a):\n    count = 0\n    for x in range(1, 100):\n        if f(x) < 0:\n            count += 1\n    return count\n\na = count_asymptotes(f, 0, 1, 1, 0)\nb = count_asymptotes(f, 1, 0, 0, 1)\nc = count_asymptotes(f, 0, 0, 1, 0)\nd = count_asymptotes(f, 0, 0, 0, 1)\nprint(a+2*b+3*c+4*d)"
  },
  {
    "example_id": 404,
    "selected_solution_index": 11,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "4.0",
      "6.0",
      "12.0",
      "2.0",
      "12.0",
      "8.0",
      "27.0",
      "2.0",
      "24.0"
    ],
    "annotated_answers": [
      "-14.0"
    ],
    "solution": "from sympy import Min, Symbol\nx, y, z = Symbol('x'), Symbol('y'), Symbol('z')\nexpression = 3*x**2 + 12*y**2 + 27*z**2 - 4*x*y - 6*x*z - 12*y*z - 8*y - 24*z\nprint(Min(expression))"
  },
  {
    "example_id": 405,
    "selected_solution_index": 0,
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "from sympy import degree\nf = x**9 + x**8 + x**7 + x**6 + x**5 + x**4 + x**3 + x**2 + x + 1\nd = x**3 + x**2 + x + 1\nq, r = f.div(d)\nprint(degree(q))"
  },
  {
    "example_id": 406,
    "selected_solution_index": 13,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a, b = 1, 2\ncount = 0\nfor x in range(3, 100):\n    if (x - a) / b + (x - b) / a == b / (x - a) + a / (x - b):\n        count += 1\nprint(count)"
  },
  {
    "example_id": 407,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "from sympy import Poly, roots\nfrom sympy.abc import x\n\npolynomial1 = Poly(x**4 + x**3 + x**2 + x + 1, x)\npolynomial2 = Poly(x**4 + 2*x**3 + 2*x**2 + 2*x + 1, x)\n\nroots1 = set(roots(polynomial1))\nroots2 = set(roots(polynomial2))\n\ncommon_roots = roots1 & roots2\n\na = sum(x**3 for x in common_roots)\nb = sum(x**2 for x in common_roots)\nc = sum(x for x in common_roots)\n\nprint(a + b + c)"
  },
  {
    "example_id": 408,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2001.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "from math import factorial\ndef number_of_roots(x):\n    count = 0\n    for i in range(1, 2002):\n        if x**i % 2 == 0:\n            count += 1\n    return count\nprint(number_of_roots(0))"
  },
  {
    "example_id": 409,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "count = 0\nfor a in range(-100, 100):\n    for b in range(-100, 100):\n        z = a + 1j * b\n        if z == 0:\n            continue\n        if abs(z) == 1:\n            count += 1\nprint(count)"
  },
  {
    "example_id": 410,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2101.0"
    ],
    "annotated_answers": [
      "2101.0"
    ],
    "solution": "x = 5\ny = 4\nexpression = x**4 + x**3 * y + x**2 * y**2 + x * y**3 + y**4\nprint(expression)"
  },
  {
    "example_id": 411,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "519.0"
    ],
    "annotated_answers": [
      "89.0"
    ],
    "solution": "a = 0\nb = 0\nc = 0\nd = 0\nexpression = a**2 + b**2 + c**2 + 519 - (d + 36 * (10 * a + 14 * b + 22 * c - d)**0.5)\nprint(expression)"
  },
  {
    "example_id": 412,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "count = 0\nfor a in range(1, 7):\n    for b in range(1, 7):\n        for c in range(1, 7):\n            for d in range(1, 7):\n                if a**4 + b**4 + c**4 + d**4 == 48 and a * b * c * d == 12:\n                    count += 1\nprint(count)"
  },
  {
    "example_id": 413,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "7.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "27.0",
      "6.0",
      "237.0",
      "1.0",
      "3.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "27.0",
      "6.0",
      "237.0",
      "1.0",
      "3.0",
      "3.0",
      "27.0",
      "6.0",
      "237.0",
      "1.0",
      "3.0",
      "3.0",
      "-7.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "27.0",
      "6.0",
      "237.0",
      "1.0",
      "3.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "27.0",
      "6.0",
      "237.0",
      "1.0",
      "3.0",
      "3.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "27.0",
      "6.0",
      "237.0",
      "1.0",
      "3.0",
      "3.0",
      "7.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "27.0",
      "6.0",
      "237.0",
      "1.0",
      "3.0",
      "-7.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "27.0",
      "6.0",
      "237.0",
      "1.0",
      "3.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "27.0",
      "6.0",
      "237.0",
      "1.0",
      "3.0",
      "3.0",
      "27.0",
      "6.0",
      "237.0",
      "1.0",
      "3.0",
      "3.0",
      "7.0",
      "27.0",
      "6.0",
      "237.0",
      "1.0",
      "3.0",
      "-7.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "27.0",
      "6.0",
      "237.0",
      "1.0",
      "3.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "27.0",
      "6.0",
      "237.0",
      "1.0",
      "3.0",
      "3.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "27.0",
      "6.0",
      "237.0",
      "1.0",
      "3.0",
      "3.0",
      "7.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "27.0",
      "6.0",
      "237.0",
      "1.0",
      "3.0",
      "27.0",
      "6.0",
      "237.0",
      "1.0",
      "3.0",
      "3.0",
      "7.0",
      "27.0",
      "6.0",
      "237.0",
      "1.0",
      "3.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "27.0",
      "6.0",
      "237.0",
      "1.0",
      "3.0",
      "3.0",
      "7.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "27.0",
      "6.0",
      "237.0",
      "1.0",
      "3.0",
      "27.0",
      "6.0",
      "237.0",
      "1.0",
      "3.0",
      "3.0",
      "7.0",
      "27.0",
      "6.0",
      "237.0",
      "1.0",
      "3.0",
      "7.0",
      "27.0",
      "6.0",
      "237.0",
      "1.0",
      "3.0",
      "7.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "27.0",
      "6.0",
      "237.0",
      "1.0",
      "3.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "27.0",
      "6.0",
      "237.0",
      "1.0",
      "3.0",
      "3.0"
    ],
    "annotated_answers": [
      "-8.0"
    ],
    "solution": "from sympy import solve, Symbol\na, b, c = solve(Symbol('x')**3 - 7*Symbol('x') + 2, Symbol('x'))\nprint(a*b*c + a*b + a*c + b*c + a + b + c + 1)"
  },
  {
    "example_id": 414,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "331.0"
    ],
    "solution": "f = [1, 1986]\nfor i in range(1, 1986):\n    f.append((-1)**(i+1) * i - 2 * f[i])\nprint(sum(f))"
  },
  {
    "example_id": 415,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "2.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0",
      "1.0",
      "1.0",
      "2.0",
      "2.0",
      "1.0",
      "-3.0",
      "2.0"
    ],
    "annotated_answers": [
      "-99.0"
    ],
    "solution": "from sympy import *\nx = Symbol('x')\nexpression = (x**6 + x + 1) / (x**2 - 2*x - 1)\nprint(expression.expand())\nprint(expression.subs(x, 1).expand())"
  },
  {
    "example_id": 416,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "70.0"
    ],
    "annotated_answers": [
      "1999.0"
    ],
    "solution": "n = 3\nsum = 0\nwhile sum <= 10000:\n    n += 1\n    for i in range(n-2):\n        sum += int(str(n-i-2)[-1])\nprint(n)"
  },
  {
    "example_id": 417,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "a = 0.5\nb = 0.25\nprint(2/a + 1/b)"
  },
  {
    "example_id": 418,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "5.0",
      "2.0",
      "2.0",
      "3.0",
      "2.0",
      "5.0",
      "2.0",
      "2.0",
      "2.0",
      "3.0",
      "8.0",
      "7.0",
      "7.0",
      "7.0",
      "6.0",
      "6.0",
      "6.0",
      "5.0",
      "8.0",
      "7.0",
      "7.0",
      "7.0",
      "6.0",
      "6.0",
      "6.0",
      "5.0"
    ],
    "annotated_answers": [
      "-7.0"
    ],
    "solution": "from sympy import *\na, b, c, d, e = symbols('a b c d e')\nexpression = (a**5 / (a - b)*(a - c)*(a - d)*(a - e) +\n              b**5 / (b - a)*(b - c)*(b - d)*(b - e) +\n              c**5 / (c - a)*(c - b)*(c - d)*(c - e) +\n              d**5 / (d - a)*(d - b)*(d - c)*(d - e) +\n              e**5 / (e - a)*(e - b)*(e - c)*(e - d))\nprint(expression.expand().simplify())"
  },
  {
    "example_id": 419,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "expression = abs((2 - 4j) / (2 + 1j))\nprint(expression)"
  },
  {
    "example_id": 420,
    "selected_solution_index": 12,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = 1\ny = 1\nwhile x**2 * y + x * y**2 < x**2 + y**2:\n    x += 1\n    y += 1\nprint(x**2 + y**2)"
  },
  {
    "example_id": 421,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "import math\n\ndef f(x):\n    return (x + x**2) / x**3\n\na = 1\nb = 1\nc = 1\n\nprint(f(a))\nprint(f(b))\nprint(f(c))"
  },
  {
    "example_id": 422,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "101.0"
    ],
    "annotated_answers": [
      "101.0"
    ],
    "solution": "for x in range(1, 100000000):\n    if (100000000 // x**4) < 1:\n        print(x)\n        break"
  },
  {
    "example_id": 423,
    "selected_solution_index": 12,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "15.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "p = 1.5\nf = lambda x: abs(x-p) + abs(x-15) + abs(x-p-15)\nprint(min(f(x) for x in range(int(p), 15+1)))"
  },
  {
    "example_id": 424,
    "selected_solution_index": 10,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "258.0"
    ],
    "annotated_answers": [
      "111.0"
    ],
    "solution": "from math import log\na = 1\nb = 6\nc = b * 6\nwhile log(a, 6) + log(b, 6) + log(c, 6) < 6:\n    a = b\n    b = c\n    c = b * 6\nprint(a + b + c)"
  },
  {
    "example_id": 425,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "386.0"
    ],
    "annotated_answers": [
      "24.0"
    ],
    "solution": "def p(x):\n    return x**4 + 4*x**3 - 11*x**2 + 12*x + 1\nprint(p(0) + p(4))"
  },
  {
    "example_id": 426,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "import math\n\na = math.sqrt(\n    (11 - 3)**2 + (10 - 10 + math.sqrt(105))**2\n    - (3 - 3)**2 - (10 - 10 - math.sqrt(105))**2\n)\n\nprint(a)"
  },
  {
    "example_id": 427,
    "selected_solution_index": 11,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "count = 0\nfor a in range(1, 101):\n    for b in range(1, 101):\n        for c in range(1, 101):\n            if a**3 + a**2 * b + a * c + b**2 * c + b * c**2 + c**3 == 0:\n                count += 1\nprint(count)"
  },
  {
    "example_id": 428,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "import sympy\nexpression = (5 * sympy.Symbol('x') + 9) ** 611 + (sympy.Symbol('x') + 5) ** 11 + (sympy.Symbol('x') - 1) ** 11 + 3 * sympy.Symbol('x') ** 2 + 1\nexpression = expression.subs(sympy.Symbol('x'), 2)\nprint(expression)"
  },
  {
    "example_id": 429,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "x = 1\ny = 1\nz = 1\nexpression = x**4 + 4*y**2 + 4*z**4\nwhile x + y + z < 2:\n    x += 1\n    y += 1\n    z += 1\n    expression = x**4 + 4*y**2 + 4*z**4\nprint(expression)"
  },
  {
    "example_id": 430,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "8.0",
      "7.0",
      "2.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "import sympy as sp\nx, y = sp.symbols('x, y')\nexpr = sp.sqrt(x**2 + 8*x*y + 7*y**2)\nprint(expr)"
  },
  {
    "example_id": 431,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "P1 = (10, 2)\nP2 = (-16, 2)\ndistance = 24\na = abs(P1[0] - P2[0])\nb = abs(P1[1] - P2[1])\nh = (P1[0] + P2[0])/2\nk = (P1[1] + P2[1])/2\nprint(h + k + a + b)"
  },
  {
    "example_id": 432,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-490.9333580064184"
    ],
    "annotated_answers": [
      "962.0"
    ],
    "solution": "from sympy import *\nk = -581 + 52 * 3**(1/2)\nprint(k)"
  },
  {
    "example_id": 433,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-0.9083269131959839"
    ],
    "annotated_answers": [
      "-9.0"
    ],
    "solution": "f = lambda x: (2*x+9)/(x-7)\nx = 1\nwhile f(f(x))!= x:\n    x = f(f(x))\nprint(x)"
  },
  {
    "example_id": 434,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "25.0"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "z = 5j\nprint(abs(z.conjugate()**2))"
  },
  {
    "example_id": 435,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "c = 0\nfor i in range(1000):\n    x = c * (2 * i + 3) / (2 * i + 3)\n    if x == i:\n        c = i\n        break\nprint(c)"
  },
  {
    "example_id": 436,
    "selected_solution_index": 13,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "79.0"
    ],
    "solution": "a = 1\nb = 2\nc = 3\nexpression = a + b + c\nprint(expression)"
  },
  {
    "example_id": 437,
    "selected_solution_index": 12,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0",
      "2.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "from sympy import Symbol\nx = Symbol('x')\nexpression = (7*x-2)/(x**2-4)\nprint(expression.as_numer_denom()[0].expand())"
  },
  {
    "example_id": 438,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.6573778862443995"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "fib = [0, 1]\nfor i in range(1, 100):\n    fib.append(fib[-1] + fib[-2])\n\nresult = 0\nfor i in range(1, len(fib)):\n    for j in range(i + 2, len(fib)):\n        result += 1 / fib[i] / fib[j]\nprint(result)"
  },
  {
    "example_id": 439,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7021.0"
    ],
    "annotated_answers": [
      "49.0"
    ],
    "solution": "x = 1\nexpression = sum(abs(i * x - 1) for i in range(1, 120))\nprint(expression)"
  },
  {
    "example_id": 440,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "32.0"
    ],
    "annotated_answers": [
      "90.0"
    ],
    "solution": "x = 32\nprint(x)"
  },
  {
    "example_id": 441,
    "selected_solution_index": 11,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "1.0000000004941967",
      "5.0",
      "-1.0",
      "3.333",
      "-1.0",
      "1.667",
      "-1.0",
      "7.0",
      "2.0",
      "0.0",
      "2.0",
      "0.0",
      "2.0",
      "0.0",
      "29.0",
      "7.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "from scipy.optimize import minimize\n\n\ndef objective(x):\n    a, b, c = x\n    return 2 * a**2 + 3 * b**2 + 6 * c**2\n\n\ndef constraint(x):\n    a, b, c = x\n    return a + b + c - 1\n\n\nresult = minimize(objective, [0.5, 0.5, 0.5], method='SLSQP', constraints=[{'type': 'eq', 'fun': constraint}])\nprint(result)"
  },
  {
    "example_id": 442,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "-6.0"
    ],
    "solution": "from sympy import *\nx = Symbol('x')\np, q, r = symbols('p q r')\neq1 = x**3 + 5*x**2 + p*x + q\neq2 = x**3 + x**2 + p*x + r\ncommon = solve(eq1 - eq2, x)\nprint(common[0] + common[1])"
  },
  {
    "example_id": 443,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "34.0"
    ],
    "annotated_answers": [
      "34.0"
    ],
    "solution": "from sympy import Symbol, solve\n\nx = Symbol('x')\nf = x**3 - 49 * x**2 + 623 * x - 2015\ng = f.subs(x, x + 5)\nroots = solve(g, x)\nprint(sum(roots))"
  },
  {
    "example_id": 444,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "4.0",
      "10.0"
    ],
    "annotated_answers": [
      "27648.0"
    ],
    "solution": "from sympy import Max\nfrom sympy.abc import a, b, c, d\n\nexpression = a * b**2 * c**3 * d**4\nconstraint = a + b + c + d - 10\nmaximum = Max(expression, constraint)\nprint(maximum)"
  },
  {
    "example_id": 445,
    "selected_solution_index": 0,
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "from sympy import PolynomialRing\nfrom sympy import sqrt\nfrom sympy import gcd\n\nring = PolynomialRing(QQ, 'x')\nx = ring.gen()\nf = x**4 - (1 - sqrt(2))*x**3 + (3 + sqrt(7))*x**2 - (1 + sqrt(2))*x + 5\ng = gcd(f, f.diff())\nprint(g)"
  },
  {
    "example_id": 446,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "588.0"
    ],
    "annotated_answers": [
      "516.0"
    ],
    "solution": "expression = 0\nfor i in range(1, 50):\n    expression += (751 - 745) + (748 - 742)\nprint(expression)"
  },
  {
    "example_id": 447,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-0.96"
    ],
    "annotated_answers": [
      "0.63"
    ],
    "solution": "log36 = 1.63\nlog94 = log36 / (log36 - 1) * (log36 - 2)\nprint(round(log94, 2))"
  },
  {
    "example_id": 448,
    "selected_solution_index": 10,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "5.0",
      "4.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "189.0",
      "8.0",
      "3.0",
      "1086.0",
      "4.0",
      "1.0",
      "3.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "189.0",
      "8.0",
      "3.0",
      "1086.0",
      "4.0",
      "1.0",
      "3.0",
      "3.0",
      "-1.0",
      "2.0",
      "5.0",
      "4.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "189.0",
      "8.0",
      "3.0",
      "1086.0",
      "4.0",
      "1.0",
      "3.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "189.0",
      "8.0",
      "3.0",
      "1086.0",
      "4.0",
      "1.0",
      "3.0",
      "3.0",
      "-1.0",
      "2.0",
      "5.0",
      "4.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "189.0",
      "8.0",
      "3.0",
      "1086.0",
      "4.0",
      "1.0",
      "3.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "189.0",
      "8.0",
      "3.0",
      "1086.0",
      "4.0",
      "1.0",
      "3.0",
      "3.0",
      "-1.0",
      "2.0",
      "5.0",
      "4.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "189.0",
      "8.0",
      "3.0",
      "1086.0",
      "4.0",
      "1.0",
      "3.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "189.0",
      "8.0",
      "3.0",
      "1086.0",
      "4.0",
      "1.0",
      "3.0",
      "3.0",
      "-1.0",
      "2.0",
      "5.0",
      "4.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "189.0",
      "8.0",
      "3.0",
      "1086.0",
      "4.0",
      "1.0",
      "3.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "189.0",
      "8.0",
      "3.0",
      "1086.0",
      "4.0",
      "1.0",
      "3.0",
      "3.0",
      "-1.0",
      "2.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "189.0",
      "8.0",
      "3.0",
      "1086.0",
      "4.0",
      "1.0",
      "3.0",
      "3.0",
      "5.0",
      "4.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "189.0",
      "8.0",
      "3.0",
      "1086.0",
      "4.0",
      "1.0",
      "3.0",
      "-1.0",
      "2.0",
      "5.0",
      "4.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "189.0",
      "8.0",
      "3.0",
      "1086.0",
      "4.0",
      "1.0",
      "3.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "189.0",
      "8.0",
      "3.0",
      "1086.0",
      "4.0",
      "1.0",
      "3.0",
      "3.0",
      "-1.0",
      "2.0",
      "5.0",
      "4.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "189.0",
      "8.0",
      "3.0",
      "1086.0",
      "4.0",
      "1.0",
      "3.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "189.0",
      "8.0",
      "3.0",
      "1086.0",
      "4.0",
      "1.0",
      "3.0",
      "3.0",
      "189.0",
      "8.0",
      "3.0",
      "1086.0",
      "4.0",
      "1.0",
      "3.0",
      "3.0",
      "1.0",
      "2.0",
      "5.0",
      "4.0",
      "189.0",
      "8.0",
      "3.0",
      "1086.0",
      "4.0",
      "1.0",
      "3.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "from sympy import Symbol, solve\n\na, b, c = Symbol('a'), Symbol('b'), Symbol('c')\nroots = solve([2*a**3 + 3*a**2 + 4*a + 5, 2*b**3 + 3*b**2 + 4*b + 5, 2*c**3 + 3*c**2 + 4*c + 5], [a, b, c])\nprint(roots[0] + roots[1] + roots[2])"
  },
  {
    "example_id": 449,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "64.0",
      "7.0",
      "6.0",
      "7.0",
      "-7.0",
      "1.0",
      "7.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "7.0",
      "2.0",
      "-7.0",
      "1.0",
      "7.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "7.0",
      "2.0",
      "7.0",
      "1.0",
      "7.0",
      "2.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "2.0",
      "7.0",
      "2.0",
      "7.0",
      "1.0",
      "7.0",
      "2.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "2.0",
      "7.0",
      "2.0",
      "-7.0",
      "1.0",
      "7.0",
      "3.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "3.0",
      "7.0",
      "2.0",
      "-7.0",
      "1.0",
      "7.0",
      "3.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "3.0",
      "7.0",
      "2.0",
      "-7.0",
      "1.0",
      "7.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "2.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "2.0",
      "7.0",
      "2.0",
      "-7.0",
      "1.0",
      "7.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "2.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "2.0",
      "7.0",
      "2.0",
      "-7.0",
      "1.0",
      "7.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "2.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "2.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "7.0",
      "2.0",
      "-7.0",
      "1.0",
      "7.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "2.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "2.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "7.0",
      "2.0",
      "-7.0",
      "1.0",
      "7.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "3.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "3.0",
      "7.0",
      "2.0",
      "-7.0",
      "1.0",
      "7.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "3.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "3.0",
      "7.0",
      "2.0",
      "-7.0",
      "1.0",
      "7.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "3.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "3.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "7.0",
      "2.0",
      "-7.0",
      "1.0",
      "7.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "3.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "3.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "7.0",
      "2.0",
      "-7.0",
      "1.0",
      "7.0",
      "3.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "2.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "2.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "3.0",
      "7.0",
      "2.0",
      "-7.0",
      "1.0",
      "7.0",
      "3.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "2.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "2.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "3.0",
      "7.0",
      "2.0",
      "-7.0",
      "1.0",
      "7.0",
      "3.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "2.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "3.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "2.0",
      "7.0",
      "2.0",
      "-7.0",
      "1.0",
      "7.0",
      "3.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "2.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "3.0",
      "7.0",
      "7.0",
      "1.0",
      "7.0",
      "2.0",
      "7.0",
      "2.0",
      "7.0",
      "2.0",
      "2.0",
      "7.0",
      "2.0",
      "3.0",
      "7.0",
      "2.0"
    ],
    "annotated_answers": [
      "117649.0"
    ],
    "solution": "from sympy import Symbol, Poly, factorial\n\nr = Symbol('r')\nroots = Poly(r**7 - 7).all_roots()\nK = 1\nfor i in range(len(roots)):\n    for j in range(i + 1, len(roots)):\n        K *= roots[i] + roots[j]\n\nprint(K**2)"
  },
  {
    "example_id": 450,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "827.9999999999999"
    ],
    "annotated_answers": [
      "828.0"
    ],
    "solution": "expression = (52 + 6 * 43**(1/2))**(3/2) - (52 - 6 * 43**(1/2))**(3/2)\nprint(expression)"
  },
  {
    "example_id": 451,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1239.0"
    ],
    "annotated_answers": [
      "198.0"
    ],
    "solution": "a = 99\nfor i in range(19):\n    a = a + sum(a_i for a_i in range(i+1))\nprint(a)"
  },
  {
    "example_id": 452,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "count = 0\nfor x in range(-100, 101):\n    for y in range(-100, 101):\n        for z in range(-100, 101):\n            if x + y - z == 0 and x*z - x*y + y*z == 27 and x*y*z == 54:\n                count += 1\nprint(count)"
  },
  {
    "example_id": 453,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-7.0",
      "82.0",
      "3.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "1325.0",
      "2.0",
      "3.0",
      "49983.0",
      "2.0",
      "1.0",
      "3.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "1325.0",
      "2.0",
      "3.0",
      "49983.0",
      "2.0",
      "1.0",
      "3.0",
      "3.0",
      "1325.0",
      "2.0",
      "3.0",
      "49983.0",
      "2.0",
      "1.0",
      "3.0",
      "3.0",
      "82.0",
      "3.0",
      "1325.0",
      "2.0",
      "3.0",
      "49983.0",
      "2.0",
      "1.0",
      "3.0",
      "82.0",
      "3.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "1325.0",
      "2.0",
      "3.0",
      "49983.0",
      "2.0",
      "1.0",
      "3.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "1325.0",
      "2.0",
      "3.0",
      "49983.0",
      "2.0",
      "1.0",
      "3.0",
      "3.0"
    ],
    "annotated_answers": [
      "-7.0"
    ],
    "solution": "from sympy import Symbol, solve\nx = Symbol('x')\nroots = solve(x**3 + 7*x**2 - 11*x - 2, x)\na, b, c = roots\nprint(a + b + c)"
  },
  {
    "example_id": 454,
    "selected_solution_index": 10,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7465.0"
    ],
    "annotated_answers": [
      "229.0"
    ],
    "solution": "# brute force\ndef p(x):\n    return sum([a * x**i for i, a in enumerate(range(1, 6))])\nprint(p(6))"
  },
  {
    "example_id": 455,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "656.0"
    ],
    "annotated_answers": [
      "697.0"
    ],
    "solution": "n = 4 * (164)\nprint(n)"
  },
  {
    "example_id": 456,
    "selected_solution_index": 12,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "500.0"
    ],
    "solution": "a = 25\nb = 5\nexpression = a - 5 * b\nprint(expression)"
  },
  {
    "example_id": 457,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "20.415558877709366"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "from math import sqrt\nsum = 0\nfor n in range(1, 10000):\n    sum += 1 / (sqrt(n) + sqrt(n + 1)) / (sqrt(n**0.25) + sqrt(n + 1)**0.25)\nprint(sum)"
  },
  {
    "example_id": 458,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "500.0"
    ],
    "solution": "from math import sqrt\nfrom sympy import roots\n\ndef is_real_root(x):\n    return x.is_real\n\ndef sum_of_roots(roots):\n    return sum(roots)\n\ndef get_roots(x):\n    return roots(x**2001 + (0.5 - x)**2001, multiple=False)\n\nroots = get_roots(0)\nreal_roots = filter(is_real_root, roots)\nprint(sum_of_roots(real_roots))"
  },
  {
    "example_id": 459,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "214.0"
    ],
    "solution": "import itertools\n\na = 0\nb = 0\nc = 0\nd = 0\n\nfor comb in itertools.combinations_with_replacement(range(1, 11), 4):\n    if (comb[0] + comb[1]) * (comb[2] + comb[3]) == 143 and (comb[0] + comb[2]) * (comb[1] + comb[3]) == 150 and (comb[0] + comb[3]) * (comb[1] + comb[2]) == 169:\n        a = comb[0]\n        b = comb[1]\n        c = comb[2]\n        d = comb[3]\n        break\n\nprint(a**2 + b**2 + c**2 + d**2)"
  },
  {
    "example_id": 460,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1004.0"
    ],
    "annotated_answers": [
      "1004.0"
    ],
    "solution": "expression = 0\nfor i in range(1, 2008):\n    if i % 2 == 0:\n        expression += i\n    else:\n        expression -= i\nprint(expression)"
  },
  {
    "example_id": 461,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "import math\n\ndef solve_for_x(log_n, log_m, c):\n    return (c - 7*log_n - 6*log_m) / (8*log_n*log_m)\n\ndef solve_for_c(log_n, log_m, x):\n    return (7*log_n + 6*log_m + 8*log_n*log_m*x) / x\n\ndef find_smallest_product(m, n):\n    log_n = math.log(n, 10)\n    log_m = math.log(m, 10)\n    x = solve_for_x(log_n, log_m, 2013)\n    c = solve_for_c(log_n, log_m, x)\n    return x*c\n\ndef main():\n    m = 3\n    n = 7\n    while True:\n        product = find_smallest_product(m, n)\n        if product == 2013:\n            print(m + n)\n            return\n        if product < 2013:\n            m += 1\n        else:\n            n += 1\n\nmain()"
  },
  {
    "example_id": 462,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "from sympy import sqrt\nx = sqrt((3/4) - sqrt(1/2)) - sqrt((3/4) + sqrt(1/2))\nprint(x)"
  },
  {
    "example_id": 463,
    "selected_solution_index": 10,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "S = [0, 10]\nn = 1\nwhile True:\n    new_S = []\n    for x in S:\n        for a in range(1, n+1):\n            y = x**n + a * x**(n-1) + x\n            if y in S:\n                new_S.append(y)\n    if len(new_S) == 0:\n        break\n    S = new_S\n    n += 1\nprint(n)"
  },
  {
    "example_id": 464,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1047552.0"
    ],
    "annotated_answers": [
      "1023.0"
    ],
    "solution": "d = 1024 * 2**10 - 1024\nprint(d)"
  },
  {
    "example_id": 465,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "13.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "from sympy import solve, Symbol\nx = Symbol('x')\nsol = solve((1/(x**2 - 10*x - 29) + 1/(x**2 - 10*x - 45) - 2/(x**2 - 10*x - 69)), x)\nprint(sol)"
  },
  {
    "example_id": 466,
    "selected_solution_index": 10,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "4022030.0"
    ],
    "solution": "def f(x):\n    if x < int(x) + 0.5:\n        return abs(int(x) - x + 0.5)\n    else:\n        return f(x - 1 / int(x))\n\n\ndef g(x):\n    return 2 ** (x - 2007)\n\n\ncount = 0\nfor x in range(1, 1000):\n    if f(x) == g(x):\n        count += 1\nprint(count)"
  },
  {
    "example_id": 467,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "269.00000000000006"
    ],
    "annotated_answers": [
      "269.0"
    ],
    "solution": "import math\nprint(abs(10-13j)*abs(10+13j))"
  },
  {
    "example_id": 468,
    "selected_solution_index": 11,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-12.0",
      "-12.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "sasha_location = 15 + 8j\nchloe_location = 3 - 4j\nprint(chloe_location - sasha_location)"
  },
  {
    "example_id": 469,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "480.0",
      "352.0",
      "3280.0"
    ],
    "annotated_answers": [
      "42.0"
    ],
    "solution": "def p(x):\n    return (x - 7)**2 * 22 + (x - 11)**2 * 30\nprint(p(7))\nprint(p(11))\nprint(p(17))"
  },
  {
    "example_id": 470,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x = 2011\nprint(x**x % 100)"
  },
  {
    "example_id": 471,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "6981.0",
      "2.0",
      "1323.0",
      "2.0",
      "1.0",
      "3.0",
      "3.0",
      "3.0",
      "25.0",
      "3.0",
      "6981.0",
      "2.0",
      "1323.0",
      "2.0",
      "1.0",
      "3.0",
      "-2.0",
      "-3.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "3.0",
      "6981.0",
      "2.0",
      "1323.0",
      "2.0",
      "1.0",
      "3.0",
      "3.0",
      "25.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "3.0",
      "6981.0",
      "2.0",
      "1323.0",
      "2.0",
      "1.0",
      "3.0",
      "-2.0",
      "-3.0",
      "25.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "3.0",
      "6981.0",
      "2.0",
      "1323.0",
      "2.0",
      "1.0",
      "3.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "3.0",
      "6981.0",
      "2.0",
      "1323.0",
      "2.0",
      "1.0",
      "3.0",
      "3.0",
      "-2.0"
    ],
    "annotated_answers": [
      "-14.0"
    ],
    "solution": "from sympy import symbols, solve\n\nr, s, t = symbols('r s t')\nroots = solve(r**3 + 9*r**2 + 2*r + 1, r)\nprint(sum([1/root**2 for root in roots]))"
  },
  {
    "example_id": 472,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "6.0",
      "1.0",
      "5.0",
      "1.0",
      "3.0",
      "1.0",
      "2.0",
      "1.0",
      "1.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "import sympy as sp\n\nz1, z2, z3, z4 = sp.symbols(\"z1 z2 z3 z4\")\nq = sp.Poly(z1**4 - z1**3 - z1**2 - 1, z1)\np = sp.Poly(z1**6 - z1**5 - z1**3 - z1**2 - 1, z1)\nprint(p.subs({z1: z1, z2: z2, z3: z3, z4: z4}))"
  },
  {
    "example_id": 473,
    "selected_solution_index": 13,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0",
      "2.0",
      "4.0",
      "1.0",
      "4.0",
      "5.0",
      "1.0",
      "3.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "import sympy as sy\n\na, b, c = sy.symbols('a b c')\nr1, r2, r3, r4 = sy.symbols('r1 r2 r3 r4')\n\nexpression = (4 * r1**4 - a * r1**3 + b * r1**2 - c * r1 + 5)\n\ncondition = (r1 / 2 + r2 / 4 + r3 / 5 + r4 / 8) - 1\n\nsol = sy.solve([expression, condition], [a, b, c])\n\nprint(sol)"
  },
  {
    "example_id": 474,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "70766.65791175954"
    ],
    "annotated_answers": [
      "-64.0"
    ],
    "solution": "from math import sqrt\n\ndef roots(x):\n    return sqrt(5 * abs(x) + 8), sqrt(x**2 - 16)\n\nproduct = 1\nfor root in roots(1000):\n    product *= root\nprint(product)"
  },
  {
    "example_id": 475,
    "selected_solution_index": 11,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "-5.0"
    ],
    "annotated_answers": [
      "-10879.0"
    ],
    "solution": "b1 = -1988 // 8891\nb2 = -8891 // 1988\nprint(b1, b2)"
  },
  {
    "example_id": 476,
    "selected_solution_index": 0,
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "count = 0\nfor a in range(1, 101):\n    for b in range(1, 101):\n        for c in range(1, 101):\n            for d in range(1, 101):\n                if a * log10(2) + b * log10(3) + c * log10(5) + d * log10(7) == 2005:\n                    count += 1\nprint(count)"
  },
  {
    "example_id": 477,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "import math\n\ntau = (1 + math.sqrt(5)) / 2\n\nn = 0\nsum = 0\nwhile True:\n    sum += 1 / tau**n\n    if sum == tau:\n        break\n    n += 1\n\nprint(n)"
  },
  {
    "example_id": 478,
    "selected_solution_index": 13,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "import sympy\nexpression = sympy.sympify('1/(x**3 - 3*x**2 + 3*x - 1)')\nprint(len(expression.free_symbols))"
  },
  {
    "example_id": 479,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "152.2185107203483"
    ],
    "annotated_answers": [
      "512.0"
    ],
    "solution": "a = 8**(5/4)\nb = 4**(7/4)\nprint(a*b)"
  },
  {
    "example_id": 480,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "22.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "import math\na = 1.0\nb = 2.0\nc = 3.0\nd = 4.0\nprint(math.floor(b + c + d / a) + math.floor(a + c + d / b) + math.floor(a + b + d / c) + math.floor(a + b + c / d))"
  },
  {
    "example_id": 481,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2016.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "n = 2017\nresult = 0\nfor i in range(n):\n    result += (i % 3)\nprint(result)"
  },
  {
    "example_id": 482,
    "selected_solution_index": 12,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "72.0"
    ],
    "annotated_answers": [
      "47.0"
    ],
    "solution": "x = 2\ny = 3\nprint(x**2 * y**2 + y**2 * x**2)"
  },
  {
    "example_id": 483,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "from sympy import Symbol, solve\nx = Symbol('x')\nroots = solve(2*x**4 - 8*x**3 + 7, x)\na, b, c, d = roots\nprint(a + b + c + d)"
  },
  {
    "example_id": 484,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "125.0"
    ],
    "annotated_answers": [
      "49896.0"
    ],
    "solution": "import math\n\n\ndef is_basic(x1, y1, x2, y2):\n    x_max = max(x1, x2)\n    x_min = min(x1, x2)\n    y_max = max(y1, y2)\n    y_min = min(y1, y2)\n    if x_min <= 0 <= x_max and y_min <= 0 <= y_max:\n        return True\n    return False\n\n\ndef find_basic(lines):\n    count = 0\n    for i in range(len(lines)):\n        for j in range(i + 1, len(lines)):\n            if is_basic(lines[i][0], lines[i][1], lines[j][0], lines[j][1]):\n                count += 1\n    return count\n\n\nlines = []\n\n\ndef draw_line(x1, y1, x2, y2):\n    if x1 == x2:\n        if y1 > y2:\n            lines.append((x1, y2))\n        else:\n            lines.append((x1, y1))\n    elif y1 == y2:\n        if x1 > x2:\n            lines.append((x2, y1))\n        else:\n            lines.append((x1, y1))\n    else:\n        m = (y2 - y1) / (x2 - x1)\n        b = y1 - m * x1\n        x = 0\n        y = m * x + b\n        while y <= 5:\n            lines.append((x, y))\n            x += 1\n            y = m * x + b\n\n\nfor i in range(4):\n    for j in range(5):\n        draw_line(i, j, i + 1, j)\n        draw_line(i, j, i, j + 1)\n\n\nprint(find_basic(lines))"
  },
  {
    "example_id": 485,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "85.0",
      "85.0",
      "83.0",
      "3570.0",
      "81.0",
      "98770.0",
      "79.0",
      "2024785.0",
      "77.0",
      "32801517.0",
      "75.0",
      "437353560.0",
      "73.0",
      "4935847320.0",
      "71.0",
      "48124511370.0",
      "69.0",
      "411731930610.0",
      "67.0",
      "3129162672636.0",
      "65.0",
      "21335200040700.0",
      "63.0",
      "131567066917650.0",
      "61.0",
      "738799683460650.0",
      "59.0",
      "3799541229226200.0",
      "57.0",
      "1.798449515167068",
      "16",
      "55.0",
      "7.868216628855923",
      "16",
      "53.0",
      "3.193570278770933",
      "17",
      "51.0",
      "1.2064598830912415",
      "18",
      "49.0",
      "4.2543585351112197",
      "18",
      "47.0",
      "1.4039383165867026",
      "19",
      "45.0",
      "4.345523360863603",
      "19",
      "43.0",
      "1.2641522504330482",
      "20",
      "41.0",
      "3.4626779033600885",
      "20",
      "39.0",
      "8.945251250346896",
      "20",
      "37.0",
      "2.1826413050846425",
      "21",
      "35.0",
      "5.036864550195329",
      "21",
      "33.0",
      "1.1006481794871274",
      "22",
      "31.0",
      "2.2799140860804783",
      "22",
      "29.0",
      "4.481210445054733",
      "22",
      "27.0",
      "8.364926164102168",
      "22",
      "25.0",
      "1.4840998033084492",
      "23",
      "23.0",
      "2.504418418083008",
      "23",
      "21.0",
      "4.02224776237574",
      "23",
      "19.0",
      "6.151673048339367",
      "23",
      "17.0",
      "8.963866441865935",
      "23",
      "15.0",
      "1.2449814502591576",
      "24",
      "13.0",
      "1.6487592179107763",
      "24",
      "11.0",
      "2.0826432226241386",
      "24",
      "9.0",
      "2.5098520888034493",
      "24",
      "7.0",
      "2.8863299021239664",
      "24",
      "5.0",
      "3.1679230633067925",
      "24",
      "3.0",
      "3.3187765425118777",
      "24",
      "1.0",
      "85.0",
      "85.0",
      "83.0",
      "3570.0",
      "81.0",
      "98770.0",
      "79.0",
      "2024785.0",
      "77.0",
      "32801517.0",
      "75.0",
      "437353560.0",
      "73.0",
      "4935847320.0",
      "71.0",
      "48124511370.0",
      "69.0",
      "411731930610.0",
      "67.0",
      "3129162672636.0",
      "65.0",
      "21335200040700.0",
      "63.0",
      "131567066917650.0",
      "61.0",
      "738799683460650.0",
      "59.0",
      "3799541229226200.0",
      "57.0",
      "1.798449515167068",
      "16",
      "55.0",
      "7.868216628855923",
      "16",
      "53.0",
      "3.193570278770933",
      "17",
      "51.0",
      "1.2064598830912415",
      "18",
      "49.0",
      "4.2543585351112197",
      "18",
      "47.0",
      "1.4039383165867026",
      "19",
      "45.0",
      "4.345523360863603",
      "19",
      "43.0",
      "1.2641522504330482",
      "20",
      "41.0",
      "3.4626779033600885",
      "20",
      "39.0",
      "8.945251250346896",
      "20",
      "37.0",
      "2.1826413050846425",
      "21",
      "35.0",
      "5.036864550195329",
      "21",
      "33.0",
      "1.1006481794871274",
      "22",
      "31.0",
      "2.2799140860804783",
      "22",
      "29.0",
      "4.481210445054733",
      "22",
      "27.0",
      "8.364926164102168",
      "22",
      "25.0",
      "1.4840998033084492",
      "23",
      "23.0",
      "2.504418418083008",
      "23",
      "21.0",
      "4.02224776237574",
      "23",
      "19.0",
      "6.151673048339367",
      "23",
      "17.0",
      "8.963866441865935",
      "23",
      "15.0",
      "1.2449814502591576",
      "24",
      "13.0",
      "1.6487592179107763",
      "24",
      "11.0",
      "2.0826432226241386",
      "24",
      "9.0",
      "2.5098520888034493",
      "24",
      "7.0",
      "2.8863299021239664",
      "24",
      "5.0",
      "3.1679230633067925",
      "24",
      "3.0",
      "3.3187765425118777",
      "24",
      "3.3187765425118777",
      "24",
      "3.1679230633067925",
      "24",
      "3.0",
      "2.8863299021239664",
      "24",
      "5.0",
      "2.5098520888034493",
      "24",
      "7.0",
      "2.0826432226241386",
      "24",
      "9.0",
      "1.6487592179107763",
      "24",
      "11.0",
      "1.2449814502591576",
      "24",
      "13.0",
      "8.963866441865935",
      "23",
      "15.0",
      "6.151673048339367",
      "23",
      "17.0",
      "4.02224776237574",
      "23",
      "19.0",
      "2.504418418083008",
      "23",
      "21.0",
      "1.4840998033084492",
      "23",
      "23.0",
      "8.364926164102168",
      "22",
      "25.0",
      "4.481210445054733",
      "22",
      "27.0",
      "2.2799140860804783",
      "22",
      "29.0",
      "1.1006481794871274",
      "22",
      "31.0",
      "5.036864550195329",
      "21",
      "33.0",
      "2.1826413050846425",
      "21",
      "35.0",
      "8.945251250346896",
      "20",
      "37.0",
      "3.4626779033600885",
      "20",
      "39.0",
      "1.2641522504330482",
      "20",
      "41.0",
      "4.345523360863603",
      "19",
      "43.0",
      "1.4039383165867026",
      "19",
      "45.0",
      "4.2543585351112197",
      "18",
      "47.0",
      "1.2064598830912415",
      "18",
      "49.0",
      "3.193570278770933",
      "17",
      "51.0",
      "7.868216628855923",
      "16",
      "53.0",
      "1.798449515167068",
      "16",
      "55.0",
      "3799541229226200.0",
      "57.0",
      "738799683460650.0",
      "59.0",
      "131567066917650.0",
      "61.0",
      "21335200040700.0",
      "63.0",
      "3129162672636.0",
      "65.0",
      "411731930610.0",
      "67.0",
      "48124511370.0",
      "69.0",
      "4935847320.0",
      "71.0",
      "437353560.0",
      "73.0",
      "32801517.0",
      "75.0",
      "2024785.0",
      "77.0",
      "98770.0",
      "79.0",
      "3570.0",
      "81.0",
      "85.0",
      "83.0",
      "-85.0",
      "3.3187765425118777",
      "24",
      "3.1679230633067925",
      "24",
      "3.0",
      "2.8863299021239664",
      "24",
      "5.0",
      "2.5098520888034493",
      "24",
      "7.0",
      "2.0826432226241386",
      "24",
      "9.0",
      "1.6487592179107763",
      "24",
      "11.0",
      "1.2449814502591576",
      "24",
      "13.0",
      "8.963866441865935",
      "23",
      "15.0",
      "6.151673048339367",
      "23",
      "17.0",
      "4.02224776237574",
      "23",
      "19.0",
      "2.504418418083008",
      "23",
      "21.0",
      "1.4840998033084492",
      "23",
      "23.0",
      "8.364926164102168",
      "22",
      "25.0",
      "4.481210445054733",
      "22",
      "27.0",
      "2.2799140860804783",
      "22",
      "29.0",
      "1.1006481794871274",
      "22",
      "31.0",
      "5.036864550195329",
      "21",
      "33.0",
      "2.1826413050846425",
      "21",
      "35.0",
      "8.945251250346896",
      "20",
      "37.0",
      "3.4626779033600885",
      "20",
      "39.0",
      "1.2641522504330482",
      "20",
      "41.0",
      "4.345523360863603",
      "19",
      "43.0",
      "1.4039383165867026",
      "19",
      "45.0",
      "4.2543585351112197",
      "18",
      "47.0",
      "1.2064598830912415",
      "18",
      "49.0",
      "3.193570278770933",
      "17",
      "51.0",
      "7.868216628855923",
      "16",
      "53.0",
      "1.798449515167068",
      "16",
      "55.0",
      "3799541229226200.0",
      "57.0",
      "738799683460650.0",
      "59.0",
      "131567066917650.0",
      "61.0",
      "21335200040700.0",
      "63.0",
      "3129162672636.0",
      "65.0",
      "411731930610.0",
      "67.0",
      "48124511370.0",
      "69.0",
      "4935847320.0",
      "71.0",
      "437353560.0",
      "73.0",
      "32801517.0",
      "75.0",
      "2024785.0",
      "77.0",
      "98770.0",
      "79.0",
      "3570.0",
      "81.0",
      "85.0",
      "83.0",
      "-85.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "from sympy import Symbol, sqrt, expand, binomial\n\nz = Symbol('z')\nexpression = expand((z + 1 / z)**85 + 1 / (z + 1 / z)**85)\nprint(expression)"
  },
  {
    "example_id": 486,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "1.0",
      "2.0",
      "3.0",
      "4.0",
      "5.0",
      "6.0",
      "7.0",
      "8.0",
      "9.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "n = 0\nwhile n < 10:\n    print(n)\n    n += 1"
  },
  {
    "example_id": 487,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "496.0"
    ],
    "solution": "count = 0\nfor n in range(1, 1000):\n    x = n / n // n\n    if x > 0:\n        count += 1\nprint(count)"
  },
  {
    "example_id": 488,
    "selected_solution_index": 11,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-26.0",
      "-25.0",
      "-24.0",
      "-23.0",
      "-22.0",
      "-21.0",
      "-20.0",
      "-19.0",
      "-18.0",
      "-17.0",
      "-16.0",
      "-15.0",
      "-14.0",
      "-13.0",
      "-12.0",
      "-11.0",
      "-10.0",
      "-9.0",
      "-8.0",
      "-7.0",
      "-6.0",
      "-25.0",
      "-24.0",
      "-24.0",
      "-22.0",
      "-23.0",
      "-20.0",
      "-22.0",
      "-18.0",
      "-21.0",
      "-16.0",
      "-20.0",
      "-14.0",
      "-19.0",
      "-12.0",
      "-18.0",
      "-10.0",
      "-17.0",
      "-8.0",
      "-16.0",
      "-6.0",
      "-15.0",
      "-4.0",
      "-14.0",
      "-2.0",
      "-13.0",
      "0.0",
      "-12.0",
      "2.0",
      "-11.0",
      "4.0",
      "-10.0",
      "6.0",
      "-9.0",
      "8.0",
      "-8.0",
      "10.0",
      "-7.0",
      "12.0",
      "-6.0",
      "14.0",
      "-25.0",
      "-24.0",
      "-24.0",
      "-23.0",
      "-22.0",
      "-21.0",
      "-20.0",
      "-19.0",
      "-18.0",
      "-17.0",
      "-16.0",
      "-15.0",
      "-14.0",
      "-13.0",
      "-12.0",
      "-11.0",
      "-10.0",
      "-9.0",
      "-8.0",
      "-7.0",
      "-6.0",
      "-5.0",
      "-4.0",
      "-22.0",
      "-21.0",
      "-21.0",
      "-19.0",
      "-20.0",
      "-17.0",
      "-19.0",
      "-15.0",
      "-18.0",
      "-13.0",
      "-17.0",
      "-11.0",
      "-16.0",
      "-9.0",
      "-15.0",
      "-7.0",
      "-14.0",
      "-5.0",
      "-13.0",
      "-3.0",
      "-12.0",
      "-1.0",
      "-11.0",
      "1.0",
      "-10.0",
      "3.0",
      "-9.0",
      "5.0",
      "-8.0",
      "7.0",
      "-7.0",
      "9.0",
      "-6.0",
      "11.0",
      "-5.0",
      "13.0",
      "-4.0",
      "15.0",
      "-24.0",
      "-22.0",
      "-22.0",
      "-21.0",
      "-22.0",
      "-21.0",
      "-20.0",
      "-19.0",
      "-18.0",
      "-17.0",
      "-16.0",
      "-15.0",
      "-14.0",
      "-13.0",
      "-12.0",
      "-11.0",
      "-10.0",
      "-9.0",
      "-8.0",
      "-7.0",
      "-6.0",
      "-5.0",
      "-4.0",
      "-3.0",
      "-2.0",
      "-19.0",
      "-18.0",
      "-18.0",
      "-16.0",
      "-17.0",
      "-14.0",
      "-16.0",
      "-12.0",
      "-15.0",
      "-10.0",
      "-14.0",
      "-8.0",
      "-13.0",
      "-6.0",
      "-12.0",
      "-4.0",
      "-11.0",
      "-2.0",
      "-10.0",
      "0.0",
      "-9.0",
      "2.0",
      "-8.0",
      "4.0",
      "-7.0",
      "6.0",
      "-6.0",
      "8.0",
      "-5.0",
      "10.0",
      "-4.0",
      "12.0",
      "-3.0",
      "14.0",
      "-2.0",
      "16.0",
      "-23.0",
      "-20.0",
      "-21.0",
      "-19.0",
      "-19.0",
      "-18.0",
      "-20.0",
      "-19.0",
      "-18.0",
      "-17.0",
      "-16.0",
      "-15.0",
      "-14.0",
      "-13.0",
      "-12.0",
      "-11.0",
      "-10.0",
      "-9.0",
      "-8.0",
      "-7.0",
      "-6.0",
      "-5.0",
      "-4.0",
      "-3.0",
      "-2.0",
      "-1.0",
      "0.0",
      "-16.0",
      "-15.0",
      "-15.0",
      "-13.0",
      "-14.0",
      "-11.0",
      "-13.0",
      "-9.0",
      "-12.0",
      "-7.0",
      "-11.0",
      "-5.0",
      "-10.0",
      "-3.0",
      "-9.0",
      "-1.0",
      "-8.0",
      "1.0",
      "-7.0",
      "3.0",
      "-6.0",
      "5.0",
      "-5.0",
      "7.0",
      "-4.0",
      "9.0",
      "-3.0",
      "11.0",
      "-2.0",
      "13.0",
      "-1.0",
      "15.0",
      "0.0",
      "17.0",
      "-22.0",
      "-18.0",
      "-20.0",
      "-17.0",
      "-18.0",
      "-16.0",
      "-16.0",
      "-15.0",
      "-18.0",
      "-17.0",
      "-16.0",
      "-15.0",
      "-14.0",
      "-13.0",
      "-12.0",
      "-11.0",
      "-10.0",
      "-9.0",
      "-8.0",
      "-7.0",
      "-6.0",
      "-5.0",
      "-4.0",
      "-3.0",
      "-2.0",
      "-1.0",
      "0.0",
      "1.0",
      "2.0",
      "-13.0",
      "-12.0",
      "-12.0",
      "-10.0",
      "-11.0",
      "-8.0",
      "-10.0",
      "-6.0",
      "-9.0",
      "-4.0",
      "-8.0",
      "-2.0",
      "-7.0",
      "0.0",
      "-6.0",
      "2.0",
      "-5.0",
      "4.0",
      "-4.0",
      "6.0",
      "-3.0",
      "8.0",
      "-2.0",
      "10.0",
      "-1.0",
      "12.0",
      "0.0",
      "14.0",
      "1.0",
      "16.0",
      "2.0",
      "18.0",
      "-21.0",
      "-16.0",
      "-19.0",
      "-15.0",
      "-17.0",
      "-14.0",
      "-15.0",
      "-13.0",
      "-13.0",
      "-12.0",
      "-16.0",
      "-15.0",
      "-14.0",
      "-13.0",
      "-12.0",
      "-11.0",
      "-10.0",
      "-9.0",
      "-8.0",
      "-7.0",
      "-6.0",
      "-5.0",
      "-4.0",
      "-3.0",
      "-2.0",
      "-1.0",
      "0.0",
      "1.0",
      "2.0",
      "3.0",
      "4.0",
      "-10.0",
      "-9.0",
      "-9.0",
      "-7.0",
      "-8.0",
      "-5.0",
      "-7.0",
      "-3.0",
      "-6.0",
      "-1.0",
      "-5.0",
      "1.0",
      "-4.0",
      "3.0",
      "-3.0",
      "5.0",
      "-2.0",
      "7.0",
      "-1.0",
      "9.0",
      "0.0",
      "11.0",
      "1.0",
      "13.0",
      "2.0",
      "15.0",
      "3.0",
      "17.0",
      "4.0",
      "19.0",
      "-20.0",
      "-14.0",
      "-18.0",
      "-13.0",
      "-16.0",
      "-12.0",
      "-14.0",
      "-11.0",
      "-12.0",
      "-10.0",
      "-10.0",
      "-9.0",
      "-14.0",
      "-13.0",
      "-12.0",
      "-11.0",
      "-10.0",
      "-9.0",
      "-8.0",
      "-7.0",
      "-6.0",
      "-5.0",
      "-4.0",
      "-3.0",
      "-2.0",
      "-1.0",
      "0.0",
      "1.0",
      "2.0",
      "3.0",
      "4.0",
      "5.0",
      "6.0",
      "-7.0",
      "-6.0",
      "-6.0",
      "-4.0",
      "-5.0",
      "-2.0",
      "-4.0",
      "0.0",
      "-3.0",
      "2.0",
      "-2.0",
      "4.0",
      "-1.0",
      "6.0",
      "0.0",
      "8.0",
      "1.0",
      "10.0",
      "2.0",
      "12.0",
      "3.0",
      "14.0",
      "4.0",
      "16.0",
      "5.0",
      "18.0",
      "6.0",
      "20.0",
      "-19.0",
      "-12.0",
      "-17.0",
      "-11.0",
      "-15.0",
      "-10.0",
      "-13.0",
      "-9.0",
      "-11.0",
      "-8.0",
      "-9.0",
      "-7.0",
      "-7.0",
      "-6.0",
      "-12.0",
      "-11.0",
      "-10.0",
      "-9.0",
      "-8.0",
      "-7.0",
      "-6.0",
      "-5.0",
      "-4.0",
      "-3.0",
      "-2.0",
      "-1.0",
      "0.0",
      "1.0",
      "2.0",
      "3.0",
      "4.0",
      "5.0",
      "6.0",
      "7.0",
      "8.0",
      "-4.0",
      "-3.0",
      "-3.0",
      "-1.0",
      "-2.0",
      "1.0",
      "-1.0",
      "3.0",
      "0.0",
      "5.0",
      "1.0",
      "7.0",
      "2.0",
      "9.0",
      "3.0",
      "11.0",
      "4.0",
      "13.0",
      "5.0",
      "15.0",
      "6.0",
      "17.0",
      "7.0",
      "19.0",
      "8.0",
      "21.0",
      "-18.0",
      "-10.0",
      "-16.0",
      "-9.0",
      "-14.0",
      "-8.0",
      "-12.0",
      "-7.0",
      "-10.0",
      "-6.0",
      "-8.0",
      "-5.0",
      "-6.0",
      "-4.0",
      "-4.0",
      "-3.0",
      "-10.0",
      "-9.0",
      "-8.0",
      "-7.0",
      "-6.0",
      "-5.0",
      "-4.0",
      "-3.0",
      "-2.0",
      "-1.0",
      "0.0",
      "1.0",
      "2.0",
      "3.0",
      "4.0",
      "5.0",
      "6.0",
      "7.0",
      "8.0",
      "9.0",
      "10.0",
      "-1.0",
      "0.0",
      "0.0",
      "2.0",
      "1.0",
      "4.0",
      "2.0",
      "6.0",
      "3.0",
      "8.0",
      "4.0",
      "10.0",
      "5.0",
      "12.0",
      "6.0",
      "14.0",
      "7.0",
      "16.0",
      "8.0",
      "18.0",
      "9.0",
      "20.0",
      "10.0",
      "22.0",
      "-17.0",
      "-8.0",
      "-15.0",
      "-7.0",
      "-13.0",
      "-6.0",
      "-11.0",
      "-5.0",
      "-9.0",
      "-4.0",
      "-7.0",
      "-3.0",
      "-5.0",
      "-2.0",
      "-3.0",
      "-1.0",
      "-1.0",
      "0.0",
      "-8.0",
      "-7.0",
      "-6.0",
      "-5.0",
      "-4.0",
      "-3.0",
      "-2.0",
      "-1.0",
      "0.0",
      "1.0",
      "2.0",
      "3.0",
      "4.0",
      "5.0",
      "6.0",
      "7.0",
      "8.0",
      "9.0",
      "10.0",
      "11.0",
      "12.0",
      "2.0",
      "3.0",
      "3.0",
      "5.0",
      "4.0",
      "7.0",
      "5.0",
      "9.0",
      "6.0",
      "11.0",
      "7.0",
      "13.0",
      "8.0",
      "15.0",
      "9.0",
      "17.0",
      "10.0",
      "19.0",
      "11.0",
      "21.0",
      "12.0",
      "23.0",
      "-16.0",
      "-6.0",
      "-14.0",
      "-5.0",
      "-12.0",
      "-4.0",
      "-10.0",
      "-3.0",
      "-8.0",
      "-2.0",
      "-6.0",
      "-1.0",
      "-4.0",
      "0.0",
      "-2.0",
      "1.0",
      "0.0",
      "2.0",
      "2.0",
      "3.0",
      "-6.0",
      "-5.0",
      "-4.0",
      "-3.0",
      "-2.0",
      "-1.0",
      "0.0",
      "1.0",
      "2.0",
      "3.0",
      "4.0",
      "5.0",
      "6.0",
      "7.0",
      "8.0",
      "9.0",
      "10.0",
      "11.0",
      "12.0",
      "13.0",
      "14.0",
      "5.0",
      "6.0",
      "6.0",
      "8.0",
      "7.0",
      "10.0",
      "8.0",
      "12.0",
      "9.0",
      "14.0",
      "10.0",
      "16.0",
      "11.0",
      "18.0",
      "12.0",
      "20.0",
      "13.0",
      "22.0",
      "14.0",
      "24.0",
      "-15.0",
      "-4.0",
      "-13.0",
      "-3.0",
      "-11.0",
      "-2.0",
      "-9.0",
      "-1.0",
      "-7.0",
      "0.0",
      "-5.0",
      "1.0",
      "-3.0",
      "2.0",
      "-1.0",
      "3.0",
      "1.0",
      "4.0",
      "3.0",
      "5.0",
      "5.0",
      "6.0",
      "-4.0",
      "-3.0",
      "-2.0",
      "-1.0",
      "0.0",
      "1.0",
      "2.0",
      "3.0",
      "4.0",
      "5.0",
      "6.0",
      "7.0",
      "8.0",
      "9.0",
      "10.0",
      "11.0",
      "12.0",
      "13.0",
      "14.0",
      "15.0",
      "16.0",
      "8.0",
      "9.0",
      "9.0",
      "11.0",
      "10.0",
      "13.0",
      "11.0",
      "15.0",
      "12.0",
      "17.0",
      "13.0",
      "19.0",
      "14.0",
      "21.0",
      "15.0",
      "23.0",
      "16.0",
      "25.0",
      "-14.0",
      "-2.0",
      "-12.0",
      "-1.0",
      "-10.0",
      "0.0",
      "-8.0",
      "1.0",
      "-6.0",
      "2.0",
      "-4.0",
      "3.0",
      "-2.0",
      "4.0",
      "0.0",
      "5.0",
      "2.0",
      "6.0",
      "4.0",
      "7.0",
      "6.0",
      "8.0",
      "8.0",
      "9.0",
      "-2.0",
      "-1.0",
      "0.0",
      "1.0",
      "2.0",
      "3.0",
      "4.0",
      "5.0",
      "6.0",
      "7.0",
      "8.0",
      "9.0",
      "10.0",
      "11.0",
      "12.0",
      "13.0",
      "14.0",
      "15.0",
      "16.0",
      "17.0",
      "18.0",
      "11.0",
      "12.0",
      "12.0",
      "14.0",
      "13.0",
      "16.0",
      "14.0",
      "18.0",
      "15.0",
      "20.0",
      "16.0",
      "22.0",
      "17.0",
      "24.0",
      "18.0",
      "26.0",
      "-13.0",
      "0.0",
      "-11.0",
      "1.0",
      "-9.0",
      "2.0",
      "-7.0",
      "3.0",
      "-5.0",
      "4.0",
      "-3.0",
      "5.0",
      "-1.0",
      "6.0",
      "1.0",
      "7.0",
      "3.0",
      "8.0",
      "5.0",
      "9.0",
      "7.0",
      "10.0",
      "9.0",
      "11.0",
      "11.0",
      "12.0",
      "0.0",
      "1.0",
      "2.0",
      "3.0",
      "4.0",
      "5.0",
      "6.0",
      "7.0",
      "8.0",
      "9.0",
      "10.0",
      "11.0",
      "12.0",
      "13.0",
      "14.0",
      "15.0",
      "16.0",
      "17.0",
      "18.0",
      "19.0",
      "20.0",
      "14.0",
      "15.0",
      "15.0",
      "17.0",
      "16.0",
      "19.0",
      "17.0",
      "21.0",
      "18.0",
      "23.0",
      "19.0",
      "25.0",
      "20.0",
      "27.0",
      "-12.0",
      "2.0",
      "-10.0",
      "3.0",
      "-8.0",
      "4.0",
      "-6.0",
      "5.0",
      "-4.0",
      "6.0",
      "-2.0",
      "7.0",
      "0.0",
      "8.0",
      "2.0",
      "9.0",
      "4.0",
      "10.0",
      "6.0",
      "11.0",
      "8.0",
      "12.0",
      "10.0",
      "13.0",
      "12.0",
      "14.0",
      "14.0",
      "15.0",
      "2.0",
      "3.0",
      "4.0",
      "5.0",
      "6.0",
      "7.0",
      "8.0",
      "9.0",
      "10.0",
      "11.0",
      "12.0",
      "13.0",
      "14.0",
      "15.0",
      "16.0",
      "17.0",
      "18.0",
      "19.0",
      "20.0",
      "21.0",
      "22.0",
      "17.0",
      "18.0",
      "18.0",
      "20.0",
      "19.0",
      "22.0",
      "20.0",
      "24.0",
      "21.0",
      "26.0",
      "22.0",
      "28.0",
      "-11.0",
      "4.0",
      "-9.0",
      "5.0",
      "-7.0",
      "6.0",
      "-5.0",
      "7.0",
      "-3.0",
      "8.0",
      "-1.0",
      "9.0",
      "1.0",
      "10.0",
      "3.0",
      "11.0",
      "5.0",
      "12.0",
      "7.0",
      "13.0",
      "9.0",
      "14.0",
      "11.0",
      "15.0",
      "13.0",
      "16.0",
      "15.0",
      "17.0",
      "17.0",
      "18.0",
      "4.0",
      "5.0",
      "6.0",
      "7.0",
      "8.0",
      "9.0",
      "10.0",
      "11.0",
      "12.0",
      "13.0",
      "14.0",
      "15.0",
      "16.0",
      "17.0",
      "18.0",
      "19.0",
      "20.0",
      "21.0",
      "22.0",
      "23.0",
      "24.0",
      "20.0",
      "21.0",
      "21.0",
      "23.0",
      "22.0",
      "25.0",
      "23.0",
      "27.0",
      "24.0",
      "29.0",
      "-10.0",
      "6.0",
      "-8.0",
      "7.0",
      "-6.0",
      "8.0",
      "-4.0",
      "9.0",
      "-2.0",
      "10.0",
      "0.0",
      "11.0",
      "2.0",
      "12.0",
      "4.0",
      "13.0",
      "6.0",
      "14.0",
      "8.0",
      "15.0",
      "10.0",
      "16.0",
      "12.0",
      "17.0",
      "14.0",
      "18.0",
      "16.0",
      "19.0",
      "18.0",
      "20.0",
      "20.0",
      "21.0",
      "6.0",
      "7.0",
      "8.0",
      "9.0",
      "10.0",
      "11.0",
      "12.0",
      "13.0",
      "14.0",
      "15.0",
      "16.0",
      "17.0",
      "18.0",
      "19.0",
      "20.0",
      "21.0",
      "22.0",
      "23.0",
      "24.0",
      "25.0",
      "26.0",
      "23.0",
      "24.0",
      "24.0",
      "26.0",
      "25.0",
      "28.0",
      "26.0",
      "30.0",
      "-9.0",
      "8.0",
      "-7.0",
      "9.0",
      "-5.0",
      "10.0",
      "-3.0",
      "11.0",
      "-1.0",
      "12.0",
      "1.0",
      "13.0",
      "3.0",
      "14.0",
      "5.0",
      "15.0",
      "7.0",
      "16.0",
      "9.0",
      "17.0",
      "11.0",
      "18.0",
      "13.0",
      "19.0",
      "15.0",
      "20.0",
      "17.0",
      "21.0",
      "19.0",
      "22.0",
      "21.0",
      "23.0",
      "23.0",
      "24.0",
      "8.0",
      "9.0",
      "10.0",
      "11.0",
      "12.0",
      "13.0",
      "14.0",
      "15.0",
      "16.0",
      "17.0",
      "18.0",
      "19.0",
      "20.0",
      "21.0",
      "22.0",
      "23.0",
      "24.0",
      "25.0",
      "26.0",
      "27.0",
      "28.0",
      "26.0",
      "27.0",
      "27.0",
      "29.0",
      "28.0",
      "31.0",
      "-8.0",
      "10.0",
      "-6.0",
      "11.0",
      "-4.0",
      "12.0",
      "-2.0",
      "13.0",
      "0.0",
      "14.0",
      "2.0",
      "15.0",
      "4.0",
      "16.0",
      "6.0",
      "17.0",
      "8.0",
      "18.0",
      "10.0",
      "19.0",
      "12.0",
      "20.0",
      "14.0",
      "21.0",
      "16.0",
      "22.0",
      "18.0",
      "23.0",
      "20.0",
      "24.0",
      "22.0",
      "25.0",
      "24.0",
      "26.0",
      "26.0",
      "27.0",
      "10.0",
      "11.0",
      "12.0",
      "13.0",
      "14.0",
      "15.0",
      "16.0",
      "17.0",
      "18.0",
      "19.0",
      "20.0",
      "21.0",
      "22.0",
      "23.0",
      "24.0",
      "25.0",
      "26.0",
      "27.0",
      "28.0",
      "29.0",
      "30.0",
      "29.0",
      "30.0",
      "30.0",
      "32.0",
      "-7.0",
      "12.0",
      "-5.0",
      "13.0",
      "-3.0",
      "14.0",
      "-1.0",
      "15.0",
      "1.0",
      "16.0",
      "3.0",
      "17.0",
      "5.0",
      "18.0",
      "7.0",
      "19.0",
      "9.0",
      "20.0",
      "11.0",
      "21.0",
      "13.0",
      "22.0",
      "15.0",
      "23.0",
      "17.0",
      "24.0",
      "19.0",
      "25.0",
      "21.0",
      "26.0",
      "23.0",
      "27.0",
      "25.0",
      "28.0",
      "27.0",
      "29.0",
      "29.0",
      "30.0",
      "12.0",
      "13.0",
      "14.0",
      "15.0",
      "16.0",
      "17.0",
      "18.0",
      "19.0",
      "20.0",
      "21.0",
      "22.0",
      "23.0",
      "24.0",
      "25.0",
      "26.0",
      "27.0",
      "28.0",
      "29.0",
      "30.0",
      "31.0",
      "32.0",
      "32.0",
      "33.0",
      "-6.0",
      "14.0",
      "-4.0",
      "15.0",
      "-2.0",
      "16.0",
      "0.0",
      "17.0",
      "2.0",
      "18.0",
      "4.0",
      "19.0",
      "6.0",
      "20.0",
      "8.0",
      "21.0",
      "10.0",
      "22.0",
      "12.0",
      "23.0",
      "14.0",
      "24.0",
      "16.0",
      "25.0",
      "18.0",
      "26.0",
      "20.0",
      "27.0",
      "22.0",
      "28.0",
      "24.0",
      "29.0",
      "26.0",
      "30.0",
      "28.0",
      "31.0",
      "30.0",
      "32.0",
      "32.0",
      "33.0",
      "14.0",
      "15.0",
      "16.0",
      "17.0",
      "18.0",
      "19.0",
      "20.0",
      "21.0",
      "22.0",
      "23.0",
      "24.0",
      "25.0",
      "26.0",
      "27.0",
      "28.0",
      "29.0",
      "30.0",
      "31.0",
      "32.0",
      "33.0",
      "34.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "from math import sqrt\n\ndef upperhyper(x):\n    return (2*sqrt((x - 6)**2/16 + 1) - 5)\n\ndef lowerhyper(x):\n    return (-2*sqrt((x - 6)**2/16 + 1) - 5)\n\nn = 10\nfor i in range(-n, n + 1):\n    for j in range(-n, n + 1):\n        for k in range(-n, n + 1):\n            if (i**2 * j + j**2 * k + k**2 * i) == (i * j**2 + j * k**2 + k * i**2):\n                print(i + j + k + 4)"
  },
  {
    "example_id": 489,
    "selected_solution_index": 13,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "30.0"
    ],
    "solution": "a1, a2, a3, a4, a5 = 1, 1, 1, 1, 1\nexpression = abs(a1 - a5)\nprint(expression)"
  },
  {
    "example_id": 490,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "import sympy\na, b, c, x = sympy.symbols('a b c x')\nexpression = (x + a)**2 / (a - b) * (a - c) + (x + b)**2 / (b - a) * (b - c) + (x + c)**2 / (c - a) * (c - b)\nprint(expression)"
  },
  {
    "example_id": 491,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "from math import prod\n\nx, y, z = 1, 1, 1\nwhile prod([x, y, z]) > 1:\n    x -= 1\n    y -= 1\n    z -= 1\nprint(x * y + y * z + z * x)"
  },
  {
    "example_id": 492,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "49.0"
    ],
    "solution": "k = 1\nwhile True:\n    n = 2002 // k\n    if n % 1 == 0:\n        if n % k == 0:\n            print(k)\n            break\n    else:\n        print(k)\n        break\n    k += 1"
  },
  {
    "example_id": 493,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "27.421296296296298"
    ],
    "annotated_answers": [
      "157.0"
    ],
    "solution": "a = 1\nb = 2\nc = 3\nexpression = (a**3 / b**3) + (b**3 / c**3) + (c**3 / a**3)\nprint(expression)"
  },
  {
    "example_id": 494,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2833.376960448433"
    ],
    "annotated_answers": [
      "4014013.0"
    ],
    "solution": "import math\nprint(math.sqrt(2003**2 + 2004**2))"
  },
  {
    "example_id": 495,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "189.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "def f(x):\n    return x**3 + 3*x**2 - 2*x - 1\nprint(f(5))"
  },
  {
    "example_id": 496,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "import sympy\n\nx = sympy.symbols('x')\nexpression = x * (x + 1) * (x + 2) * (x + 3)\nmin_value = sympy.nsimplify(expression.evalf())\nprint(min_value)"
  },
  {
    "example_id": 497,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "def f(x):\n    if 0 <= x < 2:\n        return 2 * x\n    else:\n        return 8 - 2 * x\n\nprint(max(f(x) for x in range(10)))"
  },
  {
    "example_id": 498,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "31.0"
    ],
    "solution": "def f(n):\n    return n**2 + n + 1\n\ndef f_squared(n):\n    return n**4 + 2*n**3 + 3*n**2 + 4*n + 1\n\nn = 1\nwhile f_squared(n) > f_squared(n+1):\n    n += 1\nprint(n)"
  },
  {
    "example_id": 499,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "15872387472273.0"
    ],
    "annotated_answers": [
      "3996.0"
    ],
    "solution": "expression = 1\nfor i in range(1996, 1998):\n    expression *= i**2 - i + 1\nprint(expression)"
  },
  {
    "example_id": 500,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "100.0"
    ],
    "annotated_answers": [
      "100.0"
    ],
    "solution": "count = 0\nfor a in range(1, 101):\n    for b in range(1, 101):\n        for c in range(1, 101):\n            if a**2 + b**2 + c**2 == a * b + a * c + b * c:\n                count += 1\nprint(count)"
  },
  {
    "example_id": 501,
    "selected_solution_index": 11,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "sum = 0\nfor y in range(1, 101):\n    x = y**2 - 6 * y + 5\n    if abs(x) == y:\n        sum += x\nprint(sum)"
  },
  {
    "example_id": 502,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0",
      "3.0",
      "2.0",
      "9.0",
      "30.0",
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "from sympy import Symbol, simplify\nx = Symbol('x')\nexpression = (x**3 - 3 * x**2 - 9 * x + 30) % (x - 3)\nprint(simplify(expression))"
  }
]