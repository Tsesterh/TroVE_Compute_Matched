[
  {
    "example_id": 0,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "512.0"
    ],
    "solution": "print(64**(1/2))"
  },
  {
    "example_id": 1,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.75"
    ],
    "annotated_answers": [
      "1.25"
    ],
    "solution": "# distance from start point\ndistance_from_start = 0.5 + 0.75 + 0.5\nprint(distance_from_start)"
  },
  {
    "example_id": 2,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "78.0"
    ],
    "annotated_answers": [
      "78.0"
    ],
    "solution": "cookies_sold, cupcakes_sold, brownies_sold = 54, 20, 35\ncookies_price, cupcakes_price, brownies_price = 1/3, 2, 1\ntotal_cost = 15\nrevenue = (cookies_sold * cookies_price) + (cupcakes_sold * cupcakes_price) + (brownies_sold * brownies_price)\nprofit = revenue - total_cost\nprint(profit)"
  },
  {
    "example_id": 3,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "220.0"
    ],
    "annotated_answers": [
      "1584.0"
    ],
    "solution": "from math import factorial\n\ndef choose_3_balls(n):\n    return factorial(n) / (factorial(3) * factorial(n-3))\n\nprint(choose_3_balls(12))"
  },
  {
    "example_id": 4,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "33.0"
    ],
    "annotated_answers": [
      "330.0"
    ],
    "solution": "passing_drill_length = 11 * 3\nprint(passing_drill_length)"
  },
  {
    "example_id": 5,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.745056497175141"
    ],
    "annotated_answers": [
      "3.7"
    ],
    "solution": "x, y = 37 / 12, 260 / 59\nprint((x + y) / 2)"
  },
  {
    "example_id": 6,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "19.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "boxes_with_pencils = 13\nboxes_with_pens = 9\nboxes_with_neither = 3\nboxes_with_both = boxes_with_pencils + boxes_with_pens - boxes_with_neither\nprint(boxes_with_both)"
  },
  {
    "example_id": 7,
    "selected_solution_index": 13,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "81.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "perimeter = 18\n# Area of the square is half the perimeter squared\narea = perimeter ** 2 / 4\nprint(area)"
  },
  {
    "example_id": 8,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "105.0"
    ],
    "annotated_answers": [
      "105.0"
    ],
    "solution": "import math\nprint(math.sqrt(15*35*21))"
  },
  {
    "example_id": 9,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "99.0"
    ],
    "annotated_answers": [
      "-99.0"
    ],
    "solution": "# This solution uses the modulo operator to find the greatest multiple of 99 that is less than 0\nmultiple = 99\nwhile multiple > 0:\n    if multiple % 99 == 0:\n        print(multiple)\n        break\n    multiple -= 1"
  },
  {
    "example_id": 10,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "90.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "total_numbers = 100\ntotal_divisors = 0\nfor i in range(1, total_numbers):\n  divisors = 0\n  for j in range(1, i):\n    if i % j == 0:\n      divisors += 1\n  if divisors % 2!= 0:\n    total_divisors += 1\nprint(total_divisors)"
  },
  {
    "example_id": 11,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1518.0"
    ],
    "annotated_answers": [
      "1518.0"
    ],
    "solution": "# smallest prime numbers\np1, p2, p3, p4 = 2, 3, 5, 7\n\n# smallest composite numbers greater than 0\nc1, c2, c3, c4 = 4, 6, 8, 9\n\n# product of the four smallest prime numbers\nsmallest_prime_product = p1 * p2 * p3 * p4\n\n# product of the four smallest composite numbers greater than 0\nsmallest_composite_product = c1 * c2 * c3 * c4\n\n# positive difference between the two products\ndifference = abs(smallest_prime_product - smallest_composite_product)\n\nprint(difference)"
  },
  {
    "example_id": 12,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "288.0"
    ],
    "annotated_answers": [
      "288.0"
    ],
    "solution": "# least common multiple (lcm) of 72 and 96\nfrom sympy import lcm\nprint(lcm(72, 96))"
  },
  {
    "example_id": 13,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "55.0"
    ],
    "solution": "x = 107 * 109 ** 5\nexponent = 11\nx_exponent = exponent // 2\nprint(x_exponent)"
  },
  {
    "example_id": 14,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "19.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "print((1/6) * 6 * 7 + 8 * 2 / 8 * (7 - 1))"
  },
  {
    "example_id": 15,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "219.0"
    ],
    "annotated_answers": [
      "200.0"
    ],
    "solution": "print(round(14.7923412 ** 2))"
  },
  {
    "example_id": 16,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0",
      "11.0",
      "12.0",
      "13.0",
      "14.0",
      "15.0",
      "16.0",
      "17.0",
      "18.0",
      "19.0",
      "20.0",
      "21.0",
      "22.0",
      "23.0",
      "24.0",
      "25.0",
      "26.0",
      "27.0",
      "28.0",
      "29.0",
      "30.0",
      "31.0",
      "32.0",
      "33.0",
      "34.0",
      "35.0",
      "36.0",
      "37.0",
      "38.0",
      "39.0",
      "40.0",
      "41.0",
      "42.0",
      "43.0",
      "44.0",
      "45.0",
      "46.0",
      "47.0",
      "48.0",
      "49.0",
      "50.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "# between 10 and 50\nfor i in range(10, 51):\n    if i % i % 10 == 0:\n        print(i)"
  },
  {
    "example_id": 17,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "60.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "age = 15\nbrother_age = 4 * age\nsix_years_from_now = 2 * age\n\nprint(brother_age)"
  },
  {
    "example_id": 18,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "777.0"
    ],
    "annotated_answers": [
      "777.0"
    ],
    "solution": "largest_multiple_of_37_less_than_800 = 800 - (800 % 37)\nprint(largest_multiple_of_37_less_than_800)"
  },
  {
    "example_id": 19,
    "selected_solution_index": 13,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "11.99999999999999"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "import math\nx = 2.5\ny = 0.7\nz = 2.7\nw = 2.5\nans = math.sqrt(x**2 - y**2) / (z - w)\nprint(ans)"
  },
  {
    "example_id": 20,
    "selected_solution_index": 12,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "20.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "numbers = [13, 14, 22, 52, 63, 74]\na = round(sum(numbers), -1)\nb = round(sum(round(x, -1) for x in numbers), -1)\nprint(a-b)"
  },
  {
    "example_id": 21,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-3.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "multiples_of_3 = 0\nmultiples_of_6 = 0\nfor i in range(1, 20):\n    if i % 3 == 0:\n        multiples_of_3 += 1\n    if i % 6 == 0:\n        multiples_of_6 += 1\nprint(multiples_of_6 - multiples_of_3)"
  },
  {
    "example_id": 22,
    "selected_solution_index": 14,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x = 3 + 4\nprint(x)"
  },
  {
    "example_id": 23,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "28.0"
    ],
    "annotated_answers": [
      "192.0"
    ],
    "solution": "x = 0.5\ny = 0.4\narea = 56 / 2\nprint(area)"
  },
  {
    "example_id": 24,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "360.0"
    ],
    "annotated_answers": [
      "5400.0"
    ],
    "solution": "days = [360, 450, 540]\nperiod = min(days)\nprint(period)"
  },
  {
    "example_id": 25,
    "selected_solution_index": 14,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "76.0"
    ],
    "annotated_answers": [
      "76.0"
    ],
    "solution": "group_1 = 25 * 84\ngroup_2 = 20 * 66\noverall_average = (group_1 + group_2) / (25 + 20)\nprint(overall_average)"
  },
  {
    "example_id": 26,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "17.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "sarah_score = 5\njames_score = 3\nmatthew_score = -2\n\n# Order of players matters\n# Maximum possible score is when\n# 1. Sarah plays first\n# 2. James plays second\n# 3. Matthew plays third\n\nscore = (sarah_score * james_score) - matthew_score\nprint(score)"
  },
  {
    "example_id": 27,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "n = 11\nnum_divisors = 0\nfor i in range(1, n+1):\n    if n % i == 0:\n        num_divisors += 1\nprint(num_divisors)"
  },
  {
    "example_id": 28,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "fraction_list = [(4, 4), (4, 8), (4, 12), (8, 4), (8, 8), (8, 12), (12, 4), (12, 8), (12, 12)]\nunique_fraction_list = list(set(fraction_list))\nprint(len(unique_fraction_list))"
  },
  {
    "example_id": 29,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "a, b, c = 0, 0, 0\na = c - b\nprint(a)"
  },
  {
    "example_id": 30,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "58.0"
    ],
    "annotated_answers": [
      "58.0"
    ],
    "solution": "list = [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93]\nprint(len(list))"
  },
  {
    "example_id": 31,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "900.0"
    ],
    "annotated_answers": [
      "200.0"
    ],
    "solution": "# the length of each side is 30 cm\nside_length = 30\nperimeter = 60\narea = side_length * side_length\nprint(area)"
  },
  {
    "example_id": 32,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "564.0"
    ],
    "annotated_answers": [
      "564.0"
    ],
    "solution": "print(round(563.5097))"
  },
  {
    "example_id": 33,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1061.0"
    ],
    "annotated_answers": [
      "256.0"
    ],
    "solution": "def is_prime(n):\n    if n <= 1:\n        return False\n    for i in range(2, n):\n        if n % i == 0:\n            return False\n    return True\n\n\ndef count_four_digit_primes():\n    count = 0\n    for i in range(1000, 10000):\n        if is_prime(i):\n            count += 1\n    return count\n\n\nprint(count_four_digit_primes())"
  },
  {
    "example_id": 34,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "216.0"
    ],
    "annotated_answers": [
      "216.0"
    ],
    "solution": "y = 6\nprint(y**3)"
  },
  {
    "example_id": 35,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0000000000000004"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "A, B, C, D, E = 1, 8/3, 47/12, 71/12, 7\nCD = D - C\nprint(CD)"
  },
  {
    "example_id": 36,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.830951894845301"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "hypotenuse = 5\nleg = 3\narea = (hypotenuse ** 2 + leg ** 2) ** (1/2)\nprint(area)"
  },
  {
    "example_id": 37,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = 6\ny = x**2\nz = y**(1/2) - 3\nprint(z)"
  },
  {
    "example_id": 38,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "470.6378650300037"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "import math\n\n# Area of a triangle\ndef area(base, height):\n    return 0.5 * base * height\n\n# Perimeter of a triangle\ndef perimeter(side1, side2, side3):\n    return side1 + side2 + side3\n\n# Leg of the second triangle\nside3 = 20\n\n# Other sides of the first triangle\nbase1 = 8\nheight1 = 5\n\n# Other sides of the second triangle\nside1 = side3\nside2 = math.sqrt(perimeter(side1, side3, base1)**2 - (base1**2 + height1**2))\n\n# Area of both triangles\narea1 = area(base1, height1)\narea2 = area(side1, side2)\n\n# Ratio of the areas\nratio = area1 / area2\n\n# Print the leg of the second triangle\nprint(side3 / ratio)"
  },
  {
    "example_id": 39,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-15.0"
    ],
    "annotated_answers": [
      "-5.0"
    ],
    "solution": "x = -8 - 7\nprint(x)"
  },
  {
    "example_id": 40,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "60.0"
    ],
    "annotated_answers": [
      "3380.0"
    ],
    "solution": "from string import ascii_lowercase\n\nvowels = ['a', 'e', 'i', 'o', 'u']\n\ncount = 0\nfor i in vowels:\n    for j in vowels:\n        for k in vowels:\n            if i!= j and j!= k and i!= k:\n                count += 1\nprint(count)"
  },
  {
    "example_id": 41,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "from math import factorial, sqrt\n\ndef is_factor(a, b):\n    return a % b == 0\n\ndef possible_rolls(num):\n    return factorial(num) / (factorial(num - 20) * factorial(20))\n\ndef possible_winning_rolls(num):\n    winning_rolls = 0\n    for i in range(1, num + 1):\n        if is_factor(i, 20) and is_factor(20, i):\n            winning_rolls += 1\n    return winning_rolls\n\ndef main():\n    winning_rolls = 0\n    for i in range(1, 21):\n        winning_rolls += possible_winning_rolls(i)\n    print(winning_rolls)\n\nmain()"
  },
  {
    "example_id": 42,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "43.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "mathcounts_participants = 28\nscience_participants = 21\nneither_participants = 6\nboth_participants = mathcounts_participants + science_participants - neither_participants\nprint(both_participants)"
  },
  {
    "example_id": 43,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "17.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "count = 0\nfor i in range(1, 201):\n    if (i % 4 == 0) and ('2' in str(i)):\n        count += 1\nprint(count)"
  },
  {
    "example_id": 44,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "72.0"
    ],
    "annotated_answers": [
      "72.0"
    ],
    "solution": "N = 500 - 90 + 7 - (400 - 60 + 5)\nprint(N)"
  },
  {
    "example_id": 45,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "# Find the number of two-digit positive integers whose digits sum to 7.\ndef sum_digits(n):\n    return n // 10 + n % 10\n\ndef count_numbers(low, high):\n    return sum(1 for i in range(low, high + 1) if sum_digits(i) == 7)\n\nprint(count_numbers(10, 99))"
  },
  {
    "example_id": 46,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "black_center_squares = 0\nfor i in range(6):\n    for j in range(6):\n        if (i == 2 and j == 2):\n            black_center_squares += 1\nprint(black_center_squares)"
  },
  {
    "example_id": 47,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "print(6+5-4*3/(2+1))"
  },
  {
    "example_id": 48,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "# Compute (-345)^4\nresult = 345**4\n# Compute (result)^2\nresult = result**2\n# Compute (result)^0\nresult = 1\n# Compute (result)^-2\nresult = result**-2\n# Compute (result)^-4\nresult = result**-4\nprint(result)"
  },
  {
    "example_id": 49,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "4007.0"
    ],
    "solution": "for i in range(1, 2004):\n    if i % 2 == 1:\n        print(i)\n        break"
  },
  {
    "example_id": 50,
    "selected_solution_index": 11,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "from math import sqrt\n\nfor i in range(2, 1000):\n    j = int(sqrt(i))\n    if i == j**2:\n        continue\n    k = int(sqrt(i - j**2))\n    if i - j**2 == k**2:\n        print(i)\n        break"
  },
  {
    "example_id": 51,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "21.0",
      "42.0",
      "63.0",
      "18.0",
      "39.0",
      "60.0",
      "15.0",
      "36.0",
      "57.0",
      "12.0",
      "33.0",
      "54.0",
      "75.0",
      "30.0",
      "51.0",
      "72.0",
      "27.0",
      "48.0",
      "69.0",
      "24.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "99.0",
      "15.0",
      "36.0",
      "57.0",
      "12.0",
      "33.0",
      "54.0",
      "9.0",
      "30.0",
      "51.0",
      "72.0",
      "27.0",
      "48.0",
      "69.0",
      "24.0",
      "45.0",
      "66.0",
      "21.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "33.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "9.0",
      "30.0",
      "51.0",
      "6.0",
      "27.0",
      "48.0",
      "69.0",
      "24.0",
      "45.0",
      "66.0",
      "21.0",
      "42.0",
      "63.0",
      "18.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "33.0",
      "54.0",
      "75.0",
      "30.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "3.0",
      "24.0",
      "45.0",
      "66.0",
      "21.0",
      "42.0",
      "63.0",
      "18.0",
      "39.0",
      "60.0",
      "15.0",
      "36.0",
      "57.0",
      "78.0",
      "33.0",
      "54.0",
      "75.0",
      "30.0",
      "51.0",
      "72.0",
      "27.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "102.0",
      "18.0",
      "39.0",
      "60.0",
      "15.0",
      "36.0",
      "57.0",
      "12.0",
      "33.0",
      "54.0",
      "75.0",
      "30.0",
      "51.0",
      "72.0",
      "27.0",
      "48.0",
      "69.0",
      "24.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "12.0",
      "33.0",
      "54.0",
      "9.0",
      "30.0",
      "51.0",
      "72.0",
      "27.0",
      "48.0",
      "69.0",
      "24.0",
      "45.0",
      "66.0",
      "21.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "33.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "6.0",
      "27.0",
      "48.0",
      "69.0",
      "24.0",
      "45.0",
      "66.0",
      "21.0",
      "42.0",
      "63.0",
      "18.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "33.0",
      "54.0",
      "75.0",
      "30.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "105.0",
      "21.0",
      "42.0",
      "63.0",
      "18.0",
      "39.0",
      "60.0",
      "15.0",
      "36.0",
      "57.0",
      "78.0",
      "33.0",
      "54.0",
      "75.0",
      "30.0",
      "51.0",
      "72.0",
      "27.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "15.0",
      "36.0",
      "57.0",
      "12.0",
      "33.0",
      "54.0",
      "75.0",
      "30.0",
      "51.0",
      "72.0",
      "27.0",
      "48.0",
      "69.0",
      "24.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "9.0",
      "30.0",
      "51.0",
      "72.0",
      "27.0",
      "48.0",
      "69.0",
      "24.0",
      "45.0",
      "66.0",
      "21.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "33.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "108.0",
      "18.0",
      "39.0",
      "60.0",
      "15.0",
      "36.0",
      "57.0",
      "12.0",
      "33.0",
      "54.0",
      "75.0",
      "30.0",
      "51.0",
      "72.0",
      "27.0",
      "48.0",
      "69.0",
      "24.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "12.0",
      "33.0",
      "54.0",
      "9.0",
      "30.0",
      "51.0",
      "72.0",
      "27.0",
      "48.0",
      "69.0",
      "24.0",
      "45.0",
      "66.0",
      "21.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "33.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "6.0",
      "27.0",
      "48.0",
      "69.0",
      "24.0",
      "45.0",
      "66.0",
      "21.0",
      "42.0",
      "63.0",
      "18.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "33.0",
      "54.0",
      "75.0",
      "30.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "105.0",
      "21.0",
      "42.0",
      "63.0",
      "18.0",
      "39.0",
      "60.0",
      "15.0",
      "36.0",
      "57.0",
      "78.0",
      "33.0",
      "54.0",
      "75.0",
      "30.0",
      "51.0",
      "72.0",
      "27.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "15.0",
      "36.0",
      "57.0",
      "12.0",
      "33.0",
      "54.0",
      "75.0",
      "30.0",
      "51.0",
      "72.0",
      "27.0",
      "48.0",
      "69.0",
      "24.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "9.0",
      "30.0",
      "51.0",
      "72.0",
      "27.0",
      "48.0",
      "69.0",
      "24.0",
      "45.0",
      "66.0",
      "21.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "33.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "108.0",
      "24.0",
      "45.0",
      "66.0",
      "21.0",
      "42.0",
      "63.0",
      "18.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "33.0",
      "54.0",
      "75.0",
      "30.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "18.0",
      "39.0",
      "60.0",
      "15.0",
      "36.0",
      "57.0",
      "78.0",
      "33.0",
      "54.0",
      "75.0",
      "30.0",
      "51.0",
      "72.0",
      "27.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "12.0",
      "33.0",
      "54.0",
      "75.0",
      "30.0",
      "51.0",
      "72.0",
      "27.0",
      "48.0",
      "69.0",
      "24.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "111.0",
      "27.0",
      "48.0",
      "69.0",
      "24.0",
      "45.0",
      "66.0",
      "21.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "33.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "15.0",
      "36.0",
      "57.0",
      "12.0",
      "33.0",
      "54.0",
      "75.0",
      "30.0",
      "51.0",
      "72.0",
      "27.0",
      "48.0",
      "69.0",
      "24.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "9.0",
      "30.0",
      "51.0",
      "72.0",
      "27.0",
      "48.0",
      "69.0",
      "24.0",
      "45.0",
      "66.0",
      "21.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "33.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "108.0",
      "24.0",
      "45.0",
      "66.0",
      "21.0",
      "42.0",
      "63.0",
      "18.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "33.0",
      "54.0",
      "75.0",
      "30.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "18.0",
      "39.0",
      "60.0",
      "15.0",
      "36.0",
      "57.0",
      "78.0",
      "33.0",
      "54.0",
      "75.0",
      "30.0",
      "51.0",
      "72.0",
      "27.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "12.0",
      "33.0",
      "54.0",
      "75.0",
      "30.0",
      "51.0",
      "72.0",
      "27.0",
      "48.0",
      "69.0",
      "24.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "111.0",
      "27.0",
      "48.0",
      "69.0",
      "24.0",
      "45.0",
      "66.0",
      "21.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "33.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "21.0",
      "42.0",
      "63.0",
      "18.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "33.0",
      "54.0",
      "75.0",
      "30.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "15.0",
      "36.0",
      "57.0",
      "78.0",
      "33.0",
      "54.0",
      "75.0",
      "30.0",
      "51.0",
      "72.0",
      "27.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "114.0",
      "30.0",
      "51.0",
      "72.0",
      "27.0",
      "48.0",
      "69.0",
      "24.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "111.0",
      "66.0",
      "87.0",
      "108.0",
      "24.0",
      "45.0",
      "66.0",
      "21.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "33.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "12.0",
      "33.0",
      "54.0",
      "75.0",
      "30.0",
      "51.0",
      "72.0",
      "27.0",
      "48.0",
      "69.0",
      "24.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "111.0",
      "27.0",
      "48.0",
      "69.0",
      "24.0",
      "45.0",
      "66.0",
      "21.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "33.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "21.0",
      "42.0",
      "63.0",
      "18.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "33.0",
      "54.0",
      "75.0",
      "30.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "15.0",
      "36.0",
      "57.0",
      "78.0",
      "33.0",
      "54.0",
      "75.0",
      "30.0",
      "51.0",
      "72.0",
      "27.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "114.0",
      "30.0",
      "51.0",
      "72.0",
      "27.0",
      "48.0",
      "69.0",
      "24.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "111.0",
      "66.0",
      "87.0",
      "108.0",
      "24.0",
      "45.0",
      "66.0",
      "21.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "33.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "18.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "33.0",
      "54.0",
      "75.0",
      "30.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "117.0",
      "33.0",
      "54.0",
      "75.0",
      "30.0",
      "51.0",
      "72.0",
      "27.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "114.0",
      "69.0",
      "90.0",
      "111.0",
      "27.0",
      "48.0",
      "69.0",
      "24.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "111.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "21.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "33.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "120.0",
      "30.0",
      "51.0",
      "72.0",
      "27.0",
      "48.0",
      "69.0",
      "24.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "111.0",
      "66.0",
      "87.0",
      "108.0",
      "24.0",
      "45.0",
      "66.0",
      "21.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "33.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "18.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "33.0",
      "54.0",
      "75.0",
      "30.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "117.0",
      "33.0",
      "54.0",
      "75.0",
      "30.0",
      "51.0",
      "72.0",
      "27.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "114.0",
      "69.0",
      "90.0",
      "111.0",
      "27.0",
      "48.0",
      "69.0",
      "24.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "111.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "21.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "33.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "120.0",
      "36.0",
      "57.0",
      "78.0",
      "33.0",
      "54.0",
      "75.0",
      "30.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "117.0",
      "72.0",
      "93.0",
      "114.0",
      "30.0",
      "51.0",
      "72.0",
      "27.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "114.0",
      "69.0",
      "90.0",
      "111.0",
      "66.0",
      "87.0",
      "108.0",
      "24.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "111.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "123.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "33.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "120.0",
      "75.0",
      "96.0",
      "117.0",
      "27.0",
      "48.0",
      "69.0",
      "24.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "111.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "21.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "33.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "120.0",
      "36.0",
      "57.0",
      "78.0",
      "33.0",
      "54.0",
      "75.0",
      "30.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "117.0",
      "72.0",
      "93.0",
      "114.0",
      "30.0",
      "51.0",
      "72.0",
      "27.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "114.0",
      "69.0",
      "90.0",
      "111.0",
      "66.0",
      "87.0",
      "108.0",
      "24.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "111.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "123.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "33.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "120.0",
      "75.0",
      "96.0",
      "117.0",
      "33.0",
      "54.0",
      "75.0",
      "30.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "117.0",
      "72.0",
      "93.0",
      "114.0",
      "69.0",
      "90.0",
      "111.0",
      "27.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "114.0",
      "69.0",
      "90.0",
      "111.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "126.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "111.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "123.0",
      "78.0",
      "99.0",
      "120.0",
      "36.0",
      "57.0",
      "78.0",
      "33.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "120.0",
      "75.0",
      "96.0",
      "117.0",
      "72.0",
      "93.0",
      "114.0",
      "24.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "111.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "123.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "33.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "120.0",
      "75.0",
      "96.0",
      "117.0",
      "33.0",
      "54.0",
      "75.0",
      "30.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "117.0",
      "72.0",
      "93.0",
      "114.0",
      "69.0",
      "90.0",
      "111.0",
      "27.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "114.0",
      "69.0",
      "90.0",
      "111.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "126.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "111.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "123.0",
      "78.0",
      "99.0",
      "120.0",
      "36.0",
      "57.0",
      "78.0",
      "33.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "120.0",
      "75.0",
      "96.0",
      "117.0",
      "72.0",
      "93.0",
      "114.0",
      "30.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "117.0",
      "72.0",
      "93.0",
      "114.0",
      "69.0",
      "90.0",
      "111.0",
      "66.0",
      "87.0",
      "108.0",
      "129.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "114.0",
      "69.0",
      "90.0",
      "111.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "126.0",
      "81.0",
      "102.0",
      "123.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "111.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "123.0",
      "78.0",
      "99.0",
      "120.0",
      "75.0",
      "96.0",
      "117.0",
      "33.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "120.0",
      "75.0",
      "96.0",
      "117.0",
      "72.0",
      "93.0",
      "114.0",
      "69.0",
      "90.0",
      "111.0",
      "132.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "111.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "123.0",
      "78.0",
      "99.0",
      "120.0",
      "36.0",
      "57.0",
      "78.0",
      "33.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "120.0",
      "75.0",
      "96.0",
      "117.0",
      "72.0",
      "93.0",
      "114.0",
      "30.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "117.0",
      "72.0",
      "93.0",
      "114.0",
      "69.0",
      "90.0",
      "111.0",
      "66.0",
      "87.0",
      "108.0",
      "129.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "114.0",
      "69.0",
      "90.0",
      "111.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "126.0",
      "81.0",
      "102.0",
      "123.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "111.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "123.0",
      "78.0",
      "99.0",
      "120.0",
      "75.0",
      "96.0",
      "117.0",
      "33.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "120.0",
      "75.0",
      "96.0",
      "117.0",
      "72.0",
      "93.0",
      "114.0",
      "69.0",
      "90.0",
      "111.0",
      "132.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "117.0",
      "72.0",
      "93.0",
      "114.0",
      "69.0",
      "90.0",
      "111.0",
      "66.0",
      "87.0",
      "108.0",
      "129.0",
      "84.0",
      "105.0",
      "126.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "114.0",
      "69.0",
      "90.0",
      "111.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "126.0",
      "81.0",
      "102.0",
      "123.0",
      "78.0",
      "99.0",
      "120.0",
      "36.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "111.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "123.0",
      "78.0",
      "99.0",
      "120.0",
      "75.0",
      "96.0",
      "117.0",
      "72.0",
      "93.0",
      "114.0",
      "135.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "120.0",
      "75.0",
      "96.0",
      "117.0",
      "72.0",
      "93.0",
      "114.0",
      "69.0",
      "90.0",
      "111.0",
      "132.0",
      "87.0",
      "108.0",
      "129.0",
      "39.0",
      "60.0",
      "81.0",
      "36.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "111.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "123.0",
      "78.0",
      "99.0",
      "120.0",
      "75.0",
      "96.0",
      "117.0",
      "33.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "120.0",
      "75.0",
      "96.0",
      "117.0",
      "72.0",
      "93.0",
      "114.0",
      "69.0",
      "90.0",
      "111.0",
      "132.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "117.0",
      "72.0",
      "93.0",
      "114.0",
      "69.0",
      "90.0",
      "111.0",
      "66.0",
      "87.0",
      "108.0",
      "129.0",
      "84.0",
      "105.0",
      "126.0",
      "42.0",
      "63.0",
      "84.0",
      "39.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "114.0",
      "69.0",
      "90.0",
      "111.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "126.0",
      "81.0",
      "102.0",
      "123.0",
      "78.0",
      "99.0",
      "120.0",
      "36.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "111.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "123.0",
      "78.0",
      "99.0",
      "120.0",
      "75.0",
      "96.0",
      "117.0",
      "72.0",
      "93.0",
      "114.0",
      "135.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "120.0",
      "75.0",
      "96.0",
      "117.0",
      "72.0",
      "93.0",
      "114.0",
      "69.0",
      "90.0",
      "111.0",
      "132.0",
      "87.0",
      "108.0",
      "129.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "117.0",
      "72.0",
      "93.0",
      "114.0",
      "69.0",
      "90.0",
      "111.0",
      "66.0",
      "87.0",
      "108.0",
      "129.0",
      "84.0",
      "105.0",
      "126.0",
      "81.0",
      "102.0",
      "123.0",
      "39.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "114.0",
      "69.0",
      "90.0",
      "111.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "126.0",
      "81.0",
      "102.0",
      "123.0",
      "78.0",
      "99.0",
      "120.0",
      "75.0",
      "96.0",
      "117.0",
      "138.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "111.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "123.0",
      "78.0",
      "99.0",
      "120.0",
      "75.0",
      "96.0",
      "117.0",
      "72.0",
      "93.0",
      "114.0",
      "135.0",
      "90.0",
      "111.0",
      "132.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "120.0",
      "75.0",
      "96.0",
      "117.0",
      "72.0",
      "93.0",
      "114.0",
      "69.0",
      "90.0",
      "111.0",
      "132.0",
      "87.0",
      "108.0",
      "129.0",
      "84.0",
      "105.0",
      "126.0",
      "36.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "111.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "123.0",
      "78.0",
      "99.0",
      "120.0",
      "75.0",
      "96.0",
      "117.0",
      "72.0",
      "93.0",
      "114.0",
      "135.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "120.0",
      "75.0",
      "96.0",
      "117.0",
      "72.0",
      "93.0",
      "114.0",
      "69.0",
      "90.0",
      "111.0",
      "132.0",
      "87.0",
      "108.0",
      "129.0",
      "45.0",
      "66.0",
      "87.0",
      "42.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "117.0",
      "72.0",
      "93.0",
      "114.0",
      "69.0",
      "90.0",
      "111.0",
      "66.0",
      "87.0",
      "108.0",
      "129.0",
      "84.0",
      "105.0",
      "126.0",
      "81.0",
      "102.0",
      "123.0",
      "39.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "114.0",
      "69.0",
      "90.0",
      "111.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "126.0",
      "81.0",
      "102.0",
      "123.0",
      "78.0",
      "99.0",
      "120.0",
      "75.0",
      "96.0",
      "117.0",
      "138.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "111.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "123.0",
      "78.0",
      "99.0",
      "120.0",
      "75.0",
      "96.0",
      "117.0",
      "72.0",
      "93.0",
      "114.0",
      "135.0",
      "90.0",
      "111.0",
      "132.0",
      "48.0",
      "69.0",
      "90.0",
      "45.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "120.0",
      "75.0",
      "96.0",
      "117.0",
      "72.0",
      "93.0",
      "114.0",
      "69.0",
      "90.0",
      "111.0",
      "132.0",
      "87.0",
      "108.0",
      "129.0",
      "84.0",
      "105.0",
      "126.0",
      "42.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "117.0",
      "72.0",
      "93.0",
      "114.0",
      "69.0",
      "90.0",
      "111.0",
      "66.0",
      "87.0",
      "108.0",
      "129.0",
      "84.0",
      "105.0",
      "126.0",
      "81.0",
      "102.0",
      "123.0",
      "78.0",
      "99.0",
      "120.0",
      "141.0",
      "57.0",
      "78.0",
      "99.0",
      "54.0",
      "75.0",
      "96.0",
      "51.0",
      "72.0",
      "93.0",
      "114.0",
      "69.0",
      "90.0",
      "111.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "126.0",
      "81.0",
      "102.0",
      "123.0",
      "78.0",
      "99.0",
      "120.0",
      "75.0",
      "96.0",
      "117.0",
      "138.0",
      "93.0",
      "114.0",
      "135.0",
      "51.0",
      "72.0",
      "93.0",
      "48.0",
      "69.0",
      "90.0",
      "111.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "123.0",
      "78.0",
      "99.0",
      "120.0",
      "75.0",
      "96.0",
      "117.0",
      "72.0",
      "93.0",
      "114.0",
      "135.0",
      "90.0",
      "111.0",
      "132.0",
      "87.0",
      "108.0",
      "129.0",
      "45.0",
      "66.0",
      "87.0",
      "108.0",
      "63.0",
      "84.0",
      "105.0",
      "60.0",
      "81.0",
      "102.0",
      "57.0",
      "78.0",
      "99.0",
      "120.0",
      "75.0",
      "96.0",
      "117.0",
      "72.0",
      "93.0",
      "114.0",
      "69.0",
      "90.0",
      "111.0",
      "132.0",
      "87.0",
      "108.0",
      "129.0",
      "84.0",
      "105.0",
      "126.0",
      "81.0",
      "102.0",
      "123.0",
      "144.0",
      "3414.0",
      "3435.0",
      "3456.0",
      "3477.0",
      "3432.0",
      "3453.0",
      "3474.0",
      "3429.0",
      "3450.0",
      "3471.0",
      "3426.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3444.0",
      "3465.0",
      "3486.0",
      "3441.0",
      "3462.0",
      "3483.0",
      "3438.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3429.0",
      "3450.0",
      "3471.0",
      "3426.0",
      "3447.0",
      "3468.0",
      "3423.0",
      "3444.0",
      "3465.0",
      "3486.0",
      "3441.0",
      "3462.0",
      "3483.0",
      "3438.0",
      "3459.0",
      "3480.0",
      "3435.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3423.0",
      "3444.0",
      "3465.0",
      "3420.0",
      "3441.0",
      "3462.0",
      "3483.0",
      "3438.0",
      "3459.0",
      "3480.0",
      "3435.0",
      "3456.0",
      "3477.0",
      "3432.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3444.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3417.0",
      "3438.0",
      "3459.0",
      "3480.0",
      "3435.0",
      "3456.0",
      "3477.0",
      "3432.0",
      "3453.0",
      "3474.0",
      "3429.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3444.0",
      "3465.0",
      "3486.0",
      "3441.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3432.0",
      "3453.0",
      "3474.0",
      "3429.0",
      "3450.0",
      "3471.0",
      "3426.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3444.0",
      "3465.0",
      "3486.0",
      "3441.0",
      "3462.0",
      "3483.0",
      "3438.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3426.0",
      "3447.0",
      "3468.0",
      "3423.0",
      "3444.0",
      "3465.0",
      "3486.0",
      "3441.0",
      "3462.0",
      "3483.0",
      "3438.0",
      "3459.0",
      "3480.0",
      "3435.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3420.0",
      "3441.0",
      "3462.0",
      "3483.0",
      "3438.0",
      "3459.0",
      "3480.0",
      "3435.0",
      "3456.0",
      "3477.0",
      "3432.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3444.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3435.0",
      "3456.0",
      "3477.0",
      "3432.0",
      "3453.0",
      "3474.0",
      "3429.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3444.0",
      "3465.0",
      "3486.0",
      "3441.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3429.0",
      "3450.0",
      "3471.0",
      "3426.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3444.0",
      "3465.0",
      "3486.0",
      "3441.0",
      "3462.0",
      "3483.0",
      "3438.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3423.0",
      "3444.0",
      "3465.0",
      "3486.0",
      "3441.0",
      "3462.0",
      "3483.0",
      "3438.0",
      "3459.0",
      "3480.0",
      "3435.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3432.0",
      "3453.0",
      "3474.0",
      "3429.0",
      "3450.0",
      "3471.0",
      "3426.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3444.0",
      "3465.0",
      "3486.0",
      "3441.0",
      "3462.0",
      "3483.0",
      "3438.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3426.0",
      "3447.0",
      "3468.0",
      "3423.0",
      "3444.0",
      "3465.0",
      "3486.0",
      "3441.0",
      "3462.0",
      "3483.0",
      "3438.0",
      "3459.0",
      "3480.0",
      "3435.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3420.0",
      "3441.0",
      "3462.0",
      "3483.0",
      "3438.0",
      "3459.0",
      "3480.0",
      "3435.0",
      "3456.0",
      "3477.0",
      "3432.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3444.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3435.0",
      "3456.0",
      "3477.0",
      "3432.0",
      "3453.0",
      "3474.0",
      "3429.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3444.0",
      "3465.0",
      "3486.0",
      "3441.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3429.0",
      "3450.0",
      "3471.0",
      "3426.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3444.0",
      "3465.0",
      "3486.0",
      "3441.0",
      "3462.0",
      "3483.0",
      "3438.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3423.0",
      "3444.0",
      "3465.0",
      "3486.0",
      "3441.0",
      "3462.0",
      "3483.0",
      "3438.0",
      "3459.0",
      "3480.0",
      "3435.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3438.0",
      "3459.0",
      "3480.0",
      "3435.0",
      "3456.0",
      "3477.0",
      "3432.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3444.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3432.0",
      "3453.0",
      "3474.0",
      "3429.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3444.0",
      "3465.0",
      "3486.0",
      "3441.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3426.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3444.0",
      "3465.0",
      "3486.0",
      "3441.0",
      "3462.0",
      "3483.0",
      "3438.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3441.0",
      "3462.0",
      "3483.0",
      "3438.0",
      "3459.0",
      "3480.0",
      "3435.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3429.0",
      "3450.0",
      "3471.0",
      "3426.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3444.0",
      "3465.0",
      "3486.0",
      "3441.0",
      "3462.0",
      "3483.0",
      "3438.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3423.0",
      "3444.0",
      "3465.0",
      "3486.0",
      "3441.0",
      "3462.0",
      "3483.0",
      "3438.0",
      "3459.0",
      "3480.0",
      "3435.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3438.0",
      "3459.0",
      "3480.0",
      "3435.0",
      "3456.0",
      "3477.0",
      "3432.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3444.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3432.0",
      "3453.0",
      "3474.0",
      "3429.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3444.0",
      "3465.0",
      "3486.0",
      "3441.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3426.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3444.0",
      "3465.0",
      "3486.0",
      "3441.0",
      "3462.0",
      "3483.0",
      "3438.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3441.0",
      "3462.0",
      "3483.0",
      "3438.0",
      "3459.0",
      "3480.0",
      "3435.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3435.0",
      "3456.0",
      "3477.0",
      "3432.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3444.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3429.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3444.0",
      "3465.0",
      "3486.0",
      "3441.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3528.0",
      "3444.0",
      "3465.0",
      "3486.0",
      "3441.0",
      "3462.0",
      "3483.0",
      "3438.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3438.0",
      "3459.0",
      "3480.0",
      "3435.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3426.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3444.0",
      "3465.0",
      "3486.0",
      "3441.0",
      "3462.0",
      "3483.0",
      "3438.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3441.0",
      "3462.0",
      "3483.0",
      "3438.0",
      "3459.0",
      "3480.0",
      "3435.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3435.0",
      "3456.0",
      "3477.0",
      "3432.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3444.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3429.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3444.0",
      "3465.0",
      "3486.0",
      "3441.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3528.0",
      "3444.0",
      "3465.0",
      "3486.0",
      "3441.0",
      "3462.0",
      "3483.0",
      "3438.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3438.0",
      "3459.0",
      "3480.0",
      "3435.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3432.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3444.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3531.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3444.0",
      "3465.0",
      "3486.0",
      "3441.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3528.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3441.0",
      "3462.0",
      "3483.0",
      "3438.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3435.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3534.0",
      "3444.0",
      "3465.0",
      "3486.0",
      "3441.0",
      "3462.0",
      "3483.0",
      "3438.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3438.0",
      "3459.0",
      "3480.0",
      "3435.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3432.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3444.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3531.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3444.0",
      "3465.0",
      "3486.0",
      "3441.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3528.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3441.0",
      "3462.0",
      "3483.0",
      "3438.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3435.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3534.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3444.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3531.0",
      "3486.0",
      "3507.0",
      "3528.0",
      "3444.0",
      "3465.0",
      "3486.0",
      "3441.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3528.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3438.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3537.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3534.0",
      "3489.0",
      "3510.0",
      "3531.0",
      "3441.0",
      "3462.0",
      "3483.0",
      "3438.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3435.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3534.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3444.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3531.0",
      "3486.0",
      "3507.0",
      "3528.0",
      "3444.0",
      "3465.0",
      "3486.0",
      "3441.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3528.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3438.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3537.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3534.0",
      "3489.0",
      "3510.0",
      "3531.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3444.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3531.0",
      "3486.0",
      "3507.0",
      "3528.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3441.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3528.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3540.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3537.0",
      "3492.0",
      "3513.0",
      "3534.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3534.0",
      "3489.0",
      "3510.0",
      "3531.0",
      "3486.0",
      "3507.0",
      "3528.0",
      "3438.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3537.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3534.0",
      "3489.0",
      "3510.0",
      "3531.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3444.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3531.0",
      "3486.0",
      "3507.0",
      "3528.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3441.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3528.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3540.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3537.0",
      "3492.0",
      "3513.0",
      "3534.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3534.0",
      "3489.0",
      "3510.0",
      "3531.0",
      "3486.0",
      "3507.0",
      "3528.0",
      "3444.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3531.0",
      "3486.0",
      "3507.0",
      "3528.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3543.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3528.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3540.0",
      "3495.0",
      "3516.0",
      "3537.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3537.0",
      "3492.0",
      "3513.0",
      "3534.0",
      "3489.0",
      "3510.0",
      "3531.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3534.0",
      "3489.0",
      "3510.0",
      "3531.0",
      "3486.0",
      "3507.0",
      "3528.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3546.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3537.0",
      "3492.0",
      "3513.0",
      "3534.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3534.0",
      "3489.0",
      "3510.0",
      "3531.0",
      "3486.0",
      "3507.0",
      "3528.0",
      "3444.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3531.0",
      "3486.0",
      "3507.0",
      "3528.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3543.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3528.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3540.0",
      "3495.0",
      "3516.0",
      "3537.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3537.0",
      "3492.0",
      "3513.0",
      "3534.0",
      "3489.0",
      "3510.0",
      "3531.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3534.0",
      "3489.0",
      "3510.0",
      "3531.0",
      "3486.0",
      "3507.0",
      "3528.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3546.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3531.0",
      "3486.0",
      "3507.0",
      "3528.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3543.0",
      "3498.0",
      "3519.0",
      "3540.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3528.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3540.0",
      "3495.0",
      "3516.0",
      "3537.0",
      "3492.0",
      "3513.0",
      "3534.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3537.0",
      "3492.0",
      "3513.0",
      "3534.0",
      "3489.0",
      "3510.0",
      "3531.0",
      "3486.0",
      "3507.0",
      "3528.0",
      "3549.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3534.0",
      "3489.0",
      "3510.0",
      "3531.0",
      "3486.0",
      "3507.0",
      "3528.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3546.0",
      "3501.0",
      "3522.0",
      "3543.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3537.0",
      "3492.0",
      "3513.0",
      "3534.0",
      "3489.0",
      "3510.0",
      "3531.0",
      "3447.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3534.0",
      "3489.0",
      "3510.0",
      "3531.0",
      "3486.0",
      "3507.0",
      "3528.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3546.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3531.0",
      "3486.0",
      "3507.0",
      "3528.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3543.0",
      "3498.0",
      "3519.0",
      "3540.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3528.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3540.0",
      "3495.0",
      "3516.0",
      "3537.0",
      "3492.0",
      "3513.0",
      "3534.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3537.0",
      "3492.0",
      "3513.0",
      "3534.0",
      "3489.0",
      "3510.0",
      "3531.0",
      "3486.0",
      "3507.0",
      "3528.0",
      "3549.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3534.0",
      "3489.0",
      "3510.0",
      "3531.0",
      "3486.0",
      "3507.0",
      "3528.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3546.0",
      "3501.0",
      "3522.0",
      "3543.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3531.0",
      "3486.0",
      "3507.0",
      "3528.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3543.0",
      "3498.0",
      "3519.0",
      "3540.0",
      "3495.0",
      "3516.0",
      "3537.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3528.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3540.0",
      "3495.0",
      "3516.0",
      "3537.0",
      "3492.0",
      "3513.0",
      "3534.0",
      "3489.0",
      "3510.0",
      "3531.0",
      "3552.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3537.0",
      "3492.0",
      "3513.0",
      "3534.0",
      "3489.0",
      "3510.0",
      "3531.0",
      "3486.0",
      "3507.0",
      "3528.0",
      "3549.0",
      "3504.0",
      "3525.0",
      "3546.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3534.0",
      "3489.0",
      "3510.0",
      "3531.0",
      "3486.0",
      "3507.0",
      "3528.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3546.0",
      "3501.0",
      "3522.0",
      "3543.0",
      "3498.0",
      "3519.0",
      "3540.0",
      "3450.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3537.0",
      "3492.0",
      "3513.0",
      "3534.0",
      "3489.0",
      "3510.0",
      "3531.0",
      "3486.0",
      "3507.0",
      "3528.0",
      "3549.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3534.0",
      "3489.0",
      "3510.0",
      "3531.0",
      "3486.0",
      "3507.0",
      "3528.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3546.0",
      "3501.0",
      "3522.0",
      "3543.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3531.0",
      "3486.0",
      "3507.0",
      "3528.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3543.0",
      "3498.0",
      "3519.0",
      "3540.0",
      "3495.0",
      "3516.0",
      "3537.0",
      "3453.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3528.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3540.0",
      "3495.0",
      "3516.0",
      "3537.0",
      "3492.0",
      "3513.0",
      "3534.0",
      "3489.0",
      "3510.0",
      "3531.0",
      "3552.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3537.0",
      "3492.0",
      "3513.0",
      "3534.0",
      "3489.0",
      "3510.0",
      "3531.0",
      "3486.0",
      "3507.0",
      "3528.0",
      "3549.0",
      "3504.0",
      "3525.0",
      "3546.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3534.0",
      "3489.0",
      "3510.0",
      "3531.0",
      "3486.0",
      "3507.0",
      "3528.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3546.0",
      "3501.0",
      "3522.0",
      "3543.0",
      "3498.0",
      "3519.0",
      "3540.0",
      "3456.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3531.0",
      "3486.0",
      "3507.0",
      "3528.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3543.0",
      "3498.0",
      "3519.0",
      "3540.0",
      "3495.0",
      "3516.0",
      "3537.0",
      "3492.0",
      "3513.0",
      "3534.0",
      "3555.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3468.0",
      "3489.0",
      "3510.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3528.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3540.0",
      "3495.0",
      "3516.0",
      "3537.0",
      "3492.0",
      "3513.0",
      "3534.0",
      "3489.0",
      "3510.0",
      "3531.0",
      "3552.0",
      "3507.0",
      "3528.0",
      "3549.0",
      "3465.0",
      "3486.0",
      "3507.0",
      "3462.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3537.0",
      "3492.0",
      "3513.0",
      "3534.0",
      "3489.0",
      "3510.0",
      "3531.0",
      "3486.0",
      "3507.0",
      "3528.0",
      "3549.0",
      "3504.0",
      "3525.0",
      "3546.0",
      "3501.0",
      "3522.0",
      "3543.0",
      "3459.0",
      "3480.0",
      "3501.0",
      "3522.0",
      "3477.0",
      "3498.0",
      "3519.0",
      "3474.0",
      "3495.0",
      "3516.0",
      "3471.0",
      "3492.0",
      "3513.0",
      "3534.0",
      "3489.0",
      "3510.0",
      "3531.0",
      "3486.0",
      "3507.0",
      "3528.0",
      "3483.0",
      "3504.0",
      "3525.0",
      "3546.0",
      "3501.0",
      "3522.0",
      "3543.0",
      "3498.0",
      "3519.0",
      "3540.0",
      "3495.0",
      "3516.0",
      "3537.0",
      "3558.0",
      "6828.0",
      "6849.0",
      "6870.0",
      "6891.0",
      "6846.0",
      "6867.0",
      "6888.0",
      "6843.0",
      "6864.0",
      "6885.0",
      "6840.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6858.0",
      "6879.0",
      "6900.0",
      "6855.0",
      "6876.0",
      "6897.0",
      "6852.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6843.0",
      "6864.0",
      "6885.0",
      "6840.0",
      "6861.0",
      "6882.0",
      "6837.0",
      "6858.0",
      "6879.0",
      "6900.0",
      "6855.0",
      "6876.0",
      "6897.0",
      "6852.0",
      "6873.0",
      "6894.0",
      "6849.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6837.0",
      "6858.0",
      "6879.0",
      "6834.0",
      "6855.0",
      "6876.0",
      "6897.0",
      "6852.0",
      "6873.0",
      "6894.0",
      "6849.0",
      "6870.0",
      "6891.0",
      "6846.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6858.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6831.0",
      "6852.0",
      "6873.0",
      "6894.0",
      "6849.0",
      "6870.0",
      "6891.0",
      "6846.0",
      "6867.0",
      "6888.0",
      "6843.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6858.0",
      "6879.0",
      "6900.0",
      "6855.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6846.0",
      "6867.0",
      "6888.0",
      "6843.0",
      "6864.0",
      "6885.0",
      "6840.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6858.0",
      "6879.0",
      "6900.0",
      "6855.0",
      "6876.0",
      "6897.0",
      "6852.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6840.0",
      "6861.0",
      "6882.0",
      "6837.0",
      "6858.0",
      "6879.0",
      "6900.0",
      "6855.0",
      "6876.0",
      "6897.0",
      "6852.0",
      "6873.0",
      "6894.0",
      "6849.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6834.0",
      "6855.0",
      "6876.0",
      "6897.0",
      "6852.0",
      "6873.0",
      "6894.0",
      "6849.0",
      "6870.0",
      "6891.0",
      "6846.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6858.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6849.0",
      "6870.0",
      "6891.0",
      "6846.0",
      "6867.0",
      "6888.0",
      "6843.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6858.0",
      "6879.0",
      "6900.0",
      "6855.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6843.0",
      "6864.0",
      "6885.0",
      "6840.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6858.0",
      "6879.0",
      "6900.0",
      "6855.0",
      "6876.0",
      "6897.0",
      "6852.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6837.0",
      "6858.0",
      "6879.0",
      "6900.0",
      "6855.0",
      "6876.0",
      "6897.0",
      "6852.0",
      "6873.0",
      "6894.0",
      "6849.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6846.0",
      "6867.0",
      "6888.0",
      "6843.0",
      "6864.0",
      "6885.0",
      "6840.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6858.0",
      "6879.0",
      "6900.0",
      "6855.0",
      "6876.0",
      "6897.0",
      "6852.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6840.0",
      "6861.0",
      "6882.0",
      "6837.0",
      "6858.0",
      "6879.0",
      "6900.0",
      "6855.0",
      "6876.0",
      "6897.0",
      "6852.0",
      "6873.0",
      "6894.0",
      "6849.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6834.0",
      "6855.0",
      "6876.0",
      "6897.0",
      "6852.0",
      "6873.0",
      "6894.0",
      "6849.0",
      "6870.0",
      "6891.0",
      "6846.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6858.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6849.0",
      "6870.0",
      "6891.0",
      "6846.0",
      "6867.0",
      "6888.0",
      "6843.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6858.0",
      "6879.0",
      "6900.0",
      "6855.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6843.0",
      "6864.0",
      "6885.0",
      "6840.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6858.0",
      "6879.0",
      "6900.0",
      "6855.0",
      "6876.0",
      "6897.0",
      "6852.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6837.0",
      "6858.0",
      "6879.0",
      "6900.0",
      "6855.0",
      "6876.0",
      "6897.0",
      "6852.0",
      "6873.0",
      "6894.0",
      "6849.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6852.0",
      "6873.0",
      "6894.0",
      "6849.0",
      "6870.0",
      "6891.0",
      "6846.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6858.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6846.0",
      "6867.0",
      "6888.0",
      "6843.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6858.0",
      "6879.0",
      "6900.0",
      "6855.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6840.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6858.0",
      "6879.0",
      "6900.0",
      "6855.0",
      "6876.0",
      "6897.0",
      "6852.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6855.0",
      "6876.0",
      "6897.0",
      "6852.0",
      "6873.0",
      "6894.0",
      "6849.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6843.0",
      "6864.0",
      "6885.0",
      "6840.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6858.0",
      "6879.0",
      "6900.0",
      "6855.0",
      "6876.0",
      "6897.0",
      "6852.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6837.0",
      "6858.0",
      "6879.0",
      "6900.0",
      "6855.0",
      "6876.0",
      "6897.0",
      "6852.0",
      "6873.0",
      "6894.0",
      "6849.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6852.0",
      "6873.0",
      "6894.0",
      "6849.0",
      "6870.0",
      "6891.0",
      "6846.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6858.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6846.0",
      "6867.0",
      "6888.0",
      "6843.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6858.0",
      "6879.0",
      "6900.0",
      "6855.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6840.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6858.0",
      "6879.0",
      "6900.0",
      "6855.0",
      "6876.0",
      "6897.0",
      "6852.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6855.0",
      "6876.0",
      "6897.0",
      "6852.0",
      "6873.0",
      "6894.0",
      "6849.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6849.0",
      "6870.0",
      "6891.0",
      "6846.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6858.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6843.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6858.0",
      "6879.0",
      "6900.0",
      "6855.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6942.0",
      "6858.0",
      "6879.0",
      "6900.0",
      "6855.0",
      "6876.0",
      "6897.0",
      "6852.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6852.0",
      "6873.0",
      "6894.0",
      "6849.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6840.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6858.0",
      "6879.0",
      "6900.0",
      "6855.0",
      "6876.0",
      "6897.0",
      "6852.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6855.0",
      "6876.0",
      "6897.0",
      "6852.0",
      "6873.0",
      "6894.0",
      "6849.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6849.0",
      "6870.0",
      "6891.0",
      "6846.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6858.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6843.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6858.0",
      "6879.0",
      "6900.0",
      "6855.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6942.0",
      "6858.0",
      "6879.0",
      "6900.0",
      "6855.0",
      "6876.0",
      "6897.0",
      "6852.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6852.0",
      "6873.0",
      "6894.0",
      "6849.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6846.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6858.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6945.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6858.0",
      "6879.0",
      "6900.0",
      "6855.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6942.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6855.0",
      "6876.0",
      "6897.0",
      "6852.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6849.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6948.0",
      "6858.0",
      "6879.0",
      "6900.0",
      "6855.0",
      "6876.0",
      "6897.0",
      "6852.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6852.0",
      "6873.0",
      "6894.0",
      "6849.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6846.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6858.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6945.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6858.0",
      "6879.0",
      "6900.0",
      "6855.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6942.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6855.0",
      "6876.0",
      "6897.0",
      "6852.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6849.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6948.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6858.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6945.0",
      "6900.0",
      "6921.0",
      "6942.0",
      "6858.0",
      "6879.0",
      "6900.0",
      "6855.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6942.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6852.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6951.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6948.0",
      "6903.0",
      "6924.0",
      "6945.0",
      "6855.0",
      "6876.0",
      "6897.0",
      "6852.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6849.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6948.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6858.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6945.0",
      "6900.0",
      "6921.0",
      "6942.0",
      "6858.0",
      "6879.0",
      "6900.0",
      "6855.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6942.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6852.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6951.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6948.0",
      "6903.0",
      "6924.0",
      "6945.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6858.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6945.0",
      "6900.0",
      "6921.0",
      "6942.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6855.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6942.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6954.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6951.0",
      "6906.0",
      "6927.0",
      "6948.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6948.0",
      "6903.0",
      "6924.0",
      "6945.0",
      "6900.0",
      "6921.0",
      "6942.0",
      "6852.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6951.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6948.0",
      "6903.0",
      "6924.0",
      "6945.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6858.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6945.0",
      "6900.0",
      "6921.0",
      "6942.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6855.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6942.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6954.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6951.0",
      "6906.0",
      "6927.0",
      "6948.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6948.0",
      "6903.0",
      "6924.0",
      "6945.0",
      "6900.0",
      "6921.0",
      "6942.0",
      "6858.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6945.0",
      "6900.0",
      "6921.0",
      "6942.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6957.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6942.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6954.0",
      "6909.0",
      "6930.0",
      "6951.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6951.0",
      "6906.0",
      "6927.0",
      "6948.0",
      "6903.0",
      "6924.0",
      "6945.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6948.0",
      "6903.0",
      "6924.0",
      "6945.0",
      "6900.0",
      "6921.0",
      "6942.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6960.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6951.0",
      "6906.0",
      "6927.0",
      "6948.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6948.0",
      "6903.0",
      "6924.0",
      "6945.0",
      "6900.0",
      "6921.0",
      "6942.0",
      "6858.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6945.0",
      "6900.0",
      "6921.0",
      "6942.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6957.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6942.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6954.0",
      "6909.0",
      "6930.0",
      "6951.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6951.0",
      "6906.0",
      "6927.0",
      "6948.0",
      "6903.0",
      "6924.0",
      "6945.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6948.0",
      "6903.0",
      "6924.0",
      "6945.0",
      "6900.0",
      "6921.0",
      "6942.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6960.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6945.0",
      "6900.0",
      "6921.0",
      "6942.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6957.0",
      "6912.0",
      "6933.0",
      "6954.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6942.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6954.0",
      "6909.0",
      "6930.0",
      "6951.0",
      "6906.0",
      "6927.0",
      "6948.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6951.0",
      "6906.0",
      "6927.0",
      "6948.0",
      "6903.0",
      "6924.0",
      "6945.0",
      "6900.0",
      "6921.0",
      "6942.0",
      "6963.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6948.0",
      "6903.0",
      "6924.0",
      "6945.0",
      "6900.0",
      "6921.0",
      "6942.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6960.0",
      "6915.0",
      "6936.0",
      "6957.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6951.0",
      "6906.0",
      "6927.0",
      "6948.0",
      "6903.0",
      "6924.0",
      "6945.0",
      "6861.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6948.0",
      "6903.0",
      "6924.0",
      "6945.0",
      "6900.0",
      "6921.0",
      "6942.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6960.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6945.0",
      "6900.0",
      "6921.0",
      "6942.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6957.0",
      "6912.0",
      "6933.0",
      "6954.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6942.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6954.0",
      "6909.0",
      "6930.0",
      "6951.0",
      "6906.0",
      "6927.0",
      "6948.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6951.0",
      "6906.0",
      "6927.0",
      "6948.0",
      "6903.0",
      "6924.0",
      "6945.0",
      "6900.0",
      "6921.0",
      "6942.0",
      "6963.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6948.0",
      "6903.0",
      "6924.0",
      "6945.0",
      "6900.0",
      "6921.0",
      "6942.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6960.0",
      "6915.0",
      "6936.0",
      "6957.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6945.0",
      "6900.0",
      "6921.0",
      "6942.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6957.0",
      "6912.0",
      "6933.0",
      "6954.0",
      "6909.0",
      "6930.0",
      "6951.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6942.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6954.0",
      "6909.0",
      "6930.0",
      "6951.0",
      "6906.0",
      "6927.0",
      "6948.0",
      "6903.0",
      "6924.0",
      "6945.0",
      "6966.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6951.0",
      "6906.0",
      "6927.0",
      "6948.0",
      "6903.0",
      "6924.0",
      "6945.0",
      "6900.0",
      "6921.0",
      "6942.0",
      "6963.0",
      "6918.0",
      "6939.0",
      "6960.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6948.0",
      "6903.0",
      "6924.0",
      "6945.0",
      "6900.0",
      "6921.0",
      "6942.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6960.0",
      "6915.0",
      "6936.0",
      "6957.0",
      "6912.0",
      "6933.0",
      "6954.0",
      "6864.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6951.0",
      "6906.0",
      "6927.0",
      "6948.0",
      "6903.0",
      "6924.0",
      "6945.0",
      "6900.0",
      "6921.0",
      "6942.0",
      "6963.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6948.0",
      "6903.0",
      "6924.0",
      "6945.0",
      "6900.0",
      "6921.0",
      "6942.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6960.0",
      "6915.0",
      "6936.0",
      "6957.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6945.0",
      "6900.0",
      "6921.0",
      "6942.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6957.0",
      "6912.0",
      "6933.0",
      "6954.0",
      "6909.0",
      "6930.0",
      "6951.0",
      "6867.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6942.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6954.0",
      "6909.0",
      "6930.0",
      "6951.0",
      "6906.0",
      "6927.0",
      "6948.0",
      "6903.0",
      "6924.0",
      "6945.0",
      "6966.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6951.0",
      "6906.0",
      "6927.0",
      "6948.0",
      "6903.0",
      "6924.0",
      "6945.0",
      "6900.0",
      "6921.0",
      "6942.0",
      "6963.0",
      "6918.0",
      "6939.0",
      "6960.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6948.0",
      "6903.0",
      "6924.0",
      "6945.0",
      "6900.0",
      "6921.0",
      "6942.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6960.0",
      "6915.0",
      "6936.0",
      "6957.0",
      "6912.0",
      "6933.0",
      "6954.0",
      "6870.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6945.0",
      "6900.0",
      "6921.0",
      "6942.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6957.0",
      "6912.0",
      "6933.0",
      "6954.0",
      "6909.0",
      "6930.0",
      "6951.0",
      "6906.0",
      "6927.0",
      "6948.0",
      "6969.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6882.0",
      "6903.0",
      "6924.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6942.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6954.0",
      "6909.0",
      "6930.0",
      "6951.0",
      "6906.0",
      "6927.0",
      "6948.0",
      "6903.0",
      "6924.0",
      "6945.0",
      "6966.0",
      "6921.0",
      "6942.0",
      "6963.0",
      "6879.0",
      "6900.0",
      "6921.0",
      "6876.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6951.0",
      "6906.0",
      "6927.0",
      "6948.0",
      "6903.0",
      "6924.0",
      "6945.0",
      "6900.0",
      "6921.0",
      "6942.0",
      "6963.0",
      "6918.0",
      "6939.0",
      "6960.0",
      "6915.0",
      "6936.0",
      "6957.0",
      "6873.0",
      "6894.0",
      "6915.0",
      "6936.0",
      "6891.0",
      "6912.0",
      "6933.0",
      "6888.0",
      "6909.0",
      "6930.0",
      "6885.0",
      "6906.0",
      "6927.0",
      "6948.0",
      "6903.0",
      "6924.0",
      "6945.0",
      "6900.0",
      "6921.0",
      "6942.0",
      "6897.0",
      "6918.0",
      "6939.0",
      "6960.0",
      "6915.0",
      "6936.0",
      "6957.0",
      "6912.0",
      "6933.0",
      "6954.0",
      "6909.0",
      "6930.0",
      "6951.0",
      "6972.0",
      "10242.0",
      "10263.0",
      "10284.0",
      "10305.0",
      "10260.0",
      "10281.0",
      "10302.0",
      "10257.0",
      "10278.0",
      "10299.0",
      "10254.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10272.0",
      "10293.0",
      "10314.0",
      "10269.0",
      "10290.0",
      "10311.0",
      "10266.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10257.0",
      "10278.0",
      "10299.0",
      "10254.0",
      "10275.0",
      "10296.0",
      "10251.0",
      "10272.0",
      "10293.0",
      "10314.0",
      "10269.0",
      "10290.0",
      "10311.0",
      "10266.0",
      "10287.0",
      "10308.0",
      "10263.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10251.0",
      "10272.0",
      "10293.0",
      "10248.0",
      "10269.0",
      "10290.0",
      "10311.0",
      "10266.0",
      "10287.0",
      "10308.0",
      "10263.0",
      "10284.0",
      "10305.0",
      "10260.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10272.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10245.0",
      "10266.0",
      "10287.0",
      "10308.0",
      "10263.0",
      "10284.0",
      "10305.0",
      "10260.0",
      "10281.0",
      "10302.0",
      "10257.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10272.0",
      "10293.0",
      "10314.0",
      "10269.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10260.0",
      "10281.0",
      "10302.0",
      "10257.0",
      "10278.0",
      "10299.0",
      "10254.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10272.0",
      "10293.0",
      "10314.0",
      "10269.0",
      "10290.0",
      "10311.0",
      "10266.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10254.0",
      "10275.0",
      "10296.0",
      "10251.0",
      "10272.0",
      "10293.0",
      "10314.0",
      "10269.0",
      "10290.0",
      "10311.0",
      "10266.0",
      "10287.0",
      "10308.0",
      "10263.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10248.0",
      "10269.0",
      "10290.0",
      "10311.0",
      "10266.0",
      "10287.0",
      "10308.0",
      "10263.0",
      "10284.0",
      "10305.0",
      "10260.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10272.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10263.0",
      "10284.0",
      "10305.0",
      "10260.0",
      "10281.0",
      "10302.0",
      "10257.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10272.0",
      "10293.0",
      "10314.0",
      "10269.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10257.0",
      "10278.0",
      "10299.0",
      "10254.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10272.0",
      "10293.0",
      "10314.0",
      "10269.0",
      "10290.0",
      "10311.0",
      "10266.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10251.0",
      "10272.0",
      "10293.0",
      "10314.0",
      "10269.0",
      "10290.0",
      "10311.0",
      "10266.0",
      "10287.0",
      "10308.0",
      "10263.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10260.0",
      "10281.0",
      "10302.0",
      "10257.0",
      "10278.0",
      "10299.0",
      "10254.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10272.0",
      "10293.0",
      "10314.0",
      "10269.0",
      "10290.0",
      "10311.0",
      "10266.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10254.0",
      "10275.0",
      "10296.0",
      "10251.0",
      "10272.0",
      "10293.0",
      "10314.0",
      "10269.0",
      "10290.0",
      "10311.0",
      "10266.0",
      "10287.0",
      "10308.0",
      "10263.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10248.0",
      "10269.0",
      "10290.0",
      "10311.0",
      "10266.0",
      "10287.0",
      "10308.0",
      "10263.0",
      "10284.0",
      "10305.0",
      "10260.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10272.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10263.0",
      "10284.0",
      "10305.0",
      "10260.0",
      "10281.0",
      "10302.0",
      "10257.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10272.0",
      "10293.0",
      "10314.0",
      "10269.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10257.0",
      "10278.0",
      "10299.0",
      "10254.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10272.0",
      "10293.0",
      "10314.0",
      "10269.0",
      "10290.0",
      "10311.0",
      "10266.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10251.0",
      "10272.0",
      "10293.0",
      "10314.0",
      "10269.0",
      "10290.0",
      "10311.0",
      "10266.0",
      "10287.0",
      "10308.0",
      "10263.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10266.0",
      "10287.0",
      "10308.0",
      "10263.0",
      "10284.0",
      "10305.0",
      "10260.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10272.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10260.0",
      "10281.0",
      "10302.0",
      "10257.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10272.0",
      "10293.0",
      "10314.0",
      "10269.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10254.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10272.0",
      "10293.0",
      "10314.0",
      "10269.0",
      "10290.0",
      "10311.0",
      "10266.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10269.0",
      "10290.0",
      "10311.0",
      "10266.0",
      "10287.0",
      "10308.0",
      "10263.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10257.0",
      "10278.0",
      "10299.0",
      "10254.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10272.0",
      "10293.0",
      "10314.0",
      "10269.0",
      "10290.0",
      "10311.0",
      "10266.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10251.0",
      "10272.0",
      "10293.0",
      "10314.0",
      "10269.0",
      "10290.0",
      "10311.0",
      "10266.0",
      "10287.0",
      "10308.0",
      "10263.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10266.0",
      "10287.0",
      "10308.0",
      "10263.0",
      "10284.0",
      "10305.0",
      "10260.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10272.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10260.0",
      "10281.0",
      "10302.0",
      "10257.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10272.0",
      "10293.0",
      "10314.0",
      "10269.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10254.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10272.0",
      "10293.0",
      "10314.0",
      "10269.0",
      "10290.0",
      "10311.0",
      "10266.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10269.0",
      "10290.0",
      "10311.0",
      "10266.0",
      "10287.0",
      "10308.0",
      "10263.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10263.0",
      "10284.0",
      "10305.0",
      "10260.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10272.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10257.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10272.0",
      "10293.0",
      "10314.0",
      "10269.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10356.0",
      "10272.0",
      "10293.0",
      "10314.0",
      "10269.0",
      "10290.0",
      "10311.0",
      "10266.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10266.0",
      "10287.0",
      "10308.0",
      "10263.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10254.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10272.0",
      "10293.0",
      "10314.0",
      "10269.0",
      "10290.0",
      "10311.0",
      "10266.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10269.0",
      "10290.0",
      "10311.0",
      "10266.0",
      "10287.0",
      "10308.0",
      "10263.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10263.0",
      "10284.0",
      "10305.0",
      "10260.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10272.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10257.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10272.0",
      "10293.0",
      "10314.0",
      "10269.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10356.0",
      "10272.0",
      "10293.0",
      "10314.0",
      "10269.0",
      "10290.0",
      "10311.0",
      "10266.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10266.0",
      "10287.0",
      "10308.0",
      "10263.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10260.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10272.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10359.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10272.0",
      "10293.0",
      "10314.0",
      "10269.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10356.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10269.0",
      "10290.0",
      "10311.0",
      "10266.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10263.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10362.0",
      "10272.0",
      "10293.0",
      "10314.0",
      "10269.0",
      "10290.0",
      "10311.0",
      "10266.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10266.0",
      "10287.0",
      "10308.0",
      "10263.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10260.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10272.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10359.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10272.0",
      "10293.0",
      "10314.0",
      "10269.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10356.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10269.0",
      "10290.0",
      "10311.0",
      "10266.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10263.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10362.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10272.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10359.0",
      "10314.0",
      "10335.0",
      "10356.0",
      "10272.0",
      "10293.0",
      "10314.0",
      "10269.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10356.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10266.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10365.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10362.0",
      "10317.0",
      "10338.0",
      "10359.0",
      "10269.0",
      "10290.0",
      "10311.0",
      "10266.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10263.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10362.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10272.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10359.0",
      "10314.0",
      "10335.0",
      "10356.0",
      "10272.0",
      "10293.0",
      "10314.0",
      "10269.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10356.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10266.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10365.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10362.0",
      "10317.0",
      "10338.0",
      "10359.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10272.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10359.0",
      "10314.0",
      "10335.0",
      "10356.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10269.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10356.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10368.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10365.0",
      "10320.0",
      "10341.0",
      "10362.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10362.0",
      "10317.0",
      "10338.0",
      "10359.0",
      "10314.0",
      "10335.0",
      "10356.0",
      "10266.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10365.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10362.0",
      "10317.0",
      "10338.0",
      "10359.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10272.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10359.0",
      "10314.0",
      "10335.0",
      "10356.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10269.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10356.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10368.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10365.0",
      "10320.0",
      "10341.0",
      "10362.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10362.0",
      "10317.0",
      "10338.0",
      "10359.0",
      "10314.0",
      "10335.0",
      "10356.0",
      "10272.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10359.0",
      "10314.0",
      "10335.0",
      "10356.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10371.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10356.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10368.0",
      "10323.0",
      "10344.0",
      "10365.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10365.0",
      "10320.0",
      "10341.0",
      "10362.0",
      "10317.0",
      "10338.0",
      "10359.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10362.0",
      "10317.0",
      "10338.0",
      "10359.0",
      "10314.0",
      "10335.0",
      "10356.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10374.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10365.0",
      "10320.0",
      "10341.0",
      "10362.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10362.0",
      "10317.0",
      "10338.0",
      "10359.0",
      "10314.0",
      "10335.0",
      "10356.0",
      "10272.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10359.0",
      "10314.0",
      "10335.0",
      "10356.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10371.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10356.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10368.0",
      "10323.0",
      "10344.0",
      "10365.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10365.0",
      "10320.0",
      "10341.0",
      "10362.0",
      "10317.0",
      "10338.0",
      "10359.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10362.0",
      "10317.0",
      "10338.0",
      "10359.0",
      "10314.0",
      "10335.0",
      "10356.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10374.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10359.0",
      "10314.0",
      "10335.0",
      "10356.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10371.0",
      "10326.0",
      "10347.0",
      "10368.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10356.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10368.0",
      "10323.0",
      "10344.0",
      "10365.0",
      "10320.0",
      "10341.0",
      "10362.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10365.0",
      "10320.0",
      "10341.0",
      "10362.0",
      "10317.0",
      "10338.0",
      "10359.0",
      "10314.0",
      "10335.0",
      "10356.0",
      "10377.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10362.0",
      "10317.0",
      "10338.0",
      "10359.0",
      "10314.0",
      "10335.0",
      "10356.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10374.0",
      "10329.0",
      "10350.0",
      "10371.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10365.0",
      "10320.0",
      "10341.0",
      "10362.0",
      "10317.0",
      "10338.0",
      "10359.0",
      "10275.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10362.0",
      "10317.0",
      "10338.0",
      "10359.0",
      "10314.0",
      "10335.0",
      "10356.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10374.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10359.0",
      "10314.0",
      "10335.0",
      "10356.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10371.0",
      "10326.0",
      "10347.0",
      "10368.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10356.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10368.0",
      "10323.0",
      "10344.0",
      "10365.0",
      "10320.0",
      "10341.0",
      "10362.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10365.0",
      "10320.0",
      "10341.0",
      "10362.0",
      "10317.0",
      "10338.0",
      "10359.0",
      "10314.0",
      "10335.0",
      "10356.0",
      "10377.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10362.0",
      "10317.0",
      "10338.0",
      "10359.0",
      "10314.0",
      "10335.0",
      "10356.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10374.0",
      "10329.0",
      "10350.0",
      "10371.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10359.0",
      "10314.0",
      "10335.0",
      "10356.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10371.0",
      "10326.0",
      "10347.0",
      "10368.0",
      "10323.0",
      "10344.0",
      "10365.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10356.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10368.0",
      "10323.0",
      "10344.0",
      "10365.0",
      "10320.0",
      "10341.0",
      "10362.0",
      "10317.0",
      "10338.0",
      "10359.0",
      "10380.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10365.0",
      "10320.0",
      "10341.0",
      "10362.0",
      "10317.0",
      "10338.0",
      "10359.0",
      "10314.0",
      "10335.0",
      "10356.0",
      "10377.0",
      "10332.0",
      "10353.0",
      "10374.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10362.0",
      "10317.0",
      "10338.0",
      "10359.0",
      "10314.0",
      "10335.0",
      "10356.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10374.0",
      "10329.0",
      "10350.0",
      "10371.0",
      "10326.0",
      "10347.0",
      "10368.0",
      "10278.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10365.0",
      "10320.0",
      "10341.0",
      "10362.0",
      "10317.0",
      "10338.0",
      "10359.0",
      "10314.0",
      "10335.0",
      "10356.0",
      "10377.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10362.0",
      "10317.0",
      "10338.0",
      "10359.0",
      "10314.0",
      "10335.0",
      "10356.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10374.0",
      "10329.0",
      "10350.0",
      "10371.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10359.0",
      "10314.0",
      "10335.0",
      "10356.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10371.0",
      "10326.0",
      "10347.0",
      "10368.0",
      "10323.0",
      "10344.0",
      "10365.0",
      "10281.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10356.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10368.0",
      "10323.0",
      "10344.0",
      "10365.0",
      "10320.0",
      "10341.0",
      "10362.0",
      "10317.0",
      "10338.0",
      "10359.0",
      "10380.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10365.0",
      "10320.0",
      "10341.0",
      "10362.0",
      "10317.0",
      "10338.0",
      "10359.0",
      "10314.0",
      "10335.0",
      "10356.0",
      "10377.0",
      "10332.0",
      "10353.0",
      "10374.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10362.0",
      "10317.0",
      "10338.0",
      "10359.0",
      "10314.0",
      "10335.0",
      "10356.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10374.0",
      "10329.0",
      "10350.0",
      "10371.0",
      "10326.0",
      "10347.0",
      "10368.0",
      "10284.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10359.0",
      "10314.0",
      "10335.0",
      "10356.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10371.0",
      "10326.0",
      "10347.0",
      "10368.0",
      "10323.0",
      "10344.0",
      "10365.0",
      "10320.0",
      "10341.0",
      "10362.0",
      "10383.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10296.0",
      "10317.0",
      "10338.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10356.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10368.0",
      "10323.0",
      "10344.0",
      "10365.0",
      "10320.0",
      "10341.0",
      "10362.0",
      "10317.0",
      "10338.0",
      "10359.0",
      "10380.0",
      "10335.0",
      "10356.0",
      "10377.0",
      "10293.0",
      "10314.0",
      "10335.0",
      "10290.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10365.0",
      "10320.0",
      "10341.0",
      "10362.0",
      "10317.0",
      "10338.0",
      "10359.0",
      "10314.0",
      "10335.0",
      "10356.0",
      "10377.0",
      "10332.0",
      "10353.0",
      "10374.0",
      "10329.0",
      "10350.0",
      "10371.0",
      "10287.0",
      "10308.0",
      "10329.0",
      "10350.0",
      "10305.0",
      "10326.0",
      "10347.0",
      "10302.0",
      "10323.0",
      "10344.0",
      "10299.0",
      "10320.0",
      "10341.0",
      "10362.0",
      "10317.0",
      "10338.0",
      "10359.0",
      "10314.0",
      "10335.0",
      "10356.0",
      "10311.0",
      "10332.0",
      "10353.0",
      "10374.0",
      "10329.0",
      "10350.0",
      "10371.0",
      "10326.0",
      "10347.0",
      "10368.0",
      "10323.0",
      "10344.0",
      "10365.0",
      "10386.0",
      "13656.0",
      "13677.0",
      "13698.0",
      "13719.0",
      "13674.0",
      "13695.0",
      "13716.0",
      "13671.0",
      "13692.0",
      "13713.0",
      "13668.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13686.0",
      "13707.0",
      "13728.0",
      "13683.0",
      "13704.0",
      "13725.0",
      "13680.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13671.0",
      "13692.0",
      "13713.0",
      "13668.0",
      "13689.0",
      "13710.0",
      "13665.0",
      "13686.0",
      "13707.0",
      "13728.0",
      "13683.0",
      "13704.0",
      "13725.0",
      "13680.0",
      "13701.0",
      "13722.0",
      "13677.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13665.0",
      "13686.0",
      "13707.0",
      "13662.0",
      "13683.0",
      "13704.0",
      "13725.0",
      "13680.0",
      "13701.0",
      "13722.0",
      "13677.0",
      "13698.0",
      "13719.0",
      "13674.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13686.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13659.0",
      "13680.0",
      "13701.0",
      "13722.0",
      "13677.0",
      "13698.0",
      "13719.0",
      "13674.0",
      "13695.0",
      "13716.0",
      "13671.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13686.0",
      "13707.0",
      "13728.0",
      "13683.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13674.0",
      "13695.0",
      "13716.0",
      "13671.0",
      "13692.0",
      "13713.0",
      "13668.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13686.0",
      "13707.0",
      "13728.0",
      "13683.0",
      "13704.0",
      "13725.0",
      "13680.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13668.0",
      "13689.0",
      "13710.0",
      "13665.0",
      "13686.0",
      "13707.0",
      "13728.0",
      "13683.0",
      "13704.0",
      "13725.0",
      "13680.0",
      "13701.0",
      "13722.0",
      "13677.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13662.0",
      "13683.0",
      "13704.0",
      "13725.0",
      "13680.0",
      "13701.0",
      "13722.0",
      "13677.0",
      "13698.0",
      "13719.0",
      "13674.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13686.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13677.0",
      "13698.0",
      "13719.0",
      "13674.0",
      "13695.0",
      "13716.0",
      "13671.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13686.0",
      "13707.0",
      "13728.0",
      "13683.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13671.0",
      "13692.0",
      "13713.0",
      "13668.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13686.0",
      "13707.0",
      "13728.0",
      "13683.0",
      "13704.0",
      "13725.0",
      "13680.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13665.0",
      "13686.0",
      "13707.0",
      "13728.0",
      "13683.0",
      "13704.0",
      "13725.0",
      "13680.0",
      "13701.0",
      "13722.0",
      "13677.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13674.0",
      "13695.0",
      "13716.0",
      "13671.0",
      "13692.0",
      "13713.0",
      "13668.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13686.0",
      "13707.0",
      "13728.0",
      "13683.0",
      "13704.0",
      "13725.0",
      "13680.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13668.0",
      "13689.0",
      "13710.0",
      "13665.0",
      "13686.0",
      "13707.0",
      "13728.0",
      "13683.0",
      "13704.0",
      "13725.0",
      "13680.0",
      "13701.0",
      "13722.0",
      "13677.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13662.0",
      "13683.0",
      "13704.0",
      "13725.0",
      "13680.0",
      "13701.0",
      "13722.0",
      "13677.0",
      "13698.0",
      "13719.0",
      "13674.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13686.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13677.0",
      "13698.0",
      "13719.0",
      "13674.0",
      "13695.0",
      "13716.0",
      "13671.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13686.0",
      "13707.0",
      "13728.0",
      "13683.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13671.0",
      "13692.0",
      "13713.0",
      "13668.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13686.0",
      "13707.0",
      "13728.0",
      "13683.0",
      "13704.0",
      "13725.0",
      "13680.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13665.0",
      "13686.0",
      "13707.0",
      "13728.0",
      "13683.0",
      "13704.0",
      "13725.0",
      "13680.0",
      "13701.0",
      "13722.0",
      "13677.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13680.0",
      "13701.0",
      "13722.0",
      "13677.0",
      "13698.0",
      "13719.0",
      "13674.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13686.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13674.0",
      "13695.0",
      "13716.0",
      "13671.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13686.0",
      "13707.0",
      "13728.0",
      "13683.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13668.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13686.0",
      "13707.0",
      "13728.0",
      "13683.0",
      "13704.0",
      "13725.0",
      "13680.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13683.0",
      "13704.0",
      "13725.0",
      "13680.0",
      "13701.0",
      "13722.0",
      "13677.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13671.0",
      "13692.0",
      "13713.0",
      "13668.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13686.0",
      "13707.0",
      "13728.0",
      "13683.0",
      "13704.0",
      "13725.0",
      "13680.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13665.0",
      "13686.0",
      "13707.0",
      "13728.0",
      "13683.0",
      "13704.0",
      "13725.0",
      "13680.0",
      "13701.0",
      "13722.0",
      "13677.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13680.0",
      "13701.0",
      "13722.0",
      "13677.0",
      "13698.0",
      "13719.0",
      "13674.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13686.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13674.0",
      "13695.0",
      "13716.0",
      "13671.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13686.0",
      "13707.0",
      "13728.0",
      "13683.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13668.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13686.0",
      "13707.0",
      "13728.0",
      "13683.0",
      "13704.0",
      "13725.0",
      "13680.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13683.0",
      "13704.0",
      "13725.0",
      "13680.0",
      "13701.0",
      "13722.0",
      "13677.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13677.0",
      "13698.0",
      "13719.0",
      "13674.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13686.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13671.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13686.0",
      "13707.0",
      "13728.0",
      "13683.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13770.0",
      "13686.0",
      "13707.0",
      "13728.0",
      "13683.0",
      "13704.0",
      "13725.0",
      "13680.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13680.0",
      "13701.0",
      "13722.0",
      "13677.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13668.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13686.0",
      "13707.0",
      "13728.0",
      "13683.0",
      "13704.0",
      "13725.0",
      "13680.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13683.0",
      "13704.0",
      "13725.0",
      "13680.0",
      "13701.0",
      "13722.0",
      "13677.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13677.0",
      "13698.0",
      "13719.0",
      "13674.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13686.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13671.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13686.0",
      "13707.0",
      "13728.0",
      "13683.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13770.0",
      "13686.0",
      "13707.0",
      "13728.0",
      "13683.0",
      "13704.0",
      "13725.0",
      "13680.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13680.0",
      "13701.0",
      "13722.0",
      "13677.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13674.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13686.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13773.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13686.0",
      "13707.0",
      "13728.0",
      "13683.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13770.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13683.0",
      "13704.0",
      "13725.0",
      "13680.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13677.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13776.0",
      "13686.0",
      "13707.0",
      "13728.0",
      "13683.0",
      "13704.0",
      "13725.0",
      "13680.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13680.0",
      "13701.0",
      "13722.0",
      "13677.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13674.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13686.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13773.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13686.0",
      "13707.0",
      "13728.0",
      "13683.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13770.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13683.0",
      "13704.0",
      "13725.0",
      "13680.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13677.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13776.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13686.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13773.0",
      "13728.0",
      "13749.0",
      "13770.0",
      "13686.0",
      "13707.0",
      "13728.0",
      "13683.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13770.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13680.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13779.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13776.0",
      "13731.0",
      "13752.0",
      "13773.0",
      "13683.0",
      "13704.0",
      "13725.0",
      "13680.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13677.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13776.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13686.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13773.0",
      "13728.0",
      "13749.0",
      "13770.0",
      "13686.0",
      "13707.0",
      "13728.0",
      "13683.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13770.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13680.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13779.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13776.0",
      "13731.0",
      "13752.0",
      "13773.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13686.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13773.0",
      "13728.0",
      "13749.0",
      "13770.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13683.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13770.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13782.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13779.0",
      "13734.0",
      "13755.0",
      "13776.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13776.0",
      "13731.0",
      "13752.0",
      "13773.0",
      "13728.0",
      "13749.0",
      "13770.0",
      "13680.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13779.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13776.0",
      "13731.0",
      "13752.0",
      "13773.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13686.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13773.0",
      "13728.0",
      "13749.0",
      "13770.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13683.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13770.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13782.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13779.0",
      "13734.0",
      "13755.0",
      "13776.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13776.0",
      "13731.0",
      "13752.0",
      "13773.0",
      "13728.0",
      "13749.0",
      "13770.0",
      "13686.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13773.0",
      "13728.0",
      "13749.0",
      "13770.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13785.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13770.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13782.0",
      "13737.0",
      "13758.0",
      "13779.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13779.0",
      "13734.0",
      "13755.0",
      "13776.0",
      "13731.0",
      "13752.0",
      "13773.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13776.0",
      "13731.0",
      "13752.0",
      "13773.0",
      "13728.0",
      "13749.0",
      "13770.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13788.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13779.0",
      "13734.0",
      "13755.0",
      "13776.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13776.0",
      "13731.0",
      "13752.0",
      "13773.0",
      "13728.0",
      "13749.0",
      "13770.0",
      "13686.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13773.0",
      "13728.0",
      "13749.0",
      "13770.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13785.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13770.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13782.0",
      "13737.0",
      "13758.0",
      "13779.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13779.0",
      "13734.0",
      "13755.0",
      "13776.0",
      "13731.0",
      "13752.0",
      "13773.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13776.0",
      "13731.0",
      "13752.0",
      "13773.0",
      "13728.0",
      "13749.0",
      "13770.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13788.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13773.0",
      "13728.0",
      "13749.0",
      "13770.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13785.0",
      "13740.0",
      "13761.0",
      "13782.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13770.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13782.0",
      "13737.0",
      "13758.0",
      "13779.0",
      "13734.0",
      "13755.0",
      "13776.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13779.0",
      "13734.0",
      "13755.0",
      "13776.0",
      "13731.0",
      "13752.0",
      "13773.0",
      "13728.0",
      "13749.0",
      "13770.0",
      "13791.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13776.0",
      "13731.0",
      "13752.0",
      "13773.0",
      "13728.0",
      "13749.0",
      "13770.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13788.0",
      "13743.0",
      "13764.0",
      "13785.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13779.0",
      "13734.0",
      "13755.0",
      "13776.0",
      "13731.0",
      "13752.0",
      "13773.0",
      "13689.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13776.0",
      "13731.0",
      "13752.0",
      "13773.0",
      "13728.0",
      "13749.0",
      "13770.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13788.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13773.0",
      "13728.0",
      "13749.0",
      "13770.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13785.0",
      "13740.0",
      "13761.0",
      "13782.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13770.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13782.0",
      "13737.0",
      "13758.0",
      "13779.0",
      "13734.0",
      "13755.0",
      "13776.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13779.0",
      "13734.0",
      "13755.0",
      "13776.0",
      "13731.0",
      "13752.0",
      "13773.0",
      "13728.0",
      "13749.0",
      "13770.0",
      "13791.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13776.0",
      "13731.0",
      "13752.0",
      "13773.0",
      "13728.0",
      "13749.0",
      "13770.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13788.0",
      "13743.0",
      "13764.0",
      "13785.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13773.0",
      "13728.0",
      "13749.0",
      "13770.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13785.0",
      "13740.0",
      "13761.0",
      "13782.0",
      "13737.0",
      "13758.0",
      "13779.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13770.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13782.0",
      "13737.0",
      "13758.0",
      "13779.0",
      "13734.0",
      "13755.0",
      "13776.0",
      "13731.0",
      "13752.0",
      "13773.0",
      "13794.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13779.0",
      "13734.0",
      "13755.0",
      "13776.0",
      "13731.0",
      "13752.0",
      "13773.0",
      "13728.0",
      "13749.0",
      "13770.0",
      "13791.0",
      "13746.0",
      "13767.0",
      "13788.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13776.0",
      "13731.0",
      "13752.0",
      "13773.0",
      "13728.0",
      "13749.0",
      "13770.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13788.0",
      "13743.0",
      "13764.0",
      "13785.0",
      "13740.0",
      "13761.0",
      "13782.0",
      "13692.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13779.0",
      "13734.0",
      "13755.0",
      "13776.0",
      "13731.0",
      "13752.0",
      "13773.0",
      "13728.0",
      "13749.0",
      "13770.0",
      "13791.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13776.0",
      "13731.0",
      "13752.0",
      "13773.0",
      "13728.0",
      "13749.0",
      "13770.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13788.0",
      "13743.0",
      "13764.0",
      "13785.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13773.0",
      "13728.0",
      "13749.0",
      "13770.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13785.0",
      "13740.0",
      "13761.0",
      "13782.0",
      "13737.0",
      "13758.0",
      "13779.0",
      "13695.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13770.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13782.0",
      "13737.0",
      "13758.0",
      "13779.0",
      "13734.0",
      "13755.0",
      "13776.0",
      "13731.0",
      "13752.0",
      "13773.0",
      "13794.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13779.0",
      "13734.0",
      "13755.0",
      "13776.0",
      "13731.0",
      "13752.0",
      "13773.0",
      "13728.0",
      "13749.0",
      "13770.0",
      "13791.0",
      "13746.0",
      "13767.0",
      "13788.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13776.0",
      "13731.0",
      "13752.0",
      "13773.0",
      "13728.0",
      "13749.0",
      "13770.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13788.0",
      "13743.0",
      "13764.0",
      "13785.0",
      "13740.0",
      "13761.0",
      "13782.0",
      "13698.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13773.0",
      "13728.0",
      "13749.0",
      "13770.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13785.0",
      "13740.0",
      "13761.0",
      "13782.0",
      "13737.0",
      "13758.0",
      "13779.0",
      "13734.0",
      "13755.0",
      "13776.0",
      "13797.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13710.0",
      "13731.0",
      "13752.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13770.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13782.0",
      "13737.0",
      "13758.0",
      "13779.0",
      "13734.0",
      "13755.0",
      "13776.0",
      "13731.0",
      "13752.0",
      "13773.0",
      "13794.0",
      "13749.0",
      "13770.0",
      "13791.0",
      "13707.0",
      "13728.0",
      "13749.0",
      "13704.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13779.0",
      "13734.0",
      "13755.0",
      "13776.0",
      "13731.0",
      "13752.0",
      "13773.0",
      "13728.0",
      "13749.0",
      "13770.0",
      "13791.0",
      "13746.0",
      "13767.0",
      "13788.0",
      "13743.0",
      "13764.0",
      "13785.0",
      "13701.0",
      "13722.0",
      "13743.0",
      "13764.0",
      "13719.0",
      "13740.0",
      "13761.0",
      "13716.0",
      "13737.0",
      "13758.0",
      "13713.0",
      "13734.0",
      "13755.0",
      "13776.0",
      "13731.0",
      "13752.0",
      "13773.0",
      "13728.0",
      "13749.0",
      "13770.0",
      "13725.0",
      "13746.0",
      "13767.0",
      "13788.0",
      "13743.0",
      "13764.0",
      "13785.0",
      "13740.0",
      "13761.0",
      "13782.0",
      "13737.0",
      "13758.0",
      "13779.0",
      "13800.0",
      "17070.0",
      "17091.0",
      "17112.0",
      "17133.0",
      "17088.0",
      "17109.0",
      "17130.0",
      "17085.0",
      "17106.0",
      "17127.0",
      "17082.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17100.0",
      "17121.0",
      "17142.0",
      "17097.0",
      "17118.0",
      "17139.0",
      "17094.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17085.0",
      "17106.0",
      "17127.0",
      "17082.0",
      "17103.0",
      "17124.0",
      "17079.0",
      "17100.0",
      "17121.0",
      "17142.0",
      "17097.0",
      "17118.0",
      "17139.0",
      "17094.0",
      "17115.0",
      "17136.0",
      "17091.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17079.0",
      "17100.0",
      "17121.0",
      "17076.0",
      "17097.0",
      "17118.0",
      "17139.0",
      "17094.0",
      "17115.0",
      "17136.0",
      "17091.0",
      "17112.0",
      "17133.0",
      "17088.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17100.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17073.0",
      "17094.0",
      "17115.0",
      "17136.0",
      "17091.0",
      "17112.0",
      "17133.0",
      "17088.0",
      "17109.0",
      "17130.0",
      "17085.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17100.0",
      "17121.0",
      "17142.0",
      "17097.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17088.0",
      "17109.0",
      "17130.0",
      "17085.0",
      "17106.0",
      "17127.0",
      "17082.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17100.0",
      "17121.0",
      "17142.0",
      "17097.0",
      "17118.0",
      "17139.0",
      "17094.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17082.0",
      "17103.0",
      "17124.0",
      "17079.0",
      "17100.0",
      "17121.0",
      "17142.0",
      "17097.0",
      "17118.0",
      "17139.0",
      "17094.0",
      "17115.0",
      "17136.0",
      "17091.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17076.0",
      "17097.0",
      "17118.0",
      "17139.0",
      "17094.0",
      "17115.0",
      "17136.0",
      "17091.0",
      "17112.0",
      "17133.0",
      "17088.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17100.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17091.0",
      "17112.0",
      "17133.0",
      "17088.0",
      "17109.0",
      "17130.0",
      "17085.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17100.0",
      "17121.0",
      "17142.0",
      "17097.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17085.0",
      "17106.0",
      "17127.0",
      "17082.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17100.0",
      "17121.0",
      "17142.0",
      "17097.0",
      "17118.0",
      "17139.0",
      "17094.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17079.0",
      "17100.0",
      "17121.0",
      "17142.0",
      "17097.0",
      "17118.0",
      "17139.0",
      "17094.0",
      "17115.0",
      "17136.0",
      "17091.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17088.0",
      "17109.0",
      "17130.0",
      "17085.0",
      "17106.0",
      "17127.0",
      "17082.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17100.0",
      "17121.0",
      "17142.0",
      "17097.0",
      "17118.0",
      "17139.0",
      "17094.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17082.0",
      "17103.0",
      "17124.0",
      "17079.0",
      "17100.0",
      "17121.0",
      "17142.0",
      "17097.0",
      "17118.0",
      "17139.0",
      "17094.0",
      "17115.0",
      "17136.0",
      "17091.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17076.0",
      "17097.0",
      "17118.0",
      "17139.0",
      "17094.0",
      "17115.0",
      "17136.0",
      "17091.0",
      "17112.0",
      "17133.0",
      "17088.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17100.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17091.0",
      "17112.0",
      "17133.0",
      "17088.0",
      "17109.0",
      "17130.0",
      "17085.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17100.0",
      "17121.0",
      "17142.0",
      "17097.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17085.0",
      "17106.0",
      "17127.0",
      "17082.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17100.0",
      "17121.0",
      "17142.0",
      "17097.0",
      "17118.0",
      "17139.0",
      "17094.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17079.0",
      "17100.0",
      "17121.0",
      "17142.0",
      "17097.0",
      "17118.0",
      "17139.0",
      "17094.0",
      "17115.0",
      "17136.0",
      "17091.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17094.0",
      "17115.0",
      "17136.0",
      "17091.0",
      "17112.0",
      "17133.0",
      "17088.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17100.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17088.0",
      "17109.0",
      "17130.0",
      "17085.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17100.0",
      "17121.0",
      "17142.0",
      "17097.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17082.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17100.0",
      "17121.0",
      "17142.0",
      "17097.0",
      "17118.0",
      "17139.0",
      "17094.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17097.0",
      "17118.0",
      "17139.0",
      "17094.0",
      "17115.0",
      "17136.0",
      "17091.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17085.0",
      "17106.0",
      "17127.0",
      "17082.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17100.0",
      "17121.0",
      "17142.0",
      "17097.0",
      "17118.0",
      "17139.0",
      "17094.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17079.0",
      "17100.0",
      "17121.0",
      "17142.0",
      "17097.0",
      "17118.0",
      "17139.0",
      "17094.0",
      "17115.0",
      "17136.0",
      "17091.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17094.0",
      "17115.0",
      "17136.0",
      "17091.0",
      "17112.0",
      "17133.0",
      "17088.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17100.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17088.0",
      "17109.0",
      "17130.0",
      "17085.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17100.0",
      "17121.0",
      "17142.0",
      "17097.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17082.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17100.0",
      "17121.0",
      "17142.0",
      "17097.0",
      "17118.0",
      "17139.0",
      "17094.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17097.0",
      "17118.0",
      "17139.0",
      "17094.0",
      "17115.0",
      "17136.0",
      "17091.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17091.0",
      "17112.0",
      "17133.0",
      "17088.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17100.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17085.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17100.0",
      "17121.0",
      "17142.0",
      "17097.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17184.0",
      "17100.0",
      "17121.0",
      "17142.0",
      "17097.0",
      "17118.0",
      "17139.0",
      "17094.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17094.0",
      "17115.0",
      "17136.0",
      "17091.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17082.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17100.0",
      "17121.0",
      "17142.0",
      "17097.0",
      "17118.0",
      "17139.0",
      "17094.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17097.0",
      "17118.0",
      "17139.0",
      "17094.0",
      "17115.0",
      "17136.0",
      "17091.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17091.0",
      "17112.0",
      "17133.0",
      "17088.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17100.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17085.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17100.0",
      "17121.0",
      "17142.0",
      "17097.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17184.0",
      "17100.0",
      "17121.0",
      "17142.0",
      "17097.0",
      "17118.0",
      "17139.0",
      "17094.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17094.0",
      "17115.0",
      "17136.0",
      "17091.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17088.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17100.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17187.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17100.0",
      "17121.0",
      "17142.0",
      "17097.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17184.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17097.0",
      "17118.0",
      "17139.0",
      "17094.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17091.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17190.0",
      "17100.0",
      "17121.0",
      "17142.0",
      "17097.0",
      "17118.0",
      "17139.0",
      "17094.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17094.0",
      "17115.0",
      "17136.0",
      "17091.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17088.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17100.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17187.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17100.0",
      "17121.0",
      "17142.0",
      "17097.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17184.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17097.0",
      "17118.0",
      "17139.0",
      "17094.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17091.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17190.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17100.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17187.0",
      "17142.0",
      "17163.0",
      "17184.0",
      "17100.0",
      "17121.0",
      "17142.0",
      "17097.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17184.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17094.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17193.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17190.0",
      "17145.0",
      "17166.0",
      "17187.0",
      "17097.0",
      "17118.0",
      "17139.0",
      "17094.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17091.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17190.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17100.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17187.0",
      "17142.0",
      "17163.0",
      "17184.0",
      "17100.0",
      "17121.0",
      "17142.0",
      "17097.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17184.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17094.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17193.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17190.0",
      "17145.0",
      "17166.0",
      "17187.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17100.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17187.0",
      "17142.0",
      "17163.0",
      "17184.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17097.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17184.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17196.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17193.0",
      "17148.0",
      "17169.0",
      "17190.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17190.0",
      "17145.0",
      "17166.0",
      "17187.0",
      "17142.0",
      "17163.0",
      "17184.0",
      "17094.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17193.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17190.0",
      "17145.0",
      "17166.0",
      "17187.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17100.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17187.0",
      "17142.0",
      "17163.0",
      "17184.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17097.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17184.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17196.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17193.0",
      "17148.0",
      "17169.0",
      "17190.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17190.0",
      "17145.0",
      "17166.0",
      "17187.0",
      "17142.0",
      "17163.0",
      "17184.0",
      "17100.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17187.0",
      "17142.0",
      "17163.0",
      "17184.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17199.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17184.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17196.0",
      "17151.0",
      "17172.0",
      "17193.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17193.0",
      "17148.0",
      "17169.0",
      "17190.0",
      "17145.0",
      "17166.0",
      "17187.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17190.0",
      "17145.0",
      "17166.0",
      "17187.0",
      "17142.0",
      "17163.0",
      "17184.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17202.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17193.0",
      "17148.0",
      "17169.0",
      "17190.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17190.0",
      "17145.0",
      "17166.0",
      "17187.0",
      "17142.0",
      "17163.0",
      "17184.0",
      "17100.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17187.0",
      "17142.0",
      "17163.0",
      "17184.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17199.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17184.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17196.0",
      "17151.0",
      "17172.0",
      "17193.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17193.0",
      "17148.0",
      "17169.0",
      "17190.0",
      "17145.0",
      "17166.0",
      "17187.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17190.0",
      "17145.0",
      "17166.0",
      "17187.0",
      "17142.0",
      "17163.0",
      "17184.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17202.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17187.0",
      "17142.0",
      "17163.0",
      "17184.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17199.0",
      "17154.0",
      "17175.0",
      "17196.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17184.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17196.0",
      "17151.0",
      "17172.0",
      "17193.0",
      "17148.0",
      "17169.0",
      "17190.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17193.0",
      "17148.0",
      "17169.0",
      "17190.0",
      "17145.0",
      "17166.0",
      "17187.0",
      "17142.0",
      "17163.0",
      "17184.0",
      "17205.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17190.0",
      "17145.0",
      "17166.0",
      "17187.0",
      "17142.0",
      "17163.0",
      "17184.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17202.0",
      "17157.0",
      "17178.0",
      "17199.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17193.0",
      "17148.0",
      "17169.0",
      "17190.0",
      "17145.0",
      "17166.0",
      "17187.0",
      "17103.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17190.0",
      "17145.0",
      "17166.0",
      "17187.0",
      "17142.0",
      "17163.0",
      "17184.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17202.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17187.0",
      "17142.0",
      "17163.0",
      "17184.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17199.0",
      "17154.0",
      "17175.0",
      "17196.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17184.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17196.0",
      "17151.0",
      "17172.0",
      "17193.0",
      "17148.0",
      "17169.0",
      "17190.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17193.0",
      "17148.0",
      "17169.0",
      "17190.0",
      "17145.0",
      "17166.0",
      "17187.0",
      "17142.0",
      "17163.0",
      "17184.0",
      "17205.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17190.0",
      "17145.0",
      "17166.0",
      "17187.0",
      "17142.0",
      "17163.0",
      "17184.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17202.0",
      "17157.0",
      "17178.0",
      "17199.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17187.0",
      "17142.0",
      "17163.0",
      "17184.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17199.0",
      "17154.0",
      "17175.0",
      "17196.0",
      "17151.0",
      "17172.0",
      "17193.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17184.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17196.0",
      "17151.0",
      "17172.0",
      "17193.0",
      "17148.0",
      "17169.0",
      "17190.0",
      "17145.0",
      "17166.0",
      "17187.0",
      "17208.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17193.0",
      "17148.0",
      "17169.0",
      "17190.0",
      "17145.0",
      "17166.0",
      "17187.0",
      "17142.0",
      "17163.0",
      "17184.0",
      "17205.0",
      "17160.0",
      "17181.0",
      "17202.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17190.0",
      "17145.0",
      "17166.0",
      "17187.0",
      "17142.0",
      "17163.0",
      "17184.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17202.0",
      "17157.0",
      "17178.0",
      "17199.0",
      "17154.0",
      "17175.0",
      "17196.0",
      "17106.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17193.0",
      "17148.0",
      "17169.0",
      "17190.0",
      "17145.0",
      "17166.0",
      "17187.0",
      "17142.0",
      "17163.0",
      "17184.0",
      "17205.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17190.0",
      "17145.0",
      "17166.0",
      "17187.0",
      "17142.0",
      "17163.0",
      "17184.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17202.0",
      "17157.0",
      "17178.0",
      "17199.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17187.0",
      "17142.0",
      "17163.0",
      "17184.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17199.0",
      "17154.0",
      "17175.0",
      "17196.0",
      "17151.0",
      "17172.0",
      "17193.0",
      "17109.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17184.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17196.0",
      "17151.0",
      "17172.0",
      "17193.0",
      "17148.0",
      "17169.0",
      "17190.0",
      "17145.0",
      "17166.0",
      "17187.0",
      "17208.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17193.0",
      "17148.0",
      "17169.0",
      "17190.0",
      "17145.0",
      "17166.0",
      "17187.0",
      "17142.0",
      "17163.0",
      "17184.0",
      "17205.0",
      "17160.0",
      "17181.0",
      "17202.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17190.0",
      "17145.0",
      "17166.0",
      "17187.0",
      "17142.0",
      "17163.0",
      "17184.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17202.0",
      "17157.0",
      "17178.0",
      "17199.0",
      "17154.0",
      "17175.0",
      "17196.0",
      "17112.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17187.0",
      "17142.0",
      "17163.0",
      "17184.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17199.0",
      "17154.0",
      "17175.0",
      "17196.0",
      "17151.0",
      "17172.0",
      "17193.0",
      "17148.0",
      "17169.0",
      "17190.0",
      "17211.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17124.0",
      "17145.0",
      "17166.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17184.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17196.0",
      "17151.0",
      "17172.0",
      "17193.0",
      "17148.0",
      "17169.0",
      "17190.0",
      "17145.0",
      "17166.0",
      "17187.0",
      "17208.0",
      "17163.0",
      "17184.0",
      "17205.0",
      "17121.0",
      "17142.0",
      "17163.0",
      "17118.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17193.0",
      "17148.0",
      "17169.0",
      "17190.0",
      "17145.0",
      "17166.0",
      "17187.0",
      "17142.0",
      "17163.0",
      "17184.0",
      "17205.0",
      "17160.0",
      "17181.0",
      "17202.0",
      "17157.0",
      "17178.0",
      "17199.0",
      "17115.0",
      "17136.0",
      "17157.0",
      "17178.0",
      "17133.0",
      "17154.0",
      "17175.0",
      "17130.0",
      "17151.0",
      "17172.0",
      "17127.0",
      "17148.0",
      "17169.0",
      "17190.0",
      "17145.0",
      "17166.0",
      "17187.0",
      "17142.0",
      "17163.0",
      "17184.0",
      "17139.0",
      "17160.0",
      "17181.0",
      "17202.0",
      "17157.0",
      "17178.0",
      "17199.0",
      "17154.0",
      "17175.0",
      "17196.0",
      "17151.0",
      "17172.0",
      "17193.0",
      "17214.0",
      "20484.0",
      "20505.0",
      "20526.0",
      "20547.0",
      "20502.0",
      "20523.0",
      "20544.0",
      "20499.0",
      "20520.0",
      "20541.0",
      "20496.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20514.0",
      "20535.0",
      "20556.0",
      "20511.0",
      "20532.0",
      "20553.0",
      "20508.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20499.0",
      "20520.0",
      "20541.0",
      "20496.0",
      "20517.0",
      "20538.0",
      "20493.0",
      "20514.0",
      "20535.0",
      "20556.0",
      "20511.0",
      "20532.0",
      "20553.0",
      "20508.0",
      "20529.0",
      "20550.0",
      "20505.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20493.0",
      "20514.0",
      "20535.0",
      "20490.0",
      "20511.0",
      "20532.0",
      "20553.0",
      "20508.0",
      "20529.0",
      "20550.0",
      "20505.0",
      "20526.0",
      "20547.0",
      "20502.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20514.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20487.0",
      "20508.0",
      "20529.0",
      "20550.0",
      "20505.0",
      "20526.0",
      "20547.0",
      "20502.0",
      "20523.0",
      "20544.0",
      "20499.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20514.0",
      "20535.0",
      "20556.0",
      "20511.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20502.0",
      "20523.0",
      "20544.0",
      "20499.0",
      "20520.0",
      "20541.0",
      "20496.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20514.0",
      "20535.0",
      "20556.0",
      "20511.0",
      "20532.0",
      "20553.0",
      "20508.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20496.0",
      "20517.0",
      "20538.0",
      "20493.0",
      "20514.0",
      "20535.0",
      "20556.0",
      "20511.0",
      "20532.0",
      "20553.0",
      "20508.0",
      "20529.0",
      "20550.0",
      "20505.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20490.0",
      "20511.0",
      "20532.0",
      "20553.0",
      "20508.0",
      "20529.0",
      "20550.0",
      "20505.0",
      "20526.0",
      "20547.0",
      "20502.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20514.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20505.0",
      "20526.0",
      "20547.0",
      "20502.0",
      "20523.0",
      "20544.0",
      "20499.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20514.0",
      "20535.0",
      "20556.0",
      "20511.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20499.0",
      "20520.0",
      "20541.0",
      "20496.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20514.0",
      "20535.0",
      "20556.0",
      "20511.0",
      "20532.0",
      "20553.0",
      "20508.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20493.0",
      "20514.0",
      "20535.0",
      "20556.0",
      "20511.0",
      "20532.0",
      "20553.0",
      "20508.0",
      "20529.0",
      "20550.0",
      "20505.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20502.0",
      "20523.0",
      "20544.0",
      "20499.0",
      "20520.0",
      "20541.0",
      "20496.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20514.0",
      "20535.0",
      "20556.0",
      "20511.0",
      "20532.0",
      "20553.0",
      "20508.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20496.0",
      "20517.0",
      "20538.0",
      "20493.0",
      "20514.0",
      "20535.0",
      "20556.0",
      "20511.0",
      "20532.0",
      "20553.0",
      "20508.0",
      "20529.0",
      "20550.0",
      "20505.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20490.0",
      "20511.0",
      "20532.0",
      "20553.0",
      "20508.0",
      "20529.0",
      "20550.0",
      "20505.0",
      "20526.0",
      "20547.0",
      "20502.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20514.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20505.0",
      "20526.0",
      "20547.0",
      "20502.0",
      "20523.0",
      "20544.0",
      "20499.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20514.0",
      "20535.0",
      "20556.0",
      "20511.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20499.0",
      "20520.0",
      "20541.0",
      "20496.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20514.0",
      "20535.0",
      "20556.0",
      "20511.0",
      "20532.0",
      "20553.0",
      "20508.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20493.0",
      "20514.0",
      "20535.0",
      "20556.0",
      "20511.0",
      "20532.0",
      "20553.0",
      "20508.0",
      "20529.0",
      "20550.0",
      "20505.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20508.0",
      "20529.0",
      "20550.0",
      "20505.0",
      "20526.0",
      "20547.0",
      "20502.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20514.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20502.0",
      "20523.0",
      "20544.0",
      "20499.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20514.0",
      "20535.0",
      "20556.0",
      "20511.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20496.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20514.0",
      "20535.0",
      "20556.0",
      "20511.0",
      "20532.0",
      "20553.0",
      "20508.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20511.0",
      "20532.0",
      "20553.0",
      "20508.0",
      "20529.0",
      "20550.0",
      "20505.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20499.0",
      "20520.0",
      "20541.0",
      "20496.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20514.0",
      "20535.0",
      "20556.0",
      "20511.0",
      "20532.0",
      "20553.0",
      "20508.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20493.0",
      "20514.0",
      "20535.0",
      "20556.0",
      "20511.0",
      "20532.0",
      "20553.0",
      "20508.0",
      "20529.0",
      "20550.0",
      "20505.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20508.0",
      "20529.0",
      "20550.0",
      "20505.0",
      "20526.0",
      "20547.0",
      "20502.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20514.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20502.0",
      "20523.0",
      "20544.0",
      "20499.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20514.0",
      "20535.0",
      "20556.0",
      "20511.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20496.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20514.0",
      "20535.0",
      "20556.0",
      "20511.0",
      "20532.0",
      "20553.0",
      "20508.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20511.0",
      "20532.0",
      "20553.0",
      "20508.0",
      "20529.0",
      "20550.0",
      "20505.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20505.0",
      "20526.0",
      "20547.0",
      "20502.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20514.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20499.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20514.0",
      "20535.0",
      "20556.0",
      "20511.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20598.0",
      "20514.0",
      "20535.0",
      "20556.0",
      "20511.0",
      "20532.0",
      "20553.0",
      "20508.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20508.0",
      "20529.0",
      "20550.0",
      "20505.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20496.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20514.0",
      "20535.0",
      "20556.0",
      "20511.0",
      "20532.0",
      "20553.0",
      "20508.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20511.0",
      "20532.0",
      "20553.0",
      "20508.0",
      "20529.0",
      "20550.0",
      "20505.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20505.0",
      "20526.0",
      "20547.0",
      "20502.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20514.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20499.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20514.0",
      "20535.0",
      "20556.0",
      "20511.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20598.0",
      "20514.0",
      "20535.0",
      "20556.0",
      "20511.0",
      "20532.0",
      "20553.0",
      "20508.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20508.0",
      "20529.0",
      "20550.0",
      "20505.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20502.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20514.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20601.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20514.0",
      "20535.0",
      "20556.0",
      "20511.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20598.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20511.0",
      "20532.0",
      "20553.0",
      "20508.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20505.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20604.0",
      "20514.0",
      "20535.0",
      "20556.0",
      "20511.0",
      "20532.0",
      "20553.0",
      "20508.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20508.0",
      "20529.0",
      "20550.0",
      "20505.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20502.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20514.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20601.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20514.0",
      "20535.0",
      "20556.0",
      "20511.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20598.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20511.0",
      "20532.0",
      "20553.0",
      "20508.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20505.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20604.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20514.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20601.0",
      "20556.0",
      "20577.0",
      "20598.0",
      "20514.0",
      "20535.0",
      "20556.0",
      "20511.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20598.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20508.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20607.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20604.0",
      "20559.0",
      "20580.0",
      "20601.0",
      "20511.0",
      "20532.0",
      "20553.0",
      "20508.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20505.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20604.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20514.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20601.0",
      "20556.0",
      "20577.0",
      "20598.0",
      "20514.0",
      "20535.0",
      "20556.0",
      "20511.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20598.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20508.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20607.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20604.0",
      "20559.0",
      "20580.0",
      "20601.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20514.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20601.0",
      "20556.0",
      "20577.0",
      "20598.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20511.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20598.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20610.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20607.0",
      "20562.0",
      "20583.0",
      "20604.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20604.0",
      "20559.0",
      "20580.0",
      "20601.0",
      "20556.0",
      "20577.0",
      "20598.0",
      "20508.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20607.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20604.0",
      "20559.0",
      "20580.0",
      "20601.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20514.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20601.0",
      "20556.0",
      "20577.0",
      "20598.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20511.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20598.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20610.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20607.0",
      "20562.0",
      "20583.0",
      "20604.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20604.0",
      "20559.0",
      "20580.0",
      "20601.0",
      "20556.0",
      "20577.0",
      "20598.0",
      "20514.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20601.0",
      "20556.0",
      "20577.0",
      "20598.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20613.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20598.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20610.0",
      "20565.0",
      "20586.0",
      "20607.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20607.0",
      "20562.0",
      "20583.0",
      "20604.0",
      "20559.0",
      "20580.0",
      "20601.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20604.0",
      "20559.0",
      "20580.0",
      "20601.0",
      "20556.0",
      "20577.0",
      "20598.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20616.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20607.0",
      "20562.0",
      "20583.0",
      "20604.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20604.0",
      "20559.0",
      "20580.0",
      "20601.0",
      "20556.0",
      "20577.0",
      "20598.0",
      "20514.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20601.0",
      "20556.0",
      "20577.0",
      "20598.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20613.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20598.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20610.0",
      "20565.0",
      "20586.0",
      "20607.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20607.0",
      "20562.0",
      "20583.0",
      "20604.0",
      "20559.0",
      "20580.0",
      "20601.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20604.0",
      "20559.0",
      "20580.0",
      "20601.0",
      "20556.0",
      "20577.0",
      "20598.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20616.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20601.0",
      "20556.0",
      "20577.0",
      "20598.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20613.0",
      "20568.0",
      "20589.0",
      "20610.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20598.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20610.0",
      "20565.0",
      "20586.0",
      "20607.0",
      "20562.0",
      "20583.0",
      "20604.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20607.0",
      "20562.0",
      "20583.0",
      "20604.0",
      "20559.0",
      "20580.0",
      "20601.0",
      "20556.0",
      "20577.0",
      "20598.0",
      "20619.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20604.0",
      "20559.0",
      "20580.0",
      "20601.0",
      "20556.0",
      "20577.0",
      "20598.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20616.0",
      "20571.0",
      "20592.0",
      "20613.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20607.0",
      "20562.0",
      "20583.0",
      "20604.0",
      "20559.0",
      "20580.0",
      "20601.0",
      "20517.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20604.0",
      "20559.0",
      "20580.0",
      "20601.0",
      "20556.0",
      "20577.0",
      "20598.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20616.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20601.0",
      "20556.0",
      "20577.0",
      "20598.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20613.0",
      "20568.0",
      "20589.0",
      "20610.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20598.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20610.0",
      "20565.0",
      "20586.0",
      "20607.0",
      "20562.0",
      "20583.0",
      "20604.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20607.0",
      "20562.0",
      "20583.0",
      "20604.0",
      "20559.0",
      "20580.0",
      "20601.0",
      "20556.0",
      "20577.0",
      "20598.0",
      "20619.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20604.0",
      "20559.0",
      "20580.0",
      "20601.0",
      "20556.0",
      "20577.0",
      "20598.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20616.0",
      "20571.0",
      "20592.0",
      "20613.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20601.0",
      "20556.0",
      "20577.0",
      "20598.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20613.0",
      "20568.0",
      "20589.0",
      "20610.0",
      "20565.0",
      "20586.0",
      "20607.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20598.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20610.0",
      "20565.0",
      "20586.0",
      "20607.0",
      "20562.0",
      "20583.0",
      "20604.0",
      "20559.0",
      "20580.0",
      "20601.0",
      "20622.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20607.0",
      "20562.0",
      "20583.0",
      "20604.0",
      "20559.0",
      "20580.0",
      "20601.0",
      "20556.0",
      "20577.0",
      "20598.0",
      "20619.0",
      "20574.0",
      "20595.0",
      "20616.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20604.0",
      "20559.0",
      "20580.0",
      "20601.0",
      "20556.0",
      "20577.0",
      "20598.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20616.0",
      "20571.0",
      "20592.0",
      "20613.0",
      "20568.0",
      "20589.0",
      "20610.0",
      "20520.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20607.0",
      "20562.0",
      "20583.0",
      "20604.0",
      "20559.0",
      "20580.0",
      "20601.0",
      "20556.0",
      "20577.0",
      "20598.0",
      "20619.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20604.0",
      "20559.0",
      "20580.0",
      "20601.0",
      "20556.0",
      "20577.0",
      "20598.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20616.0",
      "20571.0",
      "20592.0",
      "20613.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20601.0",
      "20556.0",
      "20577.0",
      "20598.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20613.0",
      "20568.0",
      "20589.0",
      "20610.0",
      "20565.0",
      "20586.0",
      "20607.0",
      "20523.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20598.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20610.0",
      "20565.0",
      "20586.0",
      "20607.0",
      "20562.0",
      "20583.0",
      "20604.0",
      "20559.0",
      "20580.0",
      "20601.0",
      "20622.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20607.0",
      "20562.0",
      "20583.0",
      "20604.0",
      "20559.0",
      "20580.0",
      "20601.0",
      "20556.0",
      "20577.0",
      "20598.0",
      "20619.0",
      "20574.0",
      "20595.0",
      "20616.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20604.0",
      "20559.0",
      "20580.0",
      "20601.0",
      "20556.0",
      "20577.0",
      "20598.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20616.0",
      "20571.0",
      "20592.0",
      "20613.0",
      "20568.0",
      "20589.0",
      "20610.0",
      "20526.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20601.0",
      "20556.0",
      "20577.0",
      "20598.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20613.0",
      "20568.0",
      "20589.0",
      "20610.0",
      "20565.0",
      "20586.0",
      "20607.0",
      "20562.0",
      "20583.0",
      "20604.0",
      "20625.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20538.0",
      "20559.0",
      "20580.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20598.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20610.0",
      "20565.0",
      "20586.0",
      "20607.0",
      "20562.0",
      "20583.0",
      "20604.0",
      "20559.0",
      "20580.0",
      "20601.0",
      "20622.0",
      "20577.0",
      "20598.0",
      "20619.0",
      "20535.0",
      "20556.0",
      "20577.0",
      "20532.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20607.0",
      "20562.0",
      "20583.0",
      "20604.0",
      "20559.0",
      "20580.0",
      "20601.0",
      "20556.0",
      "20577.0",
      "20598.0",
      "20619.0",
      "20574.0",
      "20595.0",
      "20616.0",
      "20571.0",
      "20592.0",
      "20613.0",
      "20529.0",
      "20550.0",
      "20571.0",
      "20592.0",
      "20547.0",
      "20568.0",
      "20589.0",
      "20544.0",
      "20565.0",
      "20586.0",
      "20541.0",
      "20562.0",
      "20583.0",
      "20604.0",
      "20559.0",
      "20580.0",
      "20601.0",
      "20556.0",
      "20577.0",
      "20598.0",
      "20553.0",
      "20574.0",
      "20595.0",
      "20616.0",
      "20571.0",
      "20592.0",
      "20613.0",
      "20568.0",
      "20589.0",
      "20610.0",
      "20565.0",
      "20586.0",
      "20607.0",
      "20628.0",
      "23898.0",
      "23919.0",
      "23940.0",
      "23961.0",
      "23916.0",
      "23937.0",
      "23958.0",
      "23913.0",
      "23934.0",
      "23955.0",
      "23910.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23928.0",
      "23949.0",
      "23970.0",
      "23925.0",
      "23946.0",
      "23967.0",
      "23922.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23913.0",
      "23934.0",
      "23955.0",
      "23910.0",
      "23931.0",
      "23952.0",
      "23907.0",
      "23928.0",
      "23949.0",
      "23970.0",
      "23925.0",
      "23946.0",
      "23967.0",
      "23922.0",
      "23943.0",
      "23964.0",
      "23919.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23907.0",
      "23928.0",
      "23949.0",
      "23904.0",
      "23925.0",
      "23946.0",
      "23967.0",
      "23922.0",
      "23943.0",
      "23964.0",
      "23919.0",
      "23940.0",
      "23961.0",
      "23916.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23928.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23901.0",
      "23922.0",
      "23943.0",
      "23964.0",
      "23919.0",
      "23940.0",
      "23961.0",
      "23916.0",
      "23937.0",
      "23958.0",
      "23913.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23928.0",
      "23949.0",
      "23970.0",
      "23925.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23916.0",
      "23937.0",
      "23958.0",
      "23913.0",
      "23934.0",
      "23955.0",
      "23910.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23928.0",
      "23949.0",
      "23970.0",
      "23925.0",
      "23946.0",
      "23967.0",
      "23922.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23910.0",
      "23931.0",
      "23952.0",
      "23907.0",
      "23928.0",
      "23949.0",
      "23970.0",
      "23925.0",
      "23946.0",
      "23967.0",
      "23922.0",
      "23943.0",
      "23964.0",
      "23919.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23904.0",
      "23925.0",
      "23946.0",
      "23967.0",
      "23922.0",
      "23943.0",
      "23964.0",
      "23919.0",
      "23940.0",
      "23961.0",
      "23916.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23928.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23919.0",
      "23940.0",
      "23961.0",
      "23916.0",
      "23937.0",
      "23958.0",
      "23913.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23928.0",
      "23949.0",
      "23970.0",
      "23925.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23913.0",
      "23934.0",
      "23955.0",
      "23910.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23928.0",
      "23949.0",
      "23970.0",
      "23925.0",
      "23946.0",
      "23967.0",
      "23922.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23907.0",
      "23928.0",
      "23949.0",
      "23970.0",
      "23925.0",
      "23946.0",
      "23967.0",
      "23922.0",
      "23943.0",
      "23964.0",
      "23919.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23916.0",
      "23937.0",
      "23958.0",
      "23913.0",
      "23934.0",
      "23955.0",
      "23910.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23928.0",
      "23949.0",
      "23970.0",
      "23925.0",
      "23946.0",
      "23967.0",
      "23922.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23910.0",
      "23931.0",
      "23952.0",
      "23907.0",
      "23928.0",
      "23949.0",
      "23970.0",
      "23925.0",
      "23946.0",
      "23967.0",
      "23922.0",
      "23943.0",
      "23964.0",
      "23919.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23904.0",
      "23925.0",
      "23946.0",
      "23967.0",
      "23922.0",
      "23943.0",
      "23964.0",
      "23919.0",
      "23940.0",
      "23961.0",
      "23916.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23928.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23919.0",
      "23940.0",
      "23961.0",
      "23916.0",
      "23937.0",
      "23958.0",
      "23913.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23928.0",
      "23949.0",
      "23970.0",
      "23925.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23913.0",
      "23934.0",
      "23955.0",
      "23910.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23928.0",
      "23949.0",
      "23970.0",
      "23925.0",
      "23946.0",
      "23967.0",
      "23922.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23907.0",
      "23928.0",
      "23949.0",
      "23970.0",
      "23925.0",
      "23946.0",
      "23967.0",
      "23922.0",
      "23943.0",
      "23964.0",
      "23919.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23922.0",
      "23943.0",
      "23964.0",
      "23919.0",
      "23940.0",
      "23961.0",
      "23916.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23928.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23916.0",
      "23937.0",
      "23958.0",
      "23913.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23928.0",
      "23949.0",
      "23970.0",
      "23925.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23910.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23928.0",
      "23949.0",
      "23970.0",
      "23925.0",
      "23946.0",
      "23967.0",
      "23922.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "23925.0",
      "23946.0",
      "23967.0",
      "23922.0",
      "23943.0",
      "23964.0",
      "23919.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23913.0",
      "23934.0",
      "23955.0",
      "23910.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23928.0",
      "23949.0",
      "23970.0",
      "23925.0",
      "23946.0",
      "23967.0",
      "23922.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23907.0",
      "23928.0",
      "23949.0",
      "23970.0",
      "23925.0",
      "23946.0",
      "23967.0",
      "23922.0",
      "23943.0",
      "23964.0",
      "23919.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23922.0",
      "23943.0",
      "23964.0",
      "23919.0",
      "23940.0",
      "23961.0",
      "23916.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23928.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23916.0",
      "23937.0",
      "23958.0",
      "23913.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23928.0",
      "23949.0",
      "23970.0",
      "23925.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23910.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23928.0",
      "23949.0",
      "23970.0",
      "23925.0",
      "23946.0",
      "23967.0",
      "23922.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "23925.0",
      "23946.0",
      "23967.0",
      "23922.0",
      "23943.0",
      "23964.0",
      "23919.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23919.0",
      "23940.0",
      "23961.0",
      "23916.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23928.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23913.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23928.0",
      "23949.0",
      "23970.0",
      "23925.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "24012.0",
      "23928.0",
      "23949.0",
      "23970.0",
      "23925.0",
      "23946.0",
      "23967.0",
      "23922.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23922.0",
      "23943.0",
      "23964.0",
      "23919.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23910.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23928.0",
      "23949.0",
      "23970.0",
      "23925.0",
      "23946.0",
      "23967.0",
      "23922.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "23925.0",
      "23946.0",
      "23967.0",
      "23922.0",
      "23943.0",
      "23964.0",
      "23919.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23919.0",
      "23940.0",
      "23961.0",
      "23916.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23928.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23913.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23928.0",
      "23949.0",
      "23970.0",
      "23925.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "24012.0",
      "23928.0",
      "23949.0",
      "23970.0",
      "23925.0",
      "23946.0",
      "23967.0",
      "23922.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23922.0",
      "23943.0",
      "23964.0",
      "23919.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23916.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23928.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "24015.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23928.0",
      "23949.0",
      "23970.0",
      "23925.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "24012.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "23925.0",
      "23946.0",
      "23967.0",
      "23922.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23919.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "24018.0",
      "23928.0",
      "23949.0",
      "23970.0",
      "23925.0",
      "23946.0",
      "23967.0",
      "23922.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23922.0",
      "23943.0",
      "23964.0",
      "23919.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23916.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23928.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "24015.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23928.0",
      "23949.0",
      "23970.0",
      "23925.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "24012.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "23925.0",
      "23946.0",
      "23967.0",
      "23922.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23919.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "24018.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23928.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "24015.0",
      "23970.0",
      "23991.0",
      "24012.0",
      "23928.0",
      "23949.0",
      "23970.0",
      "23925.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "24012.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23922.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "24021.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "24018.0",
      "23973.0",
      "23994.0",
      "24015.0",
      "23925.0",
      "23946.0",
      "23967.0",
      "23922.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23919.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "24018.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23928.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "24015.0",
      "23970.0",
      "23991.0",
      "24012.0",
      "23928.0",
      "23949.0",
      "23970.0",
      "23925.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "24012.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23922.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "24021.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "24018.0",
      "23973.0",
      "23994.0",
      "24015.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23928.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "24015.0",
      "23970.0",
      "23991.0",
      "24012.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "23925.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "24012.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "24024.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "24021.0",
      "23976.0",
      "23997.0",
      "24018.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "24018.0",
      "23973.0",
      "23994.0",
      "24015.0",
      "23970.0",
      "23991.0",
      "24012.0",
      "23922.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "24021.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "24018.0",
      "23973.0",
      "23994.0",
      "24015.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23928.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "24015.0",
      "23970.0",
      "23991.0",
      "24012.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "23925.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "24012.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "24024.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "24021.0",
      "23976.0",
      "23997.0",
      "24018.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "24018.0",
      "23973.0",
      "23994.0",
      "24015.0",
      "23970.0",
      "23991.0",
      "24012.0",
      "23928.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "24015.0",
      "23970.0",
      "23991.0",
      "24012.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "24027.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "24012.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "24024.0",
      "23979.0",
      "24000.0",
      "24021.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "24021.0",
      "23976.0",
      "23997.0",
      "24018.0",
      "23973.0",
      "23994.0",
      "24015.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "24018.0",
      "23973.0",
      "23994.0",
      "24015.0",
      "23970.0",
      "23991.0",
      "24012.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "24030.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "24021.0",
      "23976.0",
      "23997.0",
      "24018.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "24018.0",
      "23973.0",
      "23994.0",
      "24015.0",
      "23970.0",
      "23991.0",
      "24012.0",
      "23928.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "24015.0",
      "23970.0",
      "23991.0",
      "24012.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "24027.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "24012.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "24024.0",
      "23979.0",
      "24000.0",
      "24021.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "24021.0",
      "23976.0",
      "23997.0",
      "24018.0",
      "23973.0",
      "23994.0",
      "24015.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "24018.0",
      "23973.0",
      "23994.0",
      "24015.0",
      "23970.0",
      "23991.0",
      "24012.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "24030.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "24015.0",
      "23970.0",
      "23991.0",
      "24012.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "24027.0",
      "23982.0",
      "24003.0",
      "24024.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "24012.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "24024.0",
      "23979.0",
      "24000.0",
      "24021.0",
      "23976.0",
      "23997.0",
      "24018.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "24021.0",
      "23976.0",
      "23997.0",
      "24018.0",
      "23973.0",
      "23994.0",
      "24015.0",
      "23970.0",
      "23991.0",
      "24012.0",
      "24033.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "24018.0",
      "23973.0",
      "23994.0",
      "24015.0",
      "23970.0",
      "23991.0",
      "24012.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "24030.0",
      "23985.0",
      "24006.0",
      "24027.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "24021.0",
      "23976.0",
      "23997.0",
      "24018.0",
      "23973.0",
      "23994.0",
      "24015.0",
      "23931.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "24018.0",
      "23973.0",
      "23994.0",
      "24015.0",
      "23970.0",
      "23991.0",
      "24012.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "24030.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "24015.0",
      "23970.0",
      "23991.0",
      "24012.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "24027.0",
      "23982.0",
      "24003.0",
      "24024.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "24012.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "24024.0",
      "23979.0",
      "24000.0",
      "24021.0",
      "23976.0",
      "23997.0",
      "24018.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "24021.0",
      "23976.0",
      "23997.0",
      "24018.0",
      "23973.0",
      "23994.0",
      "24015.0",
      "23970.0",
      "23991.0",
      "24012.0",
      "24033.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "24018.0",
      "23973.0",
      "23994.0",
      "24015.0",
      "23970.0",
      "23991.0",
      "24012.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "24030.0",
      "23985.0",
      "24006.0",
      "24027.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "24015.0",
      "23970.0",
      "23991.0",
      "24012.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "24027.0",
      "23982.0",
      "24003.0",
      "24024.0",
      "23979.0",
      "24000.0",
      "24021.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "24012.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "24024.0",
      "23979.0",
      "24000.0",
      "24021.0",
      "23976.0",
      "23997.0",
      "24018.0",
      "23973.0",
      "23994.0",
      "24015.0",
      "24036.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "24021.0",
      "23976.0",
      "23997.0",
      "24018.0",
      "23973.0",
      "23994.0",
      "24015.0",
      "23970.0",
      "23991.0",
      "24012.0",
      "24033.0",
      "23988.0",
      "24009.0",
      "24030.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "24018.0",
      "23973.0",
      "23994.0",
      "24015.0",
      "23970.0",
      "23991.0",
      "24012.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "24030.0",
      "23985.0",
      "24006.0",
      "24027.0",
      "23982.0",
      "24003.0",
      "24024.0",
      "23934.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "24021.0",
      "23976.0",
      "23997.0",
      "24018.0",
      "23973.0",
      "23994.0",
      "24015.0",
      "23970.0",
      "23991.0",
      "24012.0",
      "24033.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "24018.0",
      "23973.0",
      "23994.0",
      "24015.0",
      "23970.0",
      "23991.0",
      "24012.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "24030.0",
      "23985.0",
      "24006.0",
      "24027.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "24015.0",
      "23970.0",
      "23991.0",
      "24012.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "24027.0",
      "23982.0",
      "24003.0",
      "24024.0",
      "23979.0",
      "24000.0",
      "24021.0",
      "23937.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "24012.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "24024.0",
      "23979.0",
      "24000.0",
      "24021.0",
      "23976.0",
      "23997.0",
      "24018.0",
      "23973.0",
      "23994.0",
      "24015.0",
      "24036.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "24021.0",
      "23976.0",
      "23997.0",
      "24018.0",
      "23973.0",
      "23994.0",
      "24015.0",
      "23970.0",
      "23991.0",
      "24012.0",
      "24033.0",
      "23988.0",
      "24009.0",
      "24030.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "24018.0",
      "23973.0",
      "23994.0",
      "24015.0",
      "23970.0",
      "23991.0",
      "24012.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "24030.0",
      "23985.0",
      "24006.0",
      "24027.0",
      "23982.0",
      "24003.0",
      "24024.0",
      "23940.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "24015.0",
      "23970.0",
      "23991.0",
      "24012.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "24027.0",
      "23982.0",
      "24003.0",
      "24024.0",
      "23979.0",
      "24000.0",
      "24021.0",
      "23976.0",
      "23997.0",
      "24018.0",
      "24039.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "23952.0",
      "23973.0",
      "23994.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "24012.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "24024.0",
      "23979.0",
      "24000.0",
      "24021.0",
      "23976.0",
      "23997.0",
      "24018.0",
      "23973.0",
      "23994.0",
      "24015.0",
      "24036.0",
      "23991.0",
      "24012.0",
      "24033.0",
      "23949.0",
      "23970.0",
      "23991.0",
      "23946.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "24021.0",
      "23976.0",
      "23997.0",
      "24018.0",
      "23973.0",
      "23994.0",
      "24015.0",
      "23970.0",
      "23991.0",
      "24012.0",
      "24033.0",
      "23988.0",
      "24009.0",
      "24030.0",
      "23985.0",
      "24006.0",
      "24027.0",
      "23943.0",
      "23964.0",
      "23985.0",
      "24006.0",
      "23961.0",
      "23982.0",
      "24003.0",
      "23958.0",
      "23979.0",
      "24000.0",
      "23955.0",
      "23976.0",
      "23997.0",
      "24018.0",
      "23973.0",
      "23994.0",
      "24015.0",
      "23970.0",
      "23991.0",
      "24012.0",
      "23967.0",
      "23988.0",
      "24009.0",
      "24030.0",
      "23985.0",
      "24006.0",
      "24027.0",
      "23982.0",
      "24003.0",
      "24024.0",
      "23979.0",
      "24000.0",
      "24021.0",
      "24042.0",
      "27312.0",
      "27333.0",
      "27354.0",
      "27375.0",
      "27330.0",
      "27351.0",
      "27372.0",
      "27327.0",
      "27348.0",
      "27369.0",
      "27324.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27342.0",
      "27363.0",
      "27384.0",
      "27339.0",
      "27360.0",
      "27381.0",
      "27336.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27327.0",
      "27348.0",
      "27369.0",
      "27324.0",
      "27345.0",
      "27366.0",
      "27321.0",
      "27342.0",
      "27363.0",
      "27384.0",
      "27339.0",
      "27360.0",
      "27381.0",
      "27336.0",
      "27357.0",
      "27378.0",
      "27333.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27321.0",
      "27342.0",
      "27363.0",
      "27318.0",
      "27339.0",
      "27360.0",
      "27381.0",
      "27336.0",
      "27357.0",
      "27378.0",
      "27333.0",
      "27354.0",
      "27375.0",
      "27330.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27342.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27315.0",
      "27336.0",
      "27357.0",
      "27378.0",
      "27333.0",
      "27354.0",
      "27375.0",
      "27330.0",
      "27351.0",
      "27372.0",
      "27327.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27342.0",
      "27363.0",
      "27384.0",
      "27339.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27330.0",
      "27351.0",
      "27372.0",
      "27327.0",
      "27348.0",
      "27369.0",
      "27324.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27342.0",
      "27363.0",
      "27384.0",
      "27339.0",
      "27360.0",
      "27381.0",
      "27336.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27324.0",
      "27345.0",
      "27366.0",
      "27321.0",
      "27342.0",
      "27363.0",
      "27384.0",
      "27339.0",
      "27360.0",
      "27381.0",
      "27336.0",
      "27357.0",
      "27378.0",
      "27333.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27318.0",
      "27339.0",
      "27360.0",
      "27381.0",
      "27336.0",
      "27357.0",
      "27378.0",
      "27333.0",
      "27354.0",
      "27375.0",
      "27330.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27342.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27333.0",
      "27354.0",
      "27375.0",
      "27330.0",
      "27351.0",
      "27372.0",
      "27327.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27342.0",
      "27363.0",
      "27384.0",
      "27339.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27327.0",
      "27348.0",
      "27369.0",
      "27324.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27342.0",
      "27363.0",
      "27384.0",
      "27339.0",
      "27360.0",
      "27381.0",
      "27336.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27321.0",
      "27342.0",
      "27363.0",
      "27384.0",
      "27339.0",
      "27360.0",
      "27381.0",
      "27336.0",
      "27357.0",
      "27378.0",
      "27333.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27330.0",
      "27351.0",
      "27372.0",
      "27327.0",
      "27348.0",
      "27369.0",
      "27324.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27342.0",
      "27363.0",
      "27384.0",
      "27339.0",
      "27360.0",
      "27381.0",
      "27336.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27324.0",
      "27345.0",
      "27366.0",
      "27321.0",
      "27342.0",
      "27363.0",
      "27384.0",
      "27339.0",
      "27360.0",
      "27381.0",
      "27336.0",
      "27357.0",
      "27378.0",
      "27333.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27318.0",
      "27339.0",
      "27360.0",
      "27381.0",
      "27336.0",
      "27357.0",
      "27378.0",
      "27333.0",
      "27354.0",
      "27375.0",
      "27330.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27342.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27333.0",
      "27354.0",
      "27375.0",
      "27330.0",
      "27351.0",
      "27372.0",
      "27327.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27342.0",
      "27363.0",
      "27384.0",
      "27339.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27327.0",
      "27348.0",
      "27369.0",
      "27324.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27342.0",
      "27363.0",
      "27384.0",
      "27339.0",
      "27360.0",
      "27381.0",
      "27336.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27321.0",
      "27342.0",
      "27363.0",
      "27384.0",
      "27339.0",
      "27360.0",
      "27381.0",
      "27336.0",
      "27357.0",
      "27378.0",
      "27333.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27336.0",
      "27357.0",
      "27378.0",
      "27333.0",
      "27354.0",
      "27375.0",
      "27330.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27342.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27330.0",
      "27351.0",
      "27372.0",
      "27327.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27342.0",
      "27363.0",
      "27384.0",
      "27339.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27324.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27342.0",
      "27363.0",
      "27384.0",
      "27339.0",
      "27360.0",
      "27381.0",
      "27336.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27339.0",
      "27360.0",
      "27381.0",
      "27336.0",
      "27357.0",
      "27378.0",
      "27333.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27327.0",
      "27348.0",
      "27369.0",
      "27324.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27342.0",
      "27363.0",
      "27384.0",
      "27339.0",
      "27360.0",
      "27381.0",
      "27336.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27321.0",
      "27342.0",
      "27363.0",
      "27384.0",
      "27339.0",
      "27360.0",
      "27381.0",
      "27336.0",
      "27357.0",
      "27378.0",
      "27333.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27336.0",
      "27357.0",
      "27378.0",
      "27333.0",
      "27354.0",
      "27375.0",
      "27330.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27342.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27330.0",
      "27351.0",
      "27372.0",
      "27327.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27342.0",
      "27363.0",
      "27384.0",
      "27339.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27324.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27342.0",
      "27363.0",
      "27384.0",
      "27339.0",
      "27360.0",
      "27381.0",
      "27336.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27339.0",
      "27360.0",
      "27381.0",
      "27336.0",
      "27357.0",
      "27378.0",
      "27333.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27333.0",
      "27354.0",
      "27375.0",
      "27330.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27342.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27327.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27342.0",
      "27363.0",
      "27384.0",
      "27339.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27426.0",
      "27342.0",
      "27363.0",
      "27384.0",
      "27339.0",
      "27360.0",
      "27381.0",
      "27336.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27336.0",
      "27357.0",
      "27378.0",
      "27333.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27324.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27342.0",
      "27363.0",
      "27384.0",
      "27339.0",
      "27360.0",
      "27381.0",
      "27336.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27339.0",
      "27360.0",
      "27381.0",
      "27336.0",
      "27357.0",
      "27378.0",
      "27333.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27333.0",
      "27354.0",
      "27375.0",
      "27330.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27342.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27327.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27342.0",
      "27363.0",
      "27384.0",
      "27339.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27426.0",
      "27342.0",
      "27363.0",
      "27384.0",
      "27339.0",
      "27360.0",
      "27381.0",
      "27336.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27336.0",
      "27357.0",
      "27378.0",
      "27333.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27330.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27342.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27429.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27342.0",
      "27363.0",
      "27384.0",
      "27339.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27426.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27339.0",
      "27360.0",
      "27381.0",
      "27336.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27333.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27432.0",
      "27342.0",
      "27363.0",
      "27384.0",
      "27339.0",
      "27360.0",
      "27381.0",
      "27336.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27336.0",
      "27357.0",
      "27378.0",
      "27333.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27330.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27342.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27429.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27342.0",
      "27363.0",
      "27384.0",
      "27339.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27426.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27339.0",
      "27360.0",
      "27381.0",
      "27336.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27333.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27432.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27342.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27429.0",
      "27384.0",
      "27405.0",
      "27426.0",
      "27342.0",
      "27363.0",
      "27384.0",
      "27339.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27426.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27336.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27435.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27432.0",
      "27387.0",
      "27408.0",
      "27429.0",
      "27339.0",
      "27360.0",
      "27381.0",
      "27336.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27333.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27432.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27342.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27429.0",
      "27384.0",
      "27405.0",
      "27426.0",
      "27342.0",
      "27363.0",
      "27384.0",
      "27339.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27426.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27336.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27435.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27432.0",
      "27387.0",
      "27408.0",
      "27429.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27342.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27429.0",
      "27384.0",
      "27405.0",
      "27426.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27339.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27426.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27438.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27435.0",
      "27390.0",
      "27411.0",
      "27432.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27432.0",
      "27387.0",
      "27408.0",
      "27429.0",
      "27384.0",
      "27405.0",
      "27426.0",
      "27336.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27435.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27432.0",
      "27387.0",
      "27408.0",
      "27429.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27342.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27429.0",
      "27384.0",
      "27405.0",
      "27426.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27339.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27426.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27438.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27435.0",
      "27390.0",
      "27411.0",
      "27432.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27432.0",
      "27387.0",
      "27408.0",
      "27429.0",
      "27384.0",
      "27405.0",
      "27426.0",
      "27342.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27429.0",
      "27384.0",
      "27405.0",
      "27426.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27441.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27426.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27438.0",
      "27393.0",
      "27414.0",
      "27435.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27435.0",
      "27390.0",
      "27411.0",
      "27432.0",
      "27387.0",
      "27408.0",
      "27429.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27432.0",
      "27387.0",
      "27408.0",
      "27429.0",
      "27384.0",
      "27405.0",
      "27426.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27444.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27435.0",
      "27390.0",
      "27411.0",
      "27432.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27432.0",
      "27387.0",
      "27408.0",
      "27429.0",
      "27384.0",
      "27405.0",
      "27426.0",
      "27342.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27429.0",
      "27384.0",
      "27405.0",
      "27426.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27441.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27426.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27438.0",
      "27393.0",
      "27414.0",
      "27435.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27435.0",
      "27390.0",
      "27411.0",
      "27432.0",
      "27387.0",
      "27408.0",
      "27429.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27432.0",
      "27387.0",
      "27408.0",
      "27429.0",
      "27384.0",
      "27405.0",
      "27426.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27444.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27429.0",
      "27384.0",
      "27405.0",
      "27426.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27441.0",
      "27396.0",
      "27417.0",
      "27438.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27426.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27438.0",
      "27393.0",
      "27414.0",
      "27435.0",
      "27390.0",
      "27411.0",
      "27432.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27435.0",
      "27390.0",
      "27411.0",
      "27432.0",
      "27387.0",
      "27408.0",
      "27429.0",
      "27384.0",
      "27405.0",
      "27426.0",
      "27447.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27432.0",
      "27387.0",
      "27408.0",
      "27429.0",
      "27384.0",
      "27405.0",
      "27426.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27444.0",
      "27399.0",
      "27420.0",
      "27441.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27435.0",
      "27390.0",
      "27411.0",
      "27432.0",
      "27387.0",
      "27408.0",
      "27429.0",
      "27345.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27432.0",
      "27387.0",
      "27408.0",
      "27429.0",
      "27384.0",
      "27405.0",
      "27426.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27444.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27429.0",
      "27384.0",
      "27405.0",
      "27426.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27441.0",
      "27396.0",
      "27417.0",
      "27438.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27426.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27438.0",
      "27393.0",
      "27414.0",
      "27435.0",
      "27390.0",
      "27411.0",
      "27432.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27435.0",
      "27390.0",
      "27411.0",
      "27432.0",
      "27387.0",
      "27408.0",
      "27429.0",
      "27384.0",
      "27405.0",
      "27426.0",
      "27447.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27432.0",
      "27387.0",
      "27408.0",
      "27429.0",
      "27384.0",
      "27405.0",
      "27426.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27444.0",
      "27399.0",
      "27420.0",
      "27441.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27429.0",
      "27384.0",
      "27405.0",
      "27426.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27441.0",
      "27396.0",
      "27417.0",
      "27438.0",
      "27393.0",
      "27414.0",
      "27435.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27426.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27438.0",
      "27393.0",
      "27414.0",
      "27435.0",
      "27390.0",
      "27411.0",
      "27432.0",
      "27387.0",
      "27408.0",
      "27429.0",
      "27450.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27435.0",
      "27390.0",
      "27411.0",
      "27432.0",
      "27387.0",
      "27408.0",
      "27429.0",
      "27384.0",
      "27405.0",
      "27426.0",
      "27447.0",
      "27402.0",
      "27423.0",
      "27444.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27432.0",
      "27387.0",
      "27408.0",
      "27429.0",
      "27384.0",
      "27405.0",
      "27426.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27444.0",
      "27399.0",
      "27420.0",
      "27441.0",
      "27396.0",
      "27417.0",
      "27438.0",
      "27348.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27435.0",
      "27390.0",
      "27411.0",
      "27432.0",
      "27387.0",
      "27408.0",
      "27429.0",
      "27384.0",
      "27405.0",
      "27426.0",
      "27447.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27432.0",
      "27387.0",
      "27408.0",
      "27429.0",
      "27384.0",
      "27405.0",
      "27426.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27444.0",
      "27399.0",
      "27420.0",
      "27441.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27429.0",
      "27384.0",
      "27405.0",
      "27426.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27441.0",
      "27396.0",
      "27417.0",
      "27438.0",
      "27393.0",
      "27414.0",
      "27435.0",
      "27351.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27426.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27438.0",
      "27393.0",
      "27414.0",
      "27435.0",
      "27390.0",
      "27411.0",
      "27432.0",
      "27387.0",
      "27408.0",
      "27429.0",
      "27450.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27435.0",
      "27390.0",
      "27411.0",
      "27432.0",
      "27387.0",
      "27408.0",
      "27429.0",
      "27384.0",
      "27405.0",
      "27426.0",
      "27447.0",
      "27402.0",
      "27423.0",
      "27444.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27432.0",
      "27387.0",
      "27408.0",
      "27429.0",
      "27384.0",
      "27405.0",
      "27426.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27444.0",
      "27399.0",
      "27420.0",
      "27441.0",
      "27396.0",
      "27417.0",
      "27438.0",
      "27354.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27429.0",
      "27384.0",
      "27405.0",
      "27426.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27441.0",
      "27396.0",
      "27417.0",
      "27438.0",
      "27393.0",
      "27414.0",
      "27435.0",
      "27390.0",
      "27411.0",
      "27432.0",
      "27453.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27366.0",
      "27387.0",
      "27408.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27426.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27438.0",
      "27393.0",
      "27414.0",
      "27435.0",
      "27390.0",
      "27411.0",
      "27432.0",
      "27387.0",
      "27408.0",
      "27429.0",
      "27450.0",
      "27405.0",
      "27426.0",
      "27447.0",
      "27363.0",
      "27384.0",
      "27405.0",
      "27360.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27435.0",
      "27390.0",
      "27411.0",
      "27432.0",
      "27387.0",
      "27408.0",
      "27429.0",
      "27384.0",
      "27405.0",
      "27426.0",
      "27447.0",
      "27402.0",
      "27423.0",
      "27444.0",
      "27399.0",
      "27420.0",
      "27441.0",
      "27357.0",
      "27378.0",
      "27399.0",
      "27420.0",
      "27375.0",
      "27396.0",
      "27417.0",
      "27372.0",
      "27393.0",
      "27414.0",
      "27369.0",
      "27390.0",
      "27411.0",
      "27432.0",
      "27387.0",
      "27408.0",
      "27429.0",
      "27384.0",
      "27405.0",
      "27426.0",
      "27381.0",
      "27402.0",
      "27423.0",
      "27444.0",
      "27399.0",
      "27420.0",
      "27441.0",
      "27396.0",
      "27417.0",
      "27438.0",
      "27393.0",
      "27414.0",
      "27435.0",
      "27456.0",
      "30726.0",
      "30747.0",
      "30768.0",
      "30789.0",
      "30744.0",
      "30765.0",
      "30786.0",
      "30741.0",
      "30762.0",
      "30783.0",
      "30738.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30756.0",
      "30777.0",
      "30798.0",
      "30753.0",
      "30774.0",
      "30795.0",
      "30750.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30741.0",
      "30762.0",
      "30783.0",
      "30738.0",
      "30759.0",
      "30780.0",
      "30735.0",
      "30756.0",
      "30777.0",
      "30798.0",
      "30753.0",
      "30774.0",
      "30795.0",
      "30750.0",
      "30771.0",
      "30792.0",
      "30747.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30735.0",
      "30756.0",
      "30777.0",
      "30732.0",
      "30753.0",
      "30774.0",
      "30795.0",
      "30750.0",
      "30771.0",
      "30792.0",
      "30747.0",
      "30768.0",
      "30789.0",
      "30744.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30756.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30729.0",
      "30750.0",
      "30771.0",
      "30792.0",
      "30747.0",
      "30768.0",
      "30789.0",
      "30744.0",
      "30765.0",
      "30786.0",
      "30741.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30756.0",
      "30777.0",
      "30798.0",
      "30753.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30744.0",
      "30765.0",
      "30786.0",
      "30741.0",
      "30762.0",
      "30783.0",
      "30738.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30756.0",
      "30777.0",
      "30798.0",
      "30753.0",
      "30774.0",
      "30795.0",
      "30750.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30738.0",
      "30759.0",
      "30780.0",
      "30735.0",
      "30756.0",
      "30777.0",
      "30798.0",
      "30753.0",
      "30774.0",
      "30795.0",
      "30750.0",
      "30771.0",
      "30792.0",
      "30747.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30732.0",
      "30753.0",
      "30774.0",
      "30795.0",
      "30750.0",
      "30771.0",
      "30792.0",
      "30747.0",
      "30768.0",
      "30789.0",
      "30744.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30756.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30747.0",
      "30768.0",
      "30789.0",
      "30744.0",
      "30765.0",
      "30786.0",
      "30741.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30756.0",
      "30777.0",
      "30798.0",
      "30753.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30741.0",
      "30762.0",
      "30783.0",
      "30738.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30756.0",
      "30777.0",
      "30798.0",
      "30753.0",
      "30774.0",
      "30795.0",
      "30750.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30735.0",
      "30756.0",
      "30777.0",
      "30798.0",
      "30753.0",
      "30774.0",
      "30795.0",
      "30750.0",
      "30771.0",
      "30792.0",
      "30747.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30744.0",
      "30765.0",
      "30786.0",
      "30741.0",
      "30762.0",
      "30783.0",
      "30738.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30756.0",
      "30777.0",
      "30798.0",
      "30753.0",
      "30774.0",
      "30795.0",
      "30750.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30738.0",
      "30759.0",
      "30780.0",
      "30735.0",
      "30756.0",
      "30777.0",
      "30798.0",
      "30753.0",
      "30774.0",
      "30795.0",
      "30750.0",
      "30771.0",
      "30792.0",
      "30747.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30732.0",
      "30753.0",
      "30774.0",
      "30795.0",
      "30750.0",
      "30771.0",
      "30792.0",
      "30747.0",
      "30768.0",
      "30789.0",
      "30744.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30756.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30747.0",
      "30768.0",
      "30789.0",
      "30744.0",
      "30765.0",
      "30786.0",
      "30741.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30756.0",
      "30777.0",
      "30798.0",
      "30753.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30741.0",
      "30762.0",
      "30783.0",
      "30738.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30756.0",
      "30777.0",
      "30798.0",
      "30753.0",
      "30774.0",
      "30795.0",
      "30750.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30735.0",
      "30756.0",
      "30777.0",
      "30798.0",
      "30753.0",
      "30774.0",
      "30795.0",
      "30750.0",
      "30771.0",
      "30792.0",
      "30747.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30750.0",
      "30771.0",
      "30792.0",
      "30747.0",
      "30768.0",
      "30789.0",
      "30744.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30756.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30744.0",
      "30765.0",
      "30786.0",
      "30741.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30756.0",
      "30777.0",
      "30798.0",
      "30753.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30738.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30756.0",
      "30777.0",
      "30798.0",
      "30753.0",
      "30774.0",
      "30795.0",
      "30750.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30753.0",
      "30774.0",
      "30795.0",
      "30750.0",
      "30771.0",
      "30792.0",
      "30747.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30741.0",
      "30762.0",
      "30783.0",
      "30738.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30756.0",
      "30777.0",
      "30798.0",
      "30753.0",
      "30774.0",
      "30795.0",
      "30750.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30735.0",
      "30756.0",
      "30777.0",
      "30798.0",
      "30753.0",
      "30774.0",
      "30795.0",
      "30750.0",
      "30771.0",
      "30792.0",
      "30747.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30750.0",
      "30771.0",
      "30792.0",
      "30747.0",
      "30768.0",
      "30789.0",
      "30744.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30756.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30744.0",
      "30765.0",
      "30786.0",
      "30741.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30756.0",
      "30777.0",
      "30798.0",
      "30753.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30738.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30756.0",
      "30777.0",
      "30798.0",
      "30753.0",
      "30774.0",
      "30795.0",
      "30750.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30753.0",
      "30774.0",
      "30795.0",
      "30750.0",
      "30771.0",
      "30792.0",
      "30747.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30747.0",
      "30768.0",
      "30789.0",
      "30744.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30756.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30741.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30756.0",
      "30777.0",
      "30798.0",
      "30753.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30840.0",
      "30756.0",
      "30777.0",
      "30798.0",
      "30753.0",
      "30774.0",
      "30795.0",
      "30750.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30750.0",
      "30771.0",
      "30792.0",
      "30747.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30738.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30756.0",
      "30777.0",
      "30798.0",
      "30753.0",
      "30774.0",
      "30795.0",
      "30750.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30753.0",
      "30774.0",
      "30795.0",
      "30750.0",
      "30771.0",
      "30792.0",
      "30747.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30747.0",
      "30768.0",
      "30789.0",
      "30744.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30756.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30741.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30756.0",
      "30777.0",
      "30798.0",
      "30753.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30840.0",
      "30756.0",
      "30777.0",
      "30798.0",
      "30753.0",
      "30774.0",
      "30795.0",
      "30750.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30750.0",
      "30771.0",
      "30792.0",
      "30747.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30744.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30756.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30843.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30756.0",
      "30777.0",
      "30798.0",
      "30753.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30840.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30753.0",
      "30774.0",
      "30795.0",
      "30750.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30747.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30846.0",
      "30756.0",
      "30777.0",
      "30798.0",
      "30753.0",
      "30774.0",
      "30795.0",
      "30750.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30750.0",
      "30771.0",
      "30792.0",
      "30747.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30744.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30756.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30843.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30756.0",
      "30777.0",
      "30798.0",
      "30753.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30840.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30753.0",
      "30774.0",
      "30795.0",
      "30750.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30747.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30846.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30756.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30843.0",
      "30798.0",
      "30819.0",
      "30840.0",
      "30756.0",
      "30777.0",
      "30798.0",
      "30753.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30840.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30750.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30849.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30846.0",
      "30801.0",
      "30822.0",
      "30843.0",
      "30753.0",
      "30774.0",
      "30795.0",
      "30750.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30747.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30846.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30756.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30843.0",
      "30798.0",
      "30819.0",
      "30840.0",
      "30756.0",
      "30777.0",
      "30798.0",
      "30753.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30840.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30750.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30849.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30846.0",
      "30801.0",
      "30822.0",
      "30843.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30756.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30843.0",
      "30798.0",
      "30819.0",
      "30840.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30753.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30840.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30852.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30849.0",
      "30804.0",
      "30825.0",
      "30846.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30846.0",
      "30801.0",
      "30822.0",
      "30843.0",
      "30798.0",
      "30819.0",
      "30840.0",
      "30750.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30849.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30846.0",
      "30801.0",
      "30822.0",
      "30843.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30756.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30843.0",
      "30798.0",
      "30819.0",
      "30840.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30753.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30840.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30852.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30849.0",
      "30804.0",
      "30825.0",
      "30846.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30846.0",
      "30801.0",
      "30822.0",
      "30843.0",
      "30798.0",
      "30819.0",
      "30840.0",
      "30756.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30843.0",
      "30798.0",
      "30819.0",
      "30840.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30855.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30840.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30852.0",
      "30807.0",
      "30828.0",
      "30849.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30849.0",
      "30804.0",
      "30825.0",
      "30846.0",
      "30801.0",
      "30822.0",
      "30843.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30846.0",
      "30801.0",
      "30822.0",
      "30843.0",
      "30798.0",
      "30819.0",
      "30840.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30858.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30849.0",
      "30804.0",
      "30825.0",
      "30846.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30846.0",
      "30801.0",
      "30822.0",
      "30843.0",
      "30798.0",
      "30819.0",
      "30840.0",
      "30756.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30843.0",
      "30798.0",
      "30819.0",
      "30840.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30855.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30840.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30852.0",
      "30807.0",
      "30828.0",
      "30849.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30849.0",
      "30804.0",
      "30825.0",
      "30846.0",
      "30801.0",
      "30822.0",
      "30843.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30846.0",
      "30801.0",
      "30822.0",
      "30843.0",
      "30798.0",
      "30819.0",
      "30840.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30858.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30843.0",
      "30798.0",
      "30819.0",
      "30840.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30855.0",
      "30810.0",
      "30831.0",
      "30852.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30840.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30852.0",
      "30807.0",
      "30828.0",
      "30849.0",
      "30804.0",
      "30825.0",
      "30846.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30849.0",
      "30804.0",
      "30825.0",
      "30846.0",
      "30801.0",
      "30822.0",
      "30843.0",
      "30798.0",
      "30819.0",
      "30840.0",
      "30861.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30846.0",
      "30801.0",
      "30822.0",
      "30843.0",
      "30798.0",
      "30819.0",
      "30840.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30858.0",
      "30813.0",
      "30834.0",
      "30855.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30849.0",
      "30804.0",
      "30825.0",
      "30846.0",
      "30801.0",
      "30822.0",
      "30843.0",
      "30759.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30846.0",
      "30801.0",
      "30822.0",
      "30843.0",
      "30798.0",
      "30819.0",
      "30840.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30858.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30843.0",
      "30798.0",
      "30819.0",
      "30840.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30855.0",
      "30810.0",
      "30831.0",
      "30852.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30840.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30852.0",
      "30807.0",
      "30828.0",
      "30849.0",
      "30804.0",
      "30825.0",
      "30846.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30849.0",
      "30804.0",
      "30825.0",
      "30846.0",
      "30801.0",
      "30822.0",
      "30843.0",
      "30798.0",
      "30819.0",
      "30840.0",
      "30861.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30846.0",
      "30801.0",
      "30822.0",
      "30843.0",
      "30798.0",
      "30819.0",
      "30840.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30858.0",
      "30813.0",
      "30834.0",
      "30855.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30843.0",
      "30798.0",
      "30819.0",
      "30840.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30855.0",
      "30810.0",
      "30831.0",
      "30852.0",
      "30807.0",
      "30828.0",
      "30849.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30840.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30852.0",
      "30807.0",
      "30828.0",
      "30849.0",
      "30804.0",
      "30825.0",
      "30846.0",
      "30801.0",
      "30822.0",
      "30843.0",
      "30864.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30849.0",
      "30804.0",
      "30825.0",
      "30846.0",
      "30801.0",
      "30822.0",
      "30843.0",
      "30798.0",
      "30819.0",
      "30840.0",
      "30861.0",
      "30816.0",
      "30837.0",
      "30858.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30846.0",
      "30801.0",
      "30822.0",
      "30843.0",
      "30798.0",
      "30819.0",
      "30840.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30858.0",
      "30813.0",
      "30834.0",
      "30855.0",
      "30810.0",
      "30831.0",
      "30852.0",
      "30762.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30849.0",
      "30804.0",
      "30825.0",
      "30846.0",
      "30801.0",
      "30822.0",
      "30843.0",
      "30798.0",
      "30819.0",
      "30840.0",
      "30861.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30846.0",
      "30801.0",
      "30822.0",
      "30843.0",
      "30798.0",
      "30819.0",
      "30840.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30858.0",
      "30813.0",
      "30834.0",
      "30855.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30843.0",
      "30798.0",
      "30819.0",
      "30840.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30855.0",
      "30810.0",
      "30831.0",
      "30852.0",
      "30807.0",
      "30828.0",
      "30849.0",
      "30765.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30840.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30852.0",
      "30807.0",
      "30828.0",
      "30849.0",
      "30804.0",
      "30825.0",
      "30846.0",
      "30801.0",
      "30822.0",
      "30843.0",
      "30864.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30849.0",
      "30804.0",
      "30825.0",
      "30846.0",
      "30801.0",
      "30822.0",
      "30843.0",
      "30798.0",
      "30819.0",
      "30840.0",
      "30861.0",
      "30816.0",
      "30837.0",
      "30858.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30846.0",
      "30801.0",
      "30822.0",
      "30843.0",
      "30798.0",
      "30819.0",
      "30840.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30858.0",
      "30813.0",
      "30834.0",
      "30855.0",
      "30810.0",
      "30831.0",
      "30852.0",
      "30768.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30843.0",
      "30798.0",
      "30819.0",
      "30840.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30855.0",
      "30810.0",
      "30831.0",
      "30852.0",
      "30807.0",
      "30828.0",
      "30849.0",
      "30804.0",
      "30825.0",
      "30846.0",
      "30867.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30780.0",
      "30801.0",
      "30822.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30840.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30852.0",
      "30807.0",
      "30828.0",
      "30849.0",
      "30804.0",
      "30825.0",
      "30846.0",
      "30801.0",
      "30822.0",
      "30843.0",
      "30864.0",
      "30819.0",
      "30840.0",
      "30861.0",
      "30777.0",
      "30798.0",
      "30819.0",
      "30774.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30849.0",
      "30804.0",
      "30825.0",
      "30846.0",
      "30801.0",
      "30822.0",
      "30843.0",
      "30798.0",
      "30819.0",
      "30840.0",
      "30861.0",
      "30816.0",
      "30837.0",
      "30858.0",
      "30813.0",
      "30834.0",
      "30855.0",
      "30771.0",
      "30792.0",
      "30813.0",
      "30834.0",
      "30789.0",
      "30810.0",
      "30831.0",
      "30786.0",
      "30807.0",
      "30828.0",
      "30783.0",
      "30804.0",
      "30825.0",
      "30846.0",
      "30801.0",
      "30822.0",
      "30843.0",
      "30798.0",
      "30819.0",
      "30840.0",
      "30795.0",
      "30816.0",
      "30837.0",
      "30858.0",
      "30813.0",
      "30834.0",
      "30855.0",
      "30810.0",
      "30831.0",
      "30852.0",
      "30807.0",
      "30828.0",
      "30849.0",
      "30870.0"
    ],
    "annotated_answers": [
      "80.0"
    ],
    "solution": "# brute force solution\ndigits = range(10)\nfor d1 in digits:\n    for d2 in digits:\n        for d3 in digits:\n            for d4 in digits:\n                for d5 in digits:\n                    for d6 in digits:\n                        num = 3414*d1 + 4*d2 + 1*d3 + 4*d4 + 7*d5\n                        if num % 3 == 0:\n                            print(num)\n                            break"
  },
  {
    "example_id": 52,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "255.0"
    ],
    "annotated_answers": [
      "55.0"
    ],
    "solution": "history_students, science_students = 126, 129\ntotal_seniors = 200\nboth_students = history_students + science_students\nprint(both_students)"
  },
  {
    "example_id": 53,
    "selected_solution_index": 12,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-30.0"
    ],
    "annotated_answers": [
      "-30.0"
    ],
    "solution": "print(5 * (-32 // 5 + 1))"
  },
  {
    "example_id": 54,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "# Write a program to solve this problem\n# Write a program that takes a six-digit number and a digit\n# and returns True if the digit is placed in the circle\n# so that the number is divisible by 4.\n# Otherwise, return False\ndef divisible_by_4(number, digit):\n    if int(number) % 4 == 0:\n        return True\n    else:\n        return False\n\n\n# Test your function with the following call\n# print(divisible_by_4(35292, 2))\n\n\n# Write a program that takes a six-digit number\n# and returns the greatest digit that can be placed\n# in the circle so that the number is divisible by 4\ndef greatest_digit(number):\n    digits = [int(number) % 10]\n    number = int(number) // 10\n    while number > 0:\n        digits.append(number % 10)\n        number = number // 10\n    digits.sort()\n    digits.reverse()\n    for digit in digits:\n        if divisible_by_4(str(digit) + str(number), digit):\n            return digit\n    return 0\n\n\n# Test your function with the following call\nprint(greatest_digit(35292))"
  },
  {
    "example_id": 55,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "68.0"
    ],
    "annotated_answers": [
      "68.0"
    ],
    "solution": "import numpy as np\n\n# area of overlap in square inches\noverlap_area = np.sum(np.minimum(8.5, 10) * np.minimum(8, 11.5))\nprint(overlap_area)"
  },
  {
    "example_id": 56,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1999.0"
    ],
    "annotated_answers": [
      "10090.0"
    ],
    "solution": "def odd_digits_count(n):\n    return sum([1 for digit in str(n) if digit == '1'])\n\ndef find_nth_odd_integer(n):\n    count = 0\n    for i in range(1, 10**n):\n        if odd_digits_count(i) % 2 == 1:\n            count += 1\n        if count == n:\n            return i\n\nprint(find_nth_odd_integer(1000))"
  },
  {
    "example_id": 57,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "5.0",
      "6.5"
    ],
    "annotated_answers": [
      "82.0"
    ],
    "solution": "grades = [4,5,6,7,8,9]\nmedian = grades[2]\nmode = grades[1]\nmean = sum(grades) / len(grades)\nprint(f\"Median: {median}, Mode: {mode}, Mean: {mean}\")"
  },
  {
    "example_id": 58,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "140.0"
    ],
    "annotated_answers": [
      "140.0"
    ],
    "solution": "def lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\nprint(lcm(14, lcm(20, 35)))"
  },
  {
    "example_id": 59,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3331.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "import math\n\ndef is_prime(n):\n    return n > 1 and all(n % i for i in range(2, int(n ** 0.5) + 1))\n\ndef is_cube(n):\n    return n ** 0.5 % 1 == 0\n\ndef cubes_sum(a, b, c):\n    return a ** 3 + b ** 3 + c ** 3\n\ndef smallest_prime():\n    for a in range(10, 100):\n        for b in range(a, 100):\n            for c in range(b, 100):\n                if is_prime(cubes_sum(a, b, c)):\n                    return cubes_sum(a, b, c)\n\nprint(smallest_prime())"
  },
  {
    "example_id": 60,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "108.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "flour_per_dozen = 15\ncookies_per_dozen = 20\ncookies_wanted = 144\nflour_wanted = (cookies_wanted / cookies_per_dozen) * flour_per_dozen\nprint(flour_wanted)"
  },
  {
    "example_id": 61,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "870.2211650443727"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "import math\nr1, r2 = 12, 13\na1, a2 = math.pi * r1 ** 2, math.pi * r2 ** 2\na3 = math.pi * 6 ** 2\nprint(a1 + a2 - a3)"
  },
  {
    "example_id": 62,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "print(8-4/2-1)"
  },
  {
    "example_id": 63,
    "selected_solution_index": 11,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.85786437626905"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "from math import sqrt\nx = (5 - sqrt(2))**2\nprint(x)"
  },
  {
    "example_id": 64,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2106.0"
    ],
    "annotated_answers": [
      "105.0"
    ],
    "solution": "k = 27 * (3 * 2 + 9 * 8)\nprint(k)"
  },
  {
    "example_id": 65,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "def divisible_by_n(n):\n    if n == 0 or n == 6:\n        return 1\n    if n % 6 == 0:\n        return 2\n    return 1\n\ncount = 0\nfor i in range(10):\n    count += divisible_by_n(i)\nprint(count)"
  },
  {
    "example_id": 66,
    "selected_solution_index": 13,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "200.0"
    ],
    "annotated_answers": [
      "150.0"
    ],
    "solution": "memos_per_day = 600 / 3\nprint(memos_per_day)"
  },
  {
    "example_id": 67,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "88920.0"
    ],
    "annotated_answers": [
      "247000.0"
    ],
    "solution": "purchase_price = (0.8 * 49400) + 49400\nprint(purchase_price)"
  },
  {
    "example_id": 68,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "# Count the number of rectangles in the figure.\n# Each rectangle has a corner at (x, y) and a width of 1.\n# The height of each rectangle is 10.\n# There are 3 rectangles in the first row.\n# There are 2 rectangles in the second row.\n# There are 1 rectangle in the third row.\nrectangles = 3 + 2 + 1\nprint(rectangles)"
  },
  {
    "example_id": 69,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "120.0"
    ],
    "solution": "from math import factorial\n\nn = 5\nnum_books = 5\n\n# calculate the number of ways to stack the books\nnum_ways = factorial(n) / (factorial(num_books) * factorial(n - num_books))\n\nprint(num_ways)"
  },
  {
    "example_id": 70,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9000.0"
    ],
    "annotated_answers": [
      "636.0"
    ],
    "solution": "chime_1, chime_2, chime_4, chime_6, chime_8 = 15, 30, 45, 45, 15\nminute = 1\nhour = 60\ntotal_chime = chime_1 + chime_2 + chime_4 + chime_6 + chime_8\nprint(total_chime * minute * hour)"
  },
  {
    "example_id": 71,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.7"
    ],
    "annotated_answers": [
      "2.7"
    ],
    "solution": "rebecca_number = 2.748\nprint(round(rebecca_number, 1))"
  },
  {
    "example_id": 72,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "12.0",
      "24.0",
      "36.0",
      "48.0",
      "60.0",
      "72.0",
      "84.0",
      "96.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "for x in range(0, 100, 6):\n    if x % 4 == 0:\n        print(x)"
  },
  {
    "example_id": 73,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "from math import factorial\n\ndef diagonals(n):\n    return factorial(n) // (factorial(n - 2) * 2)\n\nprint(diagonals(5))"
  },
  {
    "example_id": 74,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "from math import floor\n\ndef has_sum(n):\n    return sum(int(digit) for digit in str(n)) == 15\n\ndef count_integers_with_sum(start, end, target):\n    return sum(1 for i in range(start, end+1) if has_sum(i))\n\nprint(count_integers_with_sum(200, 300, 15))"
  },
  {
    "example_id": 75,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.3639610306789285"
    ],
    "annotated_answers": [
      "31.0"
    ],
    "solution": "from math import sqrt\nside_len = 3\nhypotenuse_len = 4\narea = (side_len ** 2) * (sqrt(2)) / 2\nprint(area)"
  },
  {
    "example_id": 76,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-0.808860927477647"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "from sympy import Symbol, solve\nx = Symbol('x')\nPQ = 0.588\nx_sol = solve(x**2 + PQ**2 - 1, x)[0]\nprint(x_sol)"
  },
  {
    "example_id": 77,
    "selected_solution_index": 13,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "import math\n\ndef is_prime(n):\n    if n == 1:\n        return False\n    for i in range(2, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            return False\n    return True\n\ndef prime_factors(n):\n    factors = []\n    while n % 2 == 0:\n        factors.append(2)\n        n //= 2\n    for i in range(3, int(math.sqrt(n)) + 1, 2):\n        while n % i == 0:\n            factors.append(i)\n            n //= i\n    if n > 2 and is_prime(n):\n        factors.append(n)\n    return factors\n\ndef prime_factors_diff(n):\n    factors = prime_factors(n)\n    return max(factors) - min(factors)\n\nprint(prime_factors_diff(2000))"
  },
  {
    "example_id": 78,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "import math\n\n# Area of a circle\ndef circle_area(radius):\n    return math.pi * radius ** 2\n\n# Total area of four circles\ndef total_area(radius):\n    return 4 * circle_area(radius)\n\n# Radius of larger circle\ndef larger_radius(radius):\n    return math.sqrt(total_area(radius) / math.pi)\n\n# Print the radius of the larger circle\nprint(larger_radius(4))"
  },
  {
    "example_id": 79,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "total = 0\nfor i in range(1, 501):\n    if i % 3 == 0 and i % 4 == 0 and i % 5 == 0:\n        total += 1\nprint(total)"
  },
  {
    "example_id": 80,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "60.0"
    ],
    "annotated_answers": [
      "120.0"
    ],
    "solution": "num_houses = 6 * 10\nprint(num_houses)"
  },
  {
    "example_id": 81,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.3333333333333333"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "bicycle_speed = 20\ninches_per_second = 60\nbicycle_speed /= inches_per_second\nprint(bicycle_speed)"
  },
  {
    "example_id": 82,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "234.0"
    ],
    "annotated_answers": [
      "234.0"
    ],
    "solution": "for i in range(200, 2000):\n    if (i % 36) == 18:\n        print(i)\n        break"
  },
  {
    "example_id": 83,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "-30.0"
    ],
    "solution": "solutions = []\nfor x in range(-3, 9):\n    if -3 <= x+5 <= 8:\n        solutions.append(x)\nprint(sum(solutions))"
  },
  {
    "example_id": 84,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.237604307034013"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "from math import sqrt\na = 16/sqrt(3)\nprint(a)"
  },
  {
    "example_id": 85,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "3.0",
      "5.0",
      "7.0",
      "9.0",
      "11.0",
      "13.0",
      "15.0",
      "17.0"
    ],
    "annotated_answers": [
      "33.0"
    ],
    "solution": "n = 1\nwhile n <= 17:\n    if n % 2!= 0:\n        print(n)\n    n += 1"
  },
  {
    "example_id": 86,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "160.0"
    ],
    "annotated_answers": [
      "160.0"
    ],
    "solution": "appetizers = 5\nentrees = 8\ndesserts = 4\nmeals = appetizers * entrees * desserts\nprint(meals)"
  },
  {
    "example_id": 87,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "14.0"
    ],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "def gcf(a, b):\n    while b!= 0:\n        a, b = b, a % b\n    return a\n\nprint(gcf(518, 294))"
  },
  {
    "example_id": 88,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "393.73066958946424"
    ],
    "annotated_answers": [
      "80.0"
    ],
    "solution": "import math\n\ndef trisect(angle):\n    return 2 * angle / (math.sqrt(3) - 1)\n\n# Trisect angles\nangle_BAD = trisect(110)\nangle_CDA = trisect(100)\n\n# Find angle AFD\nangle_AFD = angle_BAD + angle_CDA - 180\nprint(angle_AFD)"
  },
  {
    "example_id": 89,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "import math\na, b = 3*math.sqrt(5), 5*math.sqrt(3)\nprint(int(b-a))"
  },
  {
    "example_id": 90,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "27.0",
      "23.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "mexico_students = 7\nengland_students = 11\nboth_students = 4\ntotal_students = 30\nnot_mexico_students = total_students - mexico_students + both_students\nnot_england_students = total_students - england_students + both_students\nprint(not_mexico_students)\nprint(not_england_students)"
  },
  {
    "example_id": 91,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "264.0"
    ],
    "annotated_answers": [
      "23.0"
    ],
    "solution": "root_56 = 8\nroot_126 = 11\na = root_56 * root_126\nb = a * 2\nprint(a+b)"
  },
  {
    "example_id": 92,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "84.5"
    ],
    "annotated_answers": [
      "84.5"
    ],
    "solution": "print(35.2 + 49.3)"
  },
  {
    "example_id": 93,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "53.0"
    ],
    "annotated_answers": [
      "53.0"
    ],
    "solution": "import math\n\ndef is_prime(n):\n    if n == 1:\n        return False\n    for i in range(2, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            return False\n    return True\n\ndef prime_factors(n):\n    factors = []\n    while n % 2 == 0:\n        factors.append(2)\n        n = n // 2\n    for i in range(3, int(math.sqrt(n)) + 1, 2):\n        while n % i == 0:\n            factors.append(i)\n            n = n // i\n    if n > 1 and is_prime(n):\n        factors.append(n)\n    return factors\n\ndef sum_of_prime_factors(n):\n    factors = prime_factors(n)\n    return sum(factors)\n\nprint(sum_of_prime_factors(85085))"
  },
  {
    "example_id": 94,
    "selected_solution_index": 11,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "100.0"
    ],
    "annotated_answers": [
      "100.0"
    ],
    "solution": "def positive_divisors(n):\n    divisors = []\n    for i in range(1, n + 1):\n        if n % i == 0:\n            divisors.append(i)\n    return divisors\n\ndivisors = positive_divisors(10)\nproduct = 1\nfor d in divisors:\n    product *= d\nprint(product)"
  },
  {
    "example_id": 95,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "40.0"
    ],
    "annotated_answers": [
      "40.0"
    ],
    "solution": "# Each large box contains 3 small boxes, each small box contains 2 smaller boxes\n\n# Total number of large boxes: 4\n# Total number of small boxes: 4 x 3 = 12\n# Total number of smaller boxes: 12 x 2 = 24\n\nprint(24 + 12 + 4)"
  },
  {
    "example_id": 96,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.40500611775288",
      "51"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "n = 42\nfactorial = 1\nfor i in range(1, n+1):\n    factorial *= i\nprint(factorial)"
  },
  {
    "example_id": 97,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "666000.0"
    ],
    "annotated_answers": [
      "666000.0"
    ],
    "solution": "print(3**2 * 2**4 * 37 * 5**3)"
  },
  {
    "example_id": 98,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "105.0"
    ],
    "annotated_answers": [
      "105.0"
    ],
    "solution": "from math import gcd\n\ndef least_positive_integer_divisible_by_four_smallest_odd_positive_integers():\n    smallest_odd_positive_integers = [1, 3, 5, 7]\n    least_positive_integer_divisible_by_four_smallest_odd_positive_integers = 1\n    for i in range(2, 1000000000):\n        if all(i % smallest_odd_positive_integer == 0 for smallest_odd_positive_integer in smallest_odd_positive_integers):\n            least_positive_integer_divisible_by_four_smallest_odd_positive_integers = i\n            return least_positive_integer_divisible_by_four_smallest_odd_positive_integers\n    return least_positive_integer_divisible_by_four_smallest_odd_positive_integers\n\nprint(least_positive_integer_divisible_by_four_smallest_odd_positive_integers())"
  },
  {
    "example_id": 99,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.000000000000001"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "print((20 * (2/5)**2 * (3/4)**2 * 5/9)**5)"
  },
  {
    "example_id": 100,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "93.0"
    ],
    "annotated_answers": [
      "97.0"
    ],
    "solution": "scores = [87, 85, 87]\nscores.extend([90-3, 90+3])\nscores.sort()\nprint(scores[-1])"
  },
  {
    "example_id": 101,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "20.0",
      "40.0",
      "60.0",
      "80.0",
      "100.0",
      "120.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "factors = []\nfor i in range(1, 120 + 1):\n    if i % 4 == 0 and i % 5 == 0:\n        factors.append(i)\nprint(factors)"
  },
  {
    "example_id": 102,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "86.0"
    ],
    "annotated_answers": [
      "21.0"
    ],
    "solution": "# Fraction is equivalent to 5/8\n# Denominator and numerator add up to 91\n# Difference between denominator and numerator is 86\ndenominator = 91\nnumerator = 5\ndifference = denominator - numerator\nprint(difference)"
  },
  {
    "example_id": 103,
    "selected_solution_index": 0,
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "0 ** (5 ** 6431564)"
  },
  {
    "example_id": 104,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.846153846153846"
    ],
    "annotated_answers": [
      "1.125"
    ],
    "solution": "a = 0.26\nprint(1/a)"
  },
  {
    "example_id": 105,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "62.0"
    ],
    "solution": "for i in range(2, 10000):\n    if (i % 3) == 2 and (i % 4) == 2 and (i % 5) == 2 and (i % 6) == 2:\n        print(i)\n        break"
  },
  {
    "example_id": 106,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "print(-1 ** 1001)"
  },
  {
    "example_id": 107,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "from math import floor\ndays = 31\nhours_per_day = 24\nhours_studied = 0\nfor i in range(1, days + 1):\n    if i == 5 or i == 10:\n        hours_studied += 3\n    else:\n        hours_studied += 1\nprint(floor(hours_studied / hours_per_day))"
  },
  {
    "example_id": 108,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "563.51"
    ],
    "annotated_answers": [
      "563.51"
    ],
    "solution": "print(round(563.5097, 2))"
  },
  {
    "example_id": 109,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "7.2"
    ],
    "solution": "import math\nside_AB, side_BC, side_CD = 4, 4, 4\narea_ABE = 6\nside_CE = math.sqrt(area_ABE * (side_AB + side_BC + side_CD) / 2)\nprint(side_CE)"
  },
  {
    "example_id": 110,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "13.18"
    ],
    "annotated_answers": [
      "13.18"
    ],
    "solution": "print(56.78-43.6)"
  },
  {
    "example_id": 111,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "22.5"
    ],
    "solution": "a, b, c = 0.0, 2*0.0, 5*0.0\nx = (a + b + c) / 3.0\nprint(x)"
  },
  {
    "example_id": 112,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "15.5"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "terms = [32, 8]\nfor i in range(2, 6):\n    terms.append((terms[i-2] + terms[i-1])/2)\nprint(terms[-1])"
  },
  {
    "example_id": 113,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "49.0"
    ],
    "annotated_answers": [
      "147.0"
    ],
    "solution": "pages_fiction, pages_history = 5, 2\nminutes_per_book = 7\npages_total = 30\nminutes_total = (pages_fiction * minutes_per_book) + (pages_history * minutes_per_book)\nprint(minutes_total)"
  },
  {
    "example_id": 114,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "234.0"
    ],
    "annotated_answers": [
      "78.0"
    ],
    "solution": "perimeter_triangle = 39\nsides = 6\nperimeter_hexagon = perimeter_triangle * sides\nprint(perimeter_hexagon)"
  },
  {
    "example_id": 115,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "from math import floor\nfrom math import ceil\n\ndef count_digit(n, digit):\n    count = 0\n    for i in range(n):\n        if str(i)[-1] == str(digit):\n            count += 1\n    return count\n\ndef solve(n, digit):\n    return count_digit(n, digit)\n\nprint(solve(100, 6))"
  },
  {
    "example_id": 116,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "25.0"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "set_ = [2/5, 1/2, 5, 10]\ngreatest_quotient = max(set_) / min(set_)\nprint(greatest_quotient)"
  },
  {
    "example_id": 117,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "# Using the sum of the four integers divided by four\nprint((2 + 4 + 6 + 8) / 4)"
  },
  {
    "example_id": 118,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "103041.0"
    ],
    "annotated_answers": [
      "103041.0"
    ],
    "solution": "print((103041 ** 0.5) ** 2)"
  },
  {
    "example_id": 119,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "doughnuts_price = 3\ndoughnuts_per_dozen = 12\ndoughnuts_total = 4\ndoughnuts_total_price = doughnuts_total * doughnuts_price\nprint(doughnuts_total_price)"
  },
  {
    "example_id": 120,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.5"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "square_side = 6\ntriangle_base = 8\ntriangle_height = square_side**2 / 8\nprint(triangle_height)"
  },
  {
    "example_id": 121,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5040.0"
    ],
    "annotated_answers": [
      "5040.0"
    ],
    "solution": "from math import factorial\n\ndef number_of_different_settings(n):\n    return factorial(n) / factorial(n - 4)\n\nprint(number_of_different_settings(10))"
  },
  {
    "example_id": 122,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.3636363636363635"
    ],
    "annotated_answers": [
      "1.36"
    ],
    "solution": "veal_weight_kg = 3/2.2\nprint(veal_weight_kg)"
  },
  {
    "example_id": 123,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "9.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "import math\n\ndef gcf(a, b):\n    while b!= 0:\n        a, b = b, a % b\n    return a\n\nprint(gcf(144, 405))"
  },
  {
    "example_id": 124,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.73"
    ],
    "annotated_answers": [
      "0.73"
    ],
    "solution": "print(0.8 - 0.07)"
  },
  {
    "example_id": 125,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "38.0"
    ],
    "annotated_answers": [
      "56.0"
    ],
    "solution": "scores = [17, 10, 9, 14, 16, 8, 10]\naverage = 14\nsum(scores[3:6]) == average\nprint(sum(scores[3:6]))"
  },
  {
    "example_id": 126,
    "selected_solution_index": 11,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.8"
    ],
    "annotated_answers": [
      "45.0"
    ],
    "solution": "# malls\nnorth_area_mall = 90\nuniversity_mall = 9\n\n# number of stores that sell shoes\nnorth_area_shoes = 18\nuniversity_shoes = north_area_shoes / north_area_mall * university_mall\nprint(university_shoes)"
  },
  {
    "example_id": 127,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "number = 42\nfactor = 14\npossible_numbers = number // factor\nprint(possible_numbers)"
  },
  {
    "example_id": 128,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "red_period, yellow_period, blue_period = 2, 3, 5\ntotal_time = 7\nnumber_of_times_all_lights_on_together = total_time // red_period + total_time // yellow_period + total_time // blue_period - 2\nprint(number_of_times_all_lights_on_together)"
  },
  {
    "example_id": 129,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.15"
    ],
    "annotated_answers": [
      "0.15"
    ],
    "solution": "print(3/20)"
  },
  {
    "example_id": 130,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.833333333333334"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x = (29 - 2 - 1/2) / (2 + 1)\nprint(x)"
  },
  {
    "example_id": 131,
    "selected_solution_index": 10,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "120.0"
    ],
    "annotated_answers": [
      "120.0"
    ],
    "solution": "smallest_multiple_of_6_greater_than_115 = 120\nprint(smallest_multiple_of_6_greater_than_115)"
  },
  {
    "example_id": 132,
    "selected_solution_index": 13,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "11.0",
      "135.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "data = {\n    '9th': (0.411, 0.394),\n    '10th': (0.344, 0.331),\n    '11th': (0.206, 0.138),\n    '12th': (0.116, 0.086),\n}\nfor grade, (males, females) in data.items():\n    males, females = float(males), float(females)\n    if abs(males - females * 1.35) < abs(males - females):\n        print(f\"{grade} grade is the closest to $135\\%$\")\n        break"
  },
  {
    "example_id": 133,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "9.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "import math\n\ndef is_relatively_prime(a, b):\n    if a == 1 or b == 1:\n        return False\n    for i in range(2, int(math.sqrt(a) + 1)):\n        if a % i == 0 and b % i == 0:\n            return False\n    return True\n\ncount = 0\nfor i in range(11, 29):\n    if is_relatively_prime(i, 28):\n        count += 1\nprint(count)"
  },
  {
    "example_id": 134,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "expression = ((1*2) + (3*4) - (5*6) + (7*8)) * (9*0)\nprint(expression)"
  },
  {
    "example_id": 135,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "80.0"
    ],
    "annotated_answers": [
      "80.0"
    ],
    "solution": "test_scores = [70, 80, 90, 75, 80, 85]\nmean = sum(test_scores) / len(test_scores)\nprint(mean)"
  },
  {
    "example_id": 136,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "60.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "percentage = 5\nnumber = 1200\nresult = number * percentage / 100\nprint(result)"
  },
  {
    "example_id": 137,
    "selected_solution_index": 12,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "from sympy import sqrt, symbols\nlength_hypotenuse = 2\na, b = symbols('a b')\nsum_squares = a**2 + b**2\nprint(sum_squares)"
  },
  {
    "example_id": 138,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "246.0"
    ],
    "annotated_answers": [
      "1208.0"
    ],
    "solution": "from math import sqrt\nperimeter = 62 + 20 + 62 + 20 + 62 + 20\nprint(perimeter)"
  },
  {
    "example_id": 139,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "prime_numbers = [2, 3, 5, 7, 11]\nproduct = 1\nfor prime in prime_numbers:\n    product *= prime\nprint(product % 42)"
  },
  {
    "example_id": 140,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.892789260714372"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "import math\nx = math.log(72, 3)\nprint(x)"
  },
  {
    "example_id": 141,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "from sympy import floor\nx = floor(7/3) + 5\nprint(x)"
  },
  {
    "example_id": 142,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "shorter_length = 60/5\nprint(shorter_length)"
  },
  {
    "example_id": 143,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "n = 5"
  },
  {
    "example_id": 144,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "first_15 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\nnth_number = 30\nrow = int(nth_number / 5)\ncolumn = nth_number % 5\nif column == 0:\n    column = 5\nnumber = first_15[row - 1] + column - 1\nprint(number)"
  },
  {
    "example_id": 145,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "326.5"
    ],
    "annotated_answers": [
      "326.5"
    ],
    "solution": "print(12.6 + 313.9)"
  },
  {
    "example_id": 146,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "print((100/101)**(-3)*(100/101)**3)"
  },
  {
    "example_id": 147,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "print((1 + 2 * 3 * 4 * 5) // 11)"
  },
  {
    "example_id": 148,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "60.0"
    ],
    "annotated_answers": [
      "75.0"
    ],
    "solution": "tree_height = 120 / 2\nprint(tree_height)"
  },
  {
    "example_id": 149,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4500.0"
    ],
    "annotated_answers": [
      "625.0"
    ],
    "solution": "def is_positive_odd_number(x):\n    if x < 1000 or x % 2 == 0:\n        return False\n    while x % 10 == 0:\n        x //= 10\n    return x % 2 == 1\n\ndef count_positive_odd_numbers_with_digits(n):\n    return sum(1 for i in range(10 ** (n - 1), 10 ** n) if is_positive_odd_number(i))\n\nprint(count_positive_odd_numbers_with_digits(4))"
  },
  {
    "example_id": 150,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "30.0"
    ],
    "annotated_answers": [
      "900.0"
    ],
    "solution": "from sympy import primefactors\n\ndef least_perfect_square(n):\n    for i in range(1, n+1):\n        factors = primefactors(i)\n        if len(factors) == 3:\n            return i\n\nprint(least_perfect_square(100))"
  },
  {
    "example_id": 151,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2097154.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "euclid = 1\npythagoras = 2\nptolemy = -2\nhypatia = 1\nsum = euclid**20 + pythagoras**20 + ptolemy**20 + hypatia**20\nprint(sum)"
  },
  {
    "example_id": 152,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "n = 5000\nstart_val = 1\ncount_up = True\ncurr_val = start_val\nwhile n > 0:\n    if count_up:\n        curr_val += 1\n    else:\n        curr_val -= 1\n    n -= 1\n    count_up = not count_up\nprint(curr_val)"
  },
  {
    "example_id": 153,
    "selected_solution_index": 13,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0",
      "9.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "apples = 36\nratio = [2, 3, 3, 4]\ntot = sum(ratio)\nshare = [apples * r/tot for r in ratio]\nprint(share[1], share[2])"
  },
  {
    "example_id": 154,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "88.2"
    ],
    "annotated_answers": [
      "40.0"
    ],
    "solution": "import math\na, b = math.cos(math.radians(13*36/360)), math.sin(math.radians(13*36/360))\nc, d = math.cos(math.radians(5*36/360)), math.sin(math.radians(5*36/360))\np, q = math.cos(math.radians(65/360)), math.sin(math.radians(65/360))\nx = math.degrees(math.atan2(a*c-b*d, b*c+a*d))\nprint(x)"
  },
  {
    "example_id": 155,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-15.398193359375"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "result = (8/9) ** -4 - 17\nprint(result)"
  },
  {
    "example_id": 156,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "18.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "length_of_one_side = 6\narea = (length_of_one_side ** 2) / 2\nprint(area)"
  },
  {
    "example_id": 157,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "13.0"
    ],
    "annotated_answers": [
      "107.0"
    ],
    "solution": "from math import sqrt\n\ndef largest_prime_factor(n):\n    if n == 2 or n == 3:\n        return n\n    else:\n        i = 5\n        while i <= sqrt(n):\n            if n % i == 0:\n                return i\n            i += 2\n        return n\n\nprint(largest_prime_factor(1391))"
  },
  {
    "example_id": 158,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "23.0"
    ],
    "annotated_answers": [
      "23.0"
    ],
    "solution": "P, Q = 8, 48\nB = (P + Q) / 2\nC = (B + Q) / 2\nD = (P + C) / 2\nprint(D)"
  },
  {
    "example_id": 159,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "180.0"
    ],
    "annotated_answers": [
      "120.0"
    ],
    "solution": "# Let the measure of the largest angle be x\n# The sum of the measures of the three angles is 360\n# The measure of the smallest angle is 90\n# The other two angles are both right angles, so they are 90\n# The measure of the largest angle is twice the measure of the smallest angle\n# So, the measure of the largest angle is 2 x 90 = 180\nprint(180)"
  },
  {
    "example_id": 160,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "69.0"
    ],
    "annotated_answers": [
      "69.0"
    ],
    "solution": "def is_positive_multiple_of_13(n):\n    return n % 13 == 0\n\ndef is_three_digit_integer(n):\n    return 100 <= n <= 999\n\ndef count_positive_multiples_of_13(n):\n    return sum(1 for i in range(n) if is_positive_multiple_of_13(i) and is_three_digit_integer(i))\n\nprint(count_positive_multiples_of_13(1000))"
  },
  {
    "example_id": 161,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "45.0"
    ],
    "annotated_answers": [
      "80.0"
    ],
    "solution": "original_price = 60\ndiscount = 0.25\nnew_price = original_price - (original_price * discount)\nprint(new_price)"
  },
  {
    "example_id": 162,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "# A prime number is an integer greater than 1 that is divisible only by 1 and itself.\ndef is_prime(n):\n    if n == 1 or n == 0:\n        return False\n    for i in range(2, int(n ** 0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\n# Reverse a number\ndef reverse(n):\n    return int(str(n)[::-1])\n\n# Check if a number is an emirp\ndef is_emirp(n):\n    return is_prime(n) and is_prime(reverse(n))\n\n# Find the smallest two-digit prime number that is NOT an emirp\ndef find_smallest_non_emirp():\n    for i in range(10, 100):\n        if not is_emirp(i):\n            return i\n\nprint(find_smallest_non_emirp())"
  },
  {
    "example_id": 163,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "39.0"
    ],
    "annotated_answers": [
      "21.0"
    ],
    "solution": "girls_mileage = 3 + 6*6\nboys_mileage = 5*7\nnew_equipment_condition = (girls_mileage > boys_mileage)\nprint(girls_mileage)"
  },
  {
    "example_id": 164,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "60.0"
    ],
    "annotated_answers": [
      "75.0"
    ],
    "solution": "def is_composite(n):\n    if n <= 1:\n        return False\n    for i in range(2, int(n ** 0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\nsum = 0\nfor i in range(10, 21):\n    if is_composite(i):\n        sum += i\nprint(sum)"
  },
  {
    "example_id": 165,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "53.99999999999999"
    ],
    "annotated_answers": [
      "54.0"
    ],
    "solution": "from math import sqrt\nexpr = (sqrt(6) + sqrt(24)) ** 2\nprint(expr)"
  },
  {
    "example_id": 166,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "32.0"
    ],
    "annotated_answers": [
      "32.0"
    ],
    "solution": "print(4 * 12 - (4 + 12))"
  },
  {
    "example_id": 167,
    "selected_solution_index": 14,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "162.0"
    ],
    "solution": "# Number of games played\nnumber_of_games = 12\nprint(number_of_games)"
  },
  {
    "example_id": 168,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "x = 22\nprint(x / 2)"
  },
  {
    "example_id": 169,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "0.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "n = 12\npositive_integers = 0\nnegative_integers = 0\nfor i in range(1, n + 1):\n    if n % i == 0:\n        if i > 0:\n            positive_integers += 1\n        else:\n            negative_integers += 1\nprint(positive_integers, negative_integers)"
  },
  {
    "example_id": 170,
    "selected_solution_index": 10,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "# import from math\nimport math\nx = math.ceil((-2-4)/3)\nprint(x)"
  },
  {
    "example_id": 171,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "240.0"
    ],
    "annotated_answers": [
      "240.0"
    ],
    "solution": "for i in range(1, 1000000):\n    if i % 16 == 0 and i % 15 == 0 and i % 12 == 0:\n        print(i)\n        break"
  },
  {
    "example_id": 172,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "# The smallest 3-digit prime numbers are 2 and 3\nn = 2 * 3\n\n# The sum of the digits of n is 2 + 3 = 5\nprint(sum(map(int, str(n))))"
  },
  {
    "example_id": 173,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.5"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "import numpy as np\nA = np.array([0, 0])\nB = np.array([2, 0])\nD = np.array([3, 0])\nE = np.array([4, 0])\nC = (B + D) / 2\nprint(np.linalg.norm(C - A))"
  },
  {
    "example_id": 174,
    "selected_solution_index": 12,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "num_triangles = 2\nprint(num_triangles)"
  },
  {
    "example_id": 175,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "a = 10**5 * 10**77 // 10**15\nb = (10**15)**4\nc = a // b\nprint(len(str(c)) - 1)"
  },
  {
    "example_id": 176,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.5"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "x = 1/2\nprint(x)"
  },
  {
    "example_id": 177,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1320.0"
    ],
    "annotated_answers": [
      "1320.0"
    ],
    "solution": "distance = 5280\ntime = 60\nspeed = 15\ndistance_per_minute = (distance / time) * speed\nprint(distance_per_minute)"
  },
  {
    "example_id": 178,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "83.0"
    ],
    "solution": "# x + 37 = x + 37\n# 2x - 18 = x + 37\n# 2x = 55\n# x = 27\nx = 27"
  },
  {
    "example_id": 179,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "38.53333333333333"
    ],
    "annotated_answers": [
      "240.0"
    ],
    "solution": "perimeter = 68\ndiagonal = 30\narea = perimeter * perimeter / (4 * diagonal)\nprint(area)"
  },
  {
    "example_id": 180,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "18.43494882292201"
    ],
    "annotated_answers": [
      "30.0"
    ],
    "solution": "import math\n\nx = math.degrees(math.atan(1.0/3.0))\nprint(x)"
  },
  {
    "example_id": 181,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "14.0"
    ],
    "annotated_answers": [
      "30.0"
    ],
    "solution": "flagpole_length = 20\nwoman_shadow_length = 9\nwoman_height = 6\nshadow_length = flagpole_length - woman_height\nprint(shadow_length)"
  },
  {
    "example_id": 182,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "21.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "rope1, rope2 = 18, 24\npiece_length = (rope1 + rope2) / 2\nprint(piece_length)"
  },
  {
    "example_id": 183,
    "selected_solution_index": 12,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "27.0"
    ],
    "solution": "from sympy import symbols, sqrt\n\na, b, c = symbols('a b c')\n\n# Area of rectangle\nS = a * b\n\n# Area of triangle\ns = (a + b + c) / 2\nA = sqrt(s * (s - a) * (s - b) * (s - c))\n\nprint(A)"
  },
  {
    "example_id": 184,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "3400.0"
    ],
    "solution": "x = 1000"
  },
  {
    "example_id": 185,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "48.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "picture_length, picture_width = 5, 7\nborder_length, border_width = picture_length + 1, picture_width + 1\nborder_area = border_length * border_width\nprint(border_area)"
  },
  {
    "example_id": 186,
    "selected_solution_index": 13,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "from sympy import Pow, Rational\n\nprint(Pow(36, 10) / Pow(6, 19))"
  },
  {
    "example_id": 187,
    "selected_solution_index": 12,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "20202.0"
    ],
    "annotated_answers": [
      "89898.0"
    ],
    "solution": "# Find the largest five-digit palindrome\ndef largest_palindrome_five_digits(n):\n    for i in range(10**(n-1), 10**n):\n        if str(i) == str(i)[::-1] and i % 6 == 0:\n            return i\n\nprint(largest_palindrome_five_digits(5))"
  },
  {
    "example_id": 188,
    "selected_solution_index": 12,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.91"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "# Import math module\nfrom math import log10\n\n# Assign value of 8210 to x\nx = 8210\n\n# Calculate log base 10 of x and round to 2 decimal places\nlog_value = round(log10(x), 2)\n\n# Print log value\nprint(log_value)"
  },
  {
    "example_id": 189,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "84.0"
    ],
    "solution": "n_students = 30\nscore_80 = 20\nscore_90 = 8\nscore_100 = 2\ntotal_score = score_80 + score_90 + score_100\nmean_score = total_score / n_students\nprint(mean_score)"
  },
  {
    "example_id": 190,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.411706439299983"
    ],
    "annotated_answers": [
      "55.0"
    ],
    "solution": "import math\n\ndef angle(a, b, c):\n    \"\"\"\n    Given the lengths of the sides of a triangle,\n    return the measure of the angle between them\n    \"\"\"\n    return math.degrees(math.atan2(a, b) - math.atan2(a, c))\n\na, b, c = 1.3, 1.4, 1.2\nprint(angle(a, b, c))"
  },
  {
    "example_id": 191,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "132.0"
    ],
    "annotated_answers": [
      "132.0"
    ],
    "solution": "# 12 choices for entering door\n# 11 choices for leaving door\n# 12 x 11 = 132 ways\nprint(12*11)"
  },
  {
    "example_id": 192,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "24.0"
    ],
    "annotated_answers": [
      "24.0"
    ],
    "solution": "cookie_dough_pounds, cookie_dough_weight = 3/2, 1/16\nnumber_of_cookies = cookie_dough_pounds / cookie_dough_weight\nprint(number_of_cookies)"
  },
  {
    "example_id": 193,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "66.0"
    ],
    "annotated_answers": [
      "144.0"
    ],
    "solution": "# Draw a pie chart of the referendum result.\n# The angles of the sectors are given in degrees.\n\n# The angles of the sectors are given in degrees.\ndegrees_of_angle_ACB = 66\nprint(degrees_of_angle_ACB)"
  },
  {
    "example_id": 194,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.39999999999999997"
    ],
    "annotated_answers": [
      "0.4"
    ],
    "solution": "print(2.4 / 6)"
  },
  {
    "example_id": 195,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "20.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "x = (4 ** 2) + 4\nprint(x)"
  },
  {
    "example_id": 196,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "won_games = 0.25 * 12\nprint(won_games)"
  },
  {
    "example_id": 197,
    "selected_solution_index": 10,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "t = 9.6 / 1.2\nprint(t)"
  },
  {
    "example_id": 198,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "63.0"
    ],
    "annotated_answers": [
      "628.0"
    ],
    "solution": "less_than_200_pi = 0\nfor i in range(1, 200):\n    if i % 3.14 < 1:\n        less_than_200_pi += 1\nprint(less_than_200_pi)"
  },
  {
    "example_id": 199,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "18.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "print(6*3)"
  },
  {
    "example_id": 200,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "15.0"
    ],
    "annotated_answers": [
      "56.0"
    ],
    "solution": "colors = 8\nshirts_and_ties = colors * 2 - 1\nprint(shirts_and_ties)"
  },
  {
    "example_id": 201,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "45.0"
    ],
    "annotated_answers": [
      "107.0"
    ],
    "solution": "degrees = 360 / 8\nprint(degrees)"
  },
  {
    "example_id": 202,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "103.0"
    ],
    "annotated_answers": [
      "24.0"
    ],
    "solution": "european_stamps = 8\ndecade = 80\ntotal_stamps = 50 + 7 + 12 + 15 + 10 + 9\nprint(total_stamps)"
  },
  {
    "example_id": 203,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "37.0"
    ],
    "annotated_answers": [
      "30.0"
    ],
    "solution": "n = 1000\nn_divisible = 0\nfor i in range(n):\n    if str(i) == str(i)[::-1] and i % 3 == 0:\n        n_divisible += 1\nprint(n_divisible)"
  },
  {
    "example_id": 204,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-6.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "cupcakes_baked = 24\nchocolate_cupcakes = cupcakes_baked // 2\nraisin_cupcakes = cupcakes_baked // 3\nchocolate_chip_cupcakes = cupcakes_baked // 4\nnut_cupcakes = cupcakes_baked // 6\nmax_cupcakes_with_no_ingredients = cupcakes_baked - chocolate_cupcakes - raisin_cupcakes - chocolate_chip_cupcakes - nut_cupcakes\nprint(max_cupcakes_with_no_ingredients)"
  },
  {
    "example_id": 205,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "157.0"
    ],
    "annotated_answers": [
      "22.0"
    ],
    "solution": "num_of_integers = 0\nfor i in range(100, 501):\n    if '3' in str(i):\n        num_of_integers += 1\nprint(num_of_integers)"
  },
  {
    "example_id": 206,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1225.0"
    ],
    "annotated_answers": [
      "225.0"
    ],
    "solution": "# Perimeter of a square is 4 times the side length\n# Perimeter of a right triangle is the sum of the lengths of the legs\n# Perimeter of the square = perimeter of right triangle\n# Side length of the square = perimeter of right triangle / 4\n# Area of the square = side length squared\n# Area of the square = (perimeter of right triangle / 4)^2\n# Area of the square = (20 + 15) / 4)^2\n# Area of the square = 35^2\n# Area of the square = 1225\nprint(1225)"
  },
  {
    "example_id": 207,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "60.0"
    ],
    "annotated_answers": [
      "60.0"
    ],
    "solution": "# math.sqrt()\n# math.pow()\n# math.prod()\nimport math\nprint(math.sqrt(math.prod([10, 15, 24])))"
  },
  {
    "example_id": 208,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "x = 12\nprint(x)"
  },
  {
    "example_id": 209,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "108.0"
    ],
    "solution": "angle = 6\nprint(angle)"
  },
  {
    "example_id": 210,
    "selected_solution_index": 12,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "21.0"
    ],
    "annotated_answers": [
      "21.0"
    ],
    "solution": "def get_positive_multiples(n, m):\n    multiples = []\n    for i in range(n, m):\n        if i % n == 0:\n            multiples.append(i)\n    return multiples\n\nprint(len(get_positive_multiples(7, 150)))"
  },
  {
    "example_id": 211,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "from math import floor\n\ndef divisors(n):\n    divisors = []\n    for i in range(1, floor(n ** 0.5) + 1):\n        if n % i == 0:\n            divisors.append(i)\n            if n // i!= i:\n                divisors.append(n // i)\n    return divisors\n\nprint(len(divisors(7)))"
  },
  {
    "example_id": 212,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "numbers = [6, 8, 9, 11, 16]\nprint(sum(numbers)/len(numbers))"
  },
  {
    "example_id": 213,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "400.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "a, b, x = 9, 5, 5\na = (x**2 - b)**2\nprint(a)"
  },
  {
    "example_id": 214,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "143.5"
    ],
    "annotated_answers": [
      "52.0"
    ],
    "solution": "tallest_height, shortest_height = 858, 625\nmean_height = (tallest_height + shortest_height) / 2\nnew_building_height = 885\nincrease = new_building_height - mean_height\nprint(increase)"
  },
  {
    "example_id": 215,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.5"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "side_length = 2 + 21/2\nprint(side_length)"
  },
  {
    "example_id": 216,
    "selected_solution_index": 13,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "1.0",
      "0.0",
      "2.0",
      "0.0",
      "3.0",
      "0.0",
      "4.0",
      "0.0",
      "5.0",
      "0.0",
      "6.0",
      "0.0",
      "7.0",
      "1.0",
      "2.0",
      "1.0",
      "3.0",
      "1.0",
      "4.0",
      "1.0",
      "5.0",
      "1.0",
      "6.0",
      "1.0",
      "7.0",
      "2.0",
      "3.0",
      "2.0",
      "4.0",
      "2.0",
      "5.0",
      "2.0",
      "6.0",
      "2.0",
      "7.0",
      "3.0",
      "4.0",
      "3.0",
      "5.0",
      "3.0",
      "6.0",
      "3.0",
      "7.0",
      "4.0",
      "5.0",
      "4.0",
      "6.0",
      "4.0",
      "7.0",
      "5.0",
      "6.0",
      "5.0",
      "7.0",
      "6.0",
      "7.0",
      "0.0",
      "7.0",
      "0.0",
      "6.0",
      "0.0",
      "5.0",
      "0.0",
      "4.0",
      "0.0",
      "3.0",
      "0.0",
      "2.0",
      "0.0",
      "1.0",
      "1.0",
      "6.0",
      "1.0",
      "5.0",
      "1.0",
      "4.0",
      "1.0",
      "3.0",
      "1.0",
      "2.0",
      "1.0",
      "1.0",
      "2.0",
      "5.0",
      "2.0",
      "4.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "2.0",
      "1.0",
      "3.0",
      "4.0",
      "3.0",
      "3.0",
      "3.0",
      "2.0",
      "3.0",
      "1.0",
      "4.0",
      "3.0",
      "4.0",
      "2.0",
      "4.0",
      "1.0",
      "5.0",
      "2.0",
      "5.0",
      "1.0",
      "6.0",
      "1.0"
    ],
    "annotated_answers": [
      "448.0"
    ],
    "solution": "# row\nfor i in range(8):\n    for j in range(i+1, 8):\n        print(i, j)\n# column\nfor i in range(8):\n    for j in range(i+1, 8):\n        print(i, 8-j)"
  },
  {
    "example_id": 217,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "21.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "politicians = 4\nlawyers = 3\nhandshakes = politicians * (politicians - 1) + lawyers * (politicians - 1)\nprint(handshakes)"
  },
  {
    "example_id": 218,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "260.0"
    ],
    "annotated_answers": [
      "980.0"
    ],
    "solution": "pounds = 1\npence = 5\nfarthings = pounds * 20 * 12 + pence * 4\nprint(farthings)"
  },
  {
    "example_id": 219,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "75.15317691222374"
    ],
    "annotated_answers": [
      "100.0"
    ],
    "solution": "import math\nAC_length = math.sqrt(32**2 + 68**2)\nprint(AC_length)"
  },
  {
    "example_id": 220,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "# Diagonals of a convex hexagon\n# There are 6 diagonals\n# 3 diagonals from each vertex to the opposite vertex\n# 1 diagonal from each vertex to the midpoint of the opposite side\n# 1 diagonal from each vertex to the midpoint of the adjacent side\n# 1 diagonal from each vertex to the midpoint of the opposite side\n# 1 diagonal from each vertex to the midpoint of the adjacent side\nprint(6)"
  },
  {
    "example_id": 221,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = 1\nwhile 3*x > 2*x+1:\n    x += 1\nprint(x)"
  },
  {
    "example_id": 222,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "print(6 + 8 / 2)"
  },
  {
    "example_id": 223,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "28.0"
    ],
    "annotated_answers": [
      "23.0"
    ],
    "solution": "class_size = 28\ngrid_rows = 1\ngrid_cols = class_size // grid_rows\nprint(grid_cols)"
  },
  {
    "example_id": 224,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "55.0"
    ],
    "annotated_answers": [
      "123.0"
    ],
    "solution": "x = 76\ny = -4*8-2+13\nprint(x+y)"
  },
  {
    "example_id": 225,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "200.0"
    ],
    "annotated_answers": [
      "200.0"
    ],
    "solution": "jim_length = 300\nmartha_length = 400\njim_width = 300\nmartha_width = 400\n\njim_distance = jim_length + jim_width\nmartha_distance = martha_length + martha_width\n\ndifference = martha_distance - jim_distance\nprint(difference)"
  },
  {
    "example_id": 226,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "distance = 120\ninches_per_mile = 20\ninches_apart = distance / inches_per_mile\nprint(inches_apart)"
  },
  {
    "example_id": 227,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "15.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "print(round(15.49999999))"
  },
  {
    "example_id": 228,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "62.83185307179586"
    ],
    "annotated_answers": [
      "46.0"
    ],
    "solution": "import numpy as np\nfrom math import pi\nimport matplotlib.pyplot as plt\n\n# Calculate the area of the figure\narea = (pi * 2) * (4) + (pi * 2) * (4) + (pi * 2) * (2)\n\nprint(\"The area of the figure is\", area)"
  },
  {
    "example_id": 229,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5321.0"
    ],
    "annotated_answers": [
      "5321.0"
    ],
    "solution": "result = ( - ( 5321 ** 0.5 ) ) ** 2\nprint(result)"
  },
  {
    "example_id": 230,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "30.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "# The largest possible radius is the length of the rope divided by 2.\nlargest_radius = 60 / 2\nprint(largest_radius)"
  },
  {
    "example_id": 231,
    "selected_solution_index": 13,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "73.0",
      "146.0",
      "219.0",
      "292.0",
      "365.0",
      "438.0",
      "511.0",
      "584.0",
      "657.0",
      "730.0",
      "803.0",
      "876.0",
      "949.0"
    ],
    "annotated_answers": [
      "949.0"
    ],
    "solution": "for i in range(73, 1000, 73):\n    print(i)"
  },
  {
    "example_id": 232,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "num_discs = 77\nnum_boxes = num_discs // 12\nprint(num_boxes)"
  },
  {
    "example_id": 233,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "16.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "data = [8, 12, 16, 20, 24]\nprint(sum(data) / len(data))"
  },
  {
    "example_id": 234,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.4000000000000004"
    ],
    "annotated_answers": [
      "60.0"
    ],
    "solution": "original_price = 60\ndiscount = 0.20\ndiscounted_price = original_price * (1 - discount)\ncommission = discounted_price * 0.05\nprint(commission)"
  },
  {
    "example_id": 235,
    "selected_solution_index": 14,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.75"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "head_height = 0.125 * 6 # inches\nprint(head_height)"
  },
  {
    "example_id": 236,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "27.0",
      "20.0",
      "32.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "history_A = 8\nmath_A = 15\nboth_A = 3\ntotal = 35\nhistory_not_A = total - history_A\nmath_not_A = total - math_A\nboth_not_A = total - both_A\nprint(history_not_A, math_not_A, both_not_A)"
  },
  {
    "example_id": 237,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "126.0"
    ],
    "annotated_answers": [
      "3024.0"
    ],
    "solution": "# nCr\nfrom math import factorial\n\ndef nCr(n, r):\n    return factorial(n) // (factorial(r) * factorial(n - r))\n\nn = 9\nr = 4\nprint(nCr(n, r))"
  },
  {
    "example_id": 238,
    "selected_solution_index": 13,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "print(int(5**5/5**4 - 5**3 + 5**2*5))"
  },
  {
    "example_id": 239,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "13.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "import itertools\n\ndef paint_die_blue(dice):\n    \"\"\"\n    Given a list of integers representing the numbers on the faces of a die,\n    return the number of ways to paint two faces blue, such that the product\n    of the numbers on the painted faces isn't equal to 6.\n    \"\"\"\n    # We'll use itertools to generate all possible combinations of two numbers\n    # from the list of numbers on the faces of the die.\n    numbers = dice\n    combinations = itertools.combinations(numbers, 2)\n\n    # We'll use a set to keep track of the combinations we've already seen.\n    seen_combinations = set()\n\n    # We'll use a counter to keep track of the number of combinations that\n    # satisfy our condition.\n    count = 0\n\n    # Iterate over all possible combinations of two numbers from the list\n    # of numbers on the faces of the die.\n    for combination in combinations:\n        # If the product of the two numbers is not equal to 6, we add the\n        # combination to the set of seen combinations.\n        if combination[0] * combination[1]!= 6:\n            seen_combinations.add(combination)\n\n    # Return the number of combinations that satisfy our condition.\n    return len(seen_combinations)\n\n\n# Test the function with a list of numbers from 1 to 6.\ndice = [1, 2, 3, 4, 5, 6]\nprint(paint_die_blue(dice))"
  },
  {
    "example_id": 240,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x = 1\ny = 5*x\nz = 21 + 2*x\nz = y\ny = z\nx = y/5\nprint(x)"
  },
  {
    "example_id": 241,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "78.0"
    ],
    "solution": "inches_per_yard = 36\ninches_in_2_1_6 = 2 * inches_per_yard / 6\nprint(inches_in_2_1_6)"
  },
  {
    "example_id": 242,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-34.0",
      "-17.0",
      "0.0",
      "17.0",
      "34.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "for i in range(-50, 50):\n    if i % 17 == 0 and i > -50:\n        print(i)"
  },
  {
    "example_id": 243,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-40.0"
    ],
    "annotated_answers": [
      "-10.0"
    ],
    "solution": "x = 50\nfor i in range(10):\n    x -= i * 2\nprint(x)"
  },
  {
    "example_id": 244,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "80.0"
    ],
    "annotated_answers": [
      "41.0"
    ],
    "solution": "students = 30 + 50\nprint(students)"
  },
  {
    "example_id": 245,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "red_cars = 12\nfour_door_cars = 15\ntwo_door_white_cars = 4\ntotal_cars = 20\nfour_door_red_cars = four_door_cars - two_door_white_cars\nprint(four_door_red_cars)"
  },
  {
    "example_id": 246,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.14285714285714285"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "print(1/7)"
  },
  {
    "example_id": 247,
    "selected_solution_index": 13,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "13.0",
      "13.0"
    ],
    "annotated_answers": [
      "-9.0"
    ],
    "solution": "from sympy import Add\n\nexpr = Add(1, 2, 3, -4, 5, 6)\nprint(expr)\nprint(expr.doit())"
  },
  {
    "example_id": 248,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "147.0"
    ],
    "annotated_answers": [
      "28.0"
    ],
    "solution": "C = 7 * 21\nprint(C)"
  },
  {
    "example_id": 249,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.777777777777778"
    ],
    "annotated_answers": [
      "7.78"
    ],
    "solution": "fudge_price = 10\nfudge_quantity = 7/9\ntotal_cost = fudge_price * fudge_quantity\nprint(total_cost)"
  },
  {
    "example_id": 250,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "20.0"
    ],
    "annotated_answers": [
      "21.0"
    ],
    "solution": "a = 3\nb = a + 17\nprint(b)"
  },
  {
    "example_id": 251,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-16.0"
    ],
    "annotated_answers": [
      "-16.0"
    ],
    "solution": "print(-144/9)"
  },
  {
    "example_id": 252,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "total_slices = 36\nnum_slices_chocolate = 3\nnum_slices_marshmallows = 9\nnum_slices_cayenne = 6\nnum_slices_salted_soy_nuts = 12\n\nnum_pies_chocolate = total_slices // num_slices_chocolate\nnum_pies_marshmallows = total_slices // num_slices_marshmallows\nnum_pies_cayenne = total_slices // num_slices_cayenne\nnum_pies_salted_soy_nuts = total_slices // num_slices_salted_soy_nuts\n\nmin_num_pies = min(num_pies_chocolate, num_pies_marshmallows, num_pies_cayenne, num_pies_salted_soy_nuts)\n\nprint(min_num_pies)"
  },
  {
    "example_id": 253,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "6.0",
      "12.0",
      "20.0",
      "30.0",
      "42.0",
      "56.0",
      "72.0"
    ],
    "annotated_answers": [
      "32.0"
    ],
    "solution": "for a in range(1, 40):\n    for b in range(1, 40):\n        if a * b == 80:\n            continue\n        if a < b and a * b < 80:\n            print(a * b)\n            break"
  },
  {
    "example_id": 254,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1260.0"
    ],
    "annotated_answers": [
      "1260.0"
    ],
    "solution": "import math\nprint(math.sqrt(3*6*10*15*21*28))"
  },
  {
    "example_id": 255,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "35.0"
    ],
    "annotated_answers": [
      "48.0"
    ],
    "solution": "A = 40\nB = 25\nC = 30\nD = A + B - C\nprint(D)"
  },
  {
    "example_id": 256,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "16.75"
    ],
    "annotated_answers": [
      "16.75"
    ],
    "solution": "print(14.6 + 2.15)"
  },
  {
    "example_id": 257,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3773.0"
    ],
    "annotated_answers": [
      "351.0"
    ],
    "solution": "days_in_year = 365\ndays_between_birthdays = 61\nyears = 9\ndays = days_in_year * years\ndays += days_between_birthdays * (years - 1)\nprint(days)"
  },
  {
    "example_id": 258,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-550.0"
    ],
    "annotated_answers": [
      "550.0"
    ],
    "solution": "miles_per_gallon_hybrid = 48\nmiles_per_gallon_suv = 15\nmiles_driven = 12000\ngallons_saved = (miles_driven / miles_per_gallon_hybrid) - (miles_driven / miles_per_gallon_suv)\nprint(gallons_saved)"
  },
  {
    "example_id": 259,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "64260.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "N = 3\nprint(21420*N)"
  },
  {
    "example_id": 260,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "max_odd_factor = 5\nfor i in range(max_odd_factor, 1, -1):\n    if 5 % i == 0:\n        print(i)"
  },
  {
    "example_id": 261,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "16.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "from math import log\nx = int(log(1296, 2))\ny = int(log(1296, 3))\nprint(x + y)"
  },
  {
    "example_id": 262,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.9999999999999996"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a, b = 1/31, 1/93\nprint(a/b)"
  },
  {
    "example_id": 263,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "3.0",
      "4.0"
    ],
    "annotated_answers": [
      "400.0"
    ],
    "solution": "i = 1\nwhile True:\n    if i * i <= 20:\n        print(i)\n        i += 1\n    else:\n        break"
  },
  {
    "example_id": 264,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "9.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "def gcd(a, b):\n    while b!= 0:\n        a, b = b, a % b\n    return a\n\nprint(gcd(315, 108))"
  },
  {
    "example_id": 265,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "73.0"
    ],
    "annotated_answers": [
      "73.0"
    ],
    "solution": "n = 5\nnumbers = [71, 72, 73, 74, 75]\nprint(sum(numbers) / n)"
  },
  {
    "example_id": 266,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.303"
    ],
    "annotated_answers": [
      "0.303"
    ],
    "solution": "print(3/10 + 3/1000)"
  },
  {
    "example_id": 267,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "24.0"
    ],
    "annotated_answers": [
      "24.0"
    ],
    "solution": "mean1 = 30\nmean2 = 20\nn1 = 20\nn2 = 30\ntotal_mean = (n1*mean1 + n2*mean2)/(n1+n2)\nprint(total_mean)"
  },
  {
    "example_id": 268,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x = 3*5 - 2*3\nprint(x)"
  },
  {
    "example_id": 269,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = int((35 - 8)/13)\nprint(x)"
  },
  {
    "example_id": 270,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1000000000000.0"
    ],
    "annotated_answers": [
      "286.0"
    ],
    "solution": "import math\n\ndef is_prime(n):\n    if n == 1 or n == 2:\n        return True\n    for i in range(2, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            return False\n    return True\n\ndef is_2_digit_prime(n):\n    if len(str(n))!= 2:\n        return False\n    for i in range(10):\n        if n % (10 * i + 1) == 0:\n            return False\n    return True\n\ndef find_smallest_product():\n    min_product = 1000000000000\n    for p1 in range(10, 100):\n        if not is_prime(p1):\n            continue\n        for p2 in range(100, 1000):\n            if not is_2_digit_prime(p2):\n                continue\n            if p1 * p2 < min_product:\n                min_product = p1 * p2\n    return min_product\n\nprint(find_smallest_product())"
  },
  {
    "example_id": 271,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.333333333333334"
    ],
    "annotated_answers": [
      "3.24"
    ],
    "solution": "import statistics\n\nrolls = [14, 5, 9, 7, 7, 8]\nprint(statistics.mean(rolls))"
  },
  {
    "example_id": 272,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "56.0"
    ],
    "annotated_answers": [
      "336.0"
    ],
    "solution": "from math import factorial\n\ndef combinations(n, r):\n    return factorial(n) // (factorial(r) * factorial(n - r))\n\nn = 8\nr = 3\n\nprint(combinations(n, r))"
  },
  {
    "example_id": 273,
    "selected_solution_index": 11,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "297.0"
    ],
    "annotated_answers": [
      "68.0"
    ],
    "solution": "integer = 5 * 4 + 277\nprint(integer)"
  },
  {
    "example_id": 274,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "28.0"
    ],
    "solution": "rope_length = 15 - 3\nprint(rope_length)"
  },
  {
    "example_id": 275,
    "selected_solution_index": 10,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.95"
    ],
    "annotated_answers": [
      "4.95"
    ],
    "solution": "x = 4.5\ny = 4.45\nz = 0.45\nw = 0.54\nprint(max(x, y, z, w) + min(x, y, z, w))"
  },
  {
    "example_id": 276,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "97.0"
    ],
    "annotated_answers": [
      "97.0"
    ],
    "solution": "n = 97\nlargest_prime_factor = 1\nfor i in range(2, n + 1):\n    if n % i == 0:\n        largest_prime_factor = i\nprint(largest_prime_factor)"
  },
  {
    "example_id": 277,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "28.0"
    ],
    "annotated_answers": [
      "28.0"
    ],
    "solution": "data = [12, 21, 6, 11, 30]\nmedian = sorted(data)[len(data)//2]\nmean = sum(data)/len(data)\nprint(median + mean)"
  },
  {
    "example_id": 278,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-13.799999999999997"
    ],
    "annotated_answers": [
      "69.0"
    ],
    "solution": "scores = [92, 73, 79, 87]\nmin_score = sum(scores) / 5 - 80\nprint(min_score)"
  },
  {
    "example_id": 279,
    "selected_solution_index": 10,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.4000014000014"
    ],
    "annotated_answers": [
      "1.4"
    ],
    "solution": "print(1/0.714285)"
  },
  {
    "example_id": 280,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "30.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = 30\nprint(x)"
  },
  {
    "example_id": 281,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "0.0",
      "0.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "from sympy import Symbol, Eq, solve, pprint\nx = Symbol('x', real=True)\ny = Symbol('y', real=True)\nz = Symbol('z', real=True)\n\n# 1/2 of adults are female\n# 1/2 of female adults have a child\n# nobody else has a child\n# no other children\n\neq1 = Eq(x/2, y) # 1/2 of adults are female\neq2 = Eq(y/2, z) # 1/2 of female adults have a child\neq3 = Eq(z, 0)   # nobody else has a child\neq4 = Eq(x+y+z, 0) # no other children\n\nsol = solve([eq1, eq2, eq3, eq4], [x, y, z])\npprint(sol)"
  },
  {
    "example_id": 282,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "373.3333333333333"
    ],
    "annotated_answers": [
      "160.0"
    ],
    "solution": "dogs_to_cats_ratio = 4/3\ntotal_dogs_and_cats = 280\ndogs = dogs_to_cats_ratio * total_dogs_and_cats\nprint(dogs)"
  },
  {
    "example_id": 283,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1421.2230337568676"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "from math import pi\ncircle_radius = 12 * pi\nsquare_side = circle_radius\nsquare_area = square_side ** 2\nprint(square_area)"
  },
  {
    "example_id": 284,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.5"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "# Calculate the median\nimport numpy as np\nhurricane_frequencies = [5, 14, 17, 12, 2, 4, 2, 1]\nmedian = np.median(hurricane_frequencies)\nprint(median)"
  },
  {
    "example_id": 285,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.25"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "total_cost = 12\ntip = 15\npercent_tip = tip / total_cost\nprint(percent_tip)"
  },
  {
    "example_id": 286,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "14.0"
    ],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "candy_total = 44\ncandy_per_kid = 3\nnum_kids = candy_total // candy_per_kid\nprint(num_kids)"
  },
  {
    "example_id": 287,
    "selected_solution_index": 11,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "210.0"
    ],
    "annotated_answers": [
      "210.0"
    ],
    "solution": "import math\nprint(math.sqrt(30 * 21 * 70))"
  },
  {
    "example_id": 288,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "sides = 170 / 180\nprint(int(sides))"
  },
  {
    "example_id": 289,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.38025641025641027"
    ],
    "annotated_answers": [
      "0.38"
    ],
    "solution": "total_candy_consumption = 1483\nlifespan = 75\nweeks_in_a_year = 52\naverage_candy_consumption_per_week = total_candy_consumption / lifespan / weeks_in_a_year\nprint(average_candy_consumption_per_week)"
  },
  {
    "example_id": 290,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-72.0",
      "-92.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "original_number = -12\nresult = original_number * 6\nprint(result)\nprint(result - 20)"
  },
  {
    "example_id": 291,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "# The number 24 can be made by multiplying together four prime numbers: 2, 2, 2 and 3. How many primes must be multiplied to make 2400?\n# To find the prime factors of 2400, we need to divide 2400 by the prime numbers 2 and 3.\n# The number 2400 = 2^5 * 3^2\n# To find the number of primes, we need to count the number of times we divide 2400 by the prime numbers.\n# 2400 / 2 = 1200\n# 1200 / 3 = 400\n# 400 / 2 = 200\n# 200 / 3 = 66.67\n# So we divide 2400 by 2, 3, 2, and 3 three times.\n# The number of primes is 4.\nprint(4)"
  },
  {
    "example_id": 292,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "36000.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "length_of_hallway = 1000 * 90 / 2.5\nprint(length_of_hallway)"
  },
  {
    "example_id": 293,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "51.0"
    ],
    "annotated_answers": [
      "70.0"
    ],
    "solution": "import math\ndef perimeter(a,b,c):\n    return a+b+c\nprint(perimeter(8,15,math.sqrt(28**2+0**2)))"
  },
  {
    "example_id": 294,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "-13.0"
    ],
    "solution": "x = 12 // (12 + 1)\nprint(x)"
  },
  {
    "example_id": 295,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "66.0"
    ],
    "annotated_answers": [
      "66.0"
    ],
    "solution": "total_odd_chairs = 0\nfor i in range(1, 12):\n    if i % 2!= 0:\n        total_odd_chairs += 11\nprint(total_odd_chairs)"
  },
  {
    "example_id": 296,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "72.0"
    ],
    "annotated_answers": [
      "135.0"
    ],
    "solution": "# import math\n# angle = math.degrees(math.pi/5)\nangle = 72\nprint(angle)"
  },
  {
    "example_id": 297,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1201.7777777777776"
    ],
    "annotated_answers": [
      "169.0"
    ],
    "solution": "side_length = 104 / 3\narea = side_length ** 2\nprint(area)"
  },
  {
    "example_id": 298,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "420.0"
    ],
    "annotated_answers": [
      "420.0"
    ],
    "solution": "from math import gcd\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef lcm_all(n):\n    if n == 1:\n        return 1\n    else:\n        return lcm(n, lcm_all(n-1))\n\nprint(lcm_all(7))"
  },
  {
    "example_id": 299,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "def is_factor(n, m):\n    return n % m == 0\n\ndef factors_of_100_and_150():\n    count = 0\n    for i in range(10, 100):\n        if is_factor(i, 100) and is_factor(i, 150):\n            count += 1\n    return count\n\nprint(factors_of_100_and_150())"
  },
  {
    "example_id": 300,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "150.0"
    ],
    "solution": "angle_p = 5\nangle_q = 1\nangle_r = angle_p / angle_q\nprint(angle_r)"
  },
  {
    "example_id": 301,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0",
      "25.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "from sympy import sqrt\n\nnumerator = sqrt(24)/sqrt(30)\ndenominator = sqrt(20)/3*sqrt(25)\n\nprint(numerator/denominator)"
  },
  {
    "example_id": 302,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "21.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = 21\nprint(x)"
  },
  {
    "example_id": 303,
    "selected_solution_index": 10,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "5.0",
      "7.0",
      "2.0",
      "3.0",
      "7.0",
      "5.0",
      "2.0",
      "5.0",
      "3.0",
      "7.0",
      "2.0",
      "5.0",
      "7.0",
      "3.0",
      "2.0",
      "7.0",
      "3.0",
      "5.0",
      "2.0",
      "7.0",
      "5.0",
      "3.0",
      "3.0",
      "2.0",
      "5.0",
      "7.0",
      "3.0",
      "2.0",
      "7.0",
      "5.0",
      "3.0",
      "5.0",
      "2.0",
      "7.0",
      "3.0",
      "5.0",
      "7.0",
      "2.0",
      "3.0",
      "7.0",
      "2.0",
      "5.0",
      "3.0",
      "7.0",
      "5.0",
      "2.0",
      "5.0",
      "2.0",
      "3.0",
      "7.0",
      "5.0",
      "2.0",
      "7.0",
      "3.0",
      "5.0",
      "3.0",
      "2.0",
      "7.0",
      "5.0",
      "3.0",
      "7.0",
      "2.0",
      "5.0",
      "7.0",
      "2.0",
      "3.0",
      "5.0",
      "7.0",
      "3.0",
      "2.0",
      "7.0",
      "2.0",
      "3.0",
      "5.0",
      "7.0",
      "2.0",
      "5.0",
      "3.0",
      "7.0",
      "3.0",
      "2.0",
      "5.0",
      "7.0",
      "3.0",
      "5.0",
      "2.0",
      "7.0",
      "5.0",
      "2.0",
      "3.0",
      "7.0",
      "5.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "64.0"
    ],
    "solution": "import itertools\n\ndigits = [2, 3, 5, 7]\nnumbers = list(itertools.permutations(digits))\nprint(numbers)"
  },
  {
    "example_id": 304,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "french = 8\nspanish = 12\nboth = 3\ntotal = 30\nneither = total - french - spanish - both\nprint(neither)"
  },
  {
    "example_id": 305,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.357142857142858"
    ],
    "annotated_answers": [
      "22.0"
    ],
    "solution": "import numpy as np\nx = np.mean([5, 8, 10, 18, 19, 28, 30]) - 4.5\nprint(x)"
  },
  {
    "example_id": 306,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "14.0"
    ],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "import numpy as np\nx = np.median([6, 22])\nprint(x)"
  },
  {
    "example_id": 307,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.4"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "x = 12/5\nprint(x + 3)"
  },
  {
    "example_id": 308,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "numbers = [2, 3, 5]\ntotal_numbers = len(numbers)\n\ndef number_combinations(numbers):\n    total_combinations = 0\n    for i in range(0, total_numbers):\n        for j in range(i + 1, total_numbers):\n            for k in range(j + 1, total_numbers):\n                total_combinations += 1\n    return total_combinations\n\nprint(number_combinations(numbers))"
  },
  {
    "example_id": 309,
    "selected_solution_index": 14,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "a, b, c = 3, 5, 6\nfrac_1 = a**2 * b / (5 * c)\nfrac_2 = 10 * c / (6 * a * b)\nprint(frac_1 * frac_2)"
  },
  {
    "example_id": 310,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "17.0",
      "17.0",
      "17.0",
      "17.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "def count_combinations(amount, denomination):\n    combinations = 0\n    for i in range(1, amount + 1):\n        combinations += 1\n    return combinations\n\ndef count_ways_to_make(amount, denomination):\n    combinations = 0\n    for i in range(1, amount + 1):\n        combinations += 1\n    return combinations\n\n# Testing\nprint(count_combinations(17, 5))\nprint(count_combinations(17, 2))\nprint(count_ways_to_make(17, 5))\nprint(count_ways_to_make(17, 2))"
  },
  {
    "example_id": 311,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "25.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "import sympy\n\n# area of a triangle = (base * height) / 2\nbase = sympy.sqrt(5**2 + 5**2)\nheight = 5\narea = (base * height) / 2\nprint(area)"
  },
  {
    "example_id": 312,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "print(int(((7 * 3) - 1) / 4))"
  },
  {
    "example_id": 313,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "20.5"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "ambulance_speed = 40\nambulance_distance = 20\nhelicopter_speed = 1\nhelicopter_distance = 15\ntakeoff_time = 3\nlanding_time = 3\nambulance_time = ambulance_distance / ambulance_speed\nhelicopter_time = helicopter_distance / helicopter_speed + takeoff_time + landing_time\nprint(helicopter_time - ambulance_time)"
  },
  {
    "example_id": 314,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.00000043385997"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "from math import log10\nx = log10(9990 + 10**10)\nprint(x)"
  },
  {
    "example_id": 315,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "import sympy\na, b = sympy.symbols('a, b')\ntriangle_area = (a * b) / 2\nprint(triangle_area)"
  },
  {
    "example_id": 316,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "61.0"
    ],
    "annotated_answers": [
      "61.0"
    ],
    "solution": "print(5**3 - (3**2 - 5)**3)"
  },
  {
    "example_id": 317,
    "selected_solution_index": 13,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "29.0"
    ],
    "solution": "# 10 players\n# 5 prefer to be a spiker\n# 4 prefer to be a setter\n# 1 player is fine either way\n\n# setter can be any of the 10 players\n# spiker can be any of the 5 players\n\n# Total number of ways: 10 x 5 = 50\n# Number of ways where setter is not a spiker: 10 x 4 = 40\n# Number of ways where spiker is not a setter: 5 x 4 = 20\n\n# Total number of ways where no player feels out of position: 50 - 40 - 20 = 10\n\nprint(10)"
  },
  {
    "example_id": 318,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "180.0"
    ],
    "solution": "import math\nimport sympy\nA, B, C, D, E = sympy.symbols('A B C D E')\ntrapezoid_perimeter = 2 * (A + B + C + D)\ntrapezoid_perimeter_expr = sympy.simplify(trapezoid_perimeter)\nprint(trapezoid_perimeter_expr)"
  },
  {
    "example_id": 319,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "18.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "sam_eric_distance = 8\nbobby_eric_distance = 10\neric_sam_distance = bobby_eric_distance + sam_eric_distance\nprint(eric_sam_distance)"
  },
  {
    "example_id": 320,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "smallest = 5 - 4\nprint(smallest)"
  },
  {
    "example_id": 321,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "18.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "print(len(str(31/11111).split('.')[1]))"
  },
  {
    "example_id": 322,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "cats = 2\nalpacas = 5\npandas = 3\ntotal_cool_cats = cats * alpacas\ntotal_cool_pandas = pandas * total_cool_cats\nif total_cool_pandas > 70 * alpacas:\n    print(pandas)\nelse:\n    print(0)"
  },
  {
    "example_id": 323,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-5.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "n = -10 // 5 - 3\nprint(n)"
  },
  {
    "example_id": 324,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "84.0"
    ],
    "solution": "a, b, c = 3, 5, 7\nlargest = max(a, b, c)\nprint(largest)"
  },
  {
    "example_id": 325,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "6.0",
      "7.0",
      "9.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "for i in range(1, 10):\n    if i % 3 == 0 or i % 7 == 0:\n        print(i)"
  },
  {
    "example_id": 326,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "56.0"
    ],
    "annotated_answers": [
      "40.0"
    ],
    "solution": "from math import sqrt\nperimeter = 2 * (12 + 16)\nprint(perimeter)"
  },
  {
    "example_id": 327,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "130.0"
    ],
    "annotated_answers": [
      "130.0"
    ],
    "solution": "supplement = 180 - 50\nprint(supplement)"
  },
  {
    "example_id": 328,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "900.0"
    ],
    "annotated_answers": [
      "900.0"
    ],
    "solution": "def three_digits():\n    count = 0\n    for i in range(100, 1000):\n        count += 1\n    return count\nprint(three_digits())"
  },
  {
    "example_id": 329,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "7.60555127546399",
      "1.1666666666666667",
      "1.1666666666666667",
      "1.1666666666666667"
    ],
    "annotated_answers": [
      "70.0"
    ],
    "solution": "import math\n\ndef triangle_area(b, h):\n    return b * h / 2\n\ndef triangle_perimeter(b, h):\n    return b + b + math.sqrt(b**2 + h**2)\n\ndef triangle_circumradius(a, b, c):\n    return (a**2 + b**2 + c**2) / (2 * a * b)\n\ndef triangle_inradius(a, b, c):\n    return (a**2 + b**2 + c**2) / (2 * a * b)\n\ndef triangle_apothem(a, b, c):\n    return (a**2 + b**2 + c**2) / (2 * a * b)\n\na = 3\nb = 2\nc = 1\n\nprint(\"Area: \", triangle_area(b, a))\nprint(\"Perimeter: \", triangle_perimeter(b, a))\nprint(\"Circumradius: \", triangle_circumradius(a, b, c))\nprint(\"Inradius: \", triangle_inradius(a, b, c))\nprint(\"Apothem: \", triangle_apothem(a, b, c))"
  },
  {
    "example_id": 330,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "enrico_list = [3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48, 51, 54, 57, 60, 63]\nmarie_list = [6, 12, 18, 24, 30, 36, 42, 48, 54, 60]\ncommon_elements = [6, 12, 18, 24, 30, 36, 42, 48, 54, 60]\nprint(len(common_elements))"
  },
  {
    "example_id": 331,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "490.0"
    ],
    "annotated_answers": [
      "735.0"
    ],
    "solution": "import math\n\ndef area(length, width):\n    return length * width\n\ndef perimeter(length, width):\n    return 2 * (length + width)\n\ndef padding_cost(area):\n    return 2.55 * area\n\ndef carpet_cost(area):\n    return 21.95 * area\n\ndef total_cost(area):\n    return padding_cost(area) + carpet_cost(area)\n\ndef main():\n    area_of_room = area(4, 5)\n    total_cost_of_room = total_cost(area_of_room)\n    print(total_cost_of_room)\n\nif __name__ == \"__main__\":\n    main()"
  },
  {
    "example_id": 332,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "17.0"
    ],
    "annotated_answers": [
      "100.0"
    ],
    "solution": "from math import sqrt\n\ndef is_prime(n):\n    if n <= 1:\n        return False\n    for i in range(2, int(sqrt(n)) + 1):\n        if n % i == 0:\n            return False\n    return True\n\ndef prime_sum(n):\n    sum = 0\n    for i in range(2, n + 1):\n        if is_prime(i):\n            sum += i\n    return sum\n\nprint(prime_sum(9))"
  },
  {
    "example_id": 333,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "125.0"
    ],
    "annotated_answers": [
      "90.0"
    ],
    "solution": "num_muffins = 20 * 6 + 5\nprint(num_muffins)"
  },
  {
    "example_id": 334,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "298.0"
    ],
    "solution": "from math import sqrt, ceil\ndef is_prime(n):\n    if n == 1 or n == 2:\n        return True\n    for i in range(2, int(sqrt(n)) + 1):\n        if n % i == 0:\n            return False\n    return True\ndef sum_of_primes(n):\n    sum = 0\n    for i in range(n + 1):\n        if is_prime(i) and i % 1 == 0 and (i + 1) ** 0.5 in range(100, 200):\n            sum += i\n    return sum\nprint(sum_of_primes(200))"
  },
  {
    "example_id": 335,
    "selected_solution_index": 10,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "print(int(round(pow(1/23, 1000))))"
  },
  {
    "example_id": 336,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "36.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "side_length = 9 * 4\nprint(side_length)"
  },
  {
    "example_id": 337,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "30.0",
      "60.0",
      "90.0",
      "120.0",
      "150.0",
      "180.0",
      "210.0",
      "240.0",
      "270.0",
      "300.0",
      "330.0",
      "360.0",
      "390.0",
      "420.0",
      "450.0",
      "480.0",
      "510.0"
    ],
    "annotated_answers": [
      "510.0"
    ],
    "solution": "max_multiple = 520\nfor i in range(30, max_multiple):\n    if i % 30 == 0:\n        print(i)"
  },
  {
    "example_id": 338,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "190.0"
    ],
    "annotated_answers": [
      "190.0"
    ],
    "solution": "from math import factorial\n\ndef combination_without_order(n, r):\n    return factorial(n) // (factorial(r) * factorial(n - r))\n\nprint(combination_without_order(20, 2))"
  },
  {
    "example_id": 339,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "50.0"
    ],
    "annotated_answers": [
      "50.0"
    ],
    "solution": "num = 10\nresult = (num * 2) + 200\nresult = result / 4\nresult = result - (num / 2)\nprint(result)"
  },
  {
    "example_id": 340,
    "selected_solution_index": 12,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "36.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "# Total number of handshakes = total number of pairs of members\n# = total number of members from Skateer University * total number of members from Iceburg Tech\n# = 6 * 6 = 36\nhandshakes = 36\nprint(handshakes)"
  },
  {
    "example_id": 341,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "387420489.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "fillings = ['turkey', 'ham', 'roast beef', 'cheese', 'tomatoes', 'peppers','sprouts', 'oranges', 'licorice']\nsandwiches = 9**9\nprint(sandwiches)"
  },
  {
    "example_id": 342,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "# Blake's average\nblake_average = 78\n# Jenny's average\njenny_average = blake_average + 10\n# Difference between Jenny's average and Blake's average\ndifference = jenny_average - blake_average\nprint(difference)"
  },
  {
    "example_id": 343,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "77.0"
    ],
    "annotated_answers": [
      "44.0"
    ],
    "solution": "carolyn, julie, roberta = 77, 77/2, 77/4\nprint(carolyn)"
  },
  {
    "example_id": 344,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "49.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "hockey_players, baseball_players, neither_players = 33, 24, 8\nboth_players = hockey_players + baseball_players - neither_players\nprint(both_players)"
  },
  {
    "example_id": 345,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.5"
    ],
    "annotated_answers": [
      "4.5"
    ],
    "solution": "total_weight = 9\npecans_weight, walnuts_weight, cashews_weight = 2, 3, 1\ntotal_walnuts_weight = (total_weight * walnuts_weight) / (pecans_weight + walnuts_weight + cashews_weight)\nprint(total_walnuts_weight)"
  },
  {
    "example_id": 346,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "23.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "hour_angle, minute_angle = 3, 20\ndegree_angle = hour_angle + minute_angle\nprint(degree_angle)"
  },
  {
    "example_id": 347,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "30.0"
    ],
    "annotated_answers": [
      "30.0"
    ],
    "solution": "def is_palindrome(n):\n    return str(n) == str(n)[::-1]\n\ndef is_multiple_of_3(n):\n    return n % 3 == 0\n\ncount = 0\nfor i in range(100, 1000):\n    if is_palindrome(i) and is_multiple_of_3(i):\n        count += 1\nprint(count)"
  },
  {
    "example_id": 348,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "96.0"
    ],
    "annotated_answers": [
      "192.0"
    ],
    "solution": "quarters_per_stack = 8\nheight = 12\ntotal_quarters = height * quarters_per_stack\nprint(total_quarters)"
  },
  {
    "example_id": 349,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "total_cats = 24\ncats_without_mouse = 17\ncats_with_black_fur = 10\ncats_without_mouse_and_black_fur = cats_without_mouse - cats_with_black_fur\nprint(cats_without_mouse_and_black_fur)"
  },
  {
    "example_id": 350,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "cubes = []\nfor i in range(1, 100):\n    if i % 2 == 0 and pow(i, 3) < 2008:\n        cubes.append(i)\nprint(len(cubes))"
  },
  {
    "example_id": 351,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "n = 0\nwhile -3*n + 3 > -11:\n    n += 1\nprint(n)"
  },
  {
    "example_id": 352,
    "selected_solution_index": 14,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.26666666666666666"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "from sympy import N\nprint(N(4/15, 1000))"
  },
  {
    "example_id": 353,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "840.0",
      "840.0",
      "840.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "# Solution 1:\n# The problem is equivalent to finding the least common multiple (LCM) of the first eight positive integers.\n# The LCM of two integers is the smallest positive integer that is divisible by both integers.\nfrom math import gcd, lcm\n\nn = 8\npeople = range(1, n+1)\npairs = [(i, j) for i in people for j in people if i < j]\n\n# Find the LCM of the first eight positive integers.\nlcm_val = 1\nfor i in people:\n    lcm_val = lcm(lcm_val, i)\n\n# The problem is equivalent to finding the least common multiple (LCM) of the first eight positive integers.\nprint(lcm_val)\n\n# Solution 2:\n# The problem is equivalent to finding the least common multiple (LCM) of the first eight positive integers.\n# The LCM of two integers is the smallest positive integer that is divisible by both integers.\nfrom math import gcd, lcm\n\nn = 8\npeople = range(1, n+1)\npairs = [(i, j) for i in people for j in people if i < j]\n\n# Find the LCM of the first eight positive integers.\nlcm_val = 1\nfor i in people:\n    lcm_val = lcm(lcm_val, i)\n\n# The problem is equivalent to finding the least common multiple (LCM) of the first eight positive integers.\nprint(lcm_val)\n\n# Solution 3:\n# The problem is equivalent to finding the least common multiple (LCM) of the first eight positive integers.\n# The LCM of two integers is the smallest positive integer that is divisible by both integers.\nfrom math import gcd, lcm\n\nn = 8\npeople = range(1, n+1)\npairs = [(i, j) for i in people for j in people if i < j]\n\n# Find the LCM of the first eight positive integers.\nlcm_val = 1\nfor i in people:\n    lcm_val = lcm(lcm_val, i)\n\n# The problem is equivalent to finding the least common multiple (LCM) of the first eight positive integers.\nprint(lcm_val)"
  },
  {
    "example_id": 354,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "15.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "A = 10 + 10/2\nprint(A)"
  },
  {
    "example_id": 355,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "107.0",
      "233.0",
      "251.0",
      "431.0",
      "503.0",
      "521.0",
      "701.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "import math\n\ndef is_prime(n):\n    if n < 2:\n        return False\n    for i in range(2, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            return False\n    return True\n\ndef sum_digits(n):\n    sum = 0\n    while n > 0:\n        sum += n % 10\n        n //= 10\n    return sum\n\ndef solve():\n    for i in range(100, 1000):\n        if is_prime(i) and sum_digits(i) == 8:\n            print(i)\n\nsolve()"
  },
  {
    "example_id": 356,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "30030.0",
      "30030.0"
    ],
    "annotated_answers": [
      "360.0"
    ],
    "solution": "# Solution 1\ndivisible_by_2 = [2]\ndivisible_by_3 = [3]\ndivisible_by_5 = [5]\ndivisible_by_7 = [7]\ndivisible_by_11 = [11]\ndivisible_by_13 = [13]\nleast_positive_integer = 1\nfor divisor in divisible_by_2:\n    least_positive_integer = least_positive_integer * divisor\nfor divisor in divisible_by_3:\n    least_positive_integer = least_positive_integer * divisor\nfor divisor in divisible_by_5:\n    least_positive_integer = least_positive_integer * divisor\nfor divisor in divisible_by_7:\n    least_positive_integer = least_positive_integer * divisor\nfor divisor in divisible_by_11:\n    least_positive_integer = least_positive_integer * divisor\nfor divisor in divisible_by_13:\n    least_positive_integer = least_positive_integer * divisor\nprint(least_positive_integer)\n\n# Solution 2\nfrom sympy import lcm\ndivisible_by_2 = [2]\ndivisible_by_3 = [3]\ndivisible_by_5 = [5]\ndivisible_by_7 = [7]\ndivisible_by_11 = [11]\ndivisible_by_13 = [13]\nleast_positive_integer = lcm(divisible_by_2 + divisible_by_3 + divisible_by_5 + divisible_by_7 + divisible_by_11 + divisible_by_13)\nprint(least_positive_integer)"
  },
  {
    "example_id": 357,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "13.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "def gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\nprint(gcd(1313, 1001))"
  },
  {
    "example_id": 358,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.9999999999999939"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "print((7/16)**111 * (16/7)**111)"
  },
  {
    "example_id": 359,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "k = 13 - 5\nprint(k)"
  },
  {
    "example_id": 360,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "wallops_per_ballops = 6\nballops_per_fallops = 3\nfallops_per_wallops = 11\nfallops = 110\nwallops = fallops / fallops_per_wallops\nprint(wallops)"
  },
  {
    "example_id": 361,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "24.1"
    ],
    "annotated_answers": [
      "24.1"
    ],
    "solution": "kick_return_averages = [25.0, 24.3, 24.1, 23.8, 23.4]\nmedian = sorted(kick_return_averages)[2]\nprint(median)"
  },
  {
    "example_id": 362,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "24.0"
    ],
    "solution": "# Define the variables\nlength = 3\nwidth = 2\nside = 6\n\n# Calculate the number of tiles needed\ntiles = length * width / side\n\n# Print the result\nprint(tiles)"
  },
  {
    "example_id": 363,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "80.0"
    ],
    "annotated_answers": [
      "48.0"
    ],
    "solution": "import math\n\nperimeter = 0\nfor i in range(1, 9):\n    perimeter += 10\nprint(perimeter)"
  },
  {
    "example_id": 364,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "6.0",
      "12.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = 0\nwhile x**2 < 200:\n    print(x)\n    x += 6"
  },
  {
    "example_id": 365,
    "selected_solution_index": 10,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.05238095238095239"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "k_distance = 9\nk_rate = 42\nb_distance = 12\nb_rate = 45\nk_time = k_distance / k_rate\nb_time = b_distance / b_rate\nb_time_earlier = b_time - k_time\nprint(b_time_earlier)"
  },
  {
    "example_id": 366,
    "selected_solution_index": 12,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.1213203435596424"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "base = 6\narea = 27\nheight = (area / base) ** 0.5\nprint(height)"
  },
  {
    "example_id": 367,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "162.0"
    ],
    "annotated_answers": [
      "162.0"
    ],
    "solution": "count = 0\nfor i in range(100, 1000):\n    if str(i).count('0') == 1:\n        count += 1\nprint(count)"
  },
  {
    "example_id": 368,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "120.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "chocolate_chips_per_cookie = 8\nnumber_of_cookies = 15\nnumber_of_chocolate_chips = chocolate_chips_per_cookie * number_of_cookies\nprint(number_of_chocolate_chips)"
  },
  {
    "example_id": 369,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1020.0"
    ],
    "annotated_answers": [
      "1020.0"
    ],
    "solution": "from math import lcm\nprint(lcm(51, 68, 85))"
  },
  {
    "example_id": 370,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "23.0"
    ],
    "solution": "x = 2\nresult = 3*x + 2*(1 + x)\nprint(result)"
  },
  {
    "example_id": 371,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2008.0"
    ],
    "annotated_answers": [
      "2013.0"
    ],
    "solution": "def split_three_digits(n):\n    return int(str(n)[:3]), int(str(n)[3:])\n\ndef has_common_factor(a, b):\n    return any(i for i in range(2, min(a, b) + 1) if a % i == 0 and b % i == 0)\n\nfor year in range(2007, 2050):\n    a, b = split_three_digits(year)\n    if has_common_factor(a, b):\n        print(year)\n        break"
  },
  {
    "example_id": 372,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.28122915435089",
      "-54.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "import sympy\nexpr = sympy.Pow(4/8, 55) * sympy.Pow(8/37, 55)\nprint(expr)"
  },
  {
    "example_id": 373,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "x = 2\nprint(x)"
  },
  {
    "example_id": 374,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.25"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "side_length = 4\narea = 1\nnum_tiles = area / side_length\nprint(num_tiles)"
  },
  {
    "example_id": 375,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "144.0"
    ],
    "solution": "# The lab computer backups every 5 minutes\n# The other computer backups every 2 minutes\n\n# The number of times the lab computer backups\nlab_backups = 24 * 60 // 5\n\n# The number of times the other computer backups\nother_backups = 24 * 60 // 2\n\n# The number of times the two computers back up at the same time\ncommon_backups = lab_backups & other_backups\n\nprint(common_backups)"
  },
  {
    "example_id": 376,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "40.0"
    ],
    "annotated_answers": [
      "40.0"
    ],
    "solution": "a = 2**20 + 2**20 + 2**20 + 2**21\nb = 2**17\nprint(a // b)"
  },
  {
    "example_id": 377,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "cherries = 3\ncheeses = 2\ndanishes = cherries + cheeses\nprint(danishes)"
  },
  {
    "example_id": 378,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "1500.0"
    ],
    "solution": "x = 1500"
  },
  {
    "example_id": 379,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "60.0"
    ],
    "annotated_answers": [
      "60.0"
    ],
    "solution": "time = 25\nrate = 2\nheight = 10\ntime_elapsed = 0\nwhile time_elapsed < time:\n    height += rate\n    time_elapsed += 1\nprint(height)"
  },
  {
    "example_id": 380,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "32.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "# Let's assume there were 8 groups\n# Each group has 4 teams, and each team plays each other once\n# So there are 8 groups * 4 teams/group * 4 matches/team = 32 matches\nprint(32)"
  },
  {
    "example_id": 381,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2001.0",
      "2002.0",
      "2003.0",
      "2004.0",
      "2005.0",
      "2006.0",
      "2007.0",
      "2008.0",
      "2009.0",
      "2010.0",
      "2011.0",
      "2012.0",
      "2013.0",
      "2014.0",
      "2015.0",
      "2016.0",
      "2017.0",
      "2018.0",
      "2019.0",
      "2020.0",
      "2021.0",
      "2022.0",
      "2023.0",
      "2024.0",
      "2025.0",
      "2026.0",
      "2027.0",
      "2028.0",
      "2029.0",
      "2030.0",
      "2031.0",
      "2032.0",
      "2033.0",
      "2034.0",
      "2035.0",
      "2036.0",
      "2037.0",
      "2038.0",
      "2039.0",
      "2040.0",
      "2041.0",
      "2042.0",
      "2043.0",
      "2044.0",
      "2045.0",
      "2046.0",
      "2047.0",
      "2048.0",
      "2049.0",
      "2050.0",
      "2051.0",
      "2052.0",
      "2053.0",
      "2054.0",
      "2055.0",
      "2056.0",
      "2057.0",
      "2058.0",
      "2059.0",
      "2060.0",
      "2061.0",
      "2062.0",
      "2063.0",
      "2064.0",
      "2065.0",
      "2066.0",
      "2067.0",
      "2068.0",
      "2069.0",
      "2070.0",
      "2071.0",
      "2072.0",
      "2073.0",
      "2074.0",
      "2075.0",
      "2076.0",
      "2077.0",
      "2078.0",
      "2079.0",
      "2080.0",
      "2081.0",
      "2082.0",
      "2083.0",
      "2084.0",
      "2085.0",
      "2086.0",
      "2087.0",
      "2088.0",
      "2089.0",
      "2090.0",
      "2091.0",
      "2092.0",
      "2093.0",
      "2094.0",
      "2095.0",
      "2096.0",
      "2097.0",
      "2098.0",
      "2099.0",
      "2100.0",
      "2101.0",
      "2102.0",
      "2103.0",
      "2104.0",
      "2105.0",
      "2106.0",
      "2107.0",
      "2108.0",
      "2109.0",
      "2110.0",
      "2111.0",
      "2112.0",
      "2113.0",
      "2114.0",
      "2115.0",
      "2116.0",
      "2117.0",
      "2118.0",
      "2119.0",
      "2120.0",
      "2121.0",
      "2122.0",
      "2123.0",
      "2124.0",
      "2125.0",
      "2126.0",
      "2127.0",
      "2128.0",
      "2129.0",
      "2130.0",
      "2131.0",
      "2132.0",
      "2133.0",
      "2134.0",
      "2135.0",
      "2136.0",
      "2137.0",
      "2138.0",
      "2139.0",
      "2140.0",
      "2141.0",
      "2142.0",
      "2143.0",
      "2144.0",
      "2145.0",
      "2146.0",
      "2147.0",
      "2148.0",
      "2149.0",
      "2150.0",
      "2151.0",
      "2152.0",
      "2153.0",
      "2154.0",
      "2155.0",
      "2156.0",
      "2157.0",
      "2158.0",
      "2159.0",
      "2160.0",
      "2161.0",
      "2162.0",
      "2163.0",
      "2164.0",
      "2165.0",
      "2166.0",
      "2167.0",
      "2168.0",
      "2169.0",
      "2170.0",
      "2171.0",
      "2172.0",
      "2173.0",
      "2174.0",
      "2175.0",
      "2176.0",
      "2177.0",
      "2178.0",
      "2179.0",
      "2180.0",
      "2181.0",
      "2182.0",
      "2183.0",
      "2184.0",
      "2185.0",
      "2186.0",
      "2187.0",
      "2188.0",
      "2189.0",
      "2190.0",
      "2191.0",
      "2192.0",
      "2193.0",
      "2194.0",
      "2195.0",
      "2196.0",
      "2197.0",
      "2198.0",
      "2199.0",
      "2200.0",
      "2201.0",
      "2202.0",
      "2203.0",
      "2204.0",
      "2205.0",
      "2206.0",
      "2207.0",
      "2208.0",
      "2209.0",
      "2210.0",
      "2211.0",
      "2212.0",
      "2213.0",
      "2214.0",
      "2215.0",
      "2216.0",
      "2217.0",
      "2218.0",
      "2219.0",
      "2220.0",
      "2221.0",
      "2222.0",
      "2223.0",
      "2224.0",
      "2225.0",
      "2226.0",
      "2227.0",
      "2228.0",
      "2229.0",
      "2230.0",
      "2231.0",
      "2232.0",
      "2233.0",
      "2234.0",
      "2235.0",
      "2236.0",
      "2237.0",
      "2238.0",
      "2239.0",
      "2240.0",
      "2241.0",
      "2242.0",
      "2243.0",
      "2244.0",
      "2245.0",
      "2246.0",
      "2247.0",
      "2248.0",
      "2249.0",
      "2250.0",
      "2251.0",
      "2252.0",
      "2253.0",
      "2254.0",
      "2255.0",
      "2256.0",
      "2257.0",
      "2258.0",
      "2259.0",
      "2260.0",
      "2261.0",
      "2262.0",
      "2263.0",
      "2264.0",
      "2265.0",
      "2266.0",
      "2267.0",
      "2268.0",
      "2269.0",
      "2270.0",
      "2271.0",
      "2272.0",
      "2273.0",
      "2274.0",
      "2275.0",
      "2276.0",
      "2277.0",
      "2278.0",
      "2279.0",
      "2280.0",
      "2281.0",
      "2282.0",
      "2283.0",
      "2284.0",
      "2285.0",
      "2286.0",
      "2287.0",
      "2288.0",
      "2289.0",
      "2290.0",
      "2291.0",
      "2292.0",
      "2293.0",
      "2294.0",
      "2295.0",
      "2296.0",
      "2297.0",
      "2298.0",
      "2299.0",
      "2300.0",
      "2301.0",
      "2302.0",
      "2303.0",
      "2304.0",
      "2305.0",
      "2306.0",
      "2307.0",
      "2308.0",
      "2309.0",
      "2310.0",
      "2311.0",
      "2312.0",
      "2313.0",
      "2314.0",
      "2315.0",
      "2316.0",
      "2317.0",
      "2318.0",
      "2319.0",
      "2320.0",
      "2321.0",
      "2322.0",
      "2323.0",
      "2324.0",
      "2325.0",
      "2326.0",
      "2327.0",
      "2328.0",
      "2329.0",
      "2330.0",
      "2331.0",
      "2332.0",
      "2333.0",
      "2334.0",
      "2335.0",
      "2336.0",
      "2337.0",
      "2338.0",
      "2339.0",
      "2340.0",
      "2341.0",
      "2342.0",
      "2343.0",
      "2344.0",
      "2345.0",
      "2346.0",
      "2347.0",
      "2348.0",
      "2349.0",
      "2350.0",
      "2351.0",
      "2352.0",
      "2353.0",
      "2354.0",
      "2355.0",
      "2356.0",
      "2357.0",
      "2358.0",
      "2359.0",
      "2360.0",
      "2361.0",
      "2362.0",
      "2363.0",
      "2364.0",
      "2365.0",
      "2366.0",
      "2367.0",
      "2368.0",
      "2369.0",
      "2370.0",
      "2371.0",
      "2372.0",
      "2373.0",
      "2374.0",
      "2375.0",
      "2376.0",
      "2377.0",
      "2378.0",
      "2379.0",
      "2380.0",
      "2381.0",
      "2382.0",
      "2383.0",
      "2384.0",
      "2385.0",
      "2386.0",
      "2387.0",
      "2388.0",
      "2389.0",
      "2390.0",
      "2391.0",
      "2392.0",
      "2393.0",
      "2394.0",
      "2395.0",
      "2396.0",
      "2397.0",
      "2398.0",
      "2399.0",
      "2400.0",
      "2401.0",
      "2402.0",
      "2403.0",
      "2404.0",
      "2405.0",
      "2406.0",
      "2407.0",
      "2408.0",
      "2409.0",
      "2410.0",
      "2411.0",
      "2412.0",
      "2413.0",
      "2414.0",
      "2415.0",
      "2416.0",
      "2417.0",
      "2418.0",
      "2419.0",
      "2420.0",
      "2421.0",
      "2422.0",
      "2423.0",
      "2424.0",
      "2425.0",
      "2426.0",
      "2427.0",
      "2428.0",
      "2429.0",
      "2430.0",
      "2431.0",
      "2432.0",
      "2433.0",
      "2434.0",
      "2435.0",
      "2436.0",
      "2437.0",
      "2438.0",
      "2439.0",
      "2440.0",
      "2441.0",
      "2442.0",
      "2443.0",
      "2444.0",
      "2445.0",
      "2446.0",
      "2447.0",
      "2448.0",
      "2449.0",
      "2450.0",
      "2451.0",
      "2452.0",
      "2453.0",
      "2454.0",
      "2455.0",
      "2456.0",
      "2457.0",
      "2458.0",
      "2459.0",
      "2460.0",
      "2461.0",
      "2462.0",
      "2463.0",
      "2464.0",
      "2465.0",
      "2466.0",
      "2467.0",
      "2468.0",
      "2469.0",
      "2470.0",
      "2471.0",
      "2472.0",
      "2473.0",
      "2474.0",
      "2475.0",
      "2476.0",
      "2477.0",
      "2478.0",
      "2479.0",
      "2480.0",
      "2481.0",
      "2482.0",
      "2483.0",
      "2484.0",
      "2485.0",
      "2486.0",
      "2487.0",
      "2488.0",
      "2489.0",
      "2490.0",
      "2491.0",
      "2492.0",
      "2493.0",
      "2494.0",
      "2495.0",
      "2496.0",
      "2497.0",
      "2498.0",
      "2499.0",
      "2500.0",
      "2501.0",
      "2502.0",
      "2503.0",
      "2504.0",
      "2505.0",
      "2506.0",
      "2507.0",
      "2508.0",
      "2509.0",
      "2510.0",
      "2511.0",
      "2512.0",
      "2513.0",
      "2514.0",
      "2515.0",
      "2516.0",
      "2517.0",
      "2518.0",
      "2519.0",
      "2520.0",
      "2521.0",
      "2522.0",
      "2523.0",
      "2524.0",
      "2525.0",
      "2526.0",
      "2527.0",
      "2528.0",
      "2529.0",
      "2530.0",
      "2531.0",
      "2532.0",
      "2533.0",
      "2534.0",
      "2535.0",
      "2536.0",
      "2537.0",
      "2538.0",
      "2539.0",
      "2540.0",
      "2541.0",
      "2542.0",
      "2543.0",
      "2544.0",
      "2545.0",
      "2546.0",
      "2547.0",
      "2548.0",
      "2549.0",
      "2550.0",
      "2551.0",
      "2552.0",
      "2553.0",
      "2554.0",
      "2555.0",
      "2556.0",
      "2557.0",
      "2558.0",
      "2559.0",
      "2560.0",
      "2561.0",
      "2562.0",
      "2563.0",
      "2564.0",
      "2565.0",
      "2566.0",
      "2567.0",
      "2568.0",
      "2569.0",
      "2570.0",
      "2571.0",
      "2572.0",
      "2573.0",
      "2574.0",
      "2575.0",
      "2576.0",
      "2577.0",
      "2578.0",
      "2579.0",
      "2580.0",
      "2581.0",
      "2582.0",
      "2583.0",
      "2584.0",
      "2585.0",
      "2586.0",
      "2587.0",
      "2588.0",
      "2589.0",
      "2590.0",
      "2591.0",
      "2592.0",
      "2593.0",
      "2594.0",
      "2595.0",
      "2596.0",
      "2597.0",
      "2598.0",
      "2599.0",
      "2600.0",
      "2601.0",
      "2602.0",
      "2603.0",
      "2604.0",
      "2605.0",
      "2606.0",
      "2607.0",
      "2608.0",
      "2609.0",
      "2610.0",
      "2611.0",
      "2612.0",
      "2613.0",
      "2614.0",
      "2615.0",
      "2616.0",
      "2617.0",
      "2618.0",
      "2619.0",
      "2620.0",
      "2621.0",
      "2622.0",
      "2623.0",
      "2624.0",
      "2625.0",
      "2626.0",
      "2627.0",
      "2628.0",
      "2629.0",
      "2630.0",
      "2631.0",
      "2632.0",
      "2633.0",
      "2634.0",
      "2635.0",
      "2636.0",
      "2637.0",
      "2638.0",
      "2639.0",
      "2640.0",
      "2641.0",
      "2642.0",
      "2643.0",
      "2644.0",
      "2645.0",
      "2646.0",
      "2647.0",
      "2648.0",
      "2649.0",
      "2650.0",
      "2651.0",
      "2652.0",
      "2653.0",
      "2654.0",
      "2655.0",
      "2656.0",
      "2657.0",
      "2658.0",
      "2659.0",
      "2660.0",
      "2661.0",
      "2662.0",
      "2663.0",
      "2664.0",
      "2665.0",
      "2666.0",
      "2667.0",
      "2668.0",
      "2669.0",
      "2670.0",
      "2671.0",
      "2672.0",
      "2673.0",
      "2674.0",
      "2675.0",
      "2676.0",
      "2677.0",
      "2678.0",
      "2679.0",
      "2680.0",
      "2681.0",
      "2682.0",
      "2683.0",
      "2684.0",
      "2685.0",
      "2686.0",
      "2687.0",
      "2688.0",
      "2689.0",
      "2690.0",
      "2691.0",
      "2692.0",
      "2693.0",
      "2694.0",
      "2695.0",
      "2696.0",
      "2697.0",
      "2698.0",
      "2699.0",
      "2700.0",
      "2701.0",
      "2702.0",
      "2703.0",
      "2704.0",
      "2705.0",
      "2706.0",
      "2707.0",
      "2708.0",
      "2709.0",
      "2710.0",
      "2711.0",
      "2712.0",
      "2713.0",
      "2714.0",
      "2715.0",
      "2716.0",
      "2717.0",
      "2718.0",
      "2719.0",
      "2720.0",
      "2721.0",
      "2722.0",
      "2723.0",
      "2724.0",
      "2725.0",
      "2726.0",
      "2727.0",
      "2728.0",
      "2729.0",
      "2730.0",
      "2731.0",
      "2732.0",
      "2733.0",
      "2734.0",
      "2735.0",
      "2736.0",
      "2737.0",
      "2738.0",
      "2739.0",
      "2740.0",
      "2741.0",
      "2742.0",
      "2743.0",
      "2744.0",
      "2745.0",
      "2746.0",
      "2747.0",
      "2748.0",
      "2749.0",
      "2750.0",
      "2751.0",
      "2752.0",
      "2753.0",
      "2754.0",
      "2755.0",
      "2756.0",
      "2757.0",
      "2758.0",
      "2759.0",
      "2760.0",
      "2761.0",
      "2762.0",
      "2763.0",
      "2764.0",
      "2765.0",
      "2766.0",
      "2767.0",
      "2768.0",
      "2769.0",
      "2770.0",
      "2771.0",
      "2772.0",
      "2773.0",
      "2774.0",
      "2775.0",
      "2776.0",
      "2777.0",
      "2778.0",
      "2779.0",
      "2780.0",
      "2781.0",
      "2782.0",
      "2783.0",
      "2784.0",
      "2785.0",
      "2786.0",
      "2787.0",
      "2788.0",
      "2789.0",
      "2790.0",
      "2791.0",
      "2792.0",
      "2793.0",
      "2794.0",
      "2795.0",
      "2796.0",
      "2797.0",
      "2798.0",
      "2799.0",
      "2800.0",
      "2801.0",
      "2802.0",
      "2803.0",
      "2804.0",
      "2805.0",
      "2806.0",
      "2807.0",
      "2808.0",
      "2809.0",
      "2810.0",
      "2811.0",
      "2812.0",
      "2813.0",
      "2814.0",
      "2815.0",
      "2816.0",
      "2817.0",
      "2818.0",
      "2819.0",
      "2820.0",
      "2821.0",
      "2822.0",
      "2823.0",
      "2824.0",
      "2825.0",
      "2826.0",
      "2827.0",
      "2828.0",
      "2829.0",
      "2830.0",
      "2831.0",
      "2832.0",
      "2833.0",
      "2834.0",
      "2835.0",
      "2836.0",
      "2837.0",
      "2838.0",
      "2839.0",
      "2840.0",
      "2841.0",
      "2842.0",
      "2843.0",
      "2844.0",
      "2845.0",
      "2846.0",
      "2847.0",
      "2848.0",
      "2849.0",
      "2850.0",
      "2851.0",
      "2852.0",
      "2853.0",
      "2854.0",
      "2855.0",
      "2856.0",
      "2857.0",
      "2858.0",
      "2859.0",
      "2860.0",
      "2861.0",
      "2862.0",
      "2863.0",
      "2864.0",
      "2865.0",
      "2866.0",
      "2867.0",
      "2868.0",
      "2869.0",
      "2870.0",
      "2871.0",
      "2872.0",
      "2873.0",
      "2874.0",
      "2875.0",
      "2876.0",
      "2877.0",
      "2878.0",
      "2879.0",
      "2880.0",
      "2881.0",
      "2882.0",
      "2883.0",
      "2884.0",
      "2885.0",
      "2886.0",
      "2887.0",
      "2888.0",
      "2889.0",
      "2890.0",
      "2891.0",
      "2892.0",
      "2893.0",
      "2894.0",
      "2895.0",
      "2896.0",
      "2897.0",
      "2898.0",
      "2899.0",
      "2900.0",
      "2901.0",
      "2902.0",
      "2903.0",
      "2904.0",
      "2905.0",
      "2906.0",
      "2907.0",
      "2908.0",
      "2909.0",
      "2910.0",
      "2911.0",
      "2912.0",
      "2913.0",
      "2914.0",
      "2915.0",
      "2916.0",
      "2917.0",
      "2918.0",
      "2919.0",
      "2920.0",
      "2921.0",
      "2922.0",
      "2923.0",
      "2924.0",
      "2925.0",
      "2926.0",
      "2927.0",
      "2928.0",
      "2929.0",
      "2930.0",
      "2931.0",
      "2932.0",
      "2933.0",
      "2934.0",
      "2935.0",
      "2936.0",
      "2937.0",
      "2938.0",
      "2939.0",
      "2940.0",
      "2941.0",
      "2942.0",
      "2943.0",
      "2944.0",
      "2945.0",
      "2946.0",
      "2947.0",
      "2948.0",
      "2949.0",
      "2950.0",
      "2951.0",
      "2952.0",
      "2953.0",
      "2954.0",
      "2955.0",
      "2956.0",
      "2957.0",
      "2958.0",
      "2959.0",
      "2960.0",
      "2961.0",
      "2962.0",
      "2963.0",
      "2964.0",
      "2965.0",
      "2966.0",
      "2967.0",
      "2968.0",
      "2969.0",
      "2970.0",
      "2971.0",
      "2972.0",
      "2973.0",
      "2974.0",
      "2975.0",
      "2976.0",
      "2977.0",
      "2978.0",
      "2979.0",
      "2980.0",
      "2981.0",
      "2982.0",
      "2983.0",
      "2984.0",
      "2985.0",
      "2986.0",
      "2987.0",
      "2988.0",
      "2989.0",
      "2990.0",
      "2991.0",
      "2992.0",
      "2993.0",
      "2994.0",
      "2995.0",
      "2996.0",
      "2997.0",
      "2998.0",
      "2999.0",
      "3000.0",
      "3001.0",
      "3002.0",
      "3003.0",
      "3004.0",
      "3005.0",
      "3006.0",
      "3007.0",
      "3008.0",
      "3009.0",
      "3010.0",
      "3011.0",
      "3012.0",
      "3013.0",
      "3014.0",
      "3015.0",
      "3016.0",
      "3017.0",
      "3018.0",
      "3019.0",
      "3020.0",
      "3021.0",
      "3022.0",
      "3023.0",
      "3024.0",
      "3025.0",
      "3026.0",
      "3027.0",
      "3028.0",
      "3029.0",
      "3030.0",
      "3031.0",
      "3032.0",
      "3033.0",
      "3034.0",
      "3035.0",
      "3036.0",
      "3037.0",
      "3038.0",
      "3039.0",
      "3040.0",
      "3041.0",
      "3042.0",
      "3043.0",
      "3044.0",
      "3045.0",
      "3046.0",
      "3047.0",
      "3048.0",
      "3049.0",
      "3050.0",
      "3051.0",
      "3052.0",
      "3053.0",
      "3054.0",
      "3055.0",
      "3056.0",
      "3057.0",
      "3058.0",
      "3059.0",
      "3060.0",
      "3061.0",
      "3062.0",
      "3063.0",
      "3064.0",
      "3065.0",
      "3066.0",
      "3067.0",
      "3068.0",
      "3069.0",
      "3070.0",
      "3071.0",
      "3072.0",
      "3073.0",
      "3074.0",
      "3075.0",
      "3076.0",
      "3077.0",
      "3078.0",
      "3079.0",
      "3080.0",
      "3081.0",
      "3082.0",
      "3083.0",
      "3084.0",
      "3085.0",
      "3086.0",
      "3087.0",
      "3088.0",
      "3089.0",
      "3090.0",
      "3091.0",
      "3092.0",
      "3093.0",
      "3094.0",
      "3095.0",
      "3096.0",
      "3097.0",
      "3098.0",
      "3099.0",
      "3100.0",
      "3101.0",
      "3102.0",
      "3103.0",
      "3104.0",
      "3105.0",
      "3106.0",
      "3107.0",
      "3108.0",
      "3109.0",
      "3110.0",
      "3111.0",
      "3112.0",
      "3113.0",
      "3114.0",
      "3115.0",
      "3116.0",
      "3117.0",
      "3118.0",
      "3119.0",
      "3120.0",
      "3121.0",
      "3122.0",
      "3123.0",
      "3124.0",
      "3125.0",
      "3126.0",
      "3127.0",
      "3128.0",
      "3129.0",
      "3130.0",
      "3131.0",
      "3132.0",
      "3133.0",
      "3134.0",
      "3135.0",
      "3136.0",
      "3137.0",
      "3138.0",
      "3139.0",
      "3140.0",
      "3141.0",
      "3142.0",
      "3143.0",
      "3144.0",
      "3145.0",
      "3146.0",
      "3147.0",
      "3148.0",
      "3149.0",
      "3150.0",
      "3151.0",
      "3152.0",
      "3153.0",
      "3154.0",
      "3155.0",
      "3156.0",
      "3157.0",
      "3158.0",
      "3159.0",
      "3160.0",
      "3161.0",
      "3162.0",
      "3163.0",
      "3164.0",
      "3165.0",
      "3166.0",
      "3167.0",
      "3168.0",
      "3169.0",
      "3170.0",
      "3171.0",
      "3172.0",
      "3173.0",
      "3174.0",
      "3175.0",
      "3176.0",
      "3177.0",
      "3178.0",
      "3179.0",
      "3180.0",
      "3181.0",
      "3182.0",
      "3183.0",
      "3184.0",
      "3185.0",
      "3186.0",
      "3187.0",
      "3188.0",
      "3189.0",
      "3190.0",
      "3191.0",
      "3192.0",
      "3193.0",
      "3194.0",
      "3195.0",
      "3196.0",
      "3197.0",
      "3198.0",
      "3199.0",
      "3200.0",
      "3201.0",
      "3202.0",
      "3203.0",
      "3204.0",
      "3205.0",
      "3206.0",
      "3207.0",
      "3208.0",
      "3209.0",
      "3210.0",
      "3211.0",
      "3212.0",
      "3213.0",
      "3214.0",
      "3215.0",
      "3216.0",
      "3217.0",
      "3218.0",
      "3219.0",
      "3220.0",
      "3221.0",
      "3222.0",
      "3223.0",
      "3224.0",
      "3225.0",
      "3226.0",
      "3227.0",
      "3228.0",
      "3229.0",
      "3230.0",
      "3231.0",
      "3232.0",
      "3233.0",
      "3234.0",
      "3235.0",
      "3236.0",
      "3237.0",
      "3238.0",
      "3239.0",
      "3240.0",
      "3241.0",
      "3242.0",
      "3243.0",
      "3244.0",
      "3245.0",
      "3246.0",
      "3247.0",
      "3248.0",
      "3249.0",
      "3250.0",
      "3251.0",
      "3252.0",
      "3253.0",
      "3254.0",
      "3255.0",
      "3256.0",
      "3257.0",
      "3258.0",
      "3259.0",
      "3260.0",
      "3261.0",
      "3262.0",
      "3263.0",
      "3264.0",
      "3265.0",
      "3266.0",
      "3267.0",
      "3268.0",
      "3269.0",
      "3270.0",
      "3271.0",
      "3272.0",
      "3273.0",
      "3274.0",
      "3275.0",
      "3276.0",
      "3277.0",
      "3278.0",
      "3279.0",
      "3280.0",
      "3281.0",
      "3282.0",
      "3283.0",
      "3284.0",
      "3285.0",
      "3286.0",
      "3287.0",
      "3288.0",
      "3289.0",
      "3290.0",
      "3291.0",
      "3292.0",
      "3293.0",
      "3294.0",
      "3295.0",
      "3296.0",
      "3297.0",
      "3298.0",
      "3299.0",
      "3300.0",
      "3301.0",
      "3302.0",
      "3303.0",
      "3304.0",
      "3305.0",
      "3306.0",
      "3307.0",
      "3308.0",
      "3309.0",
      "3310.0",
      "3311.0",
      "3312.0",
      "3313.0",
      "3314.0",
      "3315.0",
      "3316.0",
      "3317.0",
      "3318.0",
      "3319.0",
      "3320.0",
      "3321.0",
      "3322.0",
      "3323.0",
      "3324.0",
      "3325.0",
      "3326.0",
      "3327.0",
      "3328.0",
      "3329.0",
      "3330.0",
      "3331.0",
      "3332.0",
      "3333.0",
      "3334.0",
      "3335.0",
      "3336.0",
      "3337.0",
      "3338.0",
      "3339.0",
      "3340.0",
      "3341.0",
      "3342.0",
      "3343.0",
      "3344.0",
      "3345.0",
      "3346.0",
      "3347.0",
      "3348.0",
      "3349.0",
      "3350.0",
      "3351.0",
      "3352.0",
      "3353.0",
      "3354.0",
      "3355.0",
      "3356.0",
      "3357.0",
      "3358.0",
      "3359.0",
      "3360.0",
      "3361.0",
      "3362.0",
      "3363.0",
      "3364.0",
      "3365.0",
      "3366.0",
      "3367.0",
      "3368.0",
      "3369.0",
      "3370.0",
      "3371.0",
      "3372.0",
      "3373.0",
      "3374.0",
      "3375.0",
      "3376.0",
      "3377.0",
      "3378.0",
      "3379.0",
      "3380.0",
      "3381.0",
      "3382.0",
      "3383.0",
      "3384.0",
      "3385.0",
      "3386.0",
      "3387.0",
      "3388.0",
      "3389.0",
      "3390.0",
      "3391.0",
      "3392.0",
      "3393.0",
      "3394.0",
      "3395.0",
      "3396.0",
      "3397.0",
      "3398.0",
      "3399.0",
      "3400.0",
      "3401.0",
      "3402.0",
      "3403.0",
      "3404.0",
      "3405.0",
      "3406.0",
      "3407.0",
      "3408.0",
      "3409.0",
      "3410.0",
      "3411.0",
      "3412.0",
      "3413.0",
      "3414.0",
      "3415.0",
      "3416.0",
      "3417.0",
      "3418.0",
      "3419.0",
      "3420.0",
      "3421.0",
      "3422.0",
      "3423.0",
      "3424.0",
      "3425.0",
      "3426.0",
      "3427.0",
      "3428.0",
      "3429.0",
      "3430.0",
      "3431.0",
      "3432.0",
      "3433.0",
      "3434.0",
      "3435.0",
      "3436.0",
      "3437.0",
      "3438.0",
      "3439.0",
      "3440.0",
      "3441.0",
      "3442.0",
      "3443.0",
      "3444.0",
      "3445.0",
      "3446.0",
      "3447.0",
      "3448.0",
      "3449.0",
      "3450.0",
      "3451.0",
      "3452.0",
      "3453.0",
      "3454.0",
      "3455.0",
      "3456.0",
      "3457.0",
      "3458.0",
      "3459.0",
      "3460.0",
      "3461.0",
      "3462.0",
      "3463.0",
      "3464.0",
      "3465.0",
      "3466.0",
      "3467.0",
      "3468.0",
      "3469.0",
      "3470.0",
      "3471.0",
      "3472.0",
      "3473.0",
      "3474.0",
      "3475.0",
      "3476.0",
      "3477.0",
      "3478.0",
      "3479.0",
      "3480.0",
      "3481.0",
      "3482.0",
      "3483.0",
      "3484.0",
      "3485.0",
      "3486.0",
      "3487.0",
      "3488.0",
      "3489.0",
      "3490.0",
      "3491.0",
      "3492.0",
      "3493.0",
      "3494.0",
      "3495.0",
      "3496.0",
      "3497.0",
      "3498.0",
      "3499.0",
      "3500.0",
      "3501.0",
      "3502.0",
      "3503.0",
      "3504.0",
      "3505.0",
      "3506.0",
      "3507.0",
      "3508.0",
      "3509.0",
      "3510.0",
      "3511.0",
      "3512.0",
      "3513.0",
      "3514.0",
      "3515.0",
      "3516.0",
      "3517.0",
      "3518.0",
      "3519.0",
      "3520.0",
      "3521.0",
      "3522.0",
      "3523.0",
      "3524.0",
      "3525.0",
      "3526.0",
      "3527.0",
      "3528.0",
      "3529.0",
      "3530.0",
      "3531.0",
      "3532.0",
      "3533.0",
      "3534.0",
      "3535.0",
      "3536.0",
      "3537.0",
      "3538.0",
      "3539.0",
      "3540.0",
      "3541.0",
      "3542.0",
      "3543.0",
      "3544.0",
      "3545.0",
      "3546.0",
      "3547.0",
      "3548.0",
      "3549.0",
      "3550.0",
      "3551.0",
      "3552.0",
      "3553.0",
      "3554.0",
      "3555.0",
      "3556.0",
      "3557.0",
      "3558.0",
      "3559.0",
      "3560.0",
      "3561.0",
      "3562.0",
      "3563.0",
      "3564.0",
      "3565.0",
      "3566.0",
      "3567.0",
      "3568.0",
      "3569.0",
      "3570.0",
      "3571.0",
      "3572.0",
      "3573.0",
      "3574.0",
      "3575.0",
      "3576.0",
      "3577.0",
      "3578.0",
      "3579.0",
      "3580.0",
      "3581.0",
      "3582.0",
      "3583.0",
      "3584.0",
      "3585.0",
      "3586.0",
      "3587.0",
      "3588.0",
      "3589.0",
      "3590.0",
      "3591.0",
      "3592.0",
      "3593.0",
      "3594.0",
      "3595.0",
      "3596.0",
      "3597.0",
      "3598.0",
      "3599.0",
      "3600.0",
      "3601.0",
      "3602.0",
      "3603.0",
      "3604.0",
      "3605.0",
      "3606.0",
      "3607.0",
      "3608.0",
      "3609.0",
      "3610.0",
      "3611.0",
      "3612.0",
      "3613.0",
      "3614.0",
      "3615.0",
      "3616.0",
      "3617.0",
      "3618.0",
      "3619.0",
      "3620.0",
      "3621.0",
      "3622.0",
      "3623.0",
      "3624.0",
      "3625.0",
      "3626.0",
      "3627.0",
      "3628.0",
      "3629.0",
      "3630.0",
      "3631.0",
      "3632.0",
      "3633.0",
      "3634.0",
      "3635.0",
      "3636.0",
      "3637.0",
      "3638.0",
      "3639.0",
      "3640.0",
      "3641.0",
      "3642.0",
      "3643.0",
      "3644.0",
      "3645.0",
      "3646.0",
      "3647.0",
      "3648.0",
      "3649.0",
      "3650.0",
      "3651.0",
      "3652.0",
      "3653.0",
      "3654.0",
      "3655.0",
      "3656.0",
      "3657.0",
      "3658.0",
      "3659.0",
      "3660.0",
      "3661.0",
      "3662.0",
      "3663.0",
      "3664.0",
      "3665.0",
      "3666.0",
      "3667.0",
      "3668.0",
      "3669.0",
      "3670.0",
      "3671.0",
      "3672.0",
      "3673.0",
      "3674.0",
      "3675.0",
      "3676.0",
      "3677.0",
      "3678.0",
      "3679.0",
      "3680.0",
      "3681.0",
      "3682.0",
      "3683.0",
      "3684.0",
      "3685.0",
      "3686.0",
      "3687.0",
      "3688.0",
      "3689.0",
      "3690.0",
      "3691.0",
      "3692.0",
      "3693.0",
      "3694.0",
      "3695.0",
      "3696.0",
      "3697.0",
      "3698.0",
      "3699.0",
      "3700.0",
      "3701.0",
      "3702.0",
      "3703.0",
      "3704.0",
      "3705.0",
      "3706.0",
      "3707.0",
      "3708.0",
      "3709.0",
      "3710.0",
      "3711.0",
      "3712.0",
      "3713.0",
      "3714.0",
      "3715.0",
      "3716.0",
      "3717.0",
      "3718.0",
      "3719.0",
      "3720.0",
      "3721.0",
      "3722.0",
      "3723.0",
      "3724.0",
      "3725.0",
      "3726.0",
      "3727.0",
      "3728.0",
      "3729.0",
      "3730.0",
      "3731.0",
      "3732.0",
      "3733.0",
      "3734.0",
      "3735.0",
      "3736.0",
      "3737.0",
      "3738.0",
      "3739.0",
      "3740.0",
      "3741.0",
      "3742.0",
      "3743.0",
      "3744.0",
      "3745.0",
      "3746.0",
      "3747.0",
      "3748.0",
      "3749.0",
      "3750.0",
      "3751.0",
      "3752.0",
      "3753.0",
      "3754.0",
      "3755.0",
      "3756.0",
      "3757.0",
      "3758.0",
      "3759.0",
      "3760.0",
      "3761.0",
      "3762.0",
      "3763.0",
      "3764.0",
      "3765.0",
      "3766.0",
      "3767.0",
      "3768.0",
      "3769.0",
      "3770.0",
      "3771.0",
      "3772.0",
      "3773.0",
      "3774.0",
      "3775.0",
      "3776.0",
      "3777.0",
      "3778.0",
      "3779.0",
      "3780.0",
      "3781.0",
      "3782.0",
      "3783.0",
      "3784.0",
      "3785.0",
      "3786.0",
      "3787.0",
      "3788.0",
      "3789.0",
      "3790.0",
      "3791.0",
      "3792.0",
      "3793.0",
      "3794.0",
      "3795.0",
      "3796.0",
      "3797.0",
      "3798.0",
      "3799.0",
      "3800.0",
      "3801.0",
      "3802.0",
      "3803.0",
      "3804.0",
      "3805.0",
      "3806.0",
      "3807.0",
      "3808.0",
      "3809.0",
      "3810.0",
      "3811.0",
      "3812.0",
      "3813.0",
      "3814.0",
      "3815.0",
      "3816.0",
      "3817.0",
      "3818.0",
      "3819.0",
      "3820.0",
      "3821.0",
      "3822.0",
      "3823.0",
      "3824.0",
      "3825.0",
      "3826.0",
      "3827.0",
      "3828.0",
      "3829.0",
      "3830.0",
      "3831.0",
      "3832.0",
      "3833.0",
      "3834.0",
      "3835.0",
      "3836.0",
      "3837.0",
      "3838.0",
      "3839.0",
      "3840.0",
      "3841.0",
      "3842.0",
      "3843.0",
      "3844.0",
      "3845.0",
      "3846.0",
      "3847.0",
      "3848.0",
      "3849.0",
      "3850.0",
      "3851.0",
      "3852.0",
      "3853.0",
      "3854.0",
      "3855.0",
      "3856.0",
      "3857.0",
      "3858.0",
      "3859.0",
      "3860.0",
      "3861.0",
      "3862.0",
      "3863.0",
      "3864.0",
      "3865.0",
      "3866.0",
      "3867.0",
      "3868.0",
      "3869.0",
      "3870.0",
      "3871.0",
      "3872.0",
      "3873.0",
      "3874.0",
      "3875.0",
      "3876.0",
      "3877.0",
      "3878.0",
      "3879.0",
      "3880.0",
      "3881.0",
      "3882.0",
      "3883.0",
      "3884.0",
      "3885.0",
      "3886.0",
      "3887.0",
      "3888.0",
      "3889.0",
      "3890.0",
      "3891.0",
      "3892.0",
      "3893.0",
      "3894.0",
      "3895.0",
      "3896.0",
      "3897.0",
      "3898.0",
      "3899.0",
      "3900.0",
      "3901.0",
      "3902.0",
      "3903.0",
      "3904.0",
      "3905.0",
      "3906.0",
      "3907.0",
      "3908.0",
      "3909.0",
      "3910.0",
      "3911.0",
      "3912.0",
      "3913.0",
      "3914.0",
      "3915.0",
      "3916.0",
      "3917.0",
      "3918.0",
      "3919.0",
      "3920.0",
      "3921.0",
      "3922.0",
      "3923.0",
      "3924.0",
      "3925.0",
      "3926.0",
      "3927.0",
      "3928.0",
      "3929.0",
      "3930.0",
      "3931.0",
      "3932.0",
      "3933.0",
      "3934.0",
      "3935.0",
      "3936.0",
      "3937.0",
      "3938.0",
      "3939.0",
      "3940.0",
      "3941.0",
      "3942.0",
      "3943.0",
      "3944.0",
      "3945.0",
      "3946.0",
      "3947.0",
      "3948.0",
      "3949.0",
      "3950.0",
      "3951.0",
      "3952.0",
      "3953.0",
      "3954.0",
      "3955.0",
      "3956.0",
      "3957.0",
      "3958.0",
      "3959.0",
      "3960.0",
      "3961.0",
      "3962.0",
      "3963.0",
      "3964.0",
      "3965.0",
      "3966.0",
      "3967.0",
      "3968.0",
      "3969.0",
      "3970.0",
      "3971.0",
      "3972.0",
      "3973.0",
      "3974.0",
      "3975.0",
      "3976.0",
      "3977.0",
      "3978.0",
      "3979.0",
      "3980.0",
      "3981.0",
      "3982.0",
      "3983.0",
      "3984.0",
      "3985.0",
      "3986.0",
      "3987.0",
      "3988.0",
      "3989.0",
      "3990.0",
      "3991.0",
      "3992.0",
      "3993.0",
      "3994.0",
      "3995.0",
      "3996.0",
      "3997.0",
      "3998.0",
      "3999.0",
      "4000.0",
      "4001.0",
      "4002.0",
      "4003.0",
      "4004.0",
      "4005.0",
      "4006.0",
      "4007.0",
      "4008.0",
      "4009.0",
      "4010.0",
      "4011.0",
      "4012.0",
      "4013.0",
      "4014.0",
      "4015.0",
      "4016.0",
      "4017.0",
      "4018.0",
      "4019.0",
      "4020.0",
      "4021.0",
      "4022.0",
      "4023.0",
      "4024.0",
      "4025.0",
      "4026.0",
      "4027.0",
      "4028.0",
      "4029.0",
      "4030.0",
      "4031.0",
      "4032.0",
      "4033.0",
      "4034.0",
      "4035.0",
      "4036.0",
      "4037.0",
      "4038.0",
      "4039.0",
      "4040.0",
      "4041.0",
      "4042.0",
      "4043.0",
      "4044.0",
      "4045.0",
      "4046.0",
      "4047.0",
      "4048.0",
      "4049.0",
      "4050.0",
      "4051.0",
      "4052.0",
      "4053.0",
      "4054.0",
      "4055.0",
      "4056.0",
      "4057.0",
      "4058.0",
      "4059.0",
      "4060.0",
      "4061.0",
      "4062.0",
      "4063.0",
      "4064.0",
      "4065.0",
      "4066.0",
      "4067.0",
      "4068.0",
      "4069.0",
      "4070.0",
      "4071.0",
      "4072.0",
      "4073.0",
      "4074.0",
      "4075.0",
      "4076.0",
      "4077.0",
      "4078.0",
      "4079.0",
      "4080.0",
      "4081.0",
      "4082.0",
      "4083.0",
      "4084.0",
      "4085.0",
      "4086.0",
      "4087.0",
      "4088.0",
      "4089.0",
      "4090.0",
      "4091.0",
      "4092.0",
      "4093.0",
      "4094.0",
      "4095.0",
      "4096.0",
      "4097.0",
      "4098.0",
      "4099.0",
      "4100.0",
      "4101.0",
      "4102.0",
      "4103.0",
      "4104.0",
      "4105.0",
      "4106.0",
      "4107.0",
      "4108.0",
      "4109.0",
      "4110.0",
      "4111.0",
      "4112.0",
      "4113.0",
      "4114.0",
      "4115.0",
      "4116.0",
      "4117.0",
      "4118.0",
      "4119.0",
      "4120.0",
      "4121.0",
      "4122.0",
      "4123.0",
      "4124.0",
      "4125.0",
      "4126.0",
      "4127.0",
      "4128.0",
      "4129.0",
      "4130.0",
      "4131.0",
      "4132.0",
      "4133.0",
      "4134.0",
      "4135.0",
      "4136.0",
      "4137.0",
      "4138.0",
      "4139.0",
      "4140.0",
      "4141.0",
      "4142.0",
      "4143.0",
      "4144.0",
      "4145.0",
      "4146.0",
      "4147.0",
      "4148.0",
      "4149.0",
      "4150.0",
      "4151.0",
      "4152.0",
      "4153.0",
      "4154.0",
      "4155.0",
      "4156.0",
      "4157.0",
      "4158.0",
      "4159.0",
      "4160.0",
      "4161.0",
      "4162.0",
      "4163.0",
      "4164.0",
      "4165.0",
      "4166.0",
      "4167.0",
      "4168.0",
      "4169.0",
      "4170.0",
      "4171.0",
      "4172.0",
      "4173.0",
      "4174.0",
      "4175.0",
      "4176.0",
      "4177.0",
      "4178.0",
      "4179.0",
      "4180.0",
      "4181.0",
      "4182.0",
      "4183.0",
      "4184.0",
      "4185.0",
      "4186.0",
      "4187.0",
      "4188.0",
      "4189.0",
      "4190.0",
      "4191.0",
      "4192.0",
      "4193.0",
      "4194.0",
      "4195.0",
      "4196.0",
      "4197.0",
      "4198.0",
      "4199.0",
      "4200.0",
      "4201.0",
      "4202.0",
      "4203.0",
      "4204.0",
      "4205.0",
      "4206.0",
      "4207.0",
      "4208.0",
      "4209.0",
      "4210.0",
      "4211.0",
      "4212.0",
      "4213.0",
      "4214.0",
      "4215.0",
      "4216.0",
      "4217.0",
      "4218.0",
      "4219.0",
      "4220.0",
      "4221.0",
      "4222.0",
      "4223.0",
      "4224.0",
      "4225.0",
      "4226.0",
      "4227.0",
      "4228.0",
      "4229.0",
      "4230.0",
      "4231.0",
      "4232.0",
      "4233.0",
      "4234.0",
      "4235.0",
      "4236.0",
      "4237.0",
      "4238.0",
      "4239.0",
      "4240.0",
      "4241.0",
      "4242.0",
      "4243.0",
      "4244.0",
      "4245.0",
      "4246.0",
      "4247.0",
      "4248.0",
      "4249.0",
      "4250.0",
      "4251.0",
      "4252.0",
      "4253.0",
      "4254.0",
      "4255.0",
      "4256.0",
      "4257.0",
      "4258.0",
      "4259.0",
      "4260.0",
      "4261.0",
      "4262.0",
      "4263.0",
      "4264.0",
      "4265.0",
      "4266.0",
      "4267.0",
      "4268.0",
      "4269.0",
      "4270.0",
      "4271.0",
      "4272.0",
      "4273.0",
      "4274.0",
      "4275.0",
      "4276.0",
      "4277.0",
      "4278.0",
      "4279.0",
      "4280.0",
      "4281.0",
      "4282.0",
      "4283.0",
      "4284.0",
      "4285.0",
      "4286.0",
      "4287.0",
      "4288.0",
      "4289.0",
      "4290.0",
      "4291.0",
      "4292.0",
      "4293.0",
      "4294.0",
      "4295.0",
      "4296.0",
      "4297.0",
      "4298.0",
      "4299.0",
      "4300.0",
      "4301.0",
      "4302.0",
      "4303.0",
      "4304.0",
      "4305.0",
      "4306.0",
      "4307.0",
      "4308.0",
      "4309.0",
      "4310.0",
      "4311.0",
      "4312.0",
      "4313.0",
      "4314.0",
      "4315.0",
      "4316.0",
      "4317.0",
      "4318.0",
      "4319.0",
      "4320.0",
      "4321.0",
      "4322.0",
      "4323.0",
      "4324.0",
      "4325.0",
      "4326.0",
      "4327.0",
      "4328.0",
      "4329.0",
      "4330.0",
      "4331.0",
      "4332.0",
      "4333.0",
      "4334.0",
      "4335.0",
      "4336.0",
      "4337.0",
      "4338.0",
      "4339.0",
      "4340.0",
      "4341.0",
      "4342.0",
      "4343.0",
      "4344.0",
      "4345.0",
      "4346.0",
      "4347.0",
      "4348.0",
      "4349.0",
      "4350.0",
      "4351.0",
      "4352.0",
      "4353.0",
      "4354.0",
      "4355.0",
      "4356.0",
      "4357.0",
      "4358.0",
      "4359.0",
      "4360.0",
      "4361.0",
      "4362.0",
      "4363.0",
      "4364.0",
      "4365.0",
      "4366.0",
      "4367.0",
      "4368.0",
      "4369.0",
      "4370.0",
      "4371.0",
      "4372.0",
      "4373.0",
      "4374.0",
      "4375.0",
      "4376.0",
      "4377.0",
      "4378.0",
      "4379.0",
      "4380.0",
      "4381.0",
      "4382.0",
      "4383.0",
      "4384.0",
      "4385.0",
      "4386.0",
      "4387.0",
      "4388.0",
      "4389.0",
      "4390.0",
      "4391.0",
      "4392.0",
      "4393.0",
      "4394.0",
      "4395.0",
      "4396.0",
      "4397.0",
      "4398.0",
      "4399.0",
      "4400.0",
      "4401.0",
      "4402.0",
      "4403.0",
      "4404.0",
      "4405.0",
      "4406.0",
      "4407.0",
      "4408.0",
      "4409.0",
      "4410.0",
      "4411.0",
      "4412.0",
      "4413.0",
      "4414.0",
      "4415.0",
      "4416.0",
      "4417.0",
      "4418.0",
      "4419.0",
      "4420.0",
      "4421.0",
      "4422.0",
      "4423.0",
      "4424.0",
      "4425.0",
      "4426.0",
      "4427.0",
      "4428.0",
      "4429.0",
      "4430.0",
      "4431.0",
      "4432.0",
      "4433.0",
      "4434.0",
      "4435.0",
      "4436.0",
      "4437.0",
      "4438.0",
      "4439.0",
      "4440.0",
      "4441.0",
      "4442.0",
      "4443.0",
      "4444.0",
      "4445.0",
      "4446.0",
      "4447.0",
      "4448.0",
      "4449.0",
      "4450.0",
      "4451.0",
      "4452.0",
      "4453.0",
      "4454.0",
      "4455.0",
      "4456.0",
      "4457.0",
      "4458.0",
      "4459.0",
      "4460.0",
      "4461.0",
      "4462.0",
      "4463.0",
      "4464.0",
      "4465.0",
      "4466.0",
      "4467.0",
      "4468.0",
      "4469.0",
      "4470.0",
      "4471.0",
      "4472.0",
      "4473.0",
      "4474.0",
      "4475.0",
      "4476.0",
      "4477.0",
      "4478.0",
      "4479.0",
      "4480.0",
      "4481.0",
      "4482.0",
      "4483.0",
      "4484.0",
      "4485.0",
      "4486.0",
      "4487.0",
      "4488.0",
      "4489.0",
      "4490.0",
      "4491.0",
      "4492.0",
      "4493.0",
      "4494.0",
      "4495.0",
      "4496.0",
      "4497.0",
      "4498.0",
      "4499.0",
      "4500.0",
      "4501.0",
      "4502.0",
      "4503.0",
      "4504.0",
      "4505.0",
      "4506.0",
      "4507.0",
      "4508.0",
      "4509.0",
      "4510.0",
      "4511.0",
      "4512.0",
      "4513.0",
      "4514.0",
      "4515.0",
      "4516.0",
      "4517.0",
      "4518.0",
      "4519.0",
      "4520.0",
      "4521.0",
      "4522.0",
      "4523.0",
      "4524.0",
      "4525.0",
      "4526.0",
      "4527.0",
      "4528.0",
      "4529.0",
      "4530.0",
      "4531.0",
      "4532.0",
      "4533.0",
      "4534.0",
      "4535.0",
      "4536.0",
      "4537.0",
      "4538.0",
      "4539.0",
      "4540.0",
      "4541.0",
      "4542.0",
      "4543.0",
      "4544.0",
      "4545.0",
      "4546.0",
      "4547.0",
      "4548.0",
      "4549.0",
      "4550.0",
      "4551.0",
      "4552.0",
      "4553.0",
      "4554.0",
      "4555.0",
      "4556.0",
      "4557.0",
      "4558.0",
      "4559.0",
      "4560.0",
      "4561.0",
      "4562.0",
      "4563.0",
      "4564.0",
      "4565.0",
      "4566.0",
      "4567.0",
      "4568.0",
      "4569.0",
      "4570.0",
      "4571.0",
      "4572.0",
      "4573.0",
      "4574.0",
      "4575.0",
      "4576.0",
      "4577.0",
      "4578.0",
      "4579.0",
      "4580.0",
      "4581.0",
      "4582.0",
      "4583.0",
      "4584.0",
      "4585.0",
      "4586.0",
      "4587.0",
      "4588.0",
      "4589.0",
      "4590.0",
      "4591.0",
      "4592.0",
      "4593.0",
      "4594.0",
      "4595.0",
      "4596.0",
      "4597.0",
      "4598.0",
      "4599.0",
      "4600.0",
      "4601.0",
      "4602.0",
      "4603.0",
      "4604.0",
      "4605.0",
      "4606.0",
      "4607.0",
      "4608.0",
      "4609.0",
      "4610.0",
      "4611.0",
      "4612.0",
      "4613.0",
      "4614.0",
      "4615.0",
      "4616.0",
      "4617.0",
      "4618.0",
      "4619.0",
      "4620.0",
      "4621.0",
      "4622.0",
      "4623.0",
      "4624.0",
      "4625.0",
      "4626.0",
      "4627.0",
      "4628.0",
      "4629.0",
      "4630.0",
      "4631.0",
      "4632.0",
      "4633.0",
      "4634.0",
      "4635.0",
      "4636.0",
      "4637.0",
      "4638.0",
      "4639.0",
      "4640.0",
      "4641.0",
      "4642.0",
      "4643.0",
      "4644.0",
      "4645.0",
      "4646.0",
      "4647.0",
      "4648.0",
      "4649.0",
      "4650.0",
      "4651.0",
      "4652.0",
      "4653.0",
      "4654.0",
      "4655.0",
      "4656.0",
      "4657.0",
      "4658.0",
      "4659.0",
      "4660.0",
      "4661.0",
      "4662.0",
      "4663.0",
      "4664.0",
      "4665.0",
      "4666.0",
      "4667.0",
      "4668.0",
      "4669.0",
      "4670.0",
      "4671.0",
      "4672.0",
      "4673.0",
      "4674.0",
      "4675.0",
      "4676.0",
      "4677.0",
      "4678.0",
      "4679.0",
      "4680.0",
      "4681.0",
      "4682.0",
      "4683.0",
      "4684.0",
      "4685.0",
      "4686.0",
      "4687.0",
      "4688.0",
      "4689.0",
      "4690.0",
      "4691.0",
      "4692.0",
      "4693.0",
      "4694.0",
      "4695.0",
      "4696.0",
      "4697.0",
      "4698.0",
      "4699.0",
      "4700.0",
      "4701.0",
      "4702.0",
      "4703.0",
      "4704.0",
      "4705.0",
      "4706.0",
      "4707.0",
      "4708.0",
      "4709.0",
      "4710.0",
      "4711.0",
      "4712.0",
      "4713.0",
      "4714.0",
      "4715.0",
      "4716.0",
      "4717.0",
      "4718.0",
      "4719.0",
      "4720.0",
      "4721.0",
      "4722.0",
      "4723.0",
      "4724.0",
      "4725.0",
      "4726.0",
      "4727.0",
      "4728.0",
      "4729.0",
      "4730.0",
      "4731.0",
      "4732.0",
      "4733.0",
      "4734.0",
      "4735.0",
      "4736.0",
      "4737.0",
      "4738.0",
      "4739.0",
      "4740.0",
      "4741.0",
      "4742.0",
      "4743.0",
      "4744.0",
      "4745.0",
      "4746.0",
      "4747.0",
      "4748.0",
      "4749.0",
      "4750.0",
      "4751.0",
      "4752.0",
      "4753.0",
      "4754.0",
      "4755.0",
      "4756.0",
      "4757.0",
      "4758.0",
      "4759.0",
      "4760.0",
      "4761.0",
      "4762.0",
      "4763.0",
      "4764.0",
      "4765.0",
      "4766.0",
      "4767.0",
      "4768.0",
      "4769.0",
      "4770.0",
      "4771.0",
      "4772.0",
      "4773.0",
      "4774.0",
      "4775.0",
      "4776.0",
      "4777.0",
      "4778.0",
      "4779.0",
      "4780.0",
      "4781.0",
      "4782.0",
      "4783.0",
      "4784.0",
      "4785.0",
      "4786.0",
      "4787.0",
      "4788.0",
      "4789.0",
      "4790.0",
      "4791.0",
      "4792.0",
      "4793.0",
      "4794.0",
      "4795.0",
      "4796.0",
      "4797.0",
      "4798.0",
      "4799.0",
      "4800.0",
      "4801.0",
      "4802.0",
      "4803.0",
      "4804.0",
      "4805.0",
      "4806.0",
      "4807.0",
      "4808.0",
      "4809.0",
      "4810.0",
      "4811.0",
      "4812.0",
      "4813.0",
      "4814.0",
      "4815.0",
      "4816.0",
      "4817.0",
      "4818.0",
      "4819.0",
      "4820.0",
      "4821.0",
      "4822.0",
      "4823.0",
      "4824.0",
      "4825.0",
      "4826.0",
      "4827.0",
      "4828.0",
      "4829.0",
      "4830.0",
      "4831.0",
      "4832.0",
      "4833.0",
      "4834.0",
      "4835.0",
      "4836.0",
      "4837.0",
      "4838.0",
      "4839.0",
      "4840.0",
      "4841.0",
      "4842.0",
      "4843.0",
      "4844.0",
      "4845.0",
      "4846.0",
      "4847.0",
      "4848.0",
      "4849.0",
      "4850.0",
      "4851.0",
      "4852.0",
      "4853.0",
      "4854.0",
      "4855.0",
      "4856.0",
      "4857.0",
      "4858.0",
      "4859.0",
      "4860.0",
      "4861.0",
      "4862.0",
      "4863.0",
      "4864.0",
      "4865.0",
      "4866.0",
      "4867.0",
      "4868.0",
      "4869.0",
      "4870.0",
      "4871.0",
      "4872.0",
      "4873.0",
      "4874.0",
      "4875.0",
      "4876.0",
      "4877.0",
      "4878.0",
      "4879.0",
      "4880.0",
      "4881.0",
      "4882.0",
      "4883.0",
      "4884.0",
      "4885.0",
      "4886.0",
      "4887.0",
      "4888.0",
      "4889.0",
      "4890.0",
      "4891.0",
      "4892.0",
      "4893.0",
      "4894.0",
      "4895.0",
      "4896.0",
      "4897.0",
      "4898.0",
      "4899.0",
      "4900.0",
      "4901.0",
      "4902.0",
      "4903.0",
      "4904.0",
      "4905.0",
      "4906.0",
      "4907.0",
      "4908.0",
      "4909.0",
      "4910.0",
      "4911.0",
      "4912.0",
      "4913.0",
      "4914.0",
      "4915.0",
      "4916.0",
      "4917.0",
      "4918.0",
      "4919.0",
      "4920.0",
      "4921.0",
      "4922.0",
      "4923.0",
      "4924.0",
      "4925.0",
      "4926.0",
      "4927.0",
      "4928.0",
      "4929.0",
      "4930.0",
      "4931.0",
      "4932.0",
      "4933.0",
      "4934.0",
      "4935.0",
      "4936.0",
      "4937.0",
      "4938.0",
      "4939.0",
      "4940.0",
      "4941.0",
      "4942.0",
      "4943.0",
      "4944.0",
      "4945.0",
      "4946.0",
      "4947.0",
      "4948.0",
      "4949.0",
      "4950.0",
      "4951.0",
      "4952.0",
      "4953.0",
      "4954.0",
      "4955.0",
      "4956.0",
      "4957.0",
      "4958.0",
      "4959.0",
      "4960.0",
      "4961.0",
      "4962.0",
      "4963.0",
      "4964.0",
      "4965.0",
      "4966.0",
      "4967.0",
      "4968.0",
      "4969.0",
      "4970.0",
      "4971.0",
      "4972.0",
      "4973.0",
      "4974.0",
      "4975.0",
      "4976.0",
      "4977.0",
      "4978.0",
      "4979.0",
      "4980.0",
      "4981.0",
      "4982.0",
      "4983.0",
      "4984.0",
      "4985.0",
      "4986.0",
      "4987.0",
      "4988.0",
      "4989.0",
      "4990.0",
      "4991.0",
      "4992.0",
      "4993.0",
      "4994.0",
      "4995.0",
      "4996.0",
      "4997.0",
      "4998.0",
      "4999.0",
      "5000.0",
      "5001.0",
      "5002.0",
      "5003.0",
      "5004.0",
      "5005.0",
      "5006.0",
      "5007.0",
      "5008.0",
      "5009.0",
      "5010.0",
      "5011.0",
      "5012.0",
      "5013.0",
      "5014.0",
      "5015.0",
      "5016.0",
      "5017.0",
      "5018.0",
      "5019.0",
      "5020.0",
      "5021.0",
      "5022.0",
      "5023.0",
      "5024.0",
      "5025.0",
      "5026.0",
      "5027.0",
      "5028.0",
      "5029.0",
      "5030.0",
      "5031.0",
      "5032.0",
      "5033.0",
      "5034.0",
      "5035.0",
      "5036.0",
      "5037.0",
      "5038.0",
      "5039.0",
      "5040.0",
      "5041.0",
      "5042.0",
      "5043.0",
      "5044.0",
      "5045.0",
      "5046.0",
      "5047.0",
      "5048.0",
      "5049.0",
      "5050.0",
      "5051.0",
      "5052.0",
      "5053.0",
      "5054.0",
      "5055.0",
      "5056.0",
      "5057.0",
      "5058.0",
      "5059.0",
      "5060.0",
      "5061.0",
      "5062.0",
      "5063.0",
      "5064.0",
      "5065.0",
      "5066.0",
      "5067.0",
      "5068.0",
      "5069.0",
      "5070.0",
      "5071.0",
      "5072.0",
      "5073.0",
      "5074.0",
      "5075.0",
      "5076.0",
      "5077.0",
      "5078.0",
      "5079.0",
      "5080.0",
      "5081.0",
      "5082.0",
      "5083.0",
      "5084.0",
      "5085.0",
      "5086.0",
      "5087.0",
      "5088.0",
      "5089.0",
      "5090.0",
      "5091.0",
      "5092.0",
      "5093.0",
      "5094.0",
      "5095.0",
      "5096.0",
      "5097.0",
      "5098.0",
      "5099.0",
      "5100.0",
      "5101.0",
      "5102.0",
      "5103.0",
      "5104.0",
      "5105.0",
      "5106.0",
      "5107.0",
      "5108.0",
      "5109.0",
      "5110.0",
      "5111.0",
      "5112.0",
      "5113.0",
      "5114.0",
      "5115.0",
      "5116.0",
      "5117.0",
      "5118.0",
      "5119.0",
      "5120.0",
      "5121.0",
      "5122.0",
      "5123.0",
      "5124.0",
      "5125.0",
      "5126.0",
      "5127.0",
      "5128.0",
      "5129.0",
      "5130.0",
      "5131.0",
      "5132.0",
      "5133.0",
      "5134.0",
      "5135.0",
      "5136.0",
      "5137.0",
      "5138.0",
      "5139.0",
      "5140.0",
      "5141.0",
      "5142.0",
      "5143.0",
      "5144.0",
      "5145.0",
      "5146.0",
      "5147.0",
      "5148.0",
      "5149.0",
      "5150.0",
      "5151.0",
      "5152.0",
      "5153.0",
      "5154.0",
      "5155.0",
      "5156.0",
      "5157.0",
      "5158.0",
      "5159.0",
      "5160.0",
      "5161.0",
      "5162.0",
      "5163.0",
      "5164.0",
      "5165.0",
      "5166.0",
      "5167.0",
      "5168.0",
      "5169.0",
      "5170.0",
      "5171.0",
      "5172.0",
      "5173.0",
      "5174.0",
      "5175.0",
      "5176.0",
      "5177.0",
      "5178.0",
      "5179.0",
      "5180.0",
      "5181.0",
      "5182.0",
      "5183.0",
      "5184.0",
      "5185.0",
      "5186.0",
      "5187.0",
      "5188.0",
      "5189.0",
      "5190.0",
      "5191.0",
      "5192.0",
      "5193.0",
      "5194.0",
      "5195.0",
      "5196.0",
      "5197.0",
      "5198.0",
      "5199.0",
      "5200.0",
      "5201.0",
      "5202.0",
      "5203.0",
      "5204.0",
      "5205.0",
      "5206.0",
      "5207.0",
      "5208.0",
      "5209.0",
      "5210.0",
      "5211.0",
      "5212.0",
      "5213.0",
      "5214.0",
      "5215.0",
      "5216.0",
      "5217.0",
      "5218.0",
      "5219.0",
      "5220.0",
      "5221.0",
      "5222.0",
      "5223.0",
      "5224.0",
      "5225.0",
      "5226.0",
      "5227.0",
      "5228.0",
      "5229.0",
      "5230.0",
      "5231.0",
      "5232.0",
      "5233.0",
      "5234.0",
      "5235.0",
      "5236.0",
      "5237.0",
      "5238.0",
      "5239.0",
      "5240.0",
      "5241.0",
      "5242.0",
      "5243.0",
      "5244.0",
      "5245.0",
      "5246.0",
      "5247.0",
      "5248.0",
      "5249.0",
      "5250.0",
      "5251.0",
      "5252.0",
      "5253.0",
      "5254.0",
      "5255.0",
      "5256.0",
      "5257.0",
      "5258.0",
      "5259.0",
      "5260.0",
      "5261.0",
      "5262.0",
      "5263.0",
      "5264.0",
      "5265.0",
      "5266.0",
      "5267.0",
      "5268.0",
      "5269.0",
      "5270.0",
      "5271.0",
      "5272.0",
      "5273.0",
      "5274.0",
      "5275.0",
      "5276.0",
      "5277.0",
      "5278.0",
      "5279.0",
      "5280.0",
      "5281.0",
      "5282.0",
      "5283.0",
      "5284.0",
      "5285.0",
      "5286.0",
      "5287.0",
      "5288.0",
      "5289.0",
      "5290.0",
      "5291.0",
      "5292.0",
      "5293.0",
      "5294.0",
      "5295.0",
      "5296.0",
      "5297.0",
      "5298.0",
      "5299.0",
      "5300.0",
      "5301.0",
      "5302.0",
      "5303.0",
      "5304.0",
      "5305.0",
      "5306.0",
      "5307.0",
      "5308.0",
      "5309.0",
      "5310.0",
      "5311.0",
      "5312.0",
      "5313.0",
      "5314.0",
      "5315.0",
      "5316.0",
      "5317.0",
      "5318.0",
      "5319.0",
      "5320.0",
      "5321.0",
      "5322.0",
      "5323.0",
      "5324.0",
      "5325.0",
      "5326.0",
      "5327.0",
      "5328.0",
      "5329.0",
      "5330.0",
      "5331.0",
      "5332.0",
      "5333.0",
      "5334.0",
      "5335.0",
      "5336.0",
      "5337.0",
      "5338.0",
      "5339.0",
      "5340.0",
      "5341.0",
      "5342.0",
      "5343.0",
      "5344.0",
      "5345.0",
      "5346.0",
      "5347.0",
      "5348.0",
      "5349.0",
      "5350.0",
      "5351.0",
      "5352.0",
      "5353.0",
      "5354.0",
      "5355.0",
      "5356.0",
      "5357.0",
      "5358.0",
      "5359.0",
      "5360.0",
      "5361.0",
      "5362.0",
      "5363.0",
      "5364.0",
      "5365.0",
      "5366.0",
      "5367.0",
      "5368.0",
      "5369.0",
      "5370.0",
      "5371.0",
      "5372.0",
      "5373.0",
      "5374.0",
      "5375.0",
      "5376.0",
      "5377.0",
      "5378.0",
      "5379.0",
      "5380.0",
      "5381.0",
      "5382.0",
      "5383.0",
      "5384.0",
      "5385.0",
      "5386.0",
      "5387.0",
      "5388.0",
      "5389.0",
      "5390.0",
      "5391.0",
      "5392.0",
      "5393.0",
      "5394.0",
      "5395.0",
      "5396.0",
      "5397.0",
      "5398.0",
      "5399.0",
      "5400.0",
      "5401.0",
      "5402.0",
      "5403.0",
      "5404.0",
      "5405.0",
      "5406.0",
      "5407.0",
      "5408.0",
      "5409.0",
      "5410.0",
      "5411.0",
      "5412.0",
      "5413.0",
      "5414.0",
      "5415.0",
      "5416.0",
      "5417.0",
      "5418.0",
      "5419.0",
      "5420.0",
      "5421.0",
      "5422.0",
      "5423.0",
      "5424.0",
      "5425.0",
      "5426.0",
      "5427.0",
      "5428.0",
      "5429.0",
      "5430.0",
      "5431.0",
      "5432.0",
      "5433.0",
      "5434.0",
      "5435.0",
      "5436.0",
      "5437.0",
      "5438.0",
      "5439.0",
      "5440.0",
      "5441.0",
      "5442.0",
      "5443.0",
      "5444.0",
      "5445.0",
      "5446.0",
      "5447.0",
      "5448.0",
      "5449.0",
      "5450.0",
      "5451.0",
      "5452.0",
      "5453.0",
      "5454.0",
      "5455.0",
      "5456.0",
      "5457.0",
      "5458.0",
      "5459.0",
      "5460.0",
      "5461.0",
      "5462.0",
      "5463.0",
      "5464.0",
      "5465.0",
      "5466.0",
      "5467.0",
      "5468.0",
      "5469.0",
      "5470.0",
      "5471.0",
      "5472.0",
      "5473.0",
      "5474.0",
      "5475.0",
      "5476.0",
      "5477.0",
      "5478.0",
      "5479.0",
      "5480.0",
      "5481.0",
      "5482.0",
      "5483.0",
      "5484.0",
      "5485.0",
      "5486.0",
      "5487.0",
      "5488.0",
      "5489.0",
      "5490.0",
      "5491.0",
      "5492.0",
      "5493.0",
      "5494.0",
      "5495.0",
      "5496.0",
      "5497.0",
      "5498.0",
      "5499.0",
      "5500.0",
      "5501.0",
      "5502.0",
      "5503.0",
      "5504.0",
      "5505.0",
      "5506.0",
      "5507.0",
      "5508.0",
      "5509.0",
      "5510.0",
      "5511.0",
      "5512.0",
      "5513.0",
      "5514.0",
      "5515.0",
      "5516.0",
      "5517.0",
      "5518.0",
      "5519.0",
      "5520.0",
      "5521.0",
      "5522.0",
      "5523.0",
      "5524.0",
      "5525.0",
      "5526.0",
      "5527.0",
      "5528.0",
      "5529.0",
      "5530.0",
      "5531.0",
      "5532.0",
      "5533.0",
      "5534.0",
      "5535.0",
      "5536.0",
      "5537.0",
      "5538.0",
      "5539.0",
      "5540.0",
      "5541.0",
      "5542.0",
      "5543.0",
      "5544.0",
      "5545.0",
      "5546.0",
      "5547.0",
      "5548.0",
      "5549.0",
      "5550.0",
      "5551.0",
      "5552.0",
      "5553.0",
      "5554.0",
      "5555.0",
      "5556.0",
      "5557.0",
      "5558.0",
      "5559.0",
      "5560.0",
      "5561.0",
      "5562.0",
      "5563.0",
      "5564.0",
      "5565.0",
      "5566.0",
      "5567.0",
      "5568.0",
      "5569.0",
      "5570.0",
      "5571.0",
      "5572.0",
      "5573.0",
      "5574.0",
      "5575.0",
      "5576.0",
      "5577.0",
      "5578.0",
      "5579.0",
      "5580.0",
      "5581.0",
      "5582.0",
      "5583.0",
      "5584.0",
      "5585.0",
      "5586.0",
      "5587.0",
      "5588.0",
      "5589.0",
      "5590.0",
      "5591.0",
      "5592.0",
      "5593.0",
      "5594.0",
      "5595.0",
      "5596.0",
      "5597.0",
      "5598.0",
      "5599.0",
      "5600.0",
      "5601.0",
      "5602.0",
      "5603.0",
      "5604.0",
      "5605.0",
      "5606.0",
      "5607.0",
      "5608.0",
      "5609.0",
      "5610.0",
      "5611.0",
      "5612.0",
      "5613.0",
      "5614.0",
      "5615.0",
      "5616.0",
      "5617.0",
      "5618.0",
      "5619.0",
      "5620.0",
      "5621.0",
      "5622.0",
      "5623.0",
      "5624.0",
      "5625.0",
      "5626.0",
      "5627.0",
      "5628.0",
      "5629.0",
      "5630.0",
      "5631.0",
      "5632.0",
      "5633.0",
      "5634.0",
      "5635.0",
      "5636.0",
      "5637.0",
      "5638.0",
      "5639.0",
      "5640.0",
      "5641.0",
      "5642.0",
      "5643.0",
      "5644.0",
      "5645.0",
      "5646.0",
      "5647.0",
      "5648.0",
      "5649.0",
      "5650.0",
      "5651.0",
      "5652.0",
      "5653.0",
      "5654.0",
      "5655.0",
      "5656.0",
      "5657.0",
      "5658.0",
      "5659.0",
      "5660.0",
      "5661.0",
      "5662.0",
      "5663.0",
      "5664.0",
      "5665.0",
      "5666.0",
      "5667.0",
      "5668.0",
      "5669.0",
      "5670.0",
      "5671.0",
      "5672.0",
      "5673.0",
      "5674.0",
      "5675.0",
      "5676.0",
      "5677.0",
      "5678.0",
      "5679.0",
      "5680.0",
      "5681.0",
      "5682.0",
      "5683.0",
      "5684.0",
      "5685.0",
      "5686.0",
      "5687.0",
      "5688.0",
      "5689.0",
      "5690.0",
      "5691.0",
      "5692.0",
      "5693.0",
      "5694.0",
      "5695.0",
      "5696.0",
      "5697.0",
      "5698.0",
      "5699.0",
      "5700.0",
      "5701.0",
      "5702.0",
      "5703.0",
      "5704.0",
      "5705.0",
      "5706.0",
      "5707.0",
      "5708.0",
      "5709.0",
      "5710.0",
      "5711.0",
      "5712.0",
      "5713.0",
      "5714.0",
      "5715.0",
      "5716.0",
      "5717.0",
      "5718.0",
      "5719.0",
      "5720.0",
      "5721.0",
      "5722.0",
      "5723.0",
      "5724.0",
      "5725.0",
      "5726.0",
      "5727.0",
      "5728.0",
      "5729.0",
      "5730.0",
      "5731.0",
      "5732.0",
      "5733.0",
      "5734.0",
      "5735.0",
      "5736.0",
      "5737.0",
      "5738.0",
      "5739.0",
      "5740.0",
      "5741.0",
      "5742.0",
      "5743.0",
      "5744.0",
      "5745.0",
      "5746.0",
      "5747.0",
      "5748.0",
      "5749.0",
      "5750.0",
      "5751.0",
      "5752.0",
      "5753.0",
      "5754.0",
      "5755.0",
      "5756.0",
      "5757.0",
      "5758.0",
      "5759.0",
      "5760.0",
      "5761.0",
      "5762.0",
      "5763.0",
      "5764.0",
      "5765.0",
      "5766.0",
      "5767.0",
      "5768.0",
      "5769.0",
      "5770.0",
      "5771.0",
      "5772.0",
      "5773.0",
      "5774.0",
      "5775.0",
      "5776.0",
      "5777.0",
      "5778.0",
      "5779.0",
      "5780.0",
      "5781.0",
      "5782.0",
      "5783.0",
      "5784.0",
      "5785.0",
      "5786.0",
      "5787.0",
      "5788.0",
      "5789.0",
      "5790.0",
      "5791.0",
      "5792.0",
      "5793.0",
      "5794.0",
      "5795.0",
      "5796.0",
      "5797.0",
      "5798.0",
      "5799.0",
      "5800.0",
      "5801.0",
      "5802.0",
      "5803.0",
      "5804.0",
      "5805.0",
      "5806.0",
      "5807.0",
      "5808.0",
      "5809.0",
      "5810.0",
      "5811.0",
      "5812.0",
      "5813.0",
      "5814.0",
      "5815.0",
      "5816.0",
      "5817.0",
      "5818.0",
      "5819.0",
      "5820.0",
      "5821.0",
      "5822.0",
      "5823.0",
      "5824.0",
      "5825.0",
      "5826.0",
      "5827.0",
      "5828.0",
      "5829.0",
      "5830.0",
      "5831.0",
      "5832.0",
      "5833.0",
      "5834.0",
      "5835.0",
      "5836.0",
      "5837.0",
      "5838.0",
      "5839.0",
      "5840.0",
      "5841.0",
      "5842.0",
      "5843.0",
      "5844.0",
      "5845.0",
      "5846.0",
      "5847.0",
      "5848.0",
      "5849.0",
      "5850.0",
      "5851.0",
      "5852.0",
      "5853.0",
      "5854.0",
      "5855.0",
      "5856.0",
      "5857.0",
      "5858.0",
      "5859.0",
      "5860.0",
      "5861.0",
      "5862.0",
      "5863.0",
      "5864.0",
      "5865.0",
      "5866.0",
      "5867.0",
      "5868.0",
      "5869.0",
      "5870.0",
      "5871.0",
      "5872.0",
      "5873.0",
      "5874.0",
      "5875.0",
      "5876.0",
      "5877.0",
      "5878.0",
      "5879.0",
      "5880.0",
      "5881.0",
      "5882.0",
      "5883.0",
      "5884.0",
      "5885.0",
      "5886.0",
      "5887.0",
      "5888.0",
      "5889.0",
      "5890.0",
      "5891.0",
      "5892.0",
      "5893.0",
      "5894.0",
      "5895.0",
      "5896.0",
      "5897.0",
      "5898.0",
      "5899.0",
      "5900.0",
      "5901.0",
      "5902.0",
      "5903.0",
      "5904.0",
      "5905.0",
      "5906.0",
      "5907.0",
      "5908.0",
      "5909.0",
      "5910.0",
      "5911.0",
      "5912.0",
      "5913.0",
      "5914.0",
      "5915.0",
      "5916.0",
      "5917.0",
      "5918.0",
      "5919.0",
      "5920.0",
      "5921.0",
      "5922.0",
      "5923.0",
      "5924.0",
      "5925.0",
      "5926.0",
      "5927.0",
      "5928.0",
      "5929.0",
      "5930.0",
      "5931.0",
      "5932.0",
      "5933.0",
      "5934.0",
      "5935.0",
      "5936.0",
      "5937.0",
      "5938.0",
      "5939.0",
      "5940.0",
      "5941.0",
      "5942.0",
      "5943.0",
      "5944.0",
      "5945.0",
      "5946.0",
      "5947.0",
      "5948.0",
      "5949.0",
      "5950.0",
      "5951.0",
      "5952.0",
      "5953.0",
      "5954.0",
      "5955.0",
      "5956.0",
      "5957.0",
      "5958.0",
      "5959.0",
      "5960.0",
      "5961.0",
      "5962.0",
      "5963.0",
      "5964.0",
      "5965.0",
      "5966.0",
      "5967.0",
      "5968.0",
      "5969.0",
      "5970.0",
      "5971.0",
      "5972.0",
      "5973.0",
      "5974.0",
      "5975.0",
      "5976.0",
      "5977.0",
      "5978.0",
      "5979.0",
      "5980.0",
      "5981.0",
      "5982.0",
      "5983.0",
      "5984.0",
      "5985.0",
      "5986.0",
      "5987.0",
      "5988.0",
      "5989.0",
      "5990.0",
      "5991.0",
      "5992.0",
      "5993.0",
      "5994.0",
      "5995.0",
      "5996.0",
      "5997.0",
      "5998.0",
      "5999.0",
      "6000.0",
      "6001.0",
      "6002.0",
      "6003.0",
      "6004.0",
      "6005.0",
      "6006.0",
      "6007.0",
      "6008.0",
      "6009.0",
      "6010.0",
      "6011.0",
      "6012.0",
      "6013.0",
      "6014.0",
      "6015.0",
      "6016.0",
      "6017.0",
      "6018.0",
      "6019.0",
      "6020.0",
      "6021.0",
      "6022.0",
      "6023.0",
      "6024.0",
      "6025.0",
      "6026.0",
      "6027.0",
      "6028.0",
      "6029.0",
      "6030.0",
      "6031.0",
      "6032.0",
      "6033.0",
      "6034.0",
      "6035.0",
      "6036.0",
      "6037.0",
      "6038.0",
      "6039.0",
      "6040.0",
      "6041.0",
      "6042.0",
      "6043.0",
      "6044.0",
      "6045.0",
      "6046.0",
      "6047.0",
      "6048.0",
      "6049.0",
      "6050.0",
      "6051.0",
      "6052.0",
      "6053.0",
      "6054.0",
      "6055.0",
      "6056.0",
      "6057.0",
      "6058.0",
      "6059.0",
      "6060.0",
      "6061.0",
      "6062.0",
      "6063.0",
      "6064.0",
      "6065.0",
      "6066.0",
      "6067.0",
      "6068.0",
      "6069.0",
      "6070.0",
      "6071.0",
      "6072.0",
      "6073.0",
      "6074.0",
      "6075.0",
      "6076.0",
      "6077.0",
      "6078.0",
      "6079.0",
      "6080.0",
      "6081.0",
      "6082.0",
      "6083.0",
      "6084.0",
      "6085.0",
      "6086.0",
      "6087.0",
      "6088.0",
      "6089.0",
      "6090.0",
      "6091.0",
      "6092.0",
      "6093.0",
      "6094.0",
      "6095.0",
      "6096.0",
      "6097.0",
      "6098.0",
      "6099.0",
      "6100.0",
      "6101.0",
      "6102.0",
      "6103.0",
      "6104.0",
      "6105.0",
      "6106.0",
      "6107.0",
      "6108.0",
      "6109.0",
      "6110.0",
      "6111.0",
      "6112.0",
      "6113.0",
      "6114.0",
      "6115.0",
      "6116.0",
      "6117.0",
      "6118.0",
      "6119.0",
      "6120.0",
      "6121.0",
      "6122.0",
      "6123.0",
      "6124.0",
      "6125.0",
      "6126.0",
      "6127.0",
      "6128.0",
      "6129.0",
      "6130.0",
      "6131.0",
      "6132.0",
      "6133.0",
      "6134.0",
      "6135.0",
      "6136.0",
      "6137.0",
      "6138.0",
      "6139.0",
      "6140.0",
      "6141.0",
      "6142.0",
      "6143.0",
      "6144.0",
      "6145.0",
      "6146.0",
      "6147.0",
      "6148.0",
      "6149.0",
      "6150.0",
      "6151.0",
      "6152.0",
      "6153.0",
      "6154.0",
      "6155.0",
      "6156.0",
      "6157.0",
      "6158.0",
      "6159.0",
      "6160.0",
      "6161.0",
      "6162.0",
      "6163.0",
      "6164.0",
      "6165.0",
      "6166.0",
      "6167.0",
      "6168.0",
      "6169.0",
      "6170.0",
      "6171.0",
      "6172.0",
      "6173.0",
      "6174.0",
      "6175.0",
      "6176.0",
      "6177.0",
      "6178.0",
      "6179.0",
      "6180.0",
      "6181.0",
      "6182.0",
      "6183.0",
      "6184.0",
      "6185.0",
      "6186.0",
      "6187.0",
      "6188.0",
      "6189.0",
      "6190.0",
      "6191.0",
      "6192.0",
      "6193.0",
      "6194.0",
      "6195.0",
      "6196.0",
      "6197.0",
      "6198.0",
      "6199.0",
      "6200.0",
      "6201.0",
      "6202.0",
      "6203.0",
      "6204.0",
      "6205.0",
      "6206.0",
      "6207.0",
      "6208.0",
      "6209.0",
      "6210.0",
      "6211.0",
      "6212.0",
      "6213.0",
      "6214.0",
      "6215.0",
      "6216.0",
      "6217.0",
      "6218.0",
      "6219.0",
      "6220.0",
      "6221.0",
      "6222.0",
      "6223.0",
      "6224.0",
      "6225.0",
      "6226.0",
      "6227.0",
      "6228.0",
      "6229.0",
      "6230.0",
      "6231.0",
      "6232.0",
      "6233.0",
      "6234.0",
      "6235.0",
      "6236.0",
      "6237.0",
      "6238.0",
      "6239.0",
      "6240.0",
      "6241.0",
      "6242.0",
      "6243.0",
      "6244.0",
      "6245.0",
      "6246.0",
      "6247.0",
      "6248.0",
      "6249.0",
      "6250.0",
      "6251.0",
      "6252.0",
      "6253.0",
      "6254.0",
      "6255.0",
      "6256.0",
      "6257.0",
      "6258.0",
      "6259.0",
      "6260.0",
      "6261.0",
      "6262.0",
      "6263.0",
      "6264.0",
      "6265.0",
      "6266.0",
      "6267.0",
      "6268.0",
      "6269.0",
      "6270.0",
      "6271.0",
      "6272.0",
      "6273.0",
      "6274.0",
      "6275.0",
      "6276.0",
      "6277.0",
      "6278.0",
      "6279.0",
      "6280.0",
      "6281.0",
      "6282.0",
      "6283.0",
      "6284.0",
      "6285.0",
      "6286.0",
      "6287.0",
      "6288.0",
      "6289.0",
      "6290.0",
      "6291.0",
      "6292.0",
      "6293.0",
      "6294.0",
      "6295.0",
      "6296.0",
      "6297.0",
      "6298.0",
      "6299.0",
      "6300.0",
      "6301.0",
      "6302.0",
      "6303.0",
      "6304.0",
      "6305.0",
      "6306.0",
      "6307.0",
      "6308.0",
      "6309.0",
      "6310.0",
      "6311.0",
      "6312.0",
      "6313.0",
      "6314.0",
      "6315.0",
      "6316.0",
      "6317.0",
      "6318.0",
      "6319.0",
      "6320.0",
      "6321.0",
      "6322.0",
      "6323.0",
      "6324.0",
      "6325.0",
      "6326.0",
      "6327.0",
      "6328.0",
      "6329.0",
      "6330.0",
      "6331.0",
      "6332.0",
      "6333.0",
      "6334.0",
      "6335.0",
      "6336.0",
      "6337.0",
      "6338.0",
      "6339.0",
      "6340.0",
      "6341.0",
      "6342.0",
      "6343.0",
      "6344.0",
      "6345.0",
      "6346.0",
      "6347.0",
      "6348.0",
      "6349.0",
      "6350.0",
      "6351.0",
      "6352.0",
      "6353.0",
      "6354.0",
      "6355.0",
      "6356.0",
      "6357.0",
      "6358.0",
      "6359.0",
      "6360.0",
      "6361.0",
      "6362.0",
      "6363.0",
      "6364.0",
      "6365.0",
      "6366.0",
      "6367.0",
      "6368.0",
      "6369.0",
      "6370.0",
      "6371.0",
      "6372.0",
      "6373.0",
      "6374.0",
      "6375.0",
      "6376.0",
      "6377.0",
      "6378.0",
      "6379.0",
      "6380.0",
      "6381.0",
      "6382.0",
      "6383.0",
      "6384.0",
      "6385.0",
      "6386.0",
      "6387.0",
      "6388.0",
      "6389.0",
      "6390.0",
      "6391.0",
      "6392.0",
      "6393.0",
      "6394.0",
      "6395.0",
      "6396.0",
      "6397.0",
      "6398.0",
      "6399.0",
      "6400.0",
      "6401.0",
      "6402.0",
      "6403.0",
      "6404.0",
      "6405.0",
      "6406.0",
      "6407.0",
      "6408.0",
      "6409.0",
      "6410.0",
      "6411.0",
      "6412.0",
      "6413.0",
      "6414.0",
      "6415.0",
      "6416.0",
      "6417.0",
      "6418.0",
      "6419.0",
      "6420.0",
      "6421.0",
      "6422.0",
      "6423.0",
      "6424.0",
      "6425.0",
      "6426.0",
      "6427.0",
      "6428.0",
      "6429.0",
      "6430.0",
      "6431.0",
      "6432.0",
      "6433.0",
      "6434.0",
      "6435.0",
      "6436.0",
      "6437.0",
      "6438.0",
      "6439.0",
      "6440.0",
      "6441.0",
      "6442.0",
      "6443.0",
      "6444.0",
      "6445.0",
      "6446.0",
      "6447.0",
      "6448.0",
      "6449.0",
      "6450.0",
      "6451.0",
      "6452.0",
      "6453.0",
      "6454.0",
      "6455.0",
      "6456.0",
      "6457.0",
      "6458.0",
      "6459.0",
      "6460.0",
      "6461.0",
      "6462.0",
      "6463.0",
      "6464.0",
      "6465.0",
      "6466.0",
      "6467.0",
      "6468.0",
      "6469.0",
      "6470.0",
      "6471.0",
      "6472.0",
      "6473.0",
      "6474.0",
      "6475.0",
      "6476.0",
      "6477.0",
      "6478.0",
      "6479.0",
      "6480.0",
      "6481.0",
      "6482.0",
      "6483.0",
      "6484.0",
      "6485.0",
      "6486.0",
      "6487.0",
      "6488.0",
      "6489.0",
      "6490.0",
      "6491.0",
      "6492.0",
      "6493.0",
      "6494.0",
      "6495.0",
      "6496.0",
      "6497.0",
      "6498.0",
      "6499.0",
      "6500.0",
      "6501.0",
      "6502.0",
      "6503.0",
      "6504.0",
      "6505.0",
      "6506.0",
      "6507.0",
      "6508.0",
      "6509.0",
      "6510.0",
      "6511.0",
      "6512.0",
      "6513.0",
      "6514.0",
      "6515.0",
      "6516.0",
      "6517.0",
      "6518.0",
      "6519.0",
      "6520.0",
      "6521.0",
      "6522.0",
      "6523.0",
      "6524.0",
      "6525.0",
      "6526.0",
      "6527.0",
      "6528.0",
      "6529.0",
      "6530.0",
      "6531.0",
      "6532.0",
      "6533.0",
      "6534.0",
      "6535.0",
      "6536.0",
      "6537.0",
      "6538.0",
      "6539.0",
      "6540.0",
      "6541.0",
      "6542.0",
      "6543.0",
      "6544.0",
      "6545.0",
      "6546.0",
      "6547.0",
      "6548.0",
      "6549.0",
      "6550.0",
      "6551.0",
      "6552.0",
      "6553.0",
      "6554.0",
      "6555.0",
      "6556.0",
      "6557.0",
      "6558.0",
      "6559.0",
      "6560.0",
      "6561.0",
      "6562.0",
      "6563.0",
      "6564.0",
      "6565.0",
      "6566.0",
      "6567.0",
      "6568.0",
      "6569.0",
      "6570.0",
      "6571.0",
      "6572.0",
      "6573.0",
      "6574.0",
      "6575.0",
      "6576.0",
      "6577.0",
      "6578.0",
      "6579.0",
      "6580.0",
      "6581.0",
      "6582.0",
      "6583.0",
      "6584.0",
      "6585.0",
      "6586.0",
      "6587.0",
      "6588.0",
      "6589.0",
      "6590.0",
      "6591.0",
      "6592.0",
      "6593.0",
      "6594.0",
      "6595.0",
      "6596.0",
      "6597.0",
      "6598.0",
      "6599.0",
      "6600.0",
      "6601.0",
      "6602.0",
      "6603.0",
      "6604.0",
      "6605.0",
      "6606.0",
      "6607.0",
      "6608.0",
      "6609.0",
      "6610.0",
      "6611.0",
      "6612.0",
      "6613.0",
      "6614.0",
      "6615.0",
      "6616.0",
      "6617.0",
      "6618.0",
      "6619.0",
      "6620.0",
      "6621.0",
      "6622.0",
      "6623.0",
      "6624.0",
      "6625.0",
      "6626.0",
      "6627.0",
      "6628.0",
      "6629.0",
      "6630.0",
      "6631.0",
      "6632.0",
      "6633.0",
      "6634.0",
      "6635.0",
      "6636.0",
      "6637.0",
      "6638.0",
      "6639.0",
      "6640.0",
      "6641.0",
      "6642.0",
      "6643.0",
      "6644.0",
      "6645.0",
      "6646.0",
      "6647.0",
      "6648.0",
      "6649.0",
      "6650.0",
      "6651.0",
      "6652.0",
      "6653.0",
      "6654.0",
      "6655.0",
      "6656.0",
      "6657.0",
      "6658.0",
      "6659.0",
      "6660.0",
      "6661.0",
      "6662.0",
      "6663.0",
      "6664.0",
      "6665.0",
      "6666.0",
      "6667.0",
      "6668.0",
      "6669.0",
      "6670.0",
      "6671.0",
      "6672.0",
      "6673.0",
      "6674.0",
      "6675.0",
      "6676.0",
      "6677.0",
      "6678.0",
      "6679.0",
      "6680.0",
      "6681.0",
      "6682.0",
      "6683.0",
      "6684.0",
      "6685.0",
      "6686.0",
      "6687.0",
      "6688.0",
      "6689.0",
      "6690.0",
      "6691.0",
      "6692.0",
      "6693.0",
      "6694.0",
      "6695.0",
      "6696.0",
      "6697.0",
      "6698.0",
      "6699.0",
      "6700.0",
      "6701.0",
      "6702.0",
      "6703.0",
      "6704.0",
      "6705.0",
      "6706.0",
      "6707.0",
      "6708.0",
      "6709.0",
      "6710.0",
      "6711.0",
      "6712.0",
      "6713.0",
      "6714.0",
      "6715.0",
      "6716.0",
      "6717.0",
      "6718.0",
      "6719.0",
      "6720.0",
      "6721.0",
      "6722.0",
      "6723.0",
      "6724.0",
      "6725.0",
      "6726.0",
      "6727.0",
      "6728.0",
      "6729.0",
      "6730.0",
      "6731.0",
      "6732.0",
      "6733.0",
      "6734.0",
      "6735.0",
      "6736.0",
      "6737.0",
      "6738.0",
      "6739.0",
      "6740.0",
      "6741.0",
      "6742.0",
      "6743.0",
      "6744.0",
      "6745.0",
      "6746.0",
      "6747.0",
      "6748.0",
      "6749.0",
      "6750.0",
      "6751.0",
      "6752.0",
      "6753.0",
      "6754.0",
      "6755.0",
      "6756.0",
      "6757.0",
      "6758.0",
      "6759.0",
      "6760.0",
      "6761.0",
      "6762.0",
      "6763.0",
      "6764.0",
      "6765.0",
      "6766.0",
      "6767.0",
      "6768.0",
      "6769.0",
      "6770.0",
      "6771.0",
      "6772.0",
      "6773.0",
      "6774.0",
      "6775.0",
      "6776.0",
      "6777.0",
      "6778.0",
      "6779.0",
      "6780.0",
      "6781.0",
      "6782.0",
      "6783.0",
      "6784.0",
      "6785.0",
      "6786.0",
      "6787.0",
      "6788.0",
      "6789.0",
      "6790.0",
      "6791.0",
      "6792.0",
      "6793.0",
      "6794.0",
      "6795.0",
      "6796.0",
      "6797.0",
      "6798.0",
      "6799.0",
      "6800.0",
      "6801.0",
      "6802.0",
      "6803.0",
      "6804.0",
      "6805.0",
      "6806.0",
      "6807.0",
      "6808.0",
      "6809.0",
      "6810.0",
      "6811.0",
      "6812.0",
      "6813.0",
      "6814.0",
      "6815.0",
      "6816.0",
      "6817.0",
      "6818.0",
      "6819.0",
      "6820.0",
      "6821.0",
      "6822.0",
      "6823.0",
      "6824.0",
      "6825.0",
      "6826.0",
      "6827.0",
      "6828.0",
      "6829.0",
      "6830.0",
      "6831.0",
      "6832.0",
      "6833.0",
      "6834.0",
      "6835.0",
      "6836.0",
      "6837.0",
      "6838.0",
      "6839.0",
      "6840.0",
      "6841.0",
      "6842.0",
      "6843.0",
      "6844.0",
      "6845.0",
      "6846.0",
      "6847.0",
      "6848.0",
      "6849.0",
      "6850.0",
      "6851.0",
      "6852.0",
      "6853.0",
      "6854.0",
      "6855.0",
      "6856.0",
      "6857.0",
      "6858.0",
      "6859.0",
      "6860.0",
      "6861.0",
      "6862.0",
      "6863.0",
      "6864.0",
      "6865.0",
      "6866.0",
      "6867.0",
      "6868.0",
      "6869.0",
      "6870.0",
      "6871.0",
      "6872.0",
      "6873.0",
      "6874.0",
      "6875.0",
      "6876.0",
      "6877.0",
      "6878.0",
      "6879.0",
      "6880.0",
      "6881.0",
      "6882.0",
      "6883.0",
      "6884.0",
      "6885.0",
      "6886.0",
      "6887.0",
      "6888.0",
      "6889.0",
      "6890.0",
      "6891.0",
      "6892.0",
      "6893.0",
      "6894.0",
      "6895.0",
      "6896.0",
      "6897.0",
      "6898.0",
      "6899.0",
      "6900.0",
      "6901.0",
      "6902.0",
      "6903.0",
      "6904.0",
      "6905.0",
      "6906.0",
      "6907.0",
      "6908.0",
      "6909.0",
      "6910.0",
      "6911.0",
      "6912.0",
      "6913.0",
      "6914.0",
      "6915.0",
      "6916.0",
      "6917.0",
      "6918.0",
      "6919.0",
      "6920.0",
      "6921.0",
      "6922.0",
      "6923.0",
      "6924.0",
      "6925.0",
      "6926.0",
      "6927.0",
      "6928.0",
      "6929.0",
      "6930.0",
      "6931.0",
      "6932.0",
      "6933.0",
      "6934.0",
      "6935.0",
      "6936.0",
      "6937.0",
      "6938.0",
      "6939.0",
      "6940.0",
      "6941.0",
      "6942.0",
      "6943.0",
      "6944.0",
      "6945.0",
      "6946.0",
      "6947.0",
      "6948.0",
      "6949.0",
      "6950.0",
      "6951.0",
      "6952.0",
      "6953.0",
      "6954.0",
      "6955.0",
      "6956.0",
      "6957.0",
      "6958.0",
      "6959.0",
      "6960.0",
      "6961.0",
      "6962.0",
      "6963.0",
      "6964.0",
      "6965.0",
      "6966.0",
      "6967.0",
      "6968.0",
      "6969.0",
      "6970.0",
      "6971.0",
      "6972.0",
      "6973.0",
      "6974.0",
      "6975.0",
      "6976.0",
      "6977.0",
      "6978.0",
      "6979.0",
      "6980.0",
      "6981.0",
      "6982.0",
      "6983.0",
      "6984.0",
      "6985.0",
      "6986.0",
      "6987.0",
      "6988.0",
      "6989.0",
      "6990.0",
      "6991.0",
      "6992.0",
      "6993.0",
      "6994.0",
      "6995.0",
      "6996.0",
      "6997.0",
      "6998.0",
      "6999.0",
      "7000.0",
      "7001.0",
      "7002.0",
      "7003.0",
      "7004.0",
      "7005.0",
      "7006.0",
      "7007.0",
      "7008.0",
      "7009.0",
      "7010.0",
      "7011.0",
      "7012.0",
      "7013.0",
      "7014.0",
      "7015.0",
      "7016.0",
      "7017.0",
      "7018.0",
      "7019.0",
      "7020.0",
      "7021.0",
      "7022.0",
      "7023.0",
      "7024.0",
      "7025.0",
      "7026.0",
      "7027.0",
      "7028.0",
      "7029.0",
      "7030.0",
      "7031.0",
      "7032.0",
      "7033.0",
      "7034.0",
      "7035.0",
      "7036.0",
      "7037.0",
      "7038.0",
      "7039.0",
      "7040.0",
      "7041.0",
      "7042.0",
      "7043.0",
      "7044.0",
      "7045.0",
      "7046.0",
      "7047.0",
      "7048.0",
      "7049.0",
      "7050.0",
      "7051.0",
      "7052.0",
      "7053.0",
      "7054.0",
      "7055.0",
      "7056.0",
      "7057.0",
      "7058.0",
      "7059.0",
      "7060.0",
      "7061.0",
      "7062.0",
      "7063.0",
      "7064.0",
      "7065.0",
      "7066.0",
      "7067.0",
      "7068.0",
      "7069.0",
      "7070.0",
      "7071.0",
      "7072.0",
      "7073.0",
      "7074.0",
      "7075.0",
      "7076.0",
      "7077.0",
      "7078.0",
      "7079.0",
      "7080.0",
      "7081.0",
      "7082.0",
      "7083.0",
      "7084.0",
      "7085.0",
      "7086.0",
      "7087.0",
      "7088.0",
      "7089.0",
      "7090.0",
      "7091.0",
      "7092.0",
      "7093.0",
      "7094.0",
      "7095.0",
      "7096.0",
      "7097.0",
      "7098.0",
      "7099.0",
      "7100.0",
      "7101.0",
      "7102.0",
      "7103.0",
      "7104.0",
      "7105.0",
      "7106.0",
      "7107.0",
      "7108.0",
      "7109.0",
      "7110.0",
      "7111.0",
      "7112.0",
      "7113.0",
      "7114.0",
      "7115.0",
      "7116.0",
      "7117.0",
      "7118.0",
      "7119.0",
      "7120.0",
      "7121.0",
      "7122.0",
      "7123.0",
      "7124.0",
      "7125.0",
      "7126.0",
      "7127.0",
      "7128.0",
      "7129.0",
      "7130.0",
      "7131.0",
      "7132.0",
      "7133.0",
      "7134.0",
      "7135.0",
      "7136.0",
      "7137.0",
      "7138.0",
      "7139.0",
      "7140.0",
      "7141.0",
      "7142.0",
      "7143.0",
      "7144.0",
      "7145.0",
      "7146.0",
      "7147.0",
      "7148.0",
      "7149.0",
      "7150.0",
      "7151.0",
      "7152.0",
      "7153.0",
      "7154.0",
      "7155.0",
      "7156.0",
      "7157.0",
      "7158.0",
      "7159.0",
      "7160.0",
      "7161.0",
      "7162.0",
      "7163.0",
      "7164.0",
      "7165.0",
      "7166.0",
      "7167.0",
      "7168.0",
      "7169.0",
      "7170.0",
      "7171.0",
      "7172.0",
      "7173.0",
      "7174.0",
      "7175.0",
      "7176.0",
      "7177.0",
      "7178.0",
      "7179.0",
      "7180.0",
      "7181.0",
      "7182.0",
      "7183.0",
      "7184.0",
      "7185.0",
      "7186.0",
      "7187.0",
      "7188.0",
      "7189.0",
      "7190.0",
      "7191.0",
      "7192.0",
      "7193.0",
      "7194.0",
      "7195.0",
      "7196.0",
      "7197.0",
      "7198.0",
      "7199.0",
      "7200.0",
      "7201.0",
      "7202.0",
      "7203.0",
      "7204.0",
      "7205.0",
      "7206.0",
      "7207.0",
      "7208.0",
      "7209.0",
      "7210.0",
      "7211.0",
      "7212.0",
      "7213.0",
      "7214.0",
      "7215.0",
      "7216.0",
      "7217.0",
      "7218.0",
      "7219.0",
      "7220.0",
      "7221.0",
      "7222.0",
      "7223.0",
      "7224.0",
      "7225.0",
      "7226.0",
      "7227.0",
      "7228.0",
      "7229.0",
      "7230.0",
      "7231.0",
      "7232.0",
      "7233.0",
      "7234.0",
      "7235.0",
      "7236.0",
      "7237.0",
      "7238.0",
      "7239.0",
      "7240.0",
      "7241.0",
      "7242.0",
      "7243.0",
      "7244.0",
      "7245.0",
      "7246.0",
      "7247.0",
      "7248.0",
      "7249.0",
      "7250.0",
      "7251.0",
      "7252.0",
      "7253.0",
      "7254.0",
      "7255.0",
      "7256.0",
      "7257.0",
      "7258.0",
      "7259.0",
      "7260.0",
      "7261.0",
      "7262.0",
      "7263.0",
      "7264.0",
      "7265.0",
      "7266.0",
      "7267.0",
      "7268.0",
      "7269.0",
      "7270.0",
      "7271.0",
      "7272.0",
      "7273.0",
      "7274.0",
      "7275.0",
      "7276.0",
      "7277.0",
      "7278.0",
      "7279.0",
      "7280.0",
      "7281.0",
      "7282.0",
      "7283.0",
      "7284.0",
      "7285.0",
      "7286.0",
      "7287.0",
      "7288.0",
      "7289.0",
      "7290.0",
      "7291.0",
      "7292.0",
      "7293.0",
      "7294.0",
      "7295.0",
      "7296.0",
      "7297.0",
      "7298.0",
      "7299.0",
      "7300.0",
      "7301.0",
      "7302.0",
      "7303.0",
      "7304.0",
      "7305.0",
      "7306.0",
      "7307.0",
      "7308.0",
      "7309.0",
      "7310.0",
      "7311.0",
      "7312.0",
      "7313.0",
      "7314.0",
      "7315.0",
      "7316.0",
      "7317.0",
      "7318.0",
      "7319.0",
      "7320.0",
      "7321.0",
      "7322.0",
      "7323.0",
      "7324.0",
      "7325.0",
      "7326.0",
      "7327.0",
      "7328.0",
      "7329.0",
      "7330.0",
      "7331.0",
      "7332.0",
      "7333.0",
      "7334.0",
      "7335.0",
      "7336.0",
      "7337.0",
      "7338.0",
      "7339.0",
      "7340.0",
      "7341.0",
      "7342.0",
      "7343.0",
      "7344.0",
      "7345.0",
      "7346.0",
      "7347.0",
      "7348.0",
      "7349.0",
      "7350.0",
      "7351.0",
      "7352.0",
      "7353.0",
      "7354.0",
      "7355.0",
      "7356.0",
      "7357.0",
      "7358.0",
      "7359.0",
      "7360.0",
      "7361.0",
      "7362.0",
      "7363.0",
      "7364.0",
      "7365.0",
      "7366.0",
      "7367.0",
      "7368.0",
      "7369.0",
      "7370.0",
      "7371.0",
      "7372.0",
      "7373.0",
      "7374.0",
      "7375.0",
      "7376.0",
      "7377.0",
      "7378.0",
      "7379.0",
      "7380.0",
      "7381.0",
      "7382.0",
      "7383.0",
      "7384.0",
      "7385.0",
      "7386.0",
      "7387.0",
      "7388.0",
      "7389.0",
      "7390.0",
      "7391.0",
      "7392.0",
      "7393.0",
      "7394.0",
      "7395.0",
      "7396.0",
      "7397.0",
      "7398.0",
      "7399.0",
      "7400.0",
      "7401.0",
      "7402.0",
      "7403.0",
      "7404.0",
      "7405.0",
      "7406.0",
      "7407.0",
      "7408.0",
      "7409.0",
      "7410.0",
      "7411.0",
      "7412.0",
      "7413.0",
      "7414.0",
      "7415.0",
      "7416.0",
      "7417.0",
      "7418.0",
      "7419.0",
      "7420.0",
      "7421.0",
      "7422.0",
      "7423.0",
      "7424.0",
      "7425.0",
      "7426.0",
      "7427.0",
      "7428.0",
      "7429.0",
      "7430.0",
      "7431.0",
      "7432.0",
      "7433.0",
      "7434.0",
      "7435.0",
      "7436.0",
      "7437.0",
      "7438.0",
      "7439.0",
      "7440.0",
      "7441.0",
      "7442.0",
      "7443.0",
      "7444.0",
      "7445.0",
      "7446.0",
      "7447.0",
      "7448.0",
      "7449.0",
      "7450.0",
      "7451.0",
      "7452.0",
      "7453.0",
      "7454.0",
      "7455.0",
      "7456.0",
      "7457.0",
      "7458.0",
      "7459.0",
      "7460.0",
      "7461.0",
      "7462.0",
      "7463.0",
      "7464.0",
      "7465.0",
      "7466.0",
      "7467.0",
      "7468.0",
      "7469.0",
      "7470.0",
      "7471.0",
      "7472.0",
      "7473.0",
      "7474.0",
      "7475.0",
      "7476.0",
      "7477.0",
      "7478.0",
      "7479.0",
      "7480.0",
      "7481.0",
      "7482.0",
      "7483.0",
      "7484.0",
      "7485.0",
      "7486.0",
      "7487.0",
      "7488.0",
      "7489.0",
      "7490.0",
      "7491.0",
      "7492.0",
      "7493.0",
      "7494.0",
      "7495.0",
      "7496.0",
      "7497.0",
      "7498.0",
      "7499.0",
      "7500.0",
      "7501.0",
      "7502.0",
      "7503.0",
      "7504.0",
      "7505.0",
      "7506.0",
      "7507.0",
      "7508.0",
      "7509.0",
      "7510.0",
      "7511.0",
      "7512.0",
      "7513.0",
      "7514.0",
      "7515.0",
      "7516.0",
      "7517.0",
      "7518.0",
      "7519.0",
      "7520.0",
      "7521.0",
      "7522.0",
      "7523.0",
      "7524.0",
      "7525.0",
      "7526.0",
      "7527.0",
      "7528.0",
      "7529.0",
      "7530.0",
      "7531.0",
      "7532.0",
      "7533.0",
      "7534.0",
      "7535.0",
      "7536.0",
      "7537.0",
      "7538.0",
      "7539.0",
      "7540.0",
      "7541.0",
      "7542.0",
      "7543.0",
      "7544.0",
      "7545.0",
      "7546.0",
      "7547.0",
      "7548.0",
      "7549.0",
      "7550.0",
      "7551.0",
      "7552.0",
      "7553.0",
      "7554.0",
      "7555.0",
      "7556.0",
      "7557.0",
      "7558.0",
      "7559.0",
      "7560.0",
      "7561.0",
      "7562.0",
      "7563.0",
      "7564.0",
      "7565.0",
      "7566.0",
      "7567.0",
      "7568.0",
      "7569.0",
      "7570.0",
      "7571.0",
      "7572.0",
      "7573.0",
      "7574.0",
      "7575.0",
      "7576.0",
      "7577.0",
      "7578.0",
      "7579.0",
      "7580.0",
      "7581.0",
      "7582.0",
      "7583.0",
      "7584.0",
      "7585.0",
      "7586.0",
      "7587.0",
      "7588.0",
      "7589.0",
      "7590.0",
      "7591.0",
      "7592.0",
      "7593.0",
      "7594.0",
      "7595.0",
      "7596.0",
      "7597.0",
      "7598.0",
      "7599.0",
      "7600.0",
      "7601.0",
      "7602.0",
      "7603.0",
      "7604.0",
      "7605.0",
      "7606.0",
      "7607.0",
      "7608.0",
      "7609.0",
      "7610.0",
      "7611.0",
      "7612.0",
      "7613.0",
      "7614.0",
      "7615.0",
      "7616.0",
      "7617.0",
      "7618.0",
      "7619.0",
      "7620.0",
      "7621.0",
      "7622.0",
      "7623.0",
      "7624.0",
      "7625.0",
      "7626.0",
      "7627.0",
      "7628.0",
      "7629.0",
      "7630.0",
      "7631.0",
      "7632.0",
      "7633.0",
      "7634.0",
      "7635.0",
      "7636.0",
      "7637.0",
      "7638.0",
      "7639.0",
      "7640.0",
      "7641.0",
      "7642.0",
      "7643.0",
      "7644.0",
      "7645.0",
      "7646.0",
      "7647.0",
      "7648.0",
      "7649.0",
      "7650.0",
      "7651.0",
      "7652.0",
      "7653.0",
      "7654.0",
      "7655.0",
      "7656.0",
      "7657.0",
      "7658.0",
      "7659.0",
      "7660.0",
      "7661.0",
      "7662.0",
      "7663.0",
      "7664.0",
      "7665.0",
      "7666.0",
      "7667.0",
      "7668.0",
      "7669.0",
      "7670.0",
      "7671.0",
      "7672.0",
      "7673.0",
      "7674.0",
      "7675.0",
      "7676.0",
      "7677.0",
      "7678.0",
      "7679.0",
      "7680.0",
      "7681.0",
      "7682.0",
      "7683.0",
      "7684.0",
      "7685.0",
      "7686.0",
      "7687.0",
      "7688.0",
      "7689.0",
      "7690.0",
      "7691.0",
      "7692.0",
      "7693.0",
      "7694.0",
      "7695.0",
      "7696.0",
      "7697.0",
      "7698.0",
      "7699.0",
      "7700.0",
      "7701.0",
      "7702.0",
      "7703.0",
      "7704.0",
      "7705.0",
      "7706.0",
      "7707.0",
      "7708.0",
      "7709.0",
      "7710.0",
      "7711.0",
      "7712.0",
      "7713.0",
      "7714.0",
      "7715.0",
      "7716.0",
      "7717.0",
      "7718.0",
      "7719.0",
      "7720.0",
      "7721.0",
      "7722.0",
      "7723.0",
      "7724.0",
      "7725.0",
      "7726.0",
      "7727.0",
      "7728.0",
      "7729.0",
      "7730.0",
      "7731.0",
      "7732.0",
      "7733.0",
      "7734.0",
      "7735.0",
      "7736.0",
      "7737.0",
      "7738.0",
      "7739.0",
      "7740.0",
      "7741.0",
      "7742.0",
      "7743.0",
      "7744.0",
      "7745.0",
      "7746.0",
      "7747.0",
      "7748.0",
      "7749.0",
      "7750.0",
      "7751.0",
      "7752.0",
      "7753.0",
      "7754.0",
      "7755.0",
      "7756.0",
      "7757.0",
      "7758.0",
      "7759.0",
      "7760.0",
      "7761.0",
      "7762.0",
      "7763.0",
      "7764.0",
      "7765.0",
      "7766.0",
      "7767.0",
      "7768.0",
      "7769.0",
      "7770.0",
      "7771.0",
      "7772.0",
      "7773.0",
      "7774.0",
      "7775.0",
      "7776.0",
      "7777.0",
      "7778.0",
      "7779.0",
      "7780.0",
      "7781.0",
      "7782.0",
      "7783.0",
      "7784.0",
      "7785.0",
      "7786.0",
      "7787.0",
      "7788.0",
      "7789.0",
      "7790.0",
      "7791.0",
      "7792.0",
      "7793.0",
      "7794.0",
      "7795.0",
      "7796.0",
      "7797.0",
      "7798.0",
      "7799.0",
      "7800.0",
      "7801.0",
      "7802.0",
      "7803.0",
      "7804.0",
      "7805.0",
      "7806.0",
      "7807.0",
      "7808.0",
      "7809.0",
      "7810.0",
      "7811.0",
      "7812.0",
      "7813.0",
      "7814.0",
      "7815.0",
      "7816.0",
      "7817.0",
      "7818.0",
      "7819.0",
      "7820.0",
      "7821.0",
      "7822.0",
      "7823.0",
      "7824.0",
      "7825.0",
      "7826.0",
      "7827.0",
      "7828.0",
      "7829.0",
      "7830.0",
      "7831.0",
      "7832.0",
      "7833.0",
      "7834.0",
      "7835.0",
      "7836.0",
      "7837.0",
      "7838.0",
      "7839.0",
      "7840.0",
      "7841.0",
      "7842.0",
      "7843.0",
      "7844.0",
      "7845.0",
      "7846.0",
      "7847.0",
      "7848.0",
      "7849.0",
      "7850.0",
      "7851.0",
      "7852.0",
      "7853.0",
      "7854.0",
      "7855.0",
      "7856.0",
      "7857.0",
      "7858.0",
      "7859.0",
      "7860.0",
      "7861.0",
      "7862.0",
      "7863.0",
      "7864.0",
      "7865.0",
      "7866.0",
      "7867.0",
      "7868.0",
      "7869.0",
      "7870.0",
      "7871.0",
      "7872.0",
      "7873.0",
      "7874.0",
      "7875.0",
      "7876.0",
      "7877.0",
      "7878.0",
      "7879.0",
      "7880.0",
      "7881.0",
      "7882.0",
      "7883.0",
      "7884.0",
      "7885.0",
      "7886.0",
      "7887.0",
      "7888.0",
      "7889.0",
      "7890.0",
      "7891.0",
      "7892.0",
      "7893.0",
      "7894.0",
      "7895.0",
      "7896.0",
      "7897.0",
      "7898.0",
      "7899.0",
      "7900.0",
      "7901.0",
      "7902.0",
      "7903.0",
      "7904.0",
      "7905.0",
      "7906.0",
      "7907.0",
      "7908.0",
      "7909.0",
      "7910.0",
      "7911.0",
      "7912.0",
      "7913.0",
      "7914.0",
      "7915.0",
      "7916.0",
      "7917.0",
      "7918.0",
      "7919.0",
      "7920.0",
      "7921.0",
      "7922.0",
      "7923.0",
      "7924.0",
      "7925.0",
      "7926.0",
      "7927.0",
      "7928.0",
      "7929.0",
      "7930.0",
      "7931.0",
      "7932.0",
      "7933.0",
      "7934.0",
      "7935.0",
      "7936.0",
      "7937.0",
      "7938.0",
      "7939.0",
      "7940.0",
      "7941.0",
      "7942.0",
      "7943.0",
      "7944.0",
      "7945.0",
      "7946.0",
      "7947.0",
      "7948.0",
      "7949.0",
      "7950.0",
      "7951.0",
      "7952.0",
      "7953.0",
      "7954.0",
      "7955.0",
      "7956.0",
      "7957.0",
      "7958.0",
      "7959.0",
      "7960.0",
      "7961.0",
      "7962.0",
      "7963.0",
      "7964.0",
      "7965.0",
      "7966.0",
      "7967.0",
      "7968.0",
      "7969.0",
      "7970.0",
      "7971.0",
      "7972.0",
      "7973.0",
      "7974.0",
      "7975.0",
      "7976.0",
      "7977.0",
      "7978.0",
      "7979.0",
      "7980.0",
      "7981.0",
      "7982.0",
      "7983.0",
      "7984.0",
      "7985.0",
      "7986.0",
      "7987.0",
      "7988.0",
      "7989.0",
      "7990.0",
      "7991.0",
      "7992.0",
      "7993.0",
      "7994.0",
      "7995.0",
      "7996.0",
      "7997.0",
      "7998.0",
      "7999.0"
    ],
    "annotated_answers": [
      "5999.0"
    ],
    "solution": "for i in range(2001, 8000):\n    if len(str(i)) == 4:\n        print(i)"
  },
  {
    "example_id": 382,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7200.0"
    ],
    "annotated_answers": [
      "800.0"
    ],
    "solution": "area = 3600\nlength = width = area / 2\nperimeter = 4 * length\nprint(perimeter)"
  },
  {
    "example_id": 383,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "784.0"
    ],
    "annotated_answers": [
      "49.0"
    ],
    "solution": "perimeter = 28\narea = perimeter**2\nprint(area)"
  },
  {
    "example_id": 384,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "168.0"
    ],
    "annotated_answers": [
      "24.0"
    ],
    "solution": "x = 3*4*14\nprint(x)"
  },
  {
    "example_id": 385,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "27.0"
    ],
    "annotated_answers": [
      "27.0"
    ],
    "solution": "def gcd(a, b):\n    while b!= 0:\n        a, b = b, a % b\n    return a\n\nprint(gcd(6**3, 3**6))"
  },
  {
    "example_id": 386,
    "selected_solution_index": 0,
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "from sympy import expand\nfrom sympy import S\nx = 1\nprint(expand(S(x)**(2**235423523)))"
  },
  {
    "example_id": 387,
    "selected_solution_index": 12,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "# Alina's number is a factor of 9\n# Joe's number is a factor of 12\n# If the number is not 1, then it must be a factor of 12\n# So, the number is 12\nprint(12)"
  },
  {
    "example_id": 388,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "red_cars, white_cars = 30 * 1/3, 30 * 0.5\nfour_door_cars, two_door_cars = red_cars, 30 - red_cars\nfour_door_red_cars = four_door_cars * 0.5\nprint(four_door_red_cars)"
  },
  {
    "example_id": 389,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "17.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "140.0"
    ],
    "solution": "import math\nimport sympy\n\n# define the variables\nhypotenuse = 12\nside_1 = 9\nside_2 = 8\n\n# use sympy to solve the equation\nside_3 = sympy.sqrt(hypotenuse**2 - side_1**2 - side_2**2)\n\n# compute the area\narea = (side_1 + side_2 + side_3) / 2\n\n# print the result\nprint(\"The area is\", area)"
  },
  {
    "example_id": 390,
    "selected_solution_index": 10,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1056.0"
    ],
    "annotated_answers": [
      "1056.0"
    ],
    "solution": "from math import gcd, lcm\n\ndef least_common_multiple(a, b):\n    return (a * b) // gcd(a, b)\n\ndef greatest_common_factor(a, b):\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    if a > b:\n        return greatest_common_factor(a - b, b)\n    else:\n        return greatest_common_factor(a, b - a)\n\nprint(least_common_multiple(22, 48) * greatest_common_factor(22, 48))"
  },
  {
    "example_id": 391,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "16.554054054054053"
    ],
    "annotated_answers": [
      "35.0"
    ],
    "solution": "area1 = 25\narea2 = 49\narea3 = area1 * area2 / (area1 + area2)\nprint(area3)"
  },
  {
    "example_id": 392,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "35.5"
    ],
    "annotated_answers": [
      "29.0"
    ],
    "solution": "counties = ['Aiken', 'Bamberg', 'Barnwell', 'Berkeley', 'Calhoun', 'Cherokee', 'Chesterfield', 'Colleton']\nmedian_students = [124, 17, 25, 583, 15, 19, 46, 64]\n\nimport numpy as np\nmedian = np.median(median_students)\nprint(median)"
  },
  {
    "example_id": 393,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "current_enrollment = 980\ncapacity = 1100\nrate = 0.05\nyears = 0\nwhile current_enrollment + (current_enrollment * rate) <= capacity:\n    current_enrollment += current_enrollment * rate\n    years += 1\nprint(years)"
  },
  {
    "example_id": 394,
    "selected_solution_index": 11,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "22.17294900221728"
    ],
    "annotated_answers": [
      "22.0"
    ],
    "solution": "bank_balance = 300\nwithdraw_usd = bank_balance/2\nwithdraw_pounds = withdraw_usd/1.64\nwithdraw_euros = withdraw_usd/1.32\ndiff_euros = withdraw_euros - withdraw_pounds\nprint(diff_euros)"
  },
  {
    "example_id": 395,
    "selected_solution_index": 10,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.25"
    ],
    "annotated_answers": [
      "87.0"
    ],
    "solution": "final_score = 99\ntotal_points = 90\ntests_taken = 6\nfinal_weight = 2\npoints_per_test = (total_points - final_score) / (tests_taken - final_weight)\nprint(points_per_test)"
  },
  {
    "example_id": 396,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "87.0"
    ],
    "annotated_answers": [
      "87.0"
    ],
    "solution": "gestation_period = 609\nweeks = gestation_period / 7\nprint(weeks)"
  },
  {
    "example_id": 397,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-10.0"
    ],
    "annotated_answers": [
      "-49.0"
    ],
    "solution": "x = (4 - 34) / 3\nprint(x)"
  },
  {
    "example_id": 398,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "45.0"
    ],
    "annotated_answers": [
      "45.0"
    ],
    "solution": "print(int((1421/7 + 47) / 50 * 9))"
  },
  {
    "example_id": 399,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25.0",
      "43.0",
      "62.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "def two_digit_positive_integer_with_product_12():\n    for i in range(10, 100):\n        if i % 10 == 0 or i // 10 == 0:\n            continue\n        if i % 10 * i // 10 == 12:\n            yield i\n\nprint(list(two_digit_positive_integer_with_product_12()))"
  },
  {
    "example_id": 400,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "36.0"
    ],
    "annotated_answers": [
      "26.0"
    ],
    "solution": "students_in_class = 18 + 13 + 5\nprint(students_in_class)"
  },
  {
    "example_id": 401,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "6.0",
      "9.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "n = 0\nwhile n < 10:\n    n += 1\n    if (42789000 + n) % 3 == 0:\n        print(n)"
  },
  {
    "example_id": 402,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "13.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "numbers = [-36, -29, -22, -15, -8, -1, 8, 15, 22, 29, 36, 41, 48]\nprint(len(numbers))"
  },
  {
    "example_id": 403,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "20.71231517720798"
    ],
    "annotated_answers": [
      "24.0"
    ],
    "solution": "import math\n\nhypotenuse = 25\naltitude = math.sqrt(hypotenuse**2 - 14**2)\nprint(altitude)"
  },
  {
    "example_id": 404,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "103.0"
    ],
    "annotated_answers": [
      "64.0"
    ],
    "solution": "hairstyles, eyebrows, eyes, ears, lips, shoes, clown_shoes = 3, 2, 2, 2, 2, 2, 2\ntotal_personalities = (hairstyles * (eyebrows * eyes * ears * lips * shoes + clown_shoes)) + 1\nprint(total_personalities)"
  },
  {
    "example_id": 405,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.5999999999999996"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "number = 12\npercentage = 0.2\npercentage_30 = 0.3\nresult = number * percentage_30\nprint(result)"
  },
  {
    "example_id": 406,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.5999999999999996"
    ],
    "annotated_answers": [
      "40.0"
    ],
    "solution": "# The number of students in the Math Club\nmath_club = 0.3 * 0.8 * 15\nprint(math_club)"
  },
  {
    "example_id": 407,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "30.0"
    ],
    "annotated_answers": [
      "100.0"
    ],
    "solution": "max_steps = 10\ndads_steps = 30\ntotal_steps = max_steps * 3\nprint(total_steps)"
  },
  {
    "example_id": 408,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "print(8//2//2 + 6)"
  },
  {
    "example_id": 409,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "40.00000000000001"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "from math import sqrt\n\n# Area of rectangle ABCD\narea = 40\n\n# Midpoint of BC\nmidpoint = sqrt(area/2)\n\n# Area of MBCN\narea = midpoint * (midpoint + sqrt(area - midpoint**2))\n\nprint(area)"
  },
  {
    "example_id": 410,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "127.0"
    ],
    "annotated_answers": [
      "133.0"
    ],
    "solution": "import math\nalpha = 39\nbeta = 14\ngamma = 180 - alpha - beta\nprint(gamma)"
  },
  {
    "example_id": 411,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "a = 317**3\nb = 8**3\nc = 2**(3**2) + 317**3\nprint(a+b-c)"
  },
  {
    "example_id": 412,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "225.0"
    ],
    "annotated_answers": [
      "-15.0"
    ],
    "solution": "number = 15\nprint(number**2)"
  },
  {
    "example_id": 413,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "45.0"
    ],
    "annotated_answers": [
      "90.0"
    ],
    "solution": "number_of_meals = 10\ncombinations = number_of_meals * (number_of_meals - 1) / 2\nprint(combinations)"
  },
  {
    "example_id": 414,
    "selected_solution_index": 13,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "97969.0"
    ],
    "annotated_answers": [
      "97969.0"
    ],
    "solution": "print((97969 ** 0.5) ** 2)"
  },
  {
    "example_id": 415,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "11015.0"
    ],
    "annotated_answers": [
      "891.0"
    ],
    "solution": "x = 11*1000 + 11\ny = 11^2 - 11\nprint(x - y)"
  },
  {
    "example_id": 416,
    "selected_solution_index": 11,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "98.4"
    ],
    "annotated_answers": [
      "78.0"
    ],
    "solution": "scores = [100, 100, 99, 98, 95]\nmisplaced_score = sum(scores) / len(scores)\nprint(misplaced_score)"
  },
  {
    "example_id": 417,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "11.313708498984761",
      "9.237604307034012"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "import math\na = math.sqrt(16**2 / 2)\nb = math.sqrt(16**2 / 3)\nprint(\"The length of the side of the octagon is:\", a)\nprint(\"The length of the side of the hexagon is:\", b)"
  },
  {
    "example_id": 418,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "260.0"
    ],
    "annotated_answers": [
      "260.0"
    ],
    "solution": "number_of_letters = 26\nnumber_of_digits = 10\nnumber_of_license_plates = number_of_letters * number_of_digits\nprint(number_of_license_plates)"
  },
  {
    "example_id": 419,
    "selected_solution_index": 10,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "979.0"
    ],
    "annotated_answers": [
      "291.0"
    ],
    "solution": "from sympy import isprime\n\ndef prime_sum(n):\n    for i in range(10, n + 1):\n        if isprime(i) and isprime(n - i):\n            return i * (n - i)\n\nprint(prime_sum(100))"
  },
  {
    "example_id": 420,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "# Four times the smaller number is 60 less than twice the larger number\nsmaller = 15 - 60 / 4\nlarger = 2 * smaller\nprint(larger)"
  },
  {
    "example_id": 421,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "bill_time = 400 / 50\nsam_time = 400 / 40\nprint(sam_time - bill_time)"
  },
  {
    "example_id": 422,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-9.875"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "diameter = 16\narea = diameter * diameter * 3.14\nradius = diameter / 2\narea_decrease = area - 48 * 3.14\nradius_decrease = 1 / radius\nwhile area_decrease > 0:\n    area_decrease -= radius_decrease * radius_decrease * 3.14\n    radius_decrease -= 1\nprint(radius_decrease)"
  },
  {
    "example_id": 423,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "length_AB = 2 + 3 + 2\nprint(length_AB)"
  },
  {
    "example_id": 424,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "18.0"
    ],
    "annotated_answers": [
      "126.0"
    ],
    "solution": "bags = 18\nremainder = 18 % 42\nif remainder == 0:\n    print(42)\nelse:\n    print(bags)"
  },
  {
    "example_id": 425,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "x = 3\nprint(x)"
  },
  {
    "example_id": 426,
    "selected_solution_index": 10,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "120.0"
    ],
    "annotated_answers": [
      "120.0"
    ],
    "solution": "# Area = (Base * Height) / 2\nbase = 12\nheight = 20\narea = (base * height) / 2\nprint(area)"
  },
  {
    "example_id": 427,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "60.0"
    ],
    "solution": "from math import factorial\nn = 3\nm = 5\npermutations = factorial(m) / (factorial(m-n) * factorial(n))\nprint(permutations)"
  },
  {
    "example_id": 428,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.6"
    ],
    "annotated_answers": [
      "0.6"
    ],
    "solution": "print(round(4/7, 1))"
  },
  {
    "example_id": 429,
    "selected_solution_index": 11,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "from math import factorial\nfrom sympy import primefactors\n\nn = 20\nprint(len(set(primefactors(factorial(n)))))"
  },
  {
    "example_id": 430,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3720.0"
    ],
    "annotated_answers": [
      "3720.0"
    ],
    "solution": "print(3.72 * 1000)"
  },
  {
    "example_id": 431,
    "selected_solution_index": 13,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "n = 25\n# count the number of distinct prime factors\ncount = 0\nfor i in range(2, int(n ** 0.5) + 1):\n    if n % i == 0:\n        count += 1\n        while n % i == 0:\n            n //= i\nprint(count)"
  },
  {
    "example_id": 432,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "20.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "green_blue_ratio = 3\ntotal_marbles = 60\nblue_marbles = total_marbles // green_blue_ratio\nprint(blue_marbles)"
  },
  {
    "example_id": 433,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0000000000000004"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "import math\nx = math.sqrt(2)\nprint(x**2)"
  },
  {
    "example_id": 434,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "75.0"
    ],
    "annotated_answers": [
      "180.0"
    ],
    "solution": "frogs_captured = 45\nfrogs_captured_previous_day = 10\nfrogs_in_pond_previous_day = 40\nfrogs_in_pond = frogs_in_pond_previous_day + frogs_captured - frogs_captured_previous_day\nprint(frogs_in_pond)"
  },
  {
    "example_id": 435,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.8499999999999996"
    ],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "numbers = [10, 4, 5, 20]\naverage = 10.6\nnumber = average - sum(numbers) / len(numbers)\nprint(number)"
  },
  {
    "example_id": 436,
    "selected_solution_index": 11,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "from sympy.ntheory import primefactors\n\nprint(len(primefactors(117*119)))"
  },
  {
    "example_id": 437,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "16043.0"
    ],
    "annotated_answers": [
      "157.0"
    ],
    "solution": "from math import floor\n\nn = 2500\nperfect_squares = [i**2 for i in range(1, n+1)]\nsequence = ''.join(map(str, perfect_squares))\nprint(len(sequence))"
  },
  {
    "example_id": 438,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "23.0"
    ],
    "annotated_answers": [
      "23.0"
    ],
    "solution": "import math\ndef greatest_prime_factor(n):\n    if n == 2:\n        return 2\n    if n % 2 == 0:\n        return greatest_prime_factor(n / 2)\n    for i in range(int(math.sqrt(n)), 1, -1):\n        if n % i == 0 and is_prime(i):\n            return i\n    return 1\n\ndef is_prime(n):\n    if n == 2 or n == 3:\n        return True\n    if n == 1 or n % 2 == 0:\n        return False\n    for i in range(int(math.sqrt(n))):\n        if n % (i + 2) == 0:\n            return False\n    return True\n\nprint(greatest_prime_factor(3105))"
  },
  {
    "example_id": 439,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.686291501015239"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "import math\n\ndef rect_area(w, h):\n    return w * h\n\ndef diag_len(w, h):\n    return math.sqrt(w**2 + h**2)\n\ndef shaded_area(w, h):\n    return rect_area(w, h) - diag_len(w, h) * 2\n\nw = 4\nh = 4\n\nprint(shaded_area(w, h))"
  },
  {
    "example_id": 440,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "180.0"
    ],
    "annotated_answers": [
      "180.0"
    ],
    "solution": "print(182 + 3*7 - 64//2 + 27//3)"
  },
  {
    "example_id": 441,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.6981317007977318"
    ],
    "annotated_answers": [
      "140.0"
    ],
    "solution": "import math\nx = math.radians(40)\nprint(x)"
  },
  {
    "example_id": 442,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-40.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "# 36 people brought yoga mats\n# 26 people brought eco-friendly water bottles\n# 20 people brought both yoga mats and water bottles\n# 42 people in total\n# total people who had neither yoga mat nor water bottle = 42 - 36 - 26 - 20\ntotal_people_without_mat_and_bottle = 42 - 36 - 26 - 20\nprint(total_people_without_mat_and_bottle)"
  },
  {
    "example_id": 443,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "20.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "blue_marbles = 5\ntotal_marbles = 20\nproportion_blue = blue_marbles/total_marbles\ndesired_proportion = 1/2\nadd_blue_marbles = int(total_marbles * (desired_proportion - proportion_blue) / proportion_blue)\nprint(add_blue_marbles)"
  },
  {
    "example_id": 444,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "66.0"
    ],
    "annotated_answers": [
      "72.0"
    ],
    "solution": "pins_left = 66\nhalf = 1/2\none_third = 1/3\npins_given = half * one_third\npins_given_to_brother = pins_given\npins_left_after_giving_to_brother = pins_left - pins_given_to_brother\ntotal_pins = pins_left_after_giving_to_brother + pins_given_to_brother\nprint(total_pins)"
  },
  {
    "example_id": 445,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.0",
      "15.0",
      "18.0",
      "21.0",
      "24.0",
      "27.0",
      "30.0",
      "33.0",
      "36.0",
      "39.0",
      "42.0",
      "45.0",
      "48.0",
      "51.0",
      "54.0",
      "57.0",
      "60.0",
      "63.0",
      "66.0",
      "69.0",
      "72.0",
      "75.0",
      "78.0",
      "81.0",
      "84.0",
      "87.0",
      "90.0",
      "93.0",
      "96.0",
      "99.0"
    ],
    "annotated_answers": [
      "264.0"
    ],
    "solution": "# Use the for loop to generate all the positive two-digit integers\nfor i in range(10, 100):\n    # Use the modulo operator to check if one of the digits is three times the other\n    if i % 3 == 0:\n        print(i)\n\n# The sum of all the positive two-digit integers where one of the digits is three times the other is 210"
  },
  {
    "example_id": 446,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "5.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "n1 = 3\nn2 = 5\nprint(n1, n2)"
  },
  {
    "example_id": 447,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-18.0"
    ],
    "annotated_answers": [
      "-18.0"
    ],
    "solution": "x = 2 + 2 * 3\ny = 3 - 21\nprint(y)"
  },
  {
    "example_id": 448,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "96.0"
    ],
    "annotated_answers": [
      "96.0"
    ],
    "solution": "perimeter = 8*3 + 8*4 + 8*5\nprint(perimeter)"
  },
  {
    "example_id": 449,
    "selected_solution_index": 14,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.5208333333333334"
    ],
    "annotated_answers": [
      "75.0"
    ],
    "solution": "print(25/4/12)"
  },
  {
    "example_id": 450,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "27.0"
    ],
    "annotated_answers": [
      "117.0"
    ],
    "solution": "inches = 3/4 * 36\nprint(inches)"
  },
  {
    "example_id": 451,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1080.0"
    ],
    "annotated_answers": [
      "1080.0"
    ],
    "solution": "# seconds = hours * 3600\nseconds = 0.30 * 3600\nprint(seconds)"
  },
  {
    "example_id": 452,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "42.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "north = 19\nwest = 16\nsouth = 3\neast = 4\ntotal = north + west + south + east\nprint(total)"
  },
  {
    "example_id": 453,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "walking_speed = 1.7\ndistance = 17\ntime = distance / walking_speed\nprint(time)"
  },
  {
    "example_id": 454,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "3.0",
      "4.0",
      "6.0",
      "12.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "n = 1\nwhile n <= 12:\n    if 12 % n == 0:\n        print(n)\n    n += 1"
  },
  {
    "example_id": 455,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "40320.0"
    ],
    "annotated_answers": [
      "336.0"
    ],
    "solution": "from math import factorial\nn = 8\nways = factorial(n)\nprint(ways)"
  },
  {
    "example_id": 456,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "210.0",
      "12032.113697747287"
    ],
    "annotated_answers": [
      "132.0"
    ],
    "solution": "from math import degrees\n\n# Degree measures of interior angles\nangles = [210, 210, 198, 198, 202, 202, 206]\n\n# Degree measure of largest interior angle\nprint(max(angles))\n\n# Degree measure of largest interior angle in degrees\nprint(degrees(max(angles)))"
  },
  {
    "example_id": 457,
    "selected_solution_index": 12,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.0",
      "3.0",
      "10.0"
    ],
    "annotated_answers": [
      "352.0"
    ],
    "solution": "import sympy\nx = sympy.symbols('x')\nlength = 3*x + 10\nwidth = x + 12\nperimeter = 76\narea = length*width\nprint(area)"
  },
  {
    "example_id": 458,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "45.0"
    ],
    "annotated_answers": [
      "45.0"
    ],
    "solution": "print(9000 / 200)"
  },
  {
    "example_id": 459,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.9999999999999996"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a = 42\nprint((1/a)**4 * 2 * a**4 + a**(2+1-3))"
  },
  {
    "example_id": 460,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "32.0"
    ],
    "solution": "start_cones = 72\nnoon_cones = start_cones / 3\nend_cones = noon_cones / 3\nprint(end_cones)"
  },
  {
    "example_id": 461,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2560.0"
    ],
    "annotated_answers": [
      "2560.0"
    ],
    "solution": "population_at_1 = 10\npopulation_at_9 = population_at_1 * 2 ** (9 - 1)\nprint(population_at_9)"
  },
  {
    "example_id": 462,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "192.0"
    ],
    "annotated_answers": [
      "192.0"
    ],
    "solution": "print(2**(2**3) - (2**2)**3)"
  },
  {
    "example_id": 463,
    "selected_solution_index": 11,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "122.5"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "rate = 1.5\ntime = 15\ntemperature = 100\ntime_next_hour = 2\ntemperature_next_hour = temperature + rate * time\nprint(temperature_next_hour)"
  },
  {
    "example_id": 464,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "# Number of girls is a multiple of 13.\n# Number of boys is not a multiple of 13.\n# More girls than boys attend the meeting.\n# Therefore, the number of girls is greater than the number of boys.\ngirls = 35\nboys = 35 - girls\nprint(boys)"
  },
  {
    "example_id": 465,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "447.0"
    ],
    "annotated_answers": [
      "448.0"
    ],
    "solution": "n = 1341\nn = int(n)\nif n % 3 == 0:\n    largest = int(n / 3)\nelse:\n    largest = int((n / 3) + 1)\nprint(largest)"
  },
  {
    "example_id": 466,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "n = 10\nk = 2\nn_guard = n // k\nprint(n_guard)"
  },
  {
    "example_id": 467,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "310.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "# red, blue, yellow = 4, 6, 10\nn_pots = 600\nn_red, n_blue, n_yellow = n_pots // 4, n_pots // 6, n_pots // 10\nn_different_colors = n_red + n_blue + n_yellow\nprint(n_different_colors)"
  },
  {
    "example_id": 468,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "a, b, c = 1, 2, 3\nabc = a * b * c\nmean = (a + b + c) / 3\nprint(max(a, b, c))"
  },
  {
    "example_id": 469,
    "selected_solution_index": 10,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "62.50000000000001"
    ],
    "annotated_answers": [
      "50.0"
    ],
    "solution": "import math\n\ndef area(length, width):\n    return length * width\n\nlength = 5 * math.sqrt(5)\nwidth = length / 2\nprint(area(length, width))"
  },
  {
    "example_id": 470,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "240.0"
    ],
    "annotated_answers": [
      "240.0"
    ],
    "solution": "shirts, pants, hats = 5, 6, 8\noutfits = shirts * pants * hats\nprint(outfits)"
  },
  {
    "example_id": 471,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "104.0"
    ],
    "annotated_answers": [
      "60.0"
    ],
    "solution": "witches = 6\nsorcerers = 10\nhandshakes = (witches * (sorcerers - 1)) + (sorcerers * (witches - 1))\nprint(handshakes)"
  },
  {
    "example_id": 472,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1001.0"
    ],
    "annotated_answers": [
      "1001.0"
    ],
    "solution": "for i in range(1000, 9999):\n    if i % 7 == 0:\n        print(i)\n        break"
  },
  {
    "example_id": 473,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "420.0"
    ],
    "annotated_answers": [
      "420.0"
    ],
    "solution": "print(round(10.0000198 * 5.9999985401 * 6.9999852))"
  },
  {
    "example_id": 474,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "486.0"
    ],
    "annotated_answers": [
      "165.0"
    ],
    "solution": "sum_of_positive_two_digit_integers = 0\nfor i in range(10, 100):\n    if i % 10 == 4:\n        sum_of_positive_two_digit_integers += i\nprint(sum_of_positive_two_digit_integers)"
  },
  {
    "example_id": 475,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "good_workers = 3\nbad_workers = 36 / 3 - 12 / 3\nprint(bad_workers)"
  },
  {
    "example_id": 476,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "24.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "picture_area = 2\npicture_length = picture_width = 2\nquilt_length = 2 * picture_length\nquilt_width = 3 * picture_width\nquilt_area = quilt_length * quilt_width\nprint(quilt_area)"
  },
  {
    "example_id": 477,
    "selected_solution_index": 13,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5937.0"
    ],
    "annotated_answers": [
      "5937.0"
    ],
    "solution": "apples_picked = 15832\nhours_picked = 8\napples_picked_in_3_hours = apples_picked / hours_picked * 3\nprint(apples_picked_in_3_hours)"
  },
  {
    "example_id": 478,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "scoop_types = 4\nscoop_type_combinations = 4\nscoop_types_stacked = 3\nscoop_type_combinations_stacked = 3\nscoop_type_combinations_stacked_on_bottom = 1\n\nprint(scoop_type_combinations - scoop_type_combinations_stacked_on_bottom)"
  },
  {
    "example_id": 479,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "print((-5)**3 + (-2)**3 + 2**3 + 5**3)"
  },
  {
    "example_id": 480,
    "selected_solution_index": 12,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = 5\ny = 5\nresult = x / y\nprint(result)"
  },
  {
    "example_id": 481,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "distance = 4\nscale = 0.5\nkilometers = distance / scale\nprint(kilometers)"
  },
  {
    "example_id": 482,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25000.0"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "circumference_km = 40000\ndistance_to_travel_km = 1000000000\ntrips = distance_to_travel_km / circumference_km\nprint(trips)"
  },
  {
    "example_id": 483,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-83.0"
    ],
    "annotated_answers": [
      "45.0"
    ],
    "solution": "original_pennies = 40\nnew_pennies = 42\n\ndef arrange(n):\n    return n * (n + 1) // 2\n\nprint(arrange(original_pennies) - arrange(new_pennies))"
  },
  {
    "example_id": 484,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "brass_copper = 80\nbrass_zinc = 20\ntrumpet_copper = 48\ntrumpet_zinc = brass_zinc / brass_copper * trumpet_copper\nprint(trumpet_zinc)"
  },
  {
    "example_id": 485,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "64.0"
    ],
    "annotated_answers": [
      "64.0"
    ],
    "solution": "print(92 - 45 / (3 * 5) - 5 ** 2)"
  },
  {
    "example_id": 486,
    "selected_solution_index": 10,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.125"
    ],
    "annotated_answers": [
      "5.5"
    ],
    "solution": "def fold_length(initial_length):\n    for _ in range(2):\n        initial_length /= 2\n    return initial_length\n\nprint(fold_length(8.5))"
  },
  {
    "example_id": 487,
    "selected_solution_index": 12,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "-89.0"
    ],
    "solution": "x = 30\nM = 1\nN = 1\nprint(M+N)"
  },
  {
    "example_id": 488,
    "selected_solution_index": 14,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = 3\nprint(x)"
  },
  {
    "example_id": 489,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "quarters = 1\nnickels = 1\npennies = 1\nsums = [quarters + nickels, quarters + pennies, nickels + pennies]\nprint(sums)"
  },
  {
    "example_id": 490,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "868.7"
    ],
    "annotated_answers": [
      "868.8"
    ],
    "solution": "a = 543.55\nb = 25.23\nc = 299.98\nprint(round(a, 1) + round(b, 1) + round(c, 1))"
  },
  {
    "example_id": 491,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "507.0"
    ],
    "annotated_answers": [
      "507.0"
    ],
    "solution": "# Find the smallest multiple of 13 greater than 500\n# The smallest multiple is 13 * 39\nprint(13 * 39)"
  },
  {
    "example_id": 492,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "729.0"
    ],
    "annotated_answers": [
      "27.0"
    ],
    "solution": "print(9**3)"
  },
  {
    "example_id": 493,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "print(2**5 - 5**2)"
  },
  {
    "example_id": 494,
    "selected_solution_index": 10,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "import sympy\na, b, c = sympy.symbols('a b c')\ns = (a+b+c)/2\narea = sympy.sqrt(s*(s-a)*(s-b)*(s-c))\nprint(area)"
  },
  {
    "example_id": 495,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "27.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "x = (143 - 8) / 5\nprint(x)"
  },
  {
    "example_id": 496,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0",
      "16.0",
      "25.0",
      "36.0",
      "49.0",
      "64.0",
      "81.0",
      "100.0",
      "121.0",
      "144.0",
      "169.0",
      "196.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "import math\nn = 5\nwhile n < 211:\n    if math.sqrt(n) % 1 == 0:\n        print(n)\n    n += 1"
  },
  {
    "example_id": 497,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "print(3 * 3 + 3 * (3 + 3) - 3 ** 3)"
  },
  {
    "example_id": 498,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "def is_perfect_square(n):\n    return int(n ** 0.5) ** 2 == n\n\ndef min_perfect_square_terms(n):\n    if is_perfect_square(n):\n        return 1\n    for i in range(2, int(n ** 0.5)):\n        if is_perfect_square(n - i ** 2):\n            return 2\n    return 3\n\nprint(min_perfect_square_terms(49))"
  },
  {
    "example_id": 499,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "24.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "import math\n\ndef area(rectangle):\n    return rectangle[0] * rectangle[1]\n\ndef perimeter(rectangle):\n    return 2 * (rectangle[0] + rectangle[1])\n\ndef diagonal(rectangle):\n    return math.sqrt(perimeter(rectangle)**2 - (rectangle[0] - rectangle[1])**2)\n\nrectangle = [6, 4]\nprint(area(rectangle))"
  },
  {
    "example_id": 500,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1500000.0"
    ],
    "annotated_answers": [
      "1250.0"
    ],
    "solution": "# 1992\nlira_to_dollar = 1.50\n# 1992\nlira = 1000000\n# 1992\ndollar = lira * lira_to_dollar\nprint(dollar)"
  },
  {
    "example_id": 501,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.21"
    ],
    "annotated_answers": [
      "1.21"
    ],
    "solution": "numbers = [0.78, 0.12, 1.33, 1.328]\nprint(max(numbers) - min(numbers))"
  },
  {
    "example_id": 502,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "99.36"
    ],
    "annotated_answers": [
      "108.0"
    ],
    "solution": "width = 0.4\narea = 100\ndark_gray = (width*2)**2\nlight_gray = area - dark_gray\nprint(light_gray)"
  },
  {
    "example_id": 503,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "47.5"
    ],
    "annotated_answers": [
      "37.0"
    ],
    "solution": "x = 81/2 + 7\nprint(x)"
  },
  {
    "example_id": 504,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "45.0"
    ],
    "annotated_answers": [
      "45.0"
    ],
    "solution": "a, b = 7, 13\neven_positive_integers = (a * b) // 2\nprint(even_positive_integers)"
  },
  {
    "example_id": 505,
    "selected_solution_index": 13,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "390.0",
      "390.0"
    ],
    "annotated_answers": [
      "400.0"
    ],
    "solution": "juniors_drink, seniors_drink = 1500, 450\njuniors_day, seniors_day = 5, 5\ntotal_cartons = juniors_drink + seniors_drink\njuniors_day_cartons, seniors_day_cartons = total_cartons/juniors_day, total_cartons/seniors_day\nprint(juniors_day_cartons, seniors_day_cartons)"
  },
  {
    "example_id": 506,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.041666666666666664"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "elephant_speed, lion_speed = 19, 24\ndistance = 1\ntime = distance / lion_speed\nprint(time)"
  },
  {
    "example_id": 507,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "48.0"
    ],
    "annotated_answers": [
      "120.0"
    ],
    "solution": "lcm = 240\ngcd = 24\nif 48 in [lcm, gcd]:\n    print('48 is in lcm or gcd')\nelse:\n    print('48 is not in lcm or gcd')"
  },
  {
    "example_id": 508,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "30.0"
    ],
    "annotated_answers": [
      "200.0"
    ],
    "solution": "area = 60 / 2\nprint(area)"
  },
  {
    "example_id": 509,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2100.0"
    ],
    "annotated_answers": [
      "2100.0"
    ],
    "solution": "import math\n\ndef square_root(x):\n    return math.sqrt(x)\n\n\ndef product(numbers):\n    result = 1\n    for number in numbers:\n        result *= number\n    return result\n\n\nprint(square_root(product([5, 10, 14, 21, 15, 20])))"
  },
  {
    "example_id": 510,
    "selected_solution_index": 11,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "16.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "a_options = 2\nb_options = 4\nc_options = 2\ntotal_options = a_options * b_options * c_options\nprint(total_options)"
  },
  {
    "example_id": 511,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "18.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "flagpole_length = 15\nwoman_length = 5\nshadow_length = 6\nshadow_length_ratio = shadow_length / woman_length\nshadow_length_flagpole = shadow_length_ratio * flagpole_length\nprint(shadow_length_flagpole)"
  },
  {
    "example_id": 512,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7004.0"
    ],
    "annotated_answers": [
      "7004.0"
    ],
    "solution": "a = 3 * 11 * 13 * 21\nb = 2005\nprint(a-b)"
  },
  {
    "example_id": 513,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "24.0"
    ],
    "annotated_answers": [
      "120.0"
    ],
    "solution": "hour_angle = 30\nminute_angle = 6\nangle = hour_angle - minute_angle\nprint(angle)"
  },
  {
    "example_id": 514,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "20.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "pints_in_quart = 2\nquarts_in_gallon = 4\nmilk_in_gallons = 2.5\nmilk_in_pints = milk_in_gallons * quarts_in_gallon * pints_in_quart\nprint(milk_in_pints)"
  },
  {
    "example_id": 515,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "249921.46018366027"
    ],
    "annotated_answers": [
      "54000.0"
    ],
    "solution": "from math import pi, sqrt\n\n# plot size\nside_length = 500\n\n# watered circular area\ncircular_area = pi * (5)**2\n\n# total area\ntotal_area = side_length**2\n\n# unwatered area\nunwatered_area = total_area - circular_area\n\nprint(unwatered_area)"
  },
  {
    "example_id": 516,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "wands_per_wand = 6\nrands_per_rand = 4\nfands_per_fand = 8\nfands_per_wand = wands_per_wand * rands_per_rand / fands_per_fand\nprint(fands_per_wand)"
  },
  {
    "example_id": 517,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "from math import sqrt\ndef largest_prime_factor(n):\n    if n == 1:\n        return 1\n    i = int(sqrt(n))\n    while i >= 2:\n        if n % i == 0:\n            return i\n        i -= 1\n    return 1\nprint(largest_prime_factor(78))"
  },
  {
    "example_id": 518,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "16.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "print(((100 ** 0.5) - (36 ** 0.5)) ** 2)"
  },
  {
    "example_id": 519,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "15.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "length = 6\nwidth = 10\nnew_length = 9\nproportional_width = new_length / length * width\nprint(proportional_width)"
  },
  {
    "example_id": 520,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "76.0"
    ],
    "annotated_answers": [
      "76.0"
    ],
    "solution": "print(15 + 8**2 - 3)"
  },
  {
    "example_id": 521,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.5"
    ],
    "annotated_answers": [
      "4.5"
    ],
    "solution": "print(9/2)"
  },
  {
    "example_id": 522,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-7.0"
    ],
    "annotated_answers": [
      "-7.0"
    ],
    "solution": "print(-49/7)"
  },
  {
    "example_id": 523,
    "selected_solution_index": 14,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "111.0"
    ],
    "annotated_answers": [
      "111.0"
    ],
    "solution": "# We know that a positive multiple of 9 is of the form 9k\n# where k is an integer. We need to find the integer k such that 9k < 1000.\n# We can do this by dividing 1000 by 9 and rounding up.\n# The result is 111.\n# Therefore, there are 111 positive multiples of 9 less than 1000.\nprint(111)"
  },
  {
    "example_id": 524,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "16.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "# mean = sum of integers / number of integers\nmean = 21\nsmallest = mean - 5\nprint(smallest)"
  },
  {
    "example_id": 525,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "13.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "r = 24/3 + 5\nprint(r)"
  },
  {
    "example_id": 526,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "import math\nprint(math.sqrt(28 + math.sqrt(1296)))"
  },
  {
    "example_id": 527,
    "selected_solution_index": 11,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "factors = [1, 2, 3, 4, 6, 12]\nnumbers = [1, 2, 3, 4, 6]\ntotal = len(numbers)\nprint(total)"
  },
  {
    "example_id": 528,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2520.0"
    ],
    "annotated_answers": [
      "2520.0"
    ],
    "solution": "from math import gcd\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef least_common_multiple(numbers):\n    if len(numbers) == 2:\n        return lcm(numbers[0], numbers[1])\n    else:\n        return lcm(numbers[0], least_common_multiple(numbers[1:]))\n\nprint(least_common_multiple(range(1, 11)))"
  },
  {
    "example_id": 529,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2400.0"
    ],
    "annotated_answers": [
      "300.0"
    ],
    "solution": "swimmer_speed = 2\ndolphin_speed = 8\nrace_time = 400\ndistance_to_finish = race_time * swimmer_speed\ndistance_dolphin_swam = race_time * dolphin_speed\nprint(distance_to_finish - distance_dolphin_swam)"
  },
  {
    "example_id": 530,
    "selected_solution_index": 11,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.25",
      "50.0"
    ],
    "annotated_answers": [
      "90.0"
    ],
    "solution": "price_bright, price_fresh, price_glow = 75, 1, 50\nvolume_bright, volume_fresh, volume_glow = 1.5, 1, 1.25\n\n# volume_glow = (volume_bright - volume_fresh) / (price_bright - price_fresh)\n# volume_glow = 1.25\n\n# price_glow = (volume_glow * (price_bright - price_fresh)) + price_fresh\n# price_glow = 50\n\nprint(volume_glow)\nprint(price_glow)"
  },
  {
    "example_id": 531,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "231.0"
    ],
    "annotated_answers": [
      "220.0"
    ],
    "solution": "people = 22\nmax_handshakes = people * (people - 1) / 2\nprint(max_handshakes)"
  },
  {
    "example_id": 532,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1390.0"
    ],
    "annotated_answers": [
      "1251.0"
    ],
    "solution": "music_students = 2/3 * 834\ntotal_students = 834 + music_students\nprint(total_students)"
  },
  {
    "example_id": 533,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "nums = [2500 + i for i in range(10)]\nprint(len(nums))"
  },
  {
    "example_id": 534,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "# The number ends in 0 and its sum of digits is divisible by 3\n# 2, 3, 4, 5, 6, 8, 9 cannot divide it\nprint(3)"
  },
  {
    "example_id": 535,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "402.0"
    ],
    "solution": "my_list = [2008, 2003, 1998, 2005, 8, 3]\nprint(len(my_list))"
  },
  {
    "example_id": 536,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2006.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "from math import log10, floor\nn = 2007\nfrac = 1/7\nlog = log10(frac)\nprint(floor(log + n))"
  },
  {
    "example_id": 537,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0",
      "99.0",
      "7.0",
      "99.0",
      "11.0",
      "99.0",
      "13.0",
      "99.0",
      "17.0",
      "99.0",
      "19.0",
      "99.0",
      "23.0",
      "99.0",
      "25.0",
      "99.0",
      "29.0",
      "99.0",
      "31.0",
      "99.0",
      "35.0",
      "99.0",
      "37.0",
      "99.0",
      "41.0",
      "99.0",
      "43.0",
      "99.0",
      "47.0",
      "99.0",
      "49.0",
      "99.0",
      "53.0",
      "99.0",
      "55.0",
      "99.0",
      "59.0",
      "99.0",
      "61.0",
      "99.0",
      "65.0",
      "99.0",
      "67.0",
      "99.0",
      "71.0",
      "99.0",
      "73.0",
      "99.0",
      "77.0",
      "99.0",
      "79.0",
      "99.0",
      "83.0",
      "99.0",
      "85.0",
      "99.0",
      "89.0",
      "99.0",
      "91.0",
      "99.0",
      "95.0",
      "99.0",
      "97.0",
      "99.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "import math\nfor p in range(2, 100):\n    if math.gcd(p, 6) == 1:\n        for q in range(2, 100):\n            if math.gcd(q, 6) == 1 and p+q == 6:\n                print(p, q)\n                break\n            if q == 99:\n                print(p, q)\n                break"
  },
  {
    "example_id": 538,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.0",
      "24.0",
      "36.0",
      "48.0",
      "60.0",
      "72.0",
      "84.0",
      "96.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "for i in range(1, 100):\n    if i % 3 == 0 and i % 4 == 0:\n        print(i)"
  },
  {
    "example_id": 539,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "x = -1\ntotal = 0\nfor i in range(2011):\n    total += x**i\nprint(total)"
  },
  {
    "example_id": 540,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "50.0"
    ],
    "annotated_answers": [
      "49.0"
    ],
    "solution": "# count the number of positive integers less than 500 that are equal to 5 times an even integer\ncount = 0\nfor i in range(0, 500, 2):\n    if i * 5 < 500:\n        count += 1\nprint(count)"
  },
  {
    "example_id": 541,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "108.0"
    ],
    "annotated_answers": [
      "333.0"
    ],
    "solution": "for i in range(100, 1000):\n    if i % 9 == 0:\n        print(i)\n        break"
  },
  {
    "example_id": 542,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "27.0"
    ],
    "annotated_answers": [
      "27.0"
    ],
    "solution": "# Use the formula for a regular polygon\n# The number of sides is n\n# The number of interior diagonals is n(n-3)/2\nn = 9\nprint(n * (n - 3) // 2)"
  },
  {
    "example_id": 543,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "68.0"
    ],
    "annotated_answers": [
      "68.0"
    ],
    "solution": "# Find the number of aliens with 3 eyes\nnum_of_aliens_with_3_eyes = 17/40 * 160\nprint(num_of_aliens_with_3_eyes)"
  },
  {
    "example_id": 544,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "24.0"
    ],
    "annotated_answers": [
      "24.0"
    ],
    "solution": "# Define the variable\ngallons = 3/4\n\n# Define the function\ndef cones(gallons):\n    return gallons * 32\n\n# Use the function\nmore_cones = cones(gallons)\n\n# Print the result\nprint(more_cones)"
  },
  {
    "example_id": 545,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "75.0"
    ],
    "solution": "a = 1200\nb = 1200 // a\nprint(b)"
  },
  {
    "example_id": 546,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.4438595832024937",
      "176"
    ],
    "annotated_answers": [
      "53.0"
    ],
    "solution": "from math import factorial\nn = 109\nprint(factorial(n))"
  },
  {
    "example_id": 547,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "27.0"
    ],
    "annotated_answers": [
      "180.0"
    ],
    "solution": "days_between_reports = [9, 12, 15]\ndays_between_reports.sort()\nleast_number_of_days = days_between_reports[0] * 3\nprint(least_number_of_days)"
  },
  {
    "example_id": 548,
    "selected_solution_index": 11,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "def gcf(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcf(b, a % b)\n\na, b = 99, 100\nprint(gcf(a, b))"
  },
  {
    "example_id": 549,
    "selected_solution_index": 14,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "40.0",
      "30.0",
      "20.0",
      "10.0"
    ],
    "annotated_answers": [
      "90.0"
    ],
    "solution": "days_together = [40, 30, 20, 10]\ntotal_households = sum(days_together)\npercent_together = [i/total_households*100 for i in days_together]\nprint(percent_together)"
  },
  {
    "example_id": 550,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "307.0"
    ],
    "annotated_answers": [
      "133.0"
    ],
    "solution": "import math\n\ndef angle_BPC(angle_A, angle_QBP):\n    angle_BPC = 360 - angle_A - angle_QBP\n    return angle_BPC\n\nangle_A = 39\nangle_QBP = 14\nangle_BPC = angle_BPC(angle_A, angle_QBP)\nprint(angle_BPC)"
  },
  {
    "example_id": 551,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "24.0"
    ],
    "solution": "from math import factorial\nn = 4\narrangements = factorial(n) / (factorial(n-4) * factorial(4))\nprint(arrangements)"
  },
  {
    "example_id": 552,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.5",
      "4.0"
    ],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "numbers = [1, 2, 3, 4, 5, 6, 7, 8]\nmean = sum(numbers) / len(numbers)\nprint(mean)\nnumbers.remove(8)\nmean = sum(numbers) / len(numbers)\nprint(mean)"
  },
  {
    "example_id": 553,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "# Using math.factorial\nfrom math import factorial\n\n# Values of n for which the expression (2*3*4*5 + 1) can be evaluated\nn_values = [1, 2, 3, 4, 5]\n\n# Values of (2*3*4*5 + 1) for each value of n\nvalues = [2*3*4*5 + 1, 2*3*4*factorial(5) + 1, 2*factorial(3)*4*5 + 1, factorial(2)*3*4*5 + 1, factorial(2)*factorial(3)*4*5 + 1]\n\n# Number of values that can be obtained from the expression\n# by inserting parentheses\ncount = 0\nfor n, value in zip(n_values, values):\n    if value == 121:\n        count += 1\n\nprint(count)"
  },
  {
    "example_id": 554,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "48.0"
    ],
    "annotated_answers": [
      "52.0"
    ],
    "solution": "area = 120\ndiagonal = 10\nperimeter = 4 * (area / diagonal)\nprint(perimeter)"
  },
  {
    "example_id": 555,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "# Question 1\nis_equivalent_1 = True\n\n# Question 2\nis_equivalent_2 = False\n\n# Question 3\nis_equivalent_3 = True\n\n# Question 4\nis_equivalent_4 = True\n\n# Question 5\nis_equivalent_5 = True\n\n# Question 6\nis_equivalent_6 = False\n\n# Add up the number of questions for which the answer is yes\ntotal = is_equivalent_1 + is_equivalent_2 + is_equivalent_3 + is_equivalent_4 + is_equivalent_5 + is_equivalent_6\nprint(total)"
  },
  {
    "example_id": 556,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "160.0"
    ],
    "annotated_answers": [
      "680.0"
    ],
    "solution": "num_3eyes, num_5eyes = 3/8 * 160, 160 - 3/8 * 160\ntotal_eyes = num_3eyes + num_5eyes\nprint(total_eyes)"
  },
  {
    "example_id": 557,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "288.0"
    ],
    "annotated_answers": [
      "24.0"
    ],
    "solution": "perimeter = 2 * (72 + 72)\nprint(perimeter)"
  },
  {
    "example_id": 558,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "lst = [3/7, 4/3, 11/8, 6/16]\ndiff = max(lst) - min(lst)\nprint(diff)"
  },
  {
    "example_id": 559,
    "selected_solution_index": 12,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "34.0"
    ],
    "annotated_answers": [
      "-14.0"
    ],
    "solution": "x = 4\ny = 7 - 4*x\nz = 15\nprint(8*x + 2)"
  },
  {
    "example_id": 560,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "last_test_score = 98\nfirst_test_score = 91\nn = last_test_score - first_test_score + 1\nprint(n)"
  },
  {
    "example_id": 561,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2000.0"
    ],
    "annotated_answers": [
      "133.0"
    ],
    "solution": "x = 1000\ny = 1000\nz = x + y\nprint(z)"
  },
  {
    "example_id": 562,
    "selected_solution_index": 6,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x_min = 2\ny_min = 5\nx_max = 54 // y_min\nx_range = range(x_min, x_max + 1)\nprint(len(x_range))"
  },
  {
    "example_id": 563,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "import math\n\ndef isosceles_triangle_area(base, height):\n    return (base * height) / 2\n\ndef square_area(side):\n    return side ** 2\n\ndef isosceles_triangle_perimeter(base, height):\n    return base + height + math.sqrt(2 * (base ** 2) - (base ** 2 - height ** 2))\n\ndef tangram_area(piece_a, piece_b, piece_c, piece_d, piece_e):\n    return (piece_a + piece_b + piece_c + piece_d + piece_e) ** 2\n\ndef gray_piece_area(piece_a, piece_b, piece_c, piece_d, piece_e):\n    return square_area(piece_e) - (isosceles_triangle_area(piece_a, piece_b) + isosceles_triangle_area(piece_c, piece_d))\n\ndef main():\n    piece_a, piece_b, piece_c, piece_d, piece_e = 2, 2, 2, 2, 2\n    print(gray_piece_area(piece_a, piece_b, piece_c, piece_d, piece_e))\n\nif __name__ == \"__main__\":\n    main()"
  },
  {
    "example_id": 564,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "from math import factorial\nfrom scipy.special import comb\nn = 5\nk = 2\nprint(comb(n, k))"
  },
  {
    "example_id": 565,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "78.53981633974483"
    ],
    "annotated_answers": [
      "50.0"
    ],
    "solution": "import numpy as np\nimport math\n# AMC8 2000 #19 Problem\n\ndef area(r):\n    return np.pi * r**2\n\nr = 5\nprint(area(r))"
  },
  {
    "example_id": 566,
    "selected_solution_index": 13,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "52.0"
    ],
    "annotated_answers": [
      "127.0"
    ],
    "solution": "trestle_length = 80\ntrestle_height = 112\ntrain_height = 172\ntrain_traveled = 3/4 * trestle_length\nprint(trestle_height - train_traveled)"
  },
  {
    "example_id": 567,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "x = 55/5 - 3\nprint(x)"
  },
  {
    "example_id": 568,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.5"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "dimples_to_paint = 300\nseconds_per_dimple = 2\nminutes = dimples_to_paint / seconds_per_dimple / 60\nprint(minutes)"
  },
  {
    "example_id": 569,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.333333333333333"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "import numpy as np\nx = np.mean([2, 7, 10])\nprint(x)"
  },
  {
    "example_id": 570,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "37.5"
    ],
    "annotated_answers": [
      "37.5"
    ],
    "solution": "tshirt_price, sweatshirt_price = 15.22, 67.94 - 15.22 - 15.22\nprint(sweatshirt_price)"
  },
  {
    "example_id": 571,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "130.0"
    ],
    "annotated_answers": [
      "140.0"
    ],
    "solution": "angle_1 = 50\nangle_2 = 180 - angle_1\nprint(angle_2)"
  },
  {
    "example_id": 572,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "108.0",
      "16.0",
      "20.0"
    ],
    "annotated_answers": [
      "480.0"
    ],
    "solution": "import math\n\n# area of the side panel\narea = (8 + 10) * 2 * 3\nprint(area)\n\n# area of the riser\nriser_area = 8 * 2\nprint(riser_area)\n\n# area of the tread\ntread_area = 10 * 2\nprint(tread_area)"
  },
  {
    "example_id": 573,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "18.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "mary_age = 3/5 * 30\nprint(mary_age)"
  },
  {
    "example_id": 574,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "15.0"
    ],
    "annotated_answers": [
      "60.0"
    ],
    "solution": "num_outfits, num_models = 5, 5\nnum_shows = num_outfits * (num_outfits - 2)\nprint(num_shows)"
  },
  {
    "example_id": 575,
    "selected_solution_index": 12,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "16.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "digits = [2, 4, 6, 7]\n\ndef count_integers(digits):\n    count = 0\n    for d1 in digits:\n        for d2 in digits:\n            count += 1\n    return count\n\nprint(count_integers(digits))"
  },
  {
    "example_id": 576,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "76.0"
    ],
    "annotated_answers": [
      "76.0"
    ],
    "solution": "list = [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]\nprint(len(list))"
  },
  {
    "example_id": 577,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "27.0"
    ],
    "solution": "import itertools\n\ndef get_permutations(letters):\n    for i in range(len(letters) + 1):\n        for p in itertools.permutations(letters, i):\n            yield p\n\ndef get_code_words(letters):\n    for p in get_permutations(letters):\n        yield ''.join(p)\n\ncode_words = get_code_words('AB')\nprint(sum(1 for cw in code_words if len(cw) == 3))"
  },
  {
    "example_id": 578,
    "selected_solution_index": 10,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "numbers = [10, 11, 12, 13, 14]\nsum_numbers = sum(numbers)\nmean = sum_numbers / len(numbers)\nmedian = numbers[2]\nresult = mean - median\nprint(result)"
  },
  {
    "example_id": 579,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.666666666666667"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = (23 - 3 - 2 - 3 - 1) / 3\nprint(x)"
  },
  {
    "example_id": 580,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "45.0"
    ],
    "annotated_answers": [
      "84.0"
    ],
    "solution": "import math\n\nq, r, p, s = (0, 0), (0, -5), (12, 0), (0, -20)\nperimeter = math.sqrt(pow(p[0] - q[0], 2) + pow(p[1] - q[1], 2)) + math.sqrt(pow(p[0] - r[0], 2) + pow(p[1] - r[1], 2)) + math.sqrt(pow(s[0] - q[0], 2) + pow(s[1] - q[1], 2))\nprint(perimeter)"
  },
  {
    "example_id": 581,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "drinkets_per_blinket = 3\nblinkets_per_trinket = 4\ndrinkets = 56\nblinkets = drinkets // drinkets_per_blinket\ntrinkets = blinkets // blinkets_per_trinket\nprint(trinkets)"
  },
  {
    "example_id": 582,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "170.0"
    ],
    "annotated_answers": [
      "80.0"
    ],
    "solution": "measure_of_M = 180 - 10\nprint(measure_of_M)"
  },
  {
    "example_id": 583,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "882.0"
    ],
    "annotated_answers": [
      "40.0"
    ],
    "solution": "daps_to_yaps = 7\nyaps_to_baps = 3\ndaps_to_baps = daps_to_yaps * yaps_to_baps\nbaps_in_42_daps = 42 * daps_to_baps\nprint(baps_in_42_daps)"
  },
  {
    "example_id": 584,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "x = (29 - 5) / 3\nprint(x)"
  },
  {
    "example_id": 585,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-3969.0"
    ],
    "annotated_answers": [
      "-3969.0"
    ],
    "solution": "number = 63\nproduct = number * -number\nprint(product)"
  },
  {
    "example_id": 586,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "256.0"
    ],
    "annotated_answers": [
      "116.0"
    ],
    "solution": "import math\nx = 128\na = 2*x\nb = math.radians(a)\nc = math.degrees(b)\nprint(c)"
  },
  {
    "example_id": 587,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "23.0"
    ],
    "annotated_answers": [
      "23.0"
    ],
    "solution": "length = 184 / 8\nprint(length)"
  },
  {
    "example_id": 588,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "41.0"
    ],
    "annotated_answers": [
      "41.0"
    ],
    "solution": "print(3**4-5*8)"
  },
  {
    "example_id": 589,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "70.0"
    ],
    "annotated_answers": [
      "70.0"
    ],
    "solution": "total_students = 700\nproficient_or_above = 0.9\nnot_proficient_or_above = total_students - (total_students * proficient_or_above)\nprint(not_proficient_or_above)"
  },
  {
    "example_id": 590,
    "selected_solution_index": 11,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.798825142865392",
      "18"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "print(int(sum(1/i for i in range(9, 21))*10**19))"
  },
  {
    "example_id": 591,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "# How many coins does she have?\nnickels = 1\ndimes = 1\nquarters = 1\ntotal = nickels + dimes + quarters\nprint(total)"
  },
  {
    "example_id": 592,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "24.0"
    ],
    "annotated_answers": [
      "24.0"
    ],
    "solution": "smallest_multiple_of_6_that_is_also_a_multiple_of_8 = 24\nprint(smallest_multiple_of_6_that_is_also_a_multiple_of_8)"
  },
  {
    "example_id": 593,
    "selected_solution_index": 9,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "236.0"
    ],
    "annotated_answers": [
      "70.0"
    ],
    "solution": "x = 2*125.28 - 13.7\nprint(int(x))"
  },
  {
    "example_id": 594,
    "selected_solution_index": 10,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "6290000.0"
    ],
    "annotated_answers": [
      "6290000.0"
    ],
    "solution": "print(round(6287215, -4))"
  },
  {
    "example_id": 595,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "27.0"
    ],
    "annotated_answers": [
      "28.0"
    ],
    "solution": "list_of_numbers = [2.5, 5.5, 8.5, 11.5, 14.5, 17.5, 20.5, 23.5, 26.5, 29.5, 32.5, 35.5, 38.5, 41.5, 44.5, 47.5, 50.5, 53.5, 56.5, 59.5, 62.5, 65.5, 68.5, 71.5, 74.5, 77.5, 80.5]\nprint(len(list_of_numbers))"
  },
  {
    "example_id": 596,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "43.2"
    ],
    "annotated_answers": [
      "27.0"
    ],
    "solution": "shirts = 72 / 5\ndresses = 3 * shirts\nprint(dresses)"
  },
  {
    "example_id": 597,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "max_spins = 0\nspin = 20\nwhile spin!= 1:\n    factors = [f for f in range(1, spin + 1) if spin % f == 0 and f!= spin]\n    spin = sum(factors)\n    max_spins += 1\nprint(max_spins)"
  },
  {
    "example_id": 598,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "distance = 15\ntime = 2.5\nspeed = distance / time\nprint(speed)"
  },
  {
    "example_id": 599,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "90.0"
    ],
    "annotated_answers": [
      "90.0"
    ],
    "solution": "def gcf(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\nprint(gcf(180, 450))"
  },
  {
    "example_id": 600,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "105.0"
    ],
    "annotated_answers": [
      "1093.0"
    ],
    "solution": "data = [51, 52, 53, 54, 55, 56, 57]\nmedian = sorted(data)[len(data)//2]\nmode = max(set(data), key=data.count)\nprint(median+mode)"
  },
  {
    "example_id": 601,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.4444444444444444"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "print(4/9)"
  },
  {
    "example_id": 602,
    "selected_solution_index": 11,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "23.0"
    ],
    "solution": "import math\nn = 2\nwhile True:\n    if all(math.gcd(n, i) == 1 for i in range(1, n)):\n        break\n    n += 1\nprint(n)"
  },
  {
    "example_id": 603,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "80.0"
    ],
    "annotated_answers": [
      "80.0"
    ],
    "solution": "print(round((26 + 52), -1))"
  },
  {
    "example_id": 604,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "print(pow(1-(-1)**11, 2))"
  },
  {
    "example_id": 605,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0132508162806824"
    ],
    "annotated_answers": [
      "135.0"
    ],
    "solution": "import math\n\n# degrees to radians\ndef radians(degrees):\n    return degrees * math.pi / 180\n\n# angle between two sides of a polygon\ndef angle_between_sides(side_a, side_b):\n    return math.acos((side_a ** 2 + side_b ** 2 - side_a * side_b) / (2 * side_a * side_b))\n\n# measure of interior angle\ndef measure_interior_angle(side_a, side_b, side_c):\n    return angle_between_sides(side_a, side_b) + angle_between_sides(side_b, side_c) + angle_between_sides(side_c, side_a)\n\n# measure of large angle\ndef measure_large_angle(side_a, side_b, side_c):\n    return measure_interior_angle(side_a, side_b, side_c) - angle_between_sides(side_a, side_b)\n\n# test\nside_a, side_b, side_c = 5, 6, 7\nprint(measure_large_angle(side_a, side_b, side_c))"
  },
  {
    "example_id": 606,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "63.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "left_handed_players = 18\nright_handed_players = 4 * left_handed_players\ntotal_players = 36\n\nleft_handed_boys = left_handed_players - int(left_handed_players / 2)\nright_handed_boys = right_handed_players - left_handed_boys\n\nprint(right_handed_boys)"
  },
  {
    "example_id": 607,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "45.0"
    ],
    "annotated_answers": [
      "130.0"
    ],
    "solution": "history_students = 85\nscience_students = 85\nhistory_taking_both = 85\ntotal_history_students = 106\ntotal_science_students = 109\nsenior_class_size = total_history_students + total_science_students - history_taking_both - science_students\nprint(senior_class_size)"
  },
  {
    "example_id": 608,
    "selected_solution_index": 10,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "import math\n\ndef mode(lst):\n    lst.sort()\n    unique = []\n    for i in lst:\n        if i not in unique:\n            unique.append(i)\n    return unique[-1]\n\ndef median(lst):\n    lst.sort()\n    if len(lst) % 2 == 0:\n        return (lst[len(lst) // 2] + lst[len(lst) // 2 - 1]) / 2\n    else:\n        return lst[len(lst) // 2]\n\ndef average(lst):\n    return sum(lst) / len(lst)\n\ndef average_deviation(lst):\n    return sum((x - average(lst)) ** 2 for x in lst) / len(lst)\n\nlst = [3, 5, 6, 8, 10]\nprint(max(lst) - min(lst))"
  },
  {
    "example_id": 609,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "24.0"
    ],
    "solution": "boykins_height = 5.5\nming_height = 7.5\nming_taller_than_boykins = ming_height - boykins_height\nprint(ming_taller_than_boykins)"
  },
  {
    "example_id": 610,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "31.0"
    ],
    "annotated_answers": [
      "31.0"
    ],
    "solution": "print(6//6-6+6*6)"
  },
  {
    "example_id": 611,
    "selected_solution_index": 11,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "72.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "# The length of the greatest possible length she can cut\ngpl = max(48, 72, 40)\nprint(gpl)"
  },
  {
    "example_id": 612,
    "selected_solution_index": 3,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "16.000000000000004"
    ],
    "annotated_answers": [
      "32.0"
    ],
    "solution": "from math import sqrt\nside = 4 * sqrt(2)\narea = (side * side) / 2\nprint(area)"
  },
  {
    "example_id": 613,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "22.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "def distinct_prime_factors(n):\n    factors = []\n    for i in range(2, int(n ** 0.5) + 1):\n        while n % i == 0:\n            factors.append(i)\n            n //= i\n    if n > 1:\n        factors.append(n)\n    return sum(factors)\n\nprint(distinct_prime_factors(735))"
  },
  {
    "example_id": 614,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "from sympy import simplify\nfrom sympy import S\n\nexpr = (123/321)*(456/654)*(789/987)*((123/321)**(-1))*((456/654)**(-1))*((789/987)**(-1))\nprint(simplify(expr))"
  },
  {
    "example_id": 615,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "side_length = 10\nside_length_new = side_length * 0.6\nside_length_new2 = side_length * 1.5\nrectangle_area = side_length_new * side_length_new2\nsquare_area = side_length * side_length\nratio = (square_area - rectangle_area) / square_area\nprint(ratio * 100)"
  },
  {
    "example_id": 616,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "24.0"
    ],
    "solution": "# Import math\nimport math\n\n# Define variables\na, b, c = 12, 0, 0\n\n# Calculate missing side\nc = math.sqrt(a**2 + b**2)\n\n# Print result\nprint(c)"
  },
  {
    "example_id": 617,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "94.0"
    ],
    "annotated_answers": [
      "52.0"
    ],
    "solution": "distance = 100 - 6\nprint(distance)"
  },
  {
    "example_id": 618,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.4"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "sides = 144/360\nprint(sides)"
  },
  {
    "example_id": 619,
    "selected_solution_index": 7,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "from sympy import isprime\n\ndef number_of_prime_numbers(digits):\n    possible_numbers = []\n    for i in range(len(digits)):\n        for j in range(i+1, len(digits)):\n            possible_numbers.append(int(''.join(map(str, digits[i:j+1]))))\n    return len(list(filter(isprime, possible_numbers)))\n\nprint(number_of_prime_numbers([1, 3, 6, 7]))"
  },
  {
    "example_id": 620,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "75.0"
    ],
    "annotated_answers": [
      "75.0"
    ],
    "solution": "print(5625**0.5)"
  },
  {
    "example_id": 621,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "import math\n\n# number of sides in a convex polygon\nn = 10\n\n# sum of all but one interior angles in a convex polygon\nsum_interior_angles = (n - 1) * 180\n\n# interior angle in degrees\ninterior_angle = 1070 / (n - 1)\n\n# difference between sum of interior angles and 360\ndiff = sum_interior_angles - 360\n\n# number of sides in a convex polygon\nn = int(diff / interior_angle)\n\nprint(n)"
  },
  {
    "example_id": 622,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "0.0",
      "0.0",
      "0.0"
    ],
    "annotated_answers": [
      "9604.0"
    ],
    "solution": "from math import factorial\n\ndef count_numbers(digits, length):\n    count = 0\n    for i in range(0, 10**length):\n        number = str(i)\n        if len(number) == length and all([d in digits for d in number]):\n            count += 1\n    return count\n\ndef odd_numbers(digits, length):\n    count = 0\n    for i in range(0, 10**length):\n        number = str(i)\n        if len(number) == length and all([d in digits for d in number]) and int(number) % 2!= 0:\n            count += 1\n    return count\n\ndef count_numbers_with_repetition(digits, length):\n    count = 0\n    for i in range(0, 10**length):\n        number = str(i)\n        if len(number) == length and all([d in digits for d in number]):\n            count += factorial(length)\n    return count\n\ndef odd_numbers_with_repetition(digits, length):\n    count = 0\n    for i in range(0, 10**length):\n        number = str(i)\n        if len(number) == length and all([d in digits for d in number]) and int(number) % 2!= 0:\n            count += factorial(length)\n    return count\n\nprint(count_numbers([1, 2, 3, 4, 5, 6, 7], 5))\nprint(odd_numbers([1, 2, 3, 4, 5, 6, 7], 5))\nprint(count_numbers_with_repetition([1, 2, 3, 4, 5, 6, 7], 5))\nprint(odd_numbers_with_repetition([1, 2, 3, 4, 5, 6, 7], 5))"
  },
  {
    "example_id": 623,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "126.0"
    ],
    "annotated_answers": [
      "42.0"
    ],
    "solution": "perimeter_of_triangle = 21\nnumber_of_sides_of_hexagon = 6\nperimeter_of_hexagon = perimeter_of_triangle * number_of_sides_of_hexagon\nprint(perimeter_of_hexagon)"
  },
  {
    "example_id": 624,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "36.0"
    ],
    "annotated_answers": [
      "21.0"
    ],
    "solution": "import math\ntrapezoid_height = 9\ntrapezoid_base_left = 5\ntrapezoid_base_right = 3\ntrapezoid_area = trapezoid_height * (trapezoid_base_left + trapezoid_base_right) / 2\nprint(trapezoid_area)"
  },
  {
    "example_id": 625,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "957.0"
    ],
    "annotated_answers": [
      "957.0"
    ],
    "solution": "sum_of_digits = 0\nfor n in range(1, 111):\n    sum_of_digits += sum(map(int, str(n)))\nprint(sum_of_digits)"
  },
  {
    "example_id": 626,
    "selected_solution_index": 12,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1600.0"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "furlongs_per_mile = 8\nfurlongs_per_fortnight = 14\nbritish_cavalry_furlong_per_fortnight = 2800\nmiles_per_day = furlongs_per_mile / furlongs_per_fortnight * british_cavalry_furlong_per_fortnight\nprint(miles_per_day)"
  },
  {
    "example_id": 627,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "55.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "number = 5\nresult = 10 * number + 5\nprint(result)"
  },
  {
    "example_id": 628,
    "selected_solution_index": 1,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1188.0"
    ],
    "annotated_answers": [
      "1188.0"
    ],
    "solution": "# 9 inches by 12 inches = 108 square inches\npictures_area = 108\n# 9 inches by 12 inches = 108 square inches\n# 11 pictures = 11 x 108 square inches = 1192 square inches\ntotal_area = pictures_area * 11\nprint(total_area)"
  },
  {
    "example_id": 629,
    "selected_solution_index": 8,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "19.0"
    ],
    "annotated_answers": [
      "90.0"
    ],
    "solution": "side_a = 9\nside_b = 10\nperimeter = side_a + side_b\nprint(perimeter)"
  },
  {
    "example_id": 630,
    "selected_solution_index": 4,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.49999999999999994"
    ],
    "annotated_answers": [
      "270.0"
    ],
    "solution": "import math\ny = math.sin(math.radians(30))\nprint(y)"
  },
  {
    "example_id": 631,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "print(pow(0, 5) + pow(-1, 4))"
  },
  {
    "example_id": 632,
    "selected_solution_index": 5,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "9.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "print(3**(-4) * 3**(-8) * 3**14)"
  },
  {
    "example_id": 633,
    "selected_solution_index": 2,
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "25.0"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "print((16/25) * (5/2) ** 4)"
  },
  {
    "example_id": 634,
    "selected_solution_index": 0,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-11.333333333333332"
    ],
    "annotated_answers": [
      "51.0"
    ],
    "solution": "from sympy import *\nA, B, C = symbols('A B C')\nperimeter = 17\nside_length = 4\nperimeter_of_square = side_length * 4\nside_length_of_triangle = perimeter / 3\nside_length_of_triangle_of_square = side_length_of_triangle / 3\nperimeter_of_triangle_of_square = side_length_of_triangle_of_square * 3\nprofit = perimeter_of_triangle_of_square - perimeter\nprint(profit)"
  },
  {
    "example_id": 635,
    "selected_solution_index": 15,
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "55.0"
    ],
    "annotated_answers": [
      "162.0"
    ],
    "solution": "number = 5\nresult = 5 + (10 * number)\nprint(result)"
  }
]