[
  {
    "example_id": 0,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "51.0"
    ],
    "solution": "x = symbols('x')\n\n# 1. x < x^2 < x^3\n# 2. x < x^3 < x^2\n# 4. x^2 < x < x^3\n# 8. x^2 < x^3 < x\n# 16. x^3 < x < x^2\n# 32. x^3 < x^2 < x\n\n# Find the sum of the labels of the statements that hold for some value of x.\n\n# 1. x < x^2 < x^3\n# 2. x < x^3 < x^2\n# 4. x^2 < x < x^3\n# 8. x^2 < x^3 < x\n\n# 2 + 8 = 10\n\nprint(10)"
  },
  {
    "example_id": 1,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "5.0",
      "25.0",
      "125.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "k = 1, 5, 25, 125\nprint(k)"
  },
  {
    "example_id": 2,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1556.0",
      "4.0",
      "1.0",
      "5.0",
      "2.0",
      "1.0",
      "5.0",
      "2.0",
      "40.0",
      "1.0"
    ],
    "annotated_answers": [
      "82.0"
    ],
    "solution": "omega = 1-5*sympy.I\nprint(abs(2*omega**2 - 4*omega - 30))"
  },
  {
    "example_id": 3,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "1.0",
      "24.0",
      "1.0",
      "1.0",
      "9.0",
      "1.0",
      "5.0",
      "5.0",
      "1.0",
      "691.0",
      "10.0",
      "1.0",
      "667.0"
    ],
    "annotated_answers": [
      "195.0"
    ],
    "solution": "# define symbols\nn1, n2, n3, n4, n5, n6, n7, n8, n9, n10 = symbols('n1 n2 n3 n4 n5 n6 n7 n8 n9 n10')\n\n# define sequence\nseq = [n1, n1+3, n1+5, n1+7, n1+9]\n\n# find sum of terms\nsum_seq = sum(seq)\nprint('sum of terms:', sum_seq)\n\n# find sum of first, last, and middle terms\nsum_first = seq[0]\nsum_last = seq[-1]\nsum_middle = seq[2]\nprint('sum of first, last, and middle terms:', sum_first, sum_last, sum_middle)\n\n# find difference between new and old sequences\ndifference = sum(seq) - 715\nprint('difference between new and old sequences:', difference)\n\n# find sum of terms in new sequence\nsum_new_seq = sum(seq) + difference\nprint('sum of terms in new sequence:', sum_new_seq)"
  },
  {
    "example_id": 4,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "5.0",
      "3.0",
      "6.0",
      "17.0",
      "30.0",
      "20.0",
      "15.0",
      "20.0",
      "2.0"
    ],
    "annotated_answers": [
      "34.0"
    ],
    "solution": "import sympy as sym\n\nx = sym.Symbol('x')\nexpression = 17*sym.log(x, 30) - 3*sym.log(x, 5) + 20*sym.log(x, 15) - 3*sym.log(x, 6) + 20*sym.log(x, 2)\n\nprint(expression)"
  },
  {
    "example_id": 5,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-5.0"
    ],
    "solution": "f = sympy.Function('f')\nx = symbols('x')\n\neq1 = f(x) - f(x + 1) - f(x - 1)\neq2 = f(15) - 20\neq3 = f(20) - 15\neq4 = f(20152015)\n\nsolve([eq1, eq2, eq3, eq4], f(x))"
  },
  {
    "example_id": 6,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "43.0"
    ],
    "annotated_answers": [
      "46.0"
    ],
    "solution": "x = 21\ny = 18\nv = 24\nw = 25\nz = 25\nprint(y + z)"
  },
  {
    "example_id": 7,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "-6.0"
    ],
    "solution": "# define symbols\nx = symbols('x')\n\n# define expression\nexp = sympy.sqrt(2**2) + sympy.sqrt(2)\n\n# evaluate expression\nexp_val = exp.subs(x, 2 - 2*sympy.sqrt(2) - sympy.sqrt(2**2))\n\n# print result\nprint(exp_val)"
  },
  {
    "example_id": 8,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1000.0"
    ],
    "annotated_answers": [
      "177.0"
    ],
    "solution": "f = lambda x: x\nf_values = [f(i) for i in range(1000)]\nprint(len(set(f_values)))"
  },
  {
    "example_id": 9,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "100.0",
      "3.0",
      "4.0",
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "m, n = symbols('m n')\neq = 3*m + 4*n - 100\nsol = solve(eq)\nprint(sol)"
  },
  {
    "example_id": 10,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "r, s = symbols('r s')\neq = 1/(r + s) - 1/r - 1/s\nk_value = solve(eq, r)\nprint(k_value[0])"
  },
  {
    "example_id": 11,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "58.0",
      "7.0",
      "58.0",
      "-4.0",
      "4.0",
      "3.0",
      "2.0",
      "28.0",
      "13.0"
    ],
    "annotated_answers": [
      "40.0"
    ],
    "solution": "z, w = symbols('z w')\neq1 = z + (20/w)*I - 5 - I\neq2 = w + (12/z)*I - 4 - 10*I\nsol = solve([eq1, eq2], [z, w])\nprint(sol)"
  },
  {
    "example_id": 12,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-5.0",
      "0.0",
      "-4.0",
      "-3.0",
      "-4.0",
      "-2.0",
      "-4.0",
      "-1.0",
      "-4.0",
      "0.0"
    ],
    "annotated_answers": [
      "81.0"
    ],
    "solution": "from math import sqrt\nn = 5\nfor a in range(-n, n + 1):\n    for b in range(-n, n + 1):\n        if (a**2 + b**2) <= n**2:\n            print((a, b))"
  },
  {
    "example_id": 13,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "13.582376151231777"
    ],
    "annotated_answers": [
      "28.0"
    ],
    "solution": "a, b, c = 1, 2, 3\nx = 4 * a ** 0.5 + 6 * b ** 0.5 + 12 * c ** 0.5\ny = (a * b * c) ** 0.5\nprint(x / y)"
  },
  {
    "example_id": 14,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x = symbols('x')\neq = x**8 + 3*x**4 - 4\nfactors = eq.factor()\nprint(factors)"
  },
  {
    "example_id": 15,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "10.0",
      "2.0",
      "5.0",
      "5.0",
      "2.0",
      "10.0",
      "1.0"
    ],
    "annotated_answers": [
      "48.0"
    ],
    "solution": "import itertools\n\nfor u, v in itertools.product(range(1, 11), range(1, 11)):\n    if u*v == 10 and u.real % 1 == 0 and v.real % 1 == 0:\n        print(f\"({u}, {v})\")"
  },
  {
    "example_id": 16,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "40.0",
      "1.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq = 4*a + 3*b + c**3/(a - b)*b\nconstraints = [a > b, a + b + c - 4]\nmin_value = sympy.minimize(eq, constraints)\nprint(min_value)"
  },
  {
    "example_id": 17,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "2.0",
      "5.0",
      "2.0",
      "3.0",
      "5.0",
      "2.0",
      "5.0",
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "50.0"
    ],
    "solution": "a, b = symbols('a b')\neq1 = a + b - 5\neq2 = a**2 + b**2 - 15\nsol = solve((eq1, eq2), (a, b))\nprint(sol[0][0]**3 + sol[0][1]**3)"
  },
  {
    "example_id": 18,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x = symbols('x')\ndomain = log(x**2)\na, b = solve(domain, x)\nprint(a + b)"
  },
  {
    "example_id": 19,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1007.5"
    ],
    "annotated_answers": [
      "62.0"
    ],
    "solution": "S = range(2016)\nprint(sum(S)/len(S))"
  },
  {
    "example_id": 20,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "k, x = symbols('k x')\neq = k*x**4 + 9*x**3 + k*x**2 + 32*x - 11\nremainder = sympy.rem(eq, x + 5)\nk_value = solve(remainder - 4, k)\nprint(k_value[0])"
  },
  {
    "example_id": 21,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5486782579.0"
    ],
    "annotated_answers": [
      "2039191.0"
    ],
    "solution": "def f(x):\n    return x**2\n\nsum = 0\nfor n in range(-2019, 2019):\n    sum += f(n)\nprint(sum)"
  },
  {
    "example_id": 22,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "1.0",
      "3.0",
      "2.0",
      "1.0"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "z1, z2 = symbols('z1 z2')\neq1 = (z1/z2 + z2/z1 - 1)\neq2 = (z1 - z2)**2\nsol1 = solve(eq1, z1)\nsol2 = solve(eq2, z2)\nprint(sol1[0])\nprint(sol2[0])"
  },
  {
    "example_id": 23,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-100000000000000.0",
      "100000000000000.0",
      "100000000000000.0",
      "100000000000000.0",
      "125992104989487.0",
      "25992104989487.0",
      "100000000000000.0",
      "100000000000000.0",
      "100000000000000.0",
      "125992104989487.0",
      "125992104989487.0",
      "125992104989487.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\nroot_3 = a + 1/(b + 1/(c + 1/(d + 1)))\nb_value = solve(root_3 - 2**(1/3), b)\nprint(b_value[0])"
  },
  {
    "example_id": 24,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2304.0"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "x = 1\nfor i in range(2, 49):\n    x += 2*i - 1\nprint(x)"
  },
  {
    "example_id": 25,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "2.0",
      "5.0",
      "3.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "z = symbols('z')\nexpr = abs(z + 5 - 3*I) + abs(z - 7 + 2*I)\nprint(expr)"
  },
  {
    "example_id": 26,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "3.0",
      "4.0",
      "3.0",
      "7.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq = x**3 + 2*y**3 + 4*z**3\nprint(eq)\nprint(eq.subs([(x, 1), (y, 1), (z, 1)]))"
  },
  {
    "example_id": 27,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "17.0",
      "17.0",
      "17.0",
      "17.0",
      "17.0",
      "17.0",
      "17.0",
      "17.0",
      "51.0",
      "3.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x, y, z, w = symbols('x y z w')\neqs = [2*y - x - 17/x,\n       2*z - y - 17/y,\n       2*w - z - 17/z,\n       2*x - w - 17/w]\nsol = solve(eqs, [x, y, z, w])\nprint(sol)"
  },
  {
    "example_id": 28,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "3.0",
      "4.0",
      "5.0",
      "6.0",
      "7.0",
      "8.0",
      "9.0",
      "10.0"
    ],
    "annotated_answers": [
      "49.0"
    ],
    "solution": "def term_at(n):\n    if n == 1:\n        return 1\n    elif n % 2 == 0:\n        return 2 * term_at(n // 2)\n    else:\n        return 1 + 2 * term_at((n - 1) // 2)\n\nfor i in range(1, 101):\n    print(term_at(i))"
  },
  {
    "example_id": 29,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "2.0",
      "1.0",
      "1.0",
      "3.0",
      "1.0"
    ],
    "annotated_answers": [
      "29800.0"
    ],
    "solution": "for a in range(1, 101):\n    for b in range(1, 101):\n        for c in range(1, 101):\n            if a**2 * b + b**2 * c + c**2 * a == a * b**2 + b * c**2 + c * a**2:\n                print(a, b, c)"
  },
  {
    "example_id": 30,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "77.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq = 16 - x**2 + 25 - y**2 + 36 - z**2\nprint(eq)"
  },
  {
    "example_id": 31,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "-71.0"
    ],
    "solution": "def polynomial(x):\n    return (x**8 - 2*x**7 + 3*x**6 - 5*x**5 + 7*x**4 - 11*x**3 + 13*x**2 - 17*x + 19)\n\nprint(polynomial(1))"
  },
  {
    "example_id": 32,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "514.0",
      "513.0",
      "512.0",
      "258.0",
      "257.0",
      "256.0",
      "2.0",
      "1.0",
      "15.0"
    ],
    "annotated_answers": [
      "341.0"
    ],
    "solution": "import sympy\nx = sympy.Symbol('x')\nexpression = (x**2 + x + 1) * (x**512 + x**256 + 1)\nexpression = sympy.expand(expression)\nprint(expression)\nprint(sympy.count_ops(expression))"
  },
  {
    "example_id": 33,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25.0"
    ],
    "annotated_answers": [
      "250.0"
    ],
    "solution": "from sympy import sqrt\n\ndef find_closest_integer(expression):\n    return int(round(expression))\n\nexpression = 1 / (sqrt(5**4 + 1) - sqrt(5**4 - 1))\nprint(find_closest_integer(expression))"
  },
  {
    "example_id": 34,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2500.0"
    ],
    "annotated_answers": [
      "2500.0"
    ],
    "solution": "from sympy import symbols, expand, factorial, binomial\nx = symbols('x')\na = expand((x + 1)*(x + 3)*(x + 5)*(x + 7)*(x + 9)*(x + 11)*(x + 13)*(x + 15)*(x + 17)*(x + 19)*(x + 21)*(x + 23)*(x + 25)*(x + 27)*(x + 29)*(x + 31)*(x + 33)*(x + 35)*(x + 37)*(x + 39)*(x + 41)*(x + 43)*(x + 45)*(x + 47)*(x + 49)*(x + 51)*(x + 53)*(x + 55)*(x + 57)*(x + 59)*(x + 61)*(x + 63)*(x + 65)*(x + 67)*(x + 69)*(x + 71)*(x + 73)*(x + 75)*(x + 77)*(x + 79)*(x + 81)*(x + 83)*(x + 85)*(x + 87)*(x + 89)*(x + 91)*(x + 93)*(x + 95)*(x + 97)*(x + 99))\ncoefficient = a.coeff(x**49)\nprint(coefficient)"
  },
  {
    "example_id": 35,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "1.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "z = symbols('z')\nz_plus_1_over_z = 1/z\nz_plus_z_squared_plus_1_over_z_squared = z + z**2\nprint(z + z_plus_1_over_z + z_plus_z_squared_plus_1_over_z_squared)"
  },
  {
    "example_id": 36,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "-2.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "2.0",
      "1.0",
      "2.0",
      "1.0",
      "1.0",
      "1.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq = (1/a + 1/b + 1/c)/(1/(a + b) + 1/(a + c) + 1/(b + c))\nminimum = sympy.nsimplify(eq.diff(a))\nprint(minimum)"
  },
  {
    "example_id": 37,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "1.0",
      "2.0",
      "4.0",
      "1.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a = symbols('a')\nx1 = symbols('x1')\nx2 = symbols('x2')\neq1 = x1**2 + a*x1 + 1\neq2 = x2**2 - x2 - a\nsol = solve([eq1, eq2], [x1, x2])\nprint(sol)"
  },
  {
    "example_id": 38,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a, b = symbols('a b')\neq = a*b - a + b\neq1 = a/b + b/a\nsolve(eq1 - eq, a/b)"
  },
  {
    "example_id": 39,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "c = 0\nprint(c)"
  },
  {
    "example_id": 40,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0",
      "7.0",
      "2.0",
      "1.0",
      "8.0",
      "2.0",
      "14.0",
      "3.0",
      "6.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "from sympy import symbols, solve, factor\nx = symbols('x')\nf = (x + 3)**5 * (x + 2)**8 * (x + 1)**4 * (x - 7)**2 / (x + 3)**11 * (x + 2)**6 * (x + 1)**4 * x**2\nprint(f.as_numer_denom())"
  },
  {
    "example_id": 41,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8778.0"
    ],
    "annotated_answers": [
      "5120.0"
    ],
    "solution": "x, y, z = symbols('x y z')\nexpr = (1 + 5*z)*(4*z + 3*x)*(5*x + 6*y)*(y + 18)\nmin_value = expr.subs([(x, 1), (y, 1), (z, 1)]).evalf()\nprint(min_value)"
  },
  {
    "example_id": 42,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "def f(n):\n    if n == 1:\n        return 1\n    elif n % 2 == 1:\n        return f(n // 2) + 1\n    else:\n        return f(n // 2)\n\nprint(f(15))"
  },
  {
    "example_id": 43,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x = symbols('x')\neq = (3*x + 2)/(x - 1) - 4\nx_value = solve(eq, x)\nprint(x_value[0])"
  },
  {
    "example_id": 44,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "7.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "from sympy import Symbol, Abs, Eq\nx = Symbol('x')\n\ncondition_1 = Eq(Abs(x) + 5, 7)\ncondition_2 = Eq(Abs(x - 3), 2)\n\nprint(condition_1 & condition_2)"
  },
  {
    "example_id": 45,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "121.0"
    ],
    "annotated_answers": [
      "-8.0"
    ],
    "solution": "x = (12-1)**2\nprint(x)"
  },
  {
    "example_id": 46,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "100.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a = 4\nb = 16\nh = -16\nk = 96\nexpression = h + k + a + b\nprint(expression)"
  },
  {
    "example_id": 47,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "26.054779560616264",
      "1.6207963267948966"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "import numpy as np\n\ndef f(x):\n    return 9*x**2*np.sin(x)**2 + 4/x/np.sin(x)\n\ndef df(x):\n    return 18*x*np.sin(x)**2 - 4/x**2/np.sin(x)\n\ndef fprime(x):\n    return 18*x*np.sin(x)**2 - 4/x**2/np.sin(x)\n\ndef find_min(f, a, b):\n    c = (a+b)/2\n    fa = f(a)\n    fc = f(c)\n    fb = f(b)\n    if fc < min(fa, fb):\n        return c\n    elif fa < fb:\n        return find_min(f, a, c)\n    else:\n        return find_min(f, c, b)\n\nx0 = 0.1\nx1 = np.pi\nx2 = find_min(f, x0, x1)\nprint(f'The minimum value is {f(x2)} at {x2}')"
  },
  {
    "example_id": 48,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "z = 2j\nw = 5j\nprint(abs(w-z))"
  },
  {
    "example_id": 49,
    "selected_mode": "import",
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "n = 0\nm = 0\ni = 2015\nj = 2\nk = 0\nl = 0\nf = {}\nf[0, 0] = 0\nf[0, 1] = 1\nf[0, 2] = 2\nf[0, 3] = 3\nf[0, 4] = 4\nf[1, 0] = f[0, 1]\nf[1, 1] = 0\nf[1, 2] = 1\nf[1, 3] = 2\nf[1, 4] = 3\nf[2, 0] = f[0, 2]\nf[2, 1] = f[1, 1]\nf[2, 2] = 0\nf[2, 3] = 1\nf[2, 4] = 2\nf[3, 0] = f[0, 3]\nf[3, 1] = f[1, 2]\nf[3, 2] = f[2, 1]\nf[3, 3] = 0\nf[3, 4] = 1\nf[4, 0] = f[0, 4]\nf[4, 1] = f[1, 3]\nf[4, 2] = f[2, 2]\nf[4, 3] = f[3, 1]\nf[4, 4] = 0\nf[5, 0] = f[0, 0]\nf[5, 1] = f[1, 0]\nf[5, 2] = f[2, 0]\nf[5, 3] = f[3, 0]\nf[5, 4] = f[4, 0]\nf[6, 0] = f[0, 1]\nf[6, 1] = f[1, 1]\nf[6, 2] = f[2, 1]\nf[6, 3] = f[3, 1]\nf[6"
  },
  {
    "example_id": 50,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "840.0"
    ],
    "solution": "m = 1\nn = 2\nsum = 1/29\nm_term = 1/(1**2+1)\nn_term = 1/(2**2+2)\n\nwhile n_term < sum:\n    m = m + 1\n    n = n + 1\n    m_term = 1/(m**2+m)\n    n_term = 1/(n**2+n)\n\nprint(m+n)"
  },
  {
    "example_id": 51,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = 2**(1/3) * 4**(1/3)\nprint(x)"
  },
  {
    "example_id": 52,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "38.0"
    ],
    "solution": "# I have not solved this problem"
  },
  {
    "example_id": 53,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1471.0"
    ],
    "annotated_answers": [
      "277.0"
    ],
    "solution": "x = symbols('x')\np = x**3 + 4*x**2 - 24*x - 80\np_value = p.subs({x:11})\nprint(p_value)"
  },
  {
    "example_id": 54,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0"
    ],
    "annotated_answers": [
      "-2016.0"
    ],
    "solution": "A = -1\nB = 1\nx = 1\nexpression = x**2017 + A*x + B\nprint(expression)\nprint(expression % (x + 1)**2)"
  },
  {
    "example_id": 55,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.3711580928463003"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "import numpy as np\na, b, c = np.random.rand(3)\n\ndef f(x):\n    return np.abs(a*x**2 + b*x + c)\n\ndef find_max():\n    max_val = 0\n    for x in np.linspace(0, 1, 1000):\n        val = f(x)\n        if val > max_val:\n            max_val = val\n    return max_val\n\nprint(find_max())"
  },
  {
    "example_id": 56,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "54.0",
      "1.0",
      "0.0",
      "6.0",
      "54.0",
      "1.0",
      "1.0",
      "6.0",
      "54.0"
    ],
    "annotated_answers": [
      "-108.0"
    ],
    "solution": "x, y = symbols('x y')\neq = x**6 + y**6 - 54*x*y\nprint(solve(eq, (x, y)))"
  },
  {
    "example_id": 57,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1350.0",
      "1350.0",
      "75.0",
      "1.0"
    ],
    "annotated_answers": [
      "450.0"
    ],
    "solution": "a, b = symbols('a b')\nmean1 = (2*a*b)/(a+b)\nmean2 = (a+b)/(a*b)\ngeometric_mean = solve(mean1 - 2700, a)\nharmonic_mean = solve(mean2 - 75, b)\nprint(geometric_mean[0])\nprint(harmonic_mean[0])"
  },
  {
    "example_id": 58,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "41230.0"
    ],
    "annotated_answers": [
      "41230.0"
    ],
    "solution": "sum = 0\nfor i in range(1, 20):\n    sum += i * (i + 1)**2\nprint(sum)"
  },
  {
    "example_id": 59,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\neq = log(x, 2) + log(x**2, 2) - 6\nx_value = solve(eq, x)\nprint(x_value[0])"
  },
  {
    "example_id": 60,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "2.0",
      "1.0",
      "3.0",
      "2.0",
      "2.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "87.0"
    ],
    "solution": "z1, z2, z3 = symbols('z1 z2 z3')\neq = abs(z1 - z2)**2 + abs(z1 - z3)**2 + abs(z2 - z3)**2\neq = expand_mul(eq)\neq = eq.subs({abs(z1): 2, abs(z2): 3, abs(z3): 4})\neq = eq.expand()\neq = eq.subs({z1: z1, z2: z2, z3: z3})\nprint(eq)"
  },
  {
    "example_id": 61,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x, y = symbols('x y')\neq = (x + y)**2 - (x + 1)*(y - 1)\nsol = solve(eq, (x, y))\nprint(len(sol))"
  },
  {
    "example_id": 62,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "482.0"
    ],
    "annotated_answers": [
      "936.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq = sqrt(104*sqrt(6) + 468*sqrt(10) + 144*sqrt(15) + 2006)\neq = eq.subs(sqrt(6), 2)\neq = eq.subs(sqrt(10), 3)\neq = eq.subs(sqrt(15), 5)\neq = eq.expand()\neq = eq.subs(a, 1)\neq = eq.subs(b, 1)\neq = eq.subs(c, 1)\neq = eq.expand()\nprint(eq)"
  },
  {
    "example_id": 63,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "# Count the number of positive integers n for which the graph of y = (x+3)(x-7)^5/(x-1)(x-7)^n has a hole at x = 7.\nn = 0\nwhile True:\n    try:\n        if (\n            (7 - 1) ** n\n            * (7 - 3) ** 5\n            / (7 - 7) ** (n + 1)\n           != (7 - 7) ** n * (7 - 1) ** 5 / (7 - 3) ** (n + 1)\n        ):\n            n += 1\n        else:\n            break\n    except ZeroDivisionError:\n        break\nprint(n)"
  },
  {
    "example_id": 64,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "# p(x) = 1 + 2x + 3x^2 + 4x^3 + 5x^4\nprint(5)"
  },
  {
    "example_id": 65,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "expression = abs(5**0.5 + 2*1j)\nprint(expression)"
  },
  {
    "example_id": 66,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "100.0"
    ],
    "solution": "def sequence(n):\n    a1, a2 = 1, 2\n    for i in range(3, n + 1):\n        a = (a1*a2 - 1) / (a2 - a1)\n        a1 = a2\n        a2 = a\n    return a\n\nprint(sequence(100))"
  },
  {
    "example_id": 67,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "505.0"
    ],
    "annotated_answers": [
      "38.0"
    ],
    "solution": "x = symbols('x')\np = x**3 + 3*x**2 + 2*x + 1\np_value = p.subs({x: -3})\np_value = p.subs({x: 4})\np_value = p.subs({x: 5})\np_value = p.subs({x: 7})\nprint(p_value)"
  },
  {
    "example_id": 68,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "23.0"
    ],
    "annotated_answers": [
      "23.0"
    ],
    "solution": "y, c = symbols('y c')\neq = 6*y**3 + 5*y**2 - 16*y + 8\nremainder = sympy.rem(eq, 2*y + 3)\nprint(remainder)"
  },
  {
    "example_id": 69,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "64.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "import cmath\n\na, b, c, d = cmath.rect(1, 0), cmath.rect(1, 0), cmath.rect(1, 0), cmath.rect(1, 0)\n\na, b, c, d = a, b, c, d\n\nexpr = abs((a + b) * (a + c) * (a + d) * (b + c) * (b + d) * (c + d))\n\nprint(expr)"
  },
  {
    "example_id": 70,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "343.0",
      "8743.0"
    ],
    "annotated_answers": [
      "4561.0"
    ],
    "solution": "f = lambda x: x**2 - x + 1\nprint(f(19))\nprint(f(94))"
  },
  {
    "example_id": 71,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "81.0"
    ],
    "annotated_answers": [
      "80.0"
    ],
    "solution": "expression = (3**100 + 2**100) / (3**96 + 2**96)\nprint(int(expression))"
  },
  {
    "example_id": 72,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "6.0",
      "303.0",
      "3.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x = symbols('x')\nf = -3*x**2 + 36*x - 7\nc = solve(f, x)[0]\nprint(c)"
  },
  {
    "example_id": 73,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "6.0",
      "3.0",
      "72.0",
      "6.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "x, y = symbols('x y')\neq = (2/x) - (y/3) - (x/y)\nsolve_eq = solve(eq, x)\nprint(solve_eq[0])"
  },
  {
    "example_id": 74,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x = symbols('x')\neq = (x**2 - 13*x + 22) / (x**2 - 8*x + 12)\nroots = solve(eq, x)\nprint(roots)"
  },
  {
    "example_id": 75,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "8.0",
      "2.0",
      "8.0",
      "3.0",
      "2.0",
      "8.0",
      "8.0",
      "8.0",
      "3.0"
    ],
    "annotated_answers": [
      "384.0"
    ],
    "solution": "x1, x2, x3, x4, x5, x6, x7, x8 = symbols('x_1 x_2 x_3 x_4 x_5 x_6 x_7 x_8')\neq = [x1, x2, x3, x4, x5, x6, x7, x8]\nfor i in range(8):\n    eq[i] = i + 1\n    eq[i] = eq[i] / eq[i-1]\n    print(eq[i])\n\nx_product = eq[0] * eq[1] * eq[2] * eq[3] * eq[4] * eq[5] * eq[6] * eq[7]\nprint(x_product)"
  },
  {
    "example_id": 76,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1000000.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "n = 10**6\nf = lambda x: x**2 + 1\nwhile f(n) <= 10**6:\n    n += 1\nprint(n)"
  },
  {
    "example_id": 77,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "271.72357723577176"
    ],
    "annotated_answers": [
      "272.0"
    ],
    "solution": "from math import factorial\n\ndef binomial_coefficient(n, k):\n    return factorial(n) // (factorial(k) * factorial(n - k))\n\nsum = 0\nfor n in range(17, 1000):\n    sum += binomial_coefficient(n, 15) / binomial_coefficient(n, 17)\n\nprint(sum)"
  },
  {
    "example_id": 78,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0",
      "42.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x = 1\ny = 1\nfraction = (8*x**3 + 27*y**3) / (2*x + 3*y)\nprint(fraction)\n\na = 8*x**2 + 27*y**2\nb = 2*x*y\nc = 2*x**2 + 3*y**2\nprint(a+b+c)"
  },
  {
    "example_id": 79,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-108.0",
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq = x + 108 / (x - y)**3 * (y - z)**2 * z\nmin_value = eq.subs(x, 0).evalf()\nprint(min_value)"
  },
  {
    "example_id": 80,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\neq = a*log(2, 10) + b*log(3, 10) + c*log(5, 10) + d*log(7, 10)\nsol = solve(eq - 2005, [a, b, c, d])\nprint(len(sol))"
  },
  {
    "example_id": 81,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-1.0",
      "0.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "z = -1 + 0j\nexpression = z**49 + z**50 + z**51 + z**52 + z**53\nprint(expression)"
  },
  {
    "example_id": 82,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "def f(n):\n    if n < a:\n        return 4*n+3\n    else:\n        return 7*n-12\na = (7-12)/(4-3)\nprint(a)"
  },
  {
    "example_id": 83,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "66673.0"
    ],
    "solution": "from sympy import sqrt\nexpr = (sqrt(2) + sqrt(3))**12\nrational_terms = [i for i in expr.args if i.is_Rational]\nprint(sum(rational_terms))"
  },
  {
    "example_id": 84,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "104.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\neq1 = a**2 + b**2 - 8\neq2 = c**2 + d**2 - 13\nsolve((eq1, eq2), (a, b, c, d))\nad = a*d\nbc = b*c\nac = a*c\nbd = b*d\nad_bc = ad - bc\nac_bd = ac + bd\neq3 = (ad_bc)**2 + (ac_bd)**2\nprint(eq3)"
  },
  {
    "example_id": 85,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "161.0"
    ],
    "annotated_answers": [
      "48.0"
    ],
    "solution": "x = symbols('x')\nf = (x**7 + 32*x**2 + 128)/(x**3)\nmin_value = f.subs(x, 1)\nprint(min_value)"
  },
  {
    "example_id": 86,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "38.4"
    ],
    "annotated_answers": [
      "336.0"
    ],
    "solution": "# p(1) = 210\n# (x + 10) p(2x) = 8(x - 4) p(x + 6)\n# p(2x) = 8(x - 4) p(x + 6) / (x + 10)\n\np = lambda x: 8 * (x - 4) * (x + 6) / (x + 10)\nprint(p(10))"
  },
  {
    "example_id": 87,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "3.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "a, n = symbols('a n')\neq = a*(1 - a)**n\neq = eq.subs({n: 3})\neq = eq.subs({n: 1})\nprint(eq)"
  },
  {
    "example_id": 88,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "c, x = symbols('c x')\nf = (c*x)/(2*x + 3)\nf_inv = f**(-1)\nprint(solve(f_inv - x, c))"
  },
  {
    "example_id": 89,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-5050.0"
    ],
    "annotated_answers": [
      "-50.0"
    ],
    "solution": "sum = 0\nfor i in range(1, 101):\n    sum += -i\nprint(sum)"
  },
  {
    "example_id": 90,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "from sympy import Poly\nfrom sympy import factor\nfrom sympy import gcd\nfrom sympy import roots\nfrom sympy import symbols\nfrom sympy.abc import x\n\nn = 1\nwhile True:\n    f = x**4 - n*x + 63\n    if len(roots(f)) == 4:\n        break\n    n += 1\n\nprint(n)"
  },
  {
    "example_id": 91,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "6.0",
      "2.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "x, y = symbols('x y')\nexpr = x**2 - 6*x + y**2\nexpr_value = expr.subs([(x + y, 1), (x - y, 1)])\nprint(expr_value)"
  },
  {
    "example_id": 92,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6426.0"
    ],
    "annotated_answers": [
      "508.0"
    ],
    "solution": "a = 0\nb = 0\nc = 0\nd = 0\ne = 0\nf = 42\n\nA = a + b + c + d + e + f\nB = a + 2*b + 3*c + 4*d + 2*e + 2*f\nC = a + 3*b + 6*c + 9*d + 4*e + 6*f\nD = a + 4*b + 10*c + 16*d + 8*e + 24*f\nE = a + 5*b + 15*c + 25*d + 16*e + 120*f\n\nans = (A + B + C + D + E)\n\nprint(ans)"
  },
  {
    "example_id": 93,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "# Finding the value of a such that the polynomial has exactly two distinct complex roots\n# The polynomial can be written as:\n# (x^2 + a^2)(x + a) = x^4 + (a^2 - 1)x^2 + a^3\n# The roots of the polynomial are:\n# r1 = -a +/- sqrt(a^2 - 1)\n# r2 = -a +/- 0\n# The roots are distinct if and only if the two roots are distinct.\n# The sum of all complex values of a such that the polynomial has exactly two distinct complex roots is:\n# a1 = -1 + sqrt(1 - 1) = 0\n# a2 = -1 - sqrt(1 - 1) = -1\n# Hence, the sum of all complex values of a such that the polynomial has exactly two distinct complex roots is:\n# a1 + a2 = 0 + (-1) = -1\nprint(-1)"
  },
  {
    "example_id": 94,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "21.0",
      "2.0",
      "5.0",
      "2.0",
      "1.0",
      "3.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "import sympy as sp\nx = sp.Symbol('x')\neq = x**3 - 3*x - 5\nroots = sp.solve(eq, x)\na, b, c = roots\nabc = a*b*c\nprint(abc)"
  },
  {
    "example_id": 95,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1050.0"
    ],
    "annotated_answers": [
      "1052.0"
    ],
    "solution": "n = 1000\nk = 50\nbinom = binomial(n, k)\nprint(n + k)"
  },
  {
    "example_id": 96,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0",
      "1.0",
      "2.0",
      "1.0",
      "3.0",
      "1.0",
      "4.0",
      "1.0",
      "5.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "from sympy import symbols, solve\nx = symbols('x')\n\ndef find_roots(a, b):\n    eq = x**2 + a*x + b\n    roots = solve(eq, x)\n    return len(roots)\n\nfor a in range(1, 10):\n    for b in range(1, 10):\n        if find_roots(a, b) == 2:\n            print(a, b)"
  },
  {
    "example_id": 97,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "150.0"
    ],
    "annotated_answers": [
      "-48.0"
    ],
    "solution": "x = symbols('x')\nf = x**4 + 2*x**3 - 3*x**2 - 4*x + 154\nf_roots = solve(f, x)\nf_1 = f.subs(x, 1)\nprint(f_1)"
  },
  {
    "example_id": 98,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0",
      "8.0"
    ],
    "annotated_answers": [
      "-81.0"
    ],
    "solution": "a, b = symbols('a b')\neq = (a + b*I)**8 + (a - b*I)**8\nprint(eq)"
  },
  {
    "example_id": 99,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "24.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a, b, c = 0, 1, 24\nn = 11\ncommon_ratio = c/b\nprint(common_ratio)"
  },
  {
    "example_id": 100,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "50.0"
    ],
    "solution": "sum = 0\nfor i in range(100, 1):\n    sum += i\nprint(sum)"
  },
  {
    "example_id": 101,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "from sympy import *\nx = symbols('x')\nf = 5*x - 7\nf = f.expand()\nf = f.factor()\nA, B, C = f.coeffs()\nprint(A+B+C)"
  },
  {
    "example_id": 102,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "20.195121951219512"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "a1 = 5\nb1 = 4\na2 = a1 + 10*b1/((a1**2) + (b1**2))\nb2 = b1 + 10*a1/((a1**2) + (b1**2))\n\nsum = a1 + b1 + a2 + b2\n\nprint(sum)"
  },
  {
    "example_id": 103,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "4.0",
      "0.0",
      "0.0",
      "0.0"
    ],
    "annotated_answers": [
      "80.0"
    ],
    "solution": "a = 3\nb = 4\nr = 0\ns = 0\n\n# 0th power\nexpression = r + 1j * s\nprint(expression)\n\n# 1st power\nexpression = r - a * r + a * s + b\nprint(expression)\n\n# 2nd power\nexpression = r - a * r - a * s + b * r + s * s\nprint(expression)\n\n# 3rd power\nexpression = r - a * r - a * s - b * r + s * s\nprint(expression)\n\nprint(expression)"
  },
  {
    "example_id": 104,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "1.0",
      "2.0",
      "2.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = x + y - 2\neq2 = x**5 + y**5 - 82\nsol = solve([eq1, eq2], [x, y])\nx_sum = sum([x**2 for x, y in sol])\ny_sum = sum([y**2 for x, y in sol])\nprint(x_sum + y_sum)"
  },
  {
    "example_id": 105,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "a = 1 - 2j\nb = 1 + 2j\nexpression = abs(a/b)\nprint(expression)"
  },
  {
    "example_id": 106,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "x = symbols('x')\ng = x**3 - 14*x**2 + 18*x + 72\nroot = solve(g, x)\nprint(root[0])"
  },
  {
    "example_id": 107,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "4.0",
      "2.0",
      "2.0",
      "4.0",
      "5.0",
      "2.0",
      "2.0",
      "15.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "from sympy import symbols, solve\nfrom sympy import Min\n\nx, y, z = symbols('x y z')\nexpr = 2*x**2 + 2*y**2 + 5*z**2 - 2*x*y - 4*y*z - 4*x - 2*z + 15\nprint(Min(expr))"
  },
  {
    "example_id": 108,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "30.0",
      "-22.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "z = complex(real=0, imag=0)\nexpression = (z-3)**2 + (z-5+2j)**2 + (z-1+1j)**2\nprint(expression)"
  },
  {
    "example_id": 109,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "5.0",
      "2.0",
      "2.0",
      "5.0",
      "1.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "from sympy import Symbol, sqrt, Min\n\nx = Symbol('x')\nf = sqrt(5*x**2 + 2*x*sqrt(5) + 1) + x*sqrt(5)\n\nprint(Min(f, x))"
  },
  {
    "example_id": 110,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "2.0",
      "1.0",
      "3.0",
      "-2.0",
      "2.0",
      "1.0",
      "3.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq1 = (a + 1)*(b + 1)*(c + 1) - 1\neq2 = (a + 2)*(b + 2)*(c + 2) - 2\neq3 = (a + 3)*(b + 3)*(c + 3) - 3\nsol = solve([eq1, eq2, eq3], [a, b, c])\nprint(sol)"
  },
  {
    "example_id": 111,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "# f(x + f(y + z)) + f(f(x + y) + z) = 2y\nf = lambda x, y, z: 2*y\n\n# f(5) = 5\nf5 = f(1, 1, 1)\n\n# n = 1\nn = 1\n\n# s = f(5)\ns = f5\n\nprint(n*s)"
  },
  {
    "example_id": 112,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0",
      "1.0",
      "-14.0",
      "-14.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "a = 1\nb = 2\nc = 3\nd = 2\ne = 1\nf = 3\ng = 2\n\nx_sq = d*e - f*g\nx = d*g - e*f\ny = a*e*f - b*d*g - c*f*g + c*e*f\n\nprint(x_sq)\nprint(x)\nprint(y)\n\nab = x*y\nprint(ab)"
  },
  {
    "example_id": 113,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "3.0",
      "-4.0",
      "9.0",
      "3.0",
      "12.0",
      "3.0",
      "6.0",
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq = (log(b, a)**3 + log(c, b)**3 + log(a, c)**3)\neq_solve = solve(eq, a, b, c)\nprint(eq_solve)"
  },
  {
    "example_id": 114,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2010.5"
    ],
    "annotated_answers": [
      "2014.0"
    ],
    "solution": "a = 2011\nb = 2\nc = 1\nexpression = a - 1/b**c\nprint(expression)"
  },
  {
    "example_id": 115,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.5"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "# Distance between foci = semi-major axis / 2\nsemi_major_axis = 15 / 2\nprint(semi_major_axis)"
  },
  {
    "example_id": 116,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "6.0",
      "2.0",
      "6.0",
      "1.0",
      "6.0",
      "3.0",
      "2.0",
      "1.0",
      "6.0",
      "2.0"
    ],
    "annotated_answers": [
      "-6.0"
    ],
    "solution": "x = symbols('x')\nP = x**4 + x**3 + x**2 + x + 1\nroot = sympy.sqrt(1 + sympy.sqrt(6))\nprint(P.subs(x, root))"
  },
  {
    "example_id": 117,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "x = symbols('x')\ny1 = x**4 - 5*x**2 - x + 4\ny2 = x**2 - 3*x\n\nsolution = y1.subs(x, 0) + y1.subs(x, 1) + y2.subs(x, 0) + y2.subs(x, 1)\nprint(solution)"
  },
  {
    "example_id": 118,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "def f(x):\n    return (abs(x**2 - 6*x + 8) + abs(x**2 + x - 6))\n\nfor x in range(-10, 10):\n    if f(x) == 0:\n        print(x)"
  },
  {
    "example_id": 119,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "3.0",
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "z = symbols('z')\neq = z + 1/z - 1\nz_value = solve(eq, z)\nprint(z_value[0]**3)"
  },
  {
    "example_id": 120,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a, b, c = symbols('a b c')\nf = (b*c)/a**2 + (a*c)/b**2 + (a*b)/c**2\nprint(f)"
  },
  {
    "example_id": 121,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x = symbols('x')\neq = sympy.sqrt(x + sympy.sqrt(3*x + 6)) + sympy.sqrt(x - sympy.sqrt(3*x + 6))\nsol = solve(eq - 6, x)\nprint(sol)"
  },
  {
    "example_id": 122,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "-5.0"
    ],
    "solution": "def f(x, y):\n    if x == 1 and y == 2:\n        return 1\n    else:\n        return x + y * f(y, x)\n\nprint(f(1, 2))"
  },
  {
    "example_id": 123,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "a, b = symbols('a b')\neq1 = a + (17*a + 6*b)/(a**2 + b**2) - 6\neq2 = b + (6*a - 17*b)/(a**2 + b**2)\neqs = [eq1, eq2]\nsol = solve(eqs, [a, b])\ns = 0\nfor i in sol:\n    s += i[0] + i[1]\nprint(s)"
  },
  {
    "example_id": 124,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "405.0"
    ],
    "annotated_answers": [
      "405.0"
    ],
    "solution": "z = -324 + 243j\nprint(abs(z))"
  },
  {
    "example_id": 125,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "3.0",
      "4.0",
      "5.0",
      "6.0",
      "7.0",
      "8.0",
      "9.0",
      "10.0"
    ],
    "annotated_answers": [
      "1004.0"
    ],
    "solution": "n = 1\nwhile n <= 2010:\n    product = 1\n    for i in range(1, n+1):\n        product *= 1 + 1/i\n    if product.is_integer():\n        print(n)\n    n += 1"
  },
  {
    "example_id": 126,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "2150.0"
    ],
    "solution": "c2 = 0\nc1 = 0\nc0 = 1\nx = 3\nexpression = c2 * (x - 3)**2 + c1 * (x - 3) + c0\nprint(expression)"
  },
  {
    "example_id": 127,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "import itertools\n\ndef ordered_triples(n):\n    for x, y, z in itertools.product(range(1, n+1), repeat=3):\n        if x + 1/y + 1/z == 8:\n            yield x, y, z\n\nprint(sum(1 for x, y, z in ordered_triples(10)))"
  },
  {
    "example_id": 128,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "34.0"
    ],
    "annotated_answers": [
      "676.0"
    ],
    "solution": "def f(x):\n    return x**2 + 2*x - 1\n\nprint(f(5))"
  },
  {
    "example_id": 129,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6137568.0",
      "6137568.0",
      "6137568.0",
      "6137568.0",
      "6137568.0",
      "6137568.0",
      "6137568.0",
      "6137568.0"
    ],
    "annotated_answers": [
      "348.0"
    ],
    "solution": "a1 = 1440\na2 = 1716\nb1 = 1848\nb2 = 2060\n\ndef get_n_term(a1, a2, b1, b2, n):\n    return a1 * b2 + a2 * b1\n\nfor i in range(8):\n    print(get_n_term(a1, a2, b1, b2, i+1))"
  },
  {
    "example_id": 130,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "3.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "2914.0",
      "2915.0",
      "27.0"
    ],
    "annotated_answers": [
      "216.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 + x**3\nsol = solve(eq - 216, x)\nprint(sol)"
  },
  {
    "example_id": 131,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "3.0",
      "2.0",
      "3.0",
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "89.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = x**4*y**5 + y**4*x**5 - 810\neq2 = x**3*y**6 + y**3*x**6 - 945\nsolve([eq1, eq2], [x, y])\nprint(2*x**3 + (x*y)**3 + 2*y**3)"
  },
  {
    "example_id": 132,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0",
      "2.0",
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x, y = symbols('x y')\nG = x + (y**2)/(1 - y)\nG_prime = y + (x**2)/(1 - x)\neq = G - G_prime\nx_value, y_value = solve(eq, [x, y])\nprint(x_value[0] + y_value[0])"
  },
  {
    "example_id": 133,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "x = symbols('x')\neq = 9*x**3 - 20*x\nroot = sympy.sqrt(2)\nroot_eq = eq + 8*root\nsol = solve(root_eq, x)\nsol_1 = sol[0]\nsol_2 = sol[1]\nsol_3 = sol[2]\na, b, c = symbols('a b c')\na_value = sol_1.subs(x, 0)\nb_value = sol_2.subs(x, 0)\nc_value = sol_3.subs(x, 0)\na_value = int(a_value)\nb_value = int(b_value)\nc_value = int(c_value)\na_plus_b_plus_c = a_value + b_value + c_value\nprint(a_plus_b_plus_c)"
  },
  {
    "example_id": 134,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "n = 1\nwhile True:\n    if sum(i*j for i, j in zip(range(1, n + 1), range(1, n + 1)[::-1])) <= 0:\n        n += 1\n    else:\n        break\nprint(n)"
  },
  {
    "example_id": 135,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "1.0",
      "3.0",
      "2.0",
      "-4.0",
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "from sympy import symbols, solve\n\nx, y, z = symbols('x y z')\n\neq = x**4 + y**4 + z**4 - 4*x*y*z\n\nsolution = solve(eq - 1, (x, y, z))\nprint(solution)"
  },
  {
    "example_id": 136,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-77.0"
    ],
    "annotated_answers": [
      "763.0"
    ],
    "solution": "x = symbols('x')\n\ndef P(n, x):\n    if n == 0:\n        return x**3 + 313*x**2 - 77*x - 8\n    else:\n        return P(n - 1, x - n)\n\nprint(P(20, x).coeff(x))"
  },
  {
    "example_id": 137,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.265732014659642"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "from math import pi\n\ndef circular_sector_area(r, theta):\n    return (r**2 * theta / 2)\n\ndef find_max_area(r):\n    max_theta = 0\n    max_area = 0\n\n    for theta in range(0, 360):\n        area = circular_sector_area(r, theta)\n        if area > max_area:\n            max_area = area\n            max_theta = theta\n\n    return max_theta * pi / 180\n\nprint(find_max_area(1))"
  },
  {
    "example_id": 138,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-45.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\nfloor = sympy.floor(5*x)\nprint(floor.subs(x, -9))"
  },
  {
    "example_id": 139,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.40625"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "def largest_mean(numbers):\n    sum_numbers = sum(numbers)\n    sum_squares = sum(number**2 for number in numbers)\n    mean = sum_numbers / len(numbers)\n    mean_squared = mean**2\n    difference = abs(sum_squares - sum_numbers)\n    return (mean + mean_squared / difference) / 2\n\nnumbers = [1, 2, 3, 4]\nprint(largest_mean(numbers))"
  },
  {
    "example_id": 140,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "from sympy import simplify\nfrom sympy.abc import a, b, c, d\n\nexpression = a**2 + b**2 + c**2 + d**2\nconstraint = a + b + c + d - 1\nmaximum = simplify(expression)\nprint(maximum)"
  },
  {
    "example_id": 141,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "7.0",
      "4.0",
      "2.0",
      "0.0",
      "4.0",
      "5.0",
      "7.0",
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "from sympy import symbols, solve\nfrom sympy import expand, factor\nfrom sympy import diff\n\nx = symbols('x')\neq = x**5 + 7*x**4 - 2\nroots = solve(eq, x)\n\na, b, c, d, e = roots\n\nnumerator = (a**4)*(b**4)*(c**4)*(d**4)*(e**4)\ndenominator = (a - b)*(a - c)*(a - d)*(a - e)\ndenominator *= (b - a)*(b - c)*(b - d)*(b - e)\ndenominator *= (c - a)*(c - b)*(c - d)*(c - e)\ndenominator *= (d - a)*(d - b)*(d - c)*(d - e)\ndenominator *= (e - a)*(e - b)*(e - c)*(e - d)\n\nprint(expand(numerator/denominator))"
  },
  {
    "example_id": 142,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4003.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "# Define a function for the sequence\ndef seq(n):\n    return 2001 + 2002 + 2003 - 2003\n\n# Get the nth term\nnth_term = seq(2004)\nprint(nth_term)"
  },
  {
    "example_id": 143,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "15.0",
      "13.0",
      "14.0",
      "30.0",
      "13.0",
      "850.0",
      "12.0",
      "205.0",
      "11.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "from sympy import simplify, expand\nfrom sympy.abc import x\nf = (x + 8) * (x + 5)**2 * (x + 1)**3 * x**5 * (x - 3)**2 / (x + 7) * (x + 5)**2 * (x + 1) * x * (x - 3)**3 * (x - 4)\nf_expand = expand(f)\nf_simplify = simplify(f_expand)\nprint(f_simplify)"
  },
  {
    "example_id": 144,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "# Solution:\n# 2 solutions"
  },
  {
    "example_id": 145,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.1835049661919412",
      "16",
      "20.0"
    ],
    "annotated_answers": [
      "553.0"
    ],
    "solution": "from sympy import floor, sqrt\n\nk = 20\nn = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\nfor i in range(1, 70):\n    n.append(floor(sqrt(n[i-1])**3 + 1))\n\nmax_n = max(n)\nmax_n_k = max_n / k\n\nprint(max_n_k)"
  },
  {
    "example_id": 146,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "169.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "z = 156 + 65j\nprint(abs(z))"
  },
  {
    "example_id": 147,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "4.0",
      "3.0",
      "8.0",
      "2.0",
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "from sympy import*\nx = symbols('x')\np = x**8 + 98*x**4 + 1\nq = p.factor()\np1, q1 = q.as_coeff_mul()\nprint(p1 + q1[0])"
  },
  {
    "example_id": 148,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "3.0",
      "4.0",
      "2.0",
      "11.0",
      "5.0",
      "3.0",
      "3.0",
      "15.0",
      "20.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\nf = (6*x**3 + 4*x**2 - 11*x + 5)/(3*x**3 - 15*x + 20)\nc = f.as_expr()\nprint(c)"
  },
  {
    "example_id": 149,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "print((1990**3 - 1000**3 - 990**3)/(1990*1000*990))"
  },
  {
    "example_id": 150,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "0.0",
      "0.0"
    ],
    "annotated_answers": [
      "-9.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq1 = x + y + z\neq2 = x*y*z\neq3 = x**3*y + y**3*z + z**3*x\neq = Eq(eq1, 0)\neq = Eq(eq2, 2)\neq = solve([eq1, eq2, eq3], [x, y, z])\nprint(eq[0])"
  },
  {
    "example_id": 151,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "104.0"
    ],
    "solution": "N = 1\nwhile True:\n    if (N-1)**2 + (N-2)**2 > N**2:\n        break\n    N += 1\nprint(N)"
  },
  {
    "example_id": 152,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "100.0"
    ],
    "solution": "a, b, c = symbols('a b c')\ndenominator = a*b*c\nnumerator = (a + b + c)*((a + b)**2 + (a + b + 4*c)**2)\neq = numerator/denominator\nsol = solve(eq, a)\nprint(sol[0])"
  },
  {
    "example_id": 153,
    "selected_mode": "import",
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "67.0"
    ],
    "solution": "n = symbols('n')\nx = symbols('x')\nf = x**2*n + x*n + 1 + (x + 1)**2*n\nf = factor(f)\nf = f.expand()\nf = expand(f)\nf = f.subs(x, 1)\nf = f.subs(n, 1)\nprint(f)"
  },
  {
    "example_id": 154,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "z = 2\nw = 5\nlargest_value = abs(z+w)\nprint(largest_value)"
  },
  {
    "example_id": 155,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0"
    ],
    "annotated_answers": [
      "1700.0"
    ],
    "solution": "x = int(9)\nwhile True:\n    if int(x / 19) == 0:\n        break\n    if int(x / 89) == 0:\n        break\n    x += 1\nprint(x)"
  },
  {
    "example_id": 156,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0",
      "2.0",
      "0.5"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "a, b, c = symbols('a b c')\nA = (a * (b**2 - 4*a*c)**(1/2))/(2*a)\nB = (a * (b**2 - 4*a*c)**(1/2))/(2*a)\nprint(A + B)"
  },
  {
    "example_id": 157,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "14832.0"
    ],
    "annotated_answers": [
      "1112.0"
    ],
    "solution": "x = symbols('x')\np = x**4 + 3*x**3 + 3*x**2 + 11*x + 3\np_value = p.subs(x, -2) + 7*p.subs(x, 6)\nprint(p_value)"
  },
  {
    "example_id": 158,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "170.0",
      "0.0764705882352941",
      "0.00588235294117647",
      "170.0",
      "0.0764705882352941",
      "0.00588235294117647"
    ],
    "annotated_answers": [
      "850.0"
    ],
    "solution": "x, y = symbols('x y')\neq = x**10 + (13*x - 1)**10\nroot = sympy.roots(eq, x)\nroot = [i.n() for i in root]\nprint(sum([1/i for i in root]))"
  },
  {
    "example_id": 159,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.25"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "n = 1\ns = 1\n\nwhile True:\n    n += 1\n    s += 1/n**2\n    if s - int(s) > 0.00001:\n        break\n\nprint(s)"
  },
  {
    "example_id": 160,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "def get_divisors(n):\n    divisors = []\n    for i in range(1, int(n**0.5) + 1):\n        if n % i == 0:\n            divisors.append(i)\n            if i*i!= n:\n                divisors.append(n // i)\n    return divisors\n\ndivisors = get_divisors(2)\nprint(len(divisors))"
  },
  {
    "example_id": 161,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "13535.0"
    ],
    "annotated_answers": [
      "13535.0"
    ],
    "solution": "from sympy import sqrt\n\nx = (sqrt(7) + sqrt(5))**6\n\n# We want to find the greatest integer less than x.\n# Since we know x is a positive integer, we can round\n# down to the nearest integer to find the greatest\n# integer less than x.\nprint(int(x))"
  },
  {
    "example_id": 162,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2014.0",
      "2.0",
      "2016.0"
    ],
    "annotated_answers": [
      "1209.0"
    ],
    "solution": "x, y = symbols('x y')\nf = Function('f')\nf_expr = f(4*x*y)\nf_expr = 2*y*(f(x + y) + f(x - y))\nf_expr = f_expr.subs(f(5), 3)\nf_expr = f_expr.subs(x, 2015)\nf_expr = f_expr.subs(y, 1)\nprint(f_expr)"
  },
  {
    "example_id": 163,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "6.0",
      "4.0",
      "5.0",
      "3.0",
      "3.0",
      "2.0",
      "1.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "from sympy import Symbol, simplify, expand, collect\n\nx = Symbol('x', real=True)\nq = Symbol('q', real=True)\nf = (q*(x**6-4*x**5+3*x**3+x**2-1))\n\nprint(simplify(expand(f)))"
  },
  {
    "example_id": 164,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.3636363636363635",
      "0.36363636363636365"
    ],
    "annotated_answers": [
      "56.0"
    ],
    "solution": "z1 = 18 + 83j\nz2 = 18 + 39j\nz3 = 78 + 99j\n\n\ndef get_real_part(z):\n    numerator = (z3 - z1) * (z - z2)\n    denominator = (z2 - z1) * (z - z3)\n    return numerator / denominator\n\n\nz = 18 + 99j\nreal_part = get_real_part(z)\nprint(real_part)"
  },
  {
    "example_id": 165,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1354.0"
    ],
    "annotated_answers": [
      "92.0"
    ],
    "solution": "sum = 0\nfor a in range(1, 5):\n    for b in range(a, 5):\n        for c in range(b, 5):\n            for d in range(c, 5):\n                if d <= c <= b <= a <= 4:\n                    sum += 4**4 + a*3**3 + b*2**2 + c*1**1 + d*0**0\nprint(sum)"
  },
  {
    "example_id": 166,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "4.0",
      "2.0",
      "2.0",
      "4.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\neq1 = a**2 + b**2 - 3\neq2 = c**2 + d**2 - 4\neq1_solve = solve(eq1, a, b)\neq2_solve = solve(eq2, c, d)\neq3 = (eq1_solve[0][0]*eq2_solve[0][0] + eq1_solve[0][1]*eq2_solve[0][1])**2 + (eq1_solve[0][0]*eq2_solve[0][1] - eq1_solve[0][1]*eq2_solve[0][0])**2\nprint(eq3)"
  },
  {
    "example_id": 167,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "-1.0",
      "2.0",
      "-1.0",
      "3.0",
      "-1.0",
      "4.0",
      "-1.0",
      "5.0",
      "-1.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "import math\n\ndef find_k(k):\n    for x in range(1, k+1):\n        for y in range(1, k+1):\n            if x**2 + y**2 == k**2 and x*y == k:\n                return k\n    return -1\n\nfor k in range(1, 100):\n    print(k, find_k(k))"
  },
  {
    "example_id": 168,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0",
      "2.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "from sympy import log\nprint(log(3, 2) * log(4, 3) * log(5, 4) * log(6, 5) * log(7, 6) * log(8, 7))"
  },
  {
    "example_id": 169,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "# Number of nonreal zeros of x^12 + ax^8 + bx^4 + c\n# a = 1\n# b = 2\n# c = 3\n# x^12 + x^8 + x^4 + 1 = (x^4 + 1)(x^8 + 1) = 0\n# x^4 + 1 = 0 or x^8 + 1 = 0\n# x^4 = -1 or x^8 = -1\n# x = -1 or x = 1\n# Hence, the number of nonreal zeros of x^12 + ax^8 + bx^4 + c is 2"
  },
  {
    "example_id": 170,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "3.0",
      "75.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "100.0",
      "2.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "z = symbols('z')\neq = z**3 - (100+75*I)\nabs_z = sympy.sqrt(sympy.re(eq)**2 + sympy.im(eq)**2)\nprint(abs_z)"
  },
  {
    "example_id": 171,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "43.0",
      "4.0",
      "445.0",
      "4.0",
      "11641.0",
      "8.0",
      "679661.0",
      "64.0",
      "165.0",
      "640247.0"
    ],
    "annotated_answers": [
      "43.0"
    ],
    "solution": "from sympy import solve\nfrom sympy.abc import x\n\neq = (1/(x-1)) + (1/(x-5)) + (1/(x-10)) + (1/(x-25)) - 2\nroots = solve(eq)\nprint(roots)"
  },
  {
    "example_id": 172,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "from sympy import symbols, solve, sqrt\nx, y, z = symbols('x y z')\neq = x*y*z - 2\nexpr = sqrt(x**2 + y**2 + z**2)\ndist = solve(eq, x, y, z, expr)\nprint(dist)"
  },
  {
    "example_id": 173,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "c1 = -1/2\nc2 = 1/2\nc3 = 1\nprint(c1 + c2 + c3)"
  },
  {
    "example_id": 174,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "384.0"
    ],
    "annotated_answers": [
      "384.0"
    ],
    "solution": "expr = 2009**4 - 4*2007**4 + 6*2005**4 - 4*2003**4 + 2001**4\nprint(expr)"
  },
  {
    "example_id": 175,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "4.0",
      "5.0",
      "6.0",
      "7.0",
      "8.0",
      "9.0",
      "10.0",
      "11.0",
      "12.0"
    ],
    "annotated_answers": [
      "1000.0"
    ],
    "solution": "for m in range(1, 1001):\n    for n in range(1, m + 1):\n        if m * n > m + n:\n            print(m)\n            break"
  },
  {
    "example_id": 176,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "560.9999999999999"
    ],
    "annotated_answers": [
      "561.0"
    ],
    "solution": "a, b = symbols('a b')\na_seq = [1, 1]\nb_seq = [1, 3]\nfor n in range(2, 33):\n    a_seq.append(a_seq[n - 1] + a_seq[n - 1]**2/a_seq[n - 2])\n    b_seq.append(b_seq[n - 1] + b_seq[n - 1]**2/b_seq[n - 2])\nprint(b_seq[32]/a_seq[32])"
  },
  {
    "example_id": 177,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "40.0"
    ],
    "solution": "a = 1\nb = 1\nexpression = a**2 + b**2\nprint(expression)"
  },
  {
    "example_id": 178,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2011.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "1.0",
      "111.0",
      "9.0",
      "1.0",
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a, b = symbols('a b')\nx = symbols('x')\neq = (1/(x-2009) + 1/(x-2010) + 1/(x-2011) - 1)\nsol = solve(eq, x)\nprint(sol)"
  },
  {
    "example_id": 179,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "6.0",
      "44.0",
      "5.0",
      "196.0",
      "4.0",
      "198.0",
      "3.0",
      "68.0",
      "2.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "from sympy import symbols, solve\nx = symbols('x')\neq = (1/(7 - x)*(1 + x)*(1 - x) + 3*x**2 - 18*x - 22/(x**2 - 1)*(x - 7) + 3/(x - 2) - 3/(x - 1)*(x - 2))\nsol = solve(eq, x)\nprint(sol)"
  },
  {
    "example_id": 180,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = 3**(2*x) + 19 == 10**x\nsol = solve(eq, x)\nprint(sol)"
  },
  {
    "example_id": 181,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-2.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "x = symbols('x')\neq = (2*x**2 + x + 3)/(x**2 + x + 1) - (2*x + 1)/(x + 1)\neq = simplify(eq)\nx_value = solve(eq, x)\nprint(x_value[0])"
  },
  {
    "example_id": 182,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "8.0",
      "2.0",
      "8.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "27.0"
    ],
    "solution": "x = symbols('x')\nlog2_log8 = log(log(8, 2), 2)\nlog8_log2 = log(log(2, 8), 8)\nlog2_log8_squared = (log2_log8)**2\nlog8_log2_squared = (log8_log2)**2\n\nprint(log2_log8_squared - log8_log2_squared)"
  },
  {
    "example_id": 183,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.8333333333333335"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "A = 3\nB = 1\nC = 1\nP = 4\nQ = 2\n\nroot1 = (A + B + C) / (P + Q)\nroot2 = (A - B + C) / (P - Q)\nroot3 = (A + B - C) / (P + Q)\n\nprint(root1 + root2 + root3)"
  },
  {
    "example_id": 184,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "3.0",
      "2.0",
      "3.0",
      "2.0",
      "15.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq1 = a**3 - 2*a - 5\neq2 = b**3 - 2*b - 5\neq3 = c**3 - 2*c - 5\nsum = sympy.Add(eq1, eq2, eq3)\nprint(sum)"
  },
  {
    "example_id": 185,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a = -1\nexpression = a**3 + 6*a + 3*a**2 + 3*a + 1\nif expression == 0:\n    print(a)"
  },
  {
    "example_id": 186,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0",
      "2.0",
      "3.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "3.0",
      "2.0",
      "3.0",
      "2.0",
      "4.0",
      "3.0",
      "9.0",
      "2.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x, k = symbols('x k')\neq1 = (x - 2)**4 - (x - 2)\neq2 = x**2 - k*x + k\nsol = solve([eq1, eq2], [x, k])\nprint(sol)"
  },
  {
    "example_id": 187,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0",
      "3.0",
      "1.0",
      "3.0"
    ],
    "annotated_answers": [
      "64.0"
    ],
    "solution": "import sympy\nfrom sympy import symbols, sqrt\nx = symbols('x')\neq = -2 - 2*sqrt(3)*I\neq = eq**3\neq = abs(eq)\neq = simplify(eq)\nprint(eq)"
  },
  {
    "example_id": 188,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "from sympy import symbols, poly, log, Integer, prime\n\n# The polynomial\nP = poly(log(1) + 1, log(2) + 1, log(3) + 1, log(4) + 1)\n\n# Find A, B, C\nAB, BC, AC = symbols('AB BC AC')\nsolve(P - (AB*log(BC/AC)), AB)\nsolve(P - (AB*log(BC/AC)), BC)\nsolve(P - (AB*log(BC/AC)), AC)\n\n# Find A + B + C\nprint(AB + BC + AC)"
  },
  {
    "example_id": 189,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3628800.0"
    ],
    "annotated_answers": [
      "512.0"
    ],
    "solution": "def product(n):\n    product = 1\n    for i in range(1, n+1):\n        product *= i\n    return product\n\nprint(product(10))"
  },
  {
    "example_id": 190,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq1 = x*y*z - 4\neq2 = x**3 + y**3 + z**3 - 4\neq3 = x**2*y + x*y**2 + x**2*z + x*z**2 + y**2*z + y*z**2 - 12\nsol = solve([eq1, eq2, eq3], [x, y, z])\nprint(sol[0][0] + sol[0][1] + sol[0][2])"
  },
  {
    "example_id": 191,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0",
      "2.0",
      "5.0",
      "9.0",
      "3.0",
      "5.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = log(x-y, 6) + log(x+y, 6) - 2\neq2 = log(5*x, y) - 2\nsol = solve([eq1, eq2], [x, y])\nprint(sol)"
  },
  {
    "example_id": 192,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "743.0"
    ],
    "solution": "r = symbols('r')\nfloor_sum = 0\nfor i in range(1, 92):\n    floor_sum += sympy.floor(r + i/100)\n\nsolve(floor_sum - 546, sympy.floor(100*r))"
  },
  {
    "example_id": 193,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "16.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\neq = (a + b + c + d) * (1/a + 1/b + 1/c + 1/d)\nmin_value = eq.subs({a: 1, b: 1, c: 1, d: 1})\nprint(min_value)"
  },
  {
    "example_id": 194,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.33748060995284",
      "1.0",
      "4.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "z = symbols('z')\neq = z**4 - (64/5 - 48/5)*I\nsol = solve(eq, z)\nprint(sol[0])"
  },
  {
    "example_id": 195,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "1.0",
      "2.0",
      "1.0",
      "1.0",
      "1.0",
      "-1.0",
      "-1.0",
      "-1.0",
      "-1.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "def get_roots(a3, a2, a1):\n    roots = []\n    for i in range(1, 4):\n        root = -a3 // (a2 ** i)\n        if root % 1 == 0:\n            roots.append(root)\n    for i in range(1, 3):\n        root = -a2 // (a1 ** i)\n        if root % 1 == 0:\n            roots.append(root)\n    return roots\n\n\ndef main():\n    for a3 in range(1, 10):\n        for a2 in range(1, 10):\n            for a1 in range(1, 10):\n                roots = get_roots(a3, a2, a1)\n                if len(roots) > 0:\n                    print(\"For a3 =\", a3, \"a2 =\", a2, \"a1 =\", a1, \"roots =\", roots)\n\n\nif __name__ == \"__main__\":\n    main()"
  },
  {
    "example_id": 196,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "17146.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "n = 0\nwhile True:\n    n += 1\n    r = 1/1000\n    if (n+r)**3 % 1 == 0:\n        break\nprint(n)"
  },
  {
    "example_id": 197,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4757.177377517636"
    ],
    "annotated_answers": [
      "-50.0"
    ],
    "solution": "expression = 0\nfor i in range(1, 99):\n    expression += (i**2 / (i + 1))\nprint(expression)"
  },
  {
    "example_id": 198,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "10.0",
      "2.0",
      "2.0",
      "10.0",
      "1.0",
      "2.0",
      "2.0",
      "10.0",
      "2.0",
      "2.0",
      "10.0",
      "1.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq = x*y + x*z + y*z - 1\nsol = solve(eq, [x, y, z])\nprint(sol)\n\nx, y, z = sol[0]\nf = 10*x**2 + 10*y**2 + z**2\nprint(f)\nprint(f.subs(x, sol[0][0]).subs(y, sol[0][1]).subs(z, sol[0][2]))"
  },
  {
    "example_id": 199,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "x = symbols('x')\ne = x**2\no = x**2\nf = e + o\nf_value = f.subs(x, 2)\nprint(f_value)"
  },
  {
    "example_id": 200,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "199.0"
    ],
    "solution": "x_list = [x for x in range(1, 10000) if x**2 + 10000*x == 10000*x]\nprint(len(x_list))"
  },
  {
    "example_id": 201,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "# Brute Force\ndef roots(n):\n    for i in range(1, n+1):\n        if pow(i, n) == 1:\n            print(i)\n\nroots(42)"
  },
  {
    "example_id": 202,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "a, b, x, y = symbols('a b x y')\nl = a*x + b\nl_1 = l.subs(x, x-3) + 2\nl_1.subs({(x, 5), (y, 8)})\nl_1.subs({(x, 7), (y, 14)})\na_b = l_1.coeff(x) - l_1.coeff(y)\nprint(a_b)"
  },
  {
    "example_id": 203,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-8.0",
      "3.0",
      "76.0",
      "3.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "9.0",
      "457.0"
    ],
    "annotated_answers": [
      "-80.0"
    ],
    "solution": "x = symbols('x')\nc = solve(x**3 + 8*x**2 - 4*x + 1)[0]\nprint(c)"
  },
  {
    "example_id": 204,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "2018.0",
      "2.0",
      "2018.0",
      "1.0",
      "2.0",
      "2018.0",
      "2.0",
      "2.0",
      "2018.0",
      "3.0",
      "2.0",
      "4036.0",
      "3.0"
    ],
    "annotated_answers": [
      "8080.0"
    ],
    "solution": "x, y = symbols('x y')\nf = (x + 1/y)*(x + 1/y + 2018) + (y + 1/x)*(y + 1/x + 2018)\nf_prime = diff(f, x)\nf_min = f_prime.subs(x, 0)\nf_min_value = f.subs(x, f_min)\nprint(f_min_value)"
  },
  {
    "example_id": 205,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "x0, x = symbols('x_0 x')\neq = x/ (1 - x)\nx12345 = solve(eq, x, dict=True)[-1][x]\nprint(x12345)"
  },
  {
    "example_id": 206,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "30.0"
    ],
    "solution": "from sympy import symbols, sqrt, solve\n\nx, y = symbols('x y')\n\ncircle = x**2 + y**2 - 1\n\nAB = 2*sqrt(2)\nAC = 2*sqrt(2)\nBD = 2*sqrt(2)\nCD = 2*sqrt(2)\n\nABCD = sqrt(AB**2 + CD**2)\n\nAB = sqrt(4)\nAC = sqrt(4)\nBD = sqrt(4)\nCD = sqrt(4)\n\nside_length = (ABCD - AC - BD - CD) / (AB + CD)\n\na, b, c, d = symbols('a b c d')\n\neq = side_length - (a*sqrt(b) - c)/d\n\nsolution = solve(eq, a, b, c, d)\n\nprint(solution)"
  },
  {
    "example_id": 207,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = 1\nS = 1/x\nprint(S)"
  },
  {
    "example_id": 208,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "15.0"
    ],
    "annotated_answers": [
      "-63.0"
    ],
    "solution": "a, b, c = symbols('a b c')\nconseq_arith = [a + 1, b + 1, c + 1]\nconseq_geom = [3*a + b, 3*b + c, 3*c + a]\neq1 = abc - 17955\neq2 = conseq_arith[0]*conseq_arith[1]*conseq_arith[2] - conseq_geom[0]*conseq_geom[1]*conseq_geom[2]\neq3 = conseq_arith[0]*conseq_arith[1]*conseq_arith[2] - conseq_geom[0]*conseq_geom[1]*conseq_geom[2]\n\nsol = solve([eq1, eq2, eq3], [a, b, c])\n\nprint(sol[0][a] + sol[0][b] + sol[0][c])"
  },
  {
    "example_id": 209,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "4.0",
      "4.0",
      "5.0",
      "1.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "from sympy import *\nfrom sympy.abc import *\nx, y = symbols('x y')\n\n# Find the middle term of the sequence\nm = (x + 1)/2\n\n# Find the sum of the numbers at the ends of the line segments\ns1 = m*(m + 1)\ns2 = (x + 1)*(x + 2)\ns3 = (x + 2)*(x + 3)\ns4 = (x + 3)*(x + 4)\ns5 = (x + 4)*(x + 5)\n\n# Find the sum of the sums of the line segments\nsum1 = s1 + s2 + s3 + s4 + s5\n\n# Find the middle term of the sequence\nmiddle_term = sum1/(x + 1)\n\nprint(middle_term)"
  },
  {
    "example_id": 210,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "6.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq1 = x + y + z - 6\neq2 = 1/x + 1/y + 1/z - 2\nsolve_eq1 = solve(eq1, x)\nsolve_eq2 = solve(eq2, y)\nsolve_eq3 = solve(eq2, z)\nprint(solve_eq1[0] + solve_eq2[0] + solve_eq3[0])"
  },
  {
    "example_id": 211,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "h = -3\nk = 3\na = 3\nb = 3\nprint(h + k + a + b)"
  },
  {
    "example_id": 212,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "-27.0",
      "2.0",
      "2950.0",
      "27.0",
      "2.0",
      "1098500.0"
    ],
    "annotated_answers": [
      "150.0"
    ],
    "solution": "c, x = symbols('c x')\neq = x**3 - 10*x**2 + 55*x - c\nroots = solve(eq, x)\nprint(roots[0]*roots[1])"
  },
  {
    "example_id": 213,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "16.0",
      "64.0",
      "256.0"
    ],
    "annotated_answers": [
      "340.0"
    ],
    "solution": "from math import log\n\ndef is_even_positive_integer(x):\n    return x % 2 == 0 and x > 0\n\ndef is_positive_integer(x):\n    return x > 0\n\ndef is_less_than_1000(x):\n    return x < 1000\n\ndef solve_it(n):\n    if is_positive_integer(n) and is_less_than_1000(n):\n        if is_even_positive_integer(log(n, 2)):\n            return True\n    return False\n\nfor i in range(1, 1000):\n    if solve_it(i):\n        print(i)"
  },
  {
    "example_id": 214,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "def sgn(x):\n    if x < 0:\n        return -1\n    elif x == 0:\n        return 0\n    else:\n        return 1\n\nsum = 0\nfor n in range(-10, 21):\n    sum += sgn(n)\n\nprint(sum)"
  },
  {
    "example_id": 215,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "from sympy import expand, factorial\nfrom sympy.abc import x\n\n# expand the expression\nexpanded_expression = expand((x + 3)**50)\n\n# find the coefficient of x^k\ndef coefficient_of_x_k(expression, x, k):\n    \"\"\"\n    Find the coefficient of x^k in the expansion of expression\n    \"\"\"\n    return expression.coeff(x, k)\n\n# compute the maximum\nk_max = max(range(len(expanded_expression.args)),\n            key=lambda k: coefficient_of_x_k(expanded_expression, x, k))\n\nprint(k_max)"
  },
  {
    "example_id": 216,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-8.0",
      "2.0",
      "9.0",
      "41.0",
      "41.0",
      "2.0",
      "-14.0",
      "2.0",
      "9.0",
      "41.0"
    ],
    "annotated_answers": [
      "40.0"
    ],
    "solution": "from sympy import symbols, Eq, solve\nx, y = symbols('x y')\n\neq1 = x**2 + y**2 + 6*x - 24*y + 72\neq2 = x**2 - y**2 + 6*x + 16*y - 46\n\nsol = solve([Eq(eq1, 0), Eq(eq2, 0)], (x, y))\n\nsum_distances = 0\nfor point in sol:\n    dist = (point[0] + 3 - point[1] + 2)**2 + (point[0] - 3 - point[1] + 2)**2\n    sum_distances += dist\n\nprint(sum_distances)"
  },
  {
    "example_id": 217,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-6.0",
      "36.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "1971.0",
      "2.0",
      "27.0",
      "1583.0"
    ],
    "annotated_answers": [
      "73.0"
    ],
    "solution": "import sympy\n\nx = sympy.Symbol('x')\nroots = sympy.solve(x**3 + 9*x**2 - 9*x - 8)\n\nroot1 = roots[0]\nroot2 = roots[1]\nroot3 = roots[2]\n\nexpression = (root1 + root2)*(root2 + root3)*(root3 + root1)\nprint(expression)"
  },
  {
    "example_id": 218,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "29.0",
      "2.0",
      "2.0",
      "2.0",
      "43.0"
    ],
    "annotated_answers": [
      "30.0"
    ],
    "solution": "k, x = symbols('k x')\nQ1 = x**2 + (k - 29)*x - k\nQ2 = 2*x**2 + (2*k - 43)*x + k\nP = Q1*Q2\nprint(P.factor())"
  },
  {
    "example_id": 219,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "48.0",
      "49.0"
    ],
    "annotated_answers": [
      "97.0"
    ],
    "solution": "n = 4\nprint(48 + 49*1j)"
  },
  {
    "example_id": 220,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "61.0"
    ],
    "solution": "a1, a2, a3, a4, a5 = 1, 4, 15, 2, 0\nb1, b2, b3, b4, b5 = 1, 2, 3, 4, 5\n\nc1 = a1 + b1\nc2 = a2 + b2\nc3 = a3 + b3\nc4 = a4 + b4\n\nc5 = c4 + b5\n\nprint(c5)"
  },
  {
    "example_id": 221,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0",
      "2.0",
      "21.0",
      "2.0",
      "21.0",
      "2.0",
      "5.0",
      "2.0",
      "-5.0",
      "4.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\neq = x**6 + x**4 - 115*x**3 + x**2 + 1\nsol = solve(eq)\nprint(sol)"
  },
  {
    "example_id": 222,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "401.0"
    ],
    "solution": "n = 6\nprint(n)"
  },
  {
    "example_id": 223,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "68.33333333333334"
    ],
    "annotated_answers": [
      "64.0"
    ],
    "solution": "a, b, c, d = 0.1, 0.2, 0.3, 0.4\nexpression = 1 / a + 1 / b + 4 / c + 16 / d\nprint(expression)"
  },
  {
    "example_id": 224,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-11.0",
      "4.0",
      "154.0",
      "3.0",
      "682.0",
      "2.0",
      "1001.0",
      "4.0",
      "14.0",
      "3.0",
      "62.0",
      "2.0",
      "91.0",
      "42.0",
      "2.0",
      "432.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x = symbols('x')\ng = x**2 - 11*x + 30\nf = x**4 - 14*x**3 + 62*x**2 - 91*x + 42\nsolve_g = g.subs(x, f)\nprint(solve_g)"
  },
  {
    "example_id": 225,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "60.0"
    ],
    "annotated_answers": [
      "30.0"
    ],
    "solution": "def f(x):\n    return (x - 2) * 6\n\nprint(f(12) - f(2))"
  },
  {
    "example_id": 226,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "f = Function('f')\nx, y = symbols('x y')\neq = f(x*y) - f(x) - f(y) + 2\neq_set = solve(eq, f(x))\nprint(len(eq_set))"
  },
  {
    "example_id": 227,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "def max_degree(n):\n    for i in range(n+1):\n        for j in range(i+1):\n            if i == j:\n                continue\n            if 1-j == (-1)**(i-j)*(j**(n-i)):\n                return n-i\n    return -1\n\nprint(max_degree(10))"
  },
  {
    "example_id": 228,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "3.0",
      "3.0",
      "3.0",
      "3.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "from sympy import *\na, b, c, d, e = symbols('a b c d e')\nexpression = (a**3*((a-b)*(a-c)*(a-d)*(a-e)) + b**3*((b-a)*(b-c)*(b-d)*(b-e)) + c**3*((c-a)*(c-b)*(c-d)*(c-e)) + d**3*((d-a)*(d-b)*(d-c)*(d-e)) + e**3*((e-a)*(e-b)*(e-c)*(e-d)))\nprint(expression)"
  },
  {
    "example_id": 229,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "16.0",
      "10896.0",
      "26341.0"
    ],
    "annotated_answers": [
      "254.0"
    ],
    "solution": "def q(x, a):\n    return a[0] + x*(a[1] + x*(a[2] + x*(a[3] + x*(a[4] + x*a[5]))))\n\na = [1, 4, 5, 1, 2, 3]\nprint(q(1, a))\nprint(q(5, a))\nprint(q(6, a))"
  },
  {
    "example_id": 230,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0",
      "2.0",
      "2.0",
      "3.0",
      "2.0",
      "3.0",
      "6.0",
      "3.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "from sympy import expand, sqrt\n\nexpression = (5/(sqrt(3) + sqrt(2)) + 1/(sqrt(3) - sqrt(2)))\na, b = expand(expression).as_numer_denom()\nprint(a + b)"
  },
  {
    "example_id": 231,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "40.0"
    ],
    "annotated_answers": [
      "112.0"
    ],
    "solution": "a = [2, 5, 8]\nfor i in range(3, 2025):\n    a.append(a[i-1] + a[i-2] + a[i-3])\n    a[i] = a[i] % 11\na_value = a[2018] * a[2020] * a[2022]\nprint(a_value)"
  },
  {
    "example_id": 232,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x, y = symbols('x y')\neq = x**2 + y**2\neq1 = eq.subs(x**2 + y**2, 4*x*y)\nsol = solve(eq1, x)\nprint(sol[0])"
  },
  {
    "example_id": 233,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a, g = symbols('a g')\nterm = a + g\nfor i in range(1, 4):\n    term = term + g\nprint(term)"
  },
  {
    "example_id": 234,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "34.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "x = -3\ny = 5\nprint(x**2 + y**2)"
  },
  {
    "example_id": 235,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "164.0",
      "1.0",
      "4.0",
      "2.0",
      "1.0",
      "4.0",
      "2.0",
      "8.0",
      "1.0",
      "4.0"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "w = -1 + 4*I\nprint(abs(w**2 + 2*w - 8))"
  },
  {
    "example_id": 236,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "32.0",
      "13.0"
    ],
    "annotated_answers": [
      "154.0"
    ],
    "solution": "n = 19\nfirst = 2**(1 + math.floor(math.log(n-1, 2)))\nsecond = first - n\nprint(first, second)"
  },
  {
    "example_id": 237,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x, y = symbols('x y')\neq = floor(x) * floor(y)\narea = integrate(integrate(1, (x, 0, 1)), (y, 0, 1))\nprint(area)"
  },
  {
    "example_id": 238,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "8.0",
      "4.0",
      "23.0",
      "2.0",
      "5.0",
      "24.0"
    ],
    "annotated_answers": [
      "-5.0"
    ],
    "solution": "x = symbols('x')\neq = (x-3)*(x+8) - (4*x-23)*(x**2+5*x-24)\nprint(eq)"
  },
  {
    "example_id": 239,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "14.0",
      "2.0",
      "14.0",
      "49.0"
    ],
    "annotated_answers": [
      "175.0"
    ],
    "solution": "x, y = symbols('x y')\neq = 3*x**2 - 18*x + 4*y**2 - 32*y + 91\nexpr = x**2 + y**2 + 2*x*y - 14*x - 14*y + 49\nsol = solve(eq, x, y)\nmax_val = expr.subs(sol)\nprint(max_val)"
  },
  {
    "example_id": 240,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "2007.0"
    ],
    "solution": "def f(x):\n    if 0 <= x <= 0.5:\n        return 2*x\n    else:\n        return 2 - 2*x\n\ndef f_n(x):\n    if 0 <= x <= 0.5:\n        return f(f(x))\n    else:\n        return f(f(f(x)))\n\ncount = 0\nfor x in range(1000):\n    if f_n(x) == 0.5:\n        count += 1\n\nprint(count)"
  },
  {
    "example_id": 241,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0",
      "0.0",
      "1.0",
      "2.0",
      "0.0",
      "1.0",
      "3.0",
      "0.0",
      "1.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "def count_integer_pairs(a, b):\n    # Define the two polynomials\n    f1 = lambda x: x**2 - a*x + 24\n    f2 = lambda x: x**2 - b*x + 36\n\n    # Define the common root\n    common_root = 6\n\n    # Count the number of pairs that have the common root\n    count = 0\n    for x in range(1, 100):\n        if f1(x) == 0 and f2(x) == 0 and x!= common_root:\n            count += 1\n    return count\n\n# Count the number of pairs for each a and b\nfor a in range(1, 100):\n    for b in range(1, 100):\n        count = count_integer_pairs(a, b)\n        print(\"({0}, {1})\".format(a, b), count)"
  },
  {
    "example_id": 242,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0",
      "2.0",
      "3.0",
      "4.0",
      "5.0",
      "6.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "n = 1, 2, 3, 4, 5, 6\nprint(n)"
  },
  {
    "example_id": 243,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "3.0",
      "13.0",
      "2.0",
      "11.0",
      "23.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "y = symbols('y')\neq1 = 3*y**3 - 13*y**2 + 11*y + 23\neq2 = 3*y + 2\neq_quotient = eq1/eq2\neq_remainder = eq1%eq2\nprint(eq_remainder)"
  },
  {
    "example_id": 244,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "4.0",
      "4.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq1 = a + b + c\neq2 = a**2 + b**2 + c**2\neq3 = a**4 + b**4 + c**4\nsolve([eq1, eq2], [a, b, c])\nprint(eq3)"
  },
  {
    "example_id": 245,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "125.0",
      "78125.0",
      "-125.0",
      "78125.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "a, c, x = symbols('a c x')\nf = x**7 + a*x**3 + c\nf_val = f.subs(x, 5)\nf_val_neg_5 = f.subs(x, -5)\nprint(f_val)\nprint(f_val_neg_5)"
  },
  {
    "example_id": 246,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a = symbols('a')\nexpr = abs(a - 1 + a*I*sqrt(3))\nresult = expr.subs(a, -1)\nprint(result)"
  },
  {
    "example_id": 247,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "10.0",
      "12.0",
      "8.0",
      "18.0",
      "6.0",
      "18.0",
      "4.0",
      "12.0",
      "2.0",
      "3.0",
      "8.0",
      "2.0",
      "6.0",
      "4.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "from sympy import symbols, diff, simplify, expand, solve\n\nx = symbols('x')\nf = (x + 1/x)**6 - (x**6 + 1/x**6) - 2\nf = f / (x + 1/x)**3 + (x**3 + 1/x**3)\n\nprint(simplify(diff(f, x)))"
  },
  {
    "example_id": 248,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x, y = symbols('x y')\nf = x*sqrt(1 - y**2) + y*sqrt(1 - x**2)\nf_max = f.subs({x:1, y:1})\nprint(f_max)"
  },
  {
    "example_id": 249,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "11.0",
      "11.0"
    ],
    "annotated_answers": [
      "24.0"
    ],
    "solution": "x, y = symbols('x y')\neq = (x**2/50) - (y**2/22) - 2\nfocus_distance = sympy.sqrt(eq.diff(y))\nprint(focus_distance)"
  },
  {
    "example_id": 250,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "4.0",
      "6.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "from sympy import symbols, solve, Eq, Piecewise\nx, y = symbols('x y')\nf = x**2 - 6*x + y + 14\ng = 2*x - y + 2\neq = Eq(f, g)\nsol = solve(eq, y)\nprint(sol)"
  },
  {
    "example_id": 251,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25.0"
    ],
    "annotated_answers": [
      "243.0"
    ],
    "solution": "def f(x):\n    return x**2\nprint(f(5))"
  },
  {
    "example_id": 252,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a = 1\nb = 1\nc = 1\nexpression = a**2\nprint(expression)"
  },
  {
    "example_id": 253,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "import math\n\ndef largest_rectangle_area(circle_area):\n    return circle_area - math.pi\n\nprint(largest_rectangle_area(math.pi))"
  },
  {
    "example_id": 254,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "-1.0"
    ],
    "annotated_answers": [
      "819.0"
    ],
    "solution": "n = 100\na = [0]*n\na[0] = 1\na[1] = 0\nfor i in range(2,n):\n    a[i] = a[i-1] - a[i-2]\n\nprint(a[19])\nprint(a[92])"
  },
  {
    "example_id": 255,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "def f(x):\n    return x**4 + 72*x**3\n\nfor x in range(1, 1000):\n    if f(x) == x**5:\n        print(x)"
  },
  {
    "example_id": 256,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "48.0"
    ],
    "solution": "a = 8"
  },
  {
    "example_id": 257,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2016.0"
    ],
    "annotated_answers": [
      "504.0"
    ],
    "solution": "a_1 = 2016\nprint(a_1)"
  },
  {
    "example_id": 258,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "2.0",
      "-8.0",
      "6.0",
      "2.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "from sympy import symbols, solve, sqrt\nfrom sympy.geometry import Circle\nfrom sympy.plotting import plot\n\nx, y = symbols('x y')\n\n# Circle equation\ncircle_eq = x**2 + y**2 - 2\n\n# Parabola equation\nparab_eq = y**2 - 8*x\n\n# Find the intersection of the two equations\nintersections = solve([circle_eq, parab_eq], [x, y])\n\n# Calculate the area of the quadrilateral\narea = 0.5*sqrt(2)*(intersections[0][1] - intersections[1][1])\n\nprint(area)"
  },
  {
    "example_id": 259,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0",
      "4.0",
      "2.0",
      "1.0",
      "2.0",
      "1.0",
      "4.0",
      "2.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "a, b = symbols('a b')\nprint(solve(a + b/(a*b + 1), a))"
  },
  {
    "example_id": 260,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "40.0"
    ],
    "annotated_answers": [
      "225.0"
    ],
    "solution": "count = 0\nfor i in range(0, 20):\n    for j in range(0, 20):\n        for k in range(0, 20):\n            if (i**i == (1+i)**j) and (i**k == (1+i)**j):\n                count += 1\nprint(count)"
  },
  {
    "example_id": 261,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "32.0"
    ],
    "solution": "P = 0\nQ = 0\nR = 0\nS = 10\n\ndef solve(P, Q, R, S):\n    # Find the roots of the equation\n    # x^5 - 40x^4 + Px^3 + Qx^2 + Rx + S = 0\n    roots = sympy.roots(x**5 - 40*x**4 + P*x**3 + Q*x**2 + R*x + S)\n    # Compute the sum of their reciprocals\n    sum = 0\n    for root in roots:\n        sum += 1/root\n    return sum\n\n# Compute the value of |S|\nprint(abs(S))"
  },
  {
    "example_id": 262,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "1.0",
      "1.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "4.0",
      "5.0",
      "7.0"
    ],
    "annotated_answers": [
      "913.0"
    ],
    "solution": "sequence = [0, 1]\n\nfor i in range(1, 10):\n    sequence.append(sequence[i - 1] + sequence[i - 2])\n\nprint(sequence[:10])"
  },
  {
    "example_id": 263,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq1 = a + b + c - 4\neq2 = 1/a + 1/b + 1/c - 5\neq1.subs({a: 1, b: 2, c: 1}).equals(0)\neq2.subs({a: 1, b: 2, c: 1}).equals(0)\neq1.subs({a: 2, b: 1, c: 1}).equals(0)\neq2.subs({a: 2, b: 1, c: 1}).equals(0)\neq1.subs({a: 1, b: 1, c: 2}).equals(0)\neq2.subs({a: 1, b: 1, c: 2}).equals(0)\n\nprint(simplify(1/b + 1/a + 1/c + 1/a + 1/c + 1/b))"
  },
  {
    "example_id": 264,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "255.0"
    ],
    "solution": "n = 1\nm = 1\nsum_of_even_integers = sum(range(1, 2*n+1, 2))\nsum_of_odd_integers = sum(range(1, 2*m+1, 2))\nsum_of_all_possible_values_of_n = sum(range(1, 2*n+1, 2))\nprint(sum_of_all_possible_values_of_n)"
  },
  {
    "example_id": 265,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "19.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "f = lambda x: max(abs(x+15), abs(x+12), abs(x+8), abs(x-1), abs(x-3), abs(x-19))\nf_min = f(0)\nprint(f_min)"
  },
  {
    "example_id": 266,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "-0.49999999999999994",
      "0.8660254037844386",
      "2.0",
      "-0.5",
      "-0.8660254037844386",
      "3.0",
      "-0.5"
    ],
    "annotated_answers": [
      "-256.0"
    ],
    "solution": "import math\n\ndef log_base_2(x):\n    return math.log(x, 2)\n\ndef sum_of_base_2_log_roots(a, b):\n    return log_base_2(a) + log_base_2(b)\n\ndef get_a(sum_of_log_roots):\n    return 2**(sum_of_log_roots - 5)\n\ndef get_b(a, sum_of_log_roots):\n    return a / 2**(sum_of_log_roots - 5)\n\ndef get_x(a, b, x):\n    return 8*x**3 + 4*a*x**2 + 2*b*x + a\n\nsum_of_log_roots = 5\na = get_a(sum_of_log_roots)\nb = get_b(a, sum_of_log_roots)\nx1 = (-b + (b**2 - 4*a*a)**0.5) / (2*a)\nx2 = (-b - (b**2 - 4*a*a)**0.5) / (2*a)\nx3 = -a / (2*b)\n\nprint(\"x1 = \", x1)\nprint(\"x2 = \", x2)\nprint(\"x3 = \", x3)"
  },
  {
    "example_id": 267,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "6.0",
      "7.0",
      "6.0",
      "5.0",
      "7.0",
      "7.0",
      "5.0",
      "6.0"
    ],
    "annotated_answers": [
      "104.0"
    ],
    "solution": "from sympy import sqrt\nproduct = (sqrt(5) + sqrt(6) + sqrt(7)) * (sqrt(5) - sqrt(6) + sqrt(7)) * (sqrt(5) + sqrt(6) - sqrt(7))\nprint(product)"
  },
  {
    "example_id": 268,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "3.0",
      "4.0",
      "5.0",
      "2.0",
      "3.0",
      "4.0",
      "5.0"
    ],
    "annotated_answers": [
      "163.0"
    ],
    "solution": "w1, w2, w3, w4, w5 = symbols('w1 w2 w3 w4 w5')\nz1, z2, z3, z4, z5 = symbols('z1 z2 z3 z4 z5')\neq = (z1 - w1) + (z2 - w2) + (z3 - w3) + (z4 - w4) + (z5 - w5)\nslope = sympy.solve(eq, z1)\nprint(slope[0])"
  },
  {
    "example_id": 269,
    "selected_mode": "import",
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "# define the polynomial\np = (x - b)*(x - c)/(a - b)*(a - c) + (x - a)*(x - c)/(b - a)*(b - c) + (x - a)*(x - b)/(c - a)*(c - b)\n\n# find the degree of the polynomial\ndegree = p.degree()\nprint(degree)"
  },
  {
    "example_id": 270,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "990.0"
    ],
    "annotated_answers": [
      "990.0"
    ],
    "solution": "result = sum([int(math.ceil(math.log(i, 2))) for i in range(1, 1001)]) - sum([int(math.floor(math.log(i, 2))) for i in range(1, 1001)])\nprint(result)"
  },
  {
    "example_id": 271,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0",
      "1.0",
      "4.0",
      "1.0",
      "9.0",
      "2.0",
      "2.0",
      "2.0",
      "8.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "for a in range(1,10):\n    for b in range(1,10):\n        if (a*b)**0.5 in range(1,10):\n            print(a, b)"
  },
  {
    "example_id": 272,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1995.0",
      "1995.0"
    ],
    "annotated_answers": [
      "3980025.0"
    ],
    "solution": "x = symbols('x')\neq = sympy.sqrt(1995)*x**(sympy.log(1995, x)) - x**2\nsolution = solve(eq, x)\nprint(solution[0] * solution[1])"
  },
  {
    "example_id": 273,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "def f(x):\n    return 27*x**2 + 9*x + 3\ndef g(x):\n    return 27*x**3 + 9*x**2 + 3*x + 1\n\ndef horizontal_asymptote(f, g):\n    if f(0) == g(0):\n        return 0\n    else:\n        return f(0) / g(0)\n\nprint(horizontal_asymptote(f, g))"
  },
  {
    "example_id": 274,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-579.0"
    ],
    "annotated_answers": [
      "898.0"
    ],
    "solution": "n = 531\nx = [211, 375, 420, 523]\nfor i in range(n-4):\n    x.append(x[-1] - x[-2] + x[-3] - x[-4])\nprint(x[n-1] + x[n-2] + x[n-3])"
  },
  {
    "example_id": 275,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a, b = symbols('a b')\neq = 1/a + 1/b - 2/17\nsol = solve(eq, [a, b])\nprint(len(sol))"
  },
  {
    "example_id": 276,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = x**4 - 2*x**2 - 7\nroots = solve(eq, x)\nprint(len(roots))"
  },
  {
    "example_id": 277,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "29.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "a = 21-20j\nb = 29\nprint(abs(a))"
  },
  {
    "example_id": 278,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "275745.0"
    ],
    "annotated_answers": [
      "327680.0"
    ],
    "solution": "a = [4*n**3 + 6*n**2 + 4*n + 1 for n in range(23)]\nprint(sum(a[8:]))"
  },
  {
    "example_id": 279,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "2.0",
      "2.0",
      "3.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "3.0",
      "2.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "from sympy import solve, Symbol\na = Symbol('a', real=True)\nx = Symbol('x')\nsol = solve((x**3 + a*x**2 + a*x + 1), x)\nprint(sol)"
  },
  {
    "example_id": 280,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "363.0"
    ],
    "solution": "a, b = symbols('a b')\neq = a*b**15 - a**15\nsolve_for_a = solve(eq, a)\nprint(solve_for_a[0])"
  },
  {
    "example_id": 281,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "def mod(x, n):\n    return x % n\n\n\ndef rem(x, n):\n    return x // n\n\n\ndef extended_euclid(a, b):\n    if b == 0:\n        return (1, 0, 0)\n    else:\n        g, x, y = extended_euclid(b, a % b)\n        return (g, y, x - (a // b) * y)\n\n\ndef modular_inverse(a, m):\n    g, x, y = extended_euclid(a, m)\n    if g!= 1:\n        raise Exception('Modular inverse does not exist')\n    else:\n        return x % m\n\n\ndef modular_exponentiation(base, exponent, modulus):\n    result = 1\n    base = base % modulus\n    while exponent > 0:\n        if exponent % 2 == 1:\n            result = (result * base) % modulus\n        exponent //= 2\n        base = (base * base) % modulus\n    return result\n\n\ndef solve(a, b, c, d, e, f):\n    x = modular_inverse(e, f)\n    y = modular_exponentiation(a, b, f)\n    z = modular_exponentiation(c, d, f)\n    return (y * z) % f\n\n\ndef main():\n    x = solve(1, 100, -1, 6, -1, 5)\n    print(x)\n\n\nif __name__ == \"__main__\":\n    main()"
  },
  {
    "example_id": 282,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "3.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "59.0",
      "54.0",
      "7481.0",
      "54.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\neq = (2*x**2 - 3*x)/(x**2 - x) + 5*x - 11\neq2 = 3*x**2 + 5*x + 2\neq3 = x**2 - 1\nsol = solve(eq - eq2, x)\nprint(sol)"
  },
  {
    "example_id": 283,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "cos_x = 1\nfor i in range(3):\n    cos_x *= cos_x\nprint(cos_x + cos_x**2)"
  },
  {
    "example_id": 284,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.7663237344451836"
    ],
    "annotated_answers": [
      "270.0"
    ],
    "solution": "log_12_162 = 4\nlog_12_x = 5\nlog_12_y = 6\nlog_12_z = 7\nlog_12_1250 = 8\n\nx = 162**(1/5)\nprint(x)"
  },
  {
    "example_id": 285,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = 0\ny = 1\nexpression = (x + y)**2\nprint(expression)"
  },
  {
    "example_id": 286,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "1.0",
      "7.0",
      "2.0",
      "2.0",
      "1.0",
      "7.0",
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "z1, z2 = symbols('z_1 z_2')\nz2_over_z1 = z2/z1\neq = 2*z1 + 7*z2\ndenom = 2*z1 - 7*z2\nabs_eq = sympy.Abs(eq/denom)\nprint(abs_eq)"
  },
  {
    "example_id": 287,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x = symbols('x')\npolys = []\nfor i in range(1, 5):\n    for j in range(1, 5):\n        poly = x**4 + i*x**3 + j*x**2\n        if poly.subs(x, x**2) == poly.subs(x, x) * poly.subs(x, -x):\n            polys.append(poly)\nprint(len(polys))"
  },
  {
    "example_id": 288,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "1.0"
    ],
    "annotated_answers": [
      "88.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\nf = x*x + y*y + 2*x*y\nf_value = f.subs(x, 1).evalf()\nprint(f_value)"
  },
  {
    "example_id": 289,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "135.0",
      "2.0",
      "27.0",
      "29.0",
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "import sympy as sp\nx = sp.Symbol('x')\nprint(sp.solve(x**3 + 3*x + 5, x))"
  },
  {
    "example_id": 290,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "28.0"
    ],
    "solution": "a, b = symbols('a b')\n\n# |a|^2 = a*conjugate(a) = a*a\na_sq = a*a\n\n# |b|^2 = b*conjugate(b) = b*b\nb_sq = b*b\n\n# |ab| = a*conjugate(b) = a*b\nab = a*b\n\n# |ab|^2 = ab*conjugate(ab) = ab*ab\nab_sq = ab*ab\n\n# |ab|^2 = |a|^2 * |b|^2 = 49\nprint(ab_sq)"
  },
  {
    "example_id": 291,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "5.0",
      "1.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "from sympy import symbols, Min\nx = symbols('x', positive=True)\nexpr = (x + 5)*(x + 2)/(x + 1)\nprint(Min(expr))"
  },
  {
    "example_id": 292,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "a, b, c, x, y, d = symbols('a b c x y d')\neq1 = a*x + b*y + c*x*y\neq2 = 3\neq3 = 4\neq4 = eq1.subs(x, d)\nd_value = solve(eq4 - eq3, d)\nprint(d_value[0])"
  },
  {
    "example_id": 293,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "from sympy import Sum\nk = symbols('k', integer=True, positive=True)\nexpr = (k - 3)/(k*(k**2 - 1))\nexpr = Sum(expr, (k, 2, oo))\nprint(expr)"
  },
  {
    "example_id": 294,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "3.0",
      "2.0",
      "2.0",
      "9.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "x = symbols('x')\nP = x**23 + 23*x**17 - 18*x**16 - 24*x**15 + 108*x**14\neq = x**4 - 3*x**2 - 2*x + 9\nremainder = sympy.rem(eq, P)\ncoeff_sum = 0\nfor coeff in remainder.args:\n    coeff_sum += coeff\nprint(coeff_sum)"
  },
  {
    "example_id": 295,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "6.0",
      "-3.0",
      "1.0",
      "2.0",
      "2.0",
      "2.0",
      "4.0",
      "3.0",
      "-9.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "a2, a1, x = symbols('a2 a1 x')\neq = 2*x**3 + a2*x**2 + a1*x - 4\nroots = solve(eq, x)\nprint(roots)"
  },
  {
    "example_id": 296,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "a, b = symbols('a b')\nx = symbols('x')\neq = x**2 + a*x + b\nc = symbols('c')\nc_squared_minus_2 = c**2 - 2\neq_c = eq.subs(x, c)\neq_c_squared_minus_2 = eq_c.subs(x, c_squared_minus_2)\nsol = solve(eq_c_squared_minus_2, x)\nprint(len(sol))"
  },
  {
    "example_id": 297,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.6179775280898876"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "def sum_fibonacci_series(n):\n    a, b = 0, 1\n    for i in range(n):\n        a, b = b, a + b\n    return a/b\n\nprint(sum_fibonacci_series(10))"
  },
  {
    "example_id": 298,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "18.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "440.0"
    ],
    "solution": "a = symbols('a')\nc = symbols('c')\n\nP = 2*x**3 - 2*a*x**2 + (a**2 - 81)*x - c\n\nroots = solve(P.subs(x, 0), x)\n\nfor root in roots:\n    if root.is_integer():\n        P_values = P.subs(x, root)\n        print(P_values)\n        print()\n        # Solve for c\n        c_value = solve(P_values.subs(a, 2), c)\n        for value in c_value:\n            print(value)\n            print()\n            # Solve for a\n            a_value = solve(P_values.subs(c, value), a)\n            for val in a_value:\n                print(val)\n                print()\n                # Sum of c values\n                c_sum = sum(value for value in c_value)\n                print(c_sum)\n                print()\n                break\n            break\n        break"
  },
  {
    "example_id": 299,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "44.0"
    ],
    "solution": "import sympy as sp\nr, s, t = sp.symbols('r s t')\nexpression = r**2*s**2 + s**2*t**2 + t**2*r**2\nprint(expression)"
  },
  {
    "example_id": 300,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "5.0",
      "2.0"
    ],
    "annotated_answers": [
      "22.0"
    ],
    "solution": "from sympy import sqrt\n\na = 5 + sqrt(3)\n\nprint(a.conjugate() * a)"
  },
  {
    "example_id": 301,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.8599999999999999"
    ],
    "annotated_answers": [
      "0.61"
    ],
    "solution": "a = [2.56, 2.61, 2.65, 2.71, 2.79, 2.82, 2.86]\nA = []\nfor i in range(len(a)):\n    A.append(int(a[i]))\nM = 0\nfor i in range(len(A)):\n    M = max(M, abs(A[i] - a[i]))\nprint(M)"
  },
  {
    "example_id": 302,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0"
    ],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "from sympy import symbols, solve, sqrt, Rational\nfrom sympy.abc import x, y, z\nfrom sympy.geometry import Point, Circle\n\na = Circle((0, 0), 1)\nb = Circle((1, 0), 1)\nc = Circle((0, 1), 1)\n\nd = sqrt(2) - 1\n\nprint(d)"
  },
  {
    "example_id": 303,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "279.0"
    ],
    "annotated_answers": [
      "1023.0"
    ],
    "solution": "a1 = a2 = a3 = a4 = a5 = 0\nfor i in range(5):\n    a1 += a2\n    a2 += a3\n    a3 += a4\n    a4 += a5\n    a5 += 9\nprint(a1 + a2 + a3 + a4 + a5)"
  },
  {
    "example_id": 304,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-22.0"
    ],
    "annotated_answers": [
      "30.0"
    ],
    "solution": "import numpy as np\n\ndef f(x):\n    return abs(x-1) + abs(x-3)\n\ndef g(x):\n    return 8\n\n# Area of the region above the graph of f(x) but below the graph of g(x)\narea = integrate.quad(f, 0, 4)[0] - integrate.quad(g, 0, 4)[0]\nprint(area)"
  },
  {
    "example_id": 305,
    "selected_mode": "import",
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-26.0"
    ],
    "solution": "# Create symbols for the roots of f(x)\nr1, r2, r3 = symbols('r1 r2 r3')\n\n# Create symbols for the roots of g(x)\ns1, s2, s3 = symbols('s1 s2 s3')\n\n# Create symbols for the coefficients of g(x)\na, b, c = symbols('a b c')\n\n# Create a symbol for the value of the imaginary unit\nz = symbols('z', real=True)\n\n# Create a symbol for the value of the imaginary unit\ni = symbols('i', real=True)\n\n# Create a symbol for the value of the imaginary unit\nI = symbols('I', real=True)\n\n# Create a symbol for the value of the imaginary unit\nsqrt = symbols('sqrt', real=True)\n\n# Create a symbol for the value of the imaginary unit\nlog = symbols('log', real=True)\n\n# Create a symbol for the value of the imaginary unit\nexpand = symbols('expand', real=True)\n\n# Create a symbol for the value of the imaginary unit\nlambdify = symbols('lambdify', real=True)\n\n# Create a symbol for the value of the imaginary unit\nfactor = symbols('factor', real=True)\n\n# Create a symbol for the value of the imaginary unit\nsolve = symbols('solve', real=True)\n\n# Create a symbol for the value of the imaginary unit\nminimize = symbols('minimize', real=True)\n\n# Create a symbol for the value of the imaginary unit\nfrom = symbols('from', real=True)\n\n# Create a symbol for the value of the imaginary unit\nwhere = symbols('where', real=True)\n\n# Create a symbol for the value of the imaginary unit\nf = symbols('f', real=True)\n\n# Create a symbol for the value of the imaginary unit\ng = symbols('g', real=True)\n\n# Create a symbol for the value of the imaginary unit\nh = symbols('h', real=True)\n\n# Create a symbol for the value of the imaginary unit\nx = symbols('x', real=True)\n\n# Create a symbol for the value"
  },
  {
    "example_id": 306,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "20.0",
      "0.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "x = 4 + 2j\ny = 4 - 2j\nprint(x*y)"
  },
  {
    "example_id": 307,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "3.0",
      "2.0",
      "27.0"
    ],
    "annotated_answers": [
      "-9.0"
    ],
    "solution": "x, t = symbols('x t')\neq = x**3 - 3*x**2 + t*x + 27\nfactors = sympy.factor(eq)\nprint(factors)"
  },
  {
    "example_id": 308,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\neq = x**4 - 80*x - 36\nsolve_eq = solve(eq, x)\nprint(sum(solve_eq))"
  },
  {
    "example_id": 309,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "0.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "from sympy import symbols\nfrom sympy import solve\nfrom sympy import integrate\nfrom sympy import oo\n\nx = symbols('x')\nf = (x**2+3*x)/(x**2+4*x+3)\n\nf1 = f.subs(x, 0)\nf2 = f.subs(x, oo)\n\na = f1.free_symbols\nb = f2.free_symbols\n\nprint(len(a))\nprint(len(b))"
  },
  {
    "example_id": 310,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "5.0",
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "from sympy import sqrt\n\nlambda_ = (1 + sqrt(5)) / 2\nprint(lambda_)"
  },
  {
    "example_id": 311,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a, b = symbols('a b')\neq = a + 1/(b*(a - b))\neq_min = eq.subs(b, 1)\nprint(eq_min)"
  },
  {
    "example_id": 312,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "3.0",
      "20.0"
    ],
    "annotated_answers": [
      "729.0"
    ],
    "solution": "side_1, side_2, side_3 = symbols('side_1 side_2 side_3')\nvolume = side_1*side_2*side_3\ntotal_volume = volume - 10*1\nremaining_volume = total_volume - 10\nprint(remaining_volume)"
  },
  {
    "example_id": 313,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "12.0",
      "3.0",
      "2.0",
      "2.0",
      "1.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq = (x**2 + y**2 + z**2 - 1)\nconstraint = sympy.Eq(eq, 0)\nsolve_set = solve(constraint, [x, y, z])\nmax_value = 3*solve_set[0][0] + 4*solve_set[0][1] + 12*solve_set[0][2]\nprint(max_value)"
  },
  {
    "example_id": 314,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "27.0"
    ],
    "annotated_answers": [
      "134.0"
    ],
    "solution": "votes = 27\nfor i in range(votes):\n    if votes - i < votes * 0.01:\n        break\nprint(i + 1)"
  },
  {
    "example_id": 315,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3956040.0"
    ],
    "annotated_answers": [
      "224.0"
    ],
    "solution": "n = 2007\na = [3, 3]\nfor i in range(2, n):\n    a.append((a[i - 1] * a[i - 2]) % 2007)\na = a[:n]\nb = [a[i] * a[i - 1] for i in range(n - 1)]\nprint(max(b))"
  },
  {
    "example_id": 316,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0",
      "12.0",
      "4.0",
      "3.0"
    ],
    "annotated_answers": [
      "75.0"
    ],
    "solution": "a, b = symbols('a b')\nab = (9*a - 12)*(3 + 4*b)\nprint(ab)"
  },
  {
    "example_id": 317,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-0.162162162162162",
      "0.162162162162162",
      "0.986764122352902",
      "2.0",
      "0.27906976744186",
      "2.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq = (2*a + 1/3*b)**2 + (2*b + 1/3*c)**2 + (2*c + 1/3*a)**2\nmin_value = solve(eq, a, b, c)\nprint(min_value[0])"
  },
  {
    "example_id": 318,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3988.0"
    ],
    "annotated_answers": [
      "997.0"
    ],
    "solution": "x_center = 1994\ny_center = 1994\nr = 1994\nx1 = 2 * x_center\ny1 = 2 * y_center\nx2 = x1 - r\ny2 = y1 - r\n\nprint(x2 + y2)"
  },
  {
    "example_id": 319,
    "selected_mode": "import",
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq = (x + c)/(x**2 + a*x + b)\nsol = solve(eq <= 0, x)\nprint(sol)"
  },
  {
    "example_id": 320,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x = symbols('x')\nf = 2*x**7 - 5*x**4 + 3*x**3 - x + 5\ng = f.as_numer_denom()[1]\nprint(g)"
  },
  {
    "example_id": 321,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "8.0"
    ],
    "annotated_answers": [
      "50.0"
    ],
    "solution": "a, b = symbols('a b')\neq = a*b**2 - 5\nsolve_eq = solve(eq, b)\nsolve_eq = solve_eq[0]\na_value = a**4 + b**8\nprint(a_value)"
  },
  {
    "example_id": 322,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "from sympy import symbols, I\nz = symbols('z')\ndenominator = (I*z)**5\nnumerator = I*z**5\nresult = numerator/denominator\nprint(result)"
  },
  {
    "example_id": 323,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-21.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "x = symbols('x')\neq = x*(x + 1)*(x + 2)*(x + 3) + 1\nsol = solve(eq - 379**2, x)\nprint(sol[0])"
  },
  {
    "example_id": 324,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "3.0",
      "5.0",
      "6.0",
      "2.0",
      "6.0",
      "3.0",
      "5.0",
      "7.0",
      "2.0",
      "5.0",
      "3.0",
      "6.0",
      "7.0",
      "2.0",
      "3.0",
      "5.0",
      "6.0",
      "7.0",
      "2.0"
    ],
    "annotated_answers": [
      "84.0"
    ],
    "solution": "from sympy import sqrt\nx = symbols('x')\nexpr = (sqrt(3) + sqrt(5) + sqrt(6) + sqrt(7))**2 + (sqrt(3) - sqrt(5) + sqrt(6) + sqrt(7))**2 + (sqrt(3) + sqrt(5) - sqrt(6) + sqrt(7))**2 + (sqrt(3) + sqrt(5) + sqrt(6) - sqrt(7))**2\nprint(expr)"
  },
  {
    "example_id": 325,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "from sympy import symbols, solve, diff\nx = symbols('x')\nf = (x - 1)**7 + 3*(x - 1)**6 + (x - 1)**5 + 1\nf = f / (x - 1)**5\ndf = diff(f, x)\nf_min = solve(df, x)\nprint(f_min[0])"
  },
  {
    "example_id": 326,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "22.0"
    ],
    "solution": "x = y = z = 4\nexpression = x + y + z\nprint(expression)"
  },
  {
    "example_id": 327,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2016.0",
      "-2.0",
      "1.0",
      "2015.0",
      "-2.0",
      "1.0",
      "2014.0",
      "-2.0",
      "1.0"
    ],
    "annotated_answers": [
      "-338016.0"
    ],
    "solution": "from math import factorial\nfrom sympy import Symbol, expand_mul, binomial\n\nx = Symbol('x')\n\nresult = 0\nfor i in range(1, 2017):\n    result += 1/(1-x**i)**2\n\nresult = expand_mul(result)\n\nprint(result)"
  },
  {
    "example_id": 328,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.141592653589793"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "![](https://s3.amazonaws.com/hr-challenge-images/0/1491697899-a455f-1.png)\n\n\nimport math\n\nF1 = (1, 0)\nF2 = (1, 1)\nP1 = (0, 0)\nP2 = (0, 1)\n\ndef distance(point1, point2):\n    return math.sqrt((point1[0] - point2[0])**2 + (point1[1] - point2[1])**2)\n\ndef angle(point1, point2):\n    return math.atan2(point2[1] - point1[1], point2[0] - point1[0])\n\ndef is_tangent(point1, point2):\n    return distance(point1, point2) == 1\n\ndef is_circle(point1, point2):\n    return distance(point1, point2) == 1\n\ndef is_ellipse(point1, point2):\n    return (point1[0]**2 + point2[0]**2) / (point1[1]**2 + point2[1]**2) == k\n\nk1 = angle(F1, P1)\nk2 = angle(F2, P2)\nk = (k1 + k2) / 2\n\nprint(k)"
  },
  {
    "example_id": 329,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2007.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "f = lambda x: x\nf_value = f(2007)\nprint(f_value)"
  },
  {
    "example_id": 330,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "x = ((2*x+8)/(x+2))**3 + ((x+2)/(x-5))**3 - 3"
  },
  {
    "example_id": 331,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "16.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "import cmath\nprint(abs(complex(1-1j)**8))"
  },
  {
    "example_id": 332,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "a, b = symbols('a b')\neq = a**3 - b**3\neq_solve = solve(eq, a)\nprint(eq_solve)"
  },
  {
    "example_id": 333,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "999993.0"
    ],
    "annotated_answers": [
      "996506.0"
    ],
    "solution": "n = 4\nk = 1\nwhile n < 500000:\n    k += 1\n    n += 2\n    k += 3\nprint(k)"
  },
  {
    "example_id": 334,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x = symbols('x')\neq = x**9 - x**6 + x**3 - 1\nremainder = sympy.rem(eq, x**2 + x + 1)\nprint(remainder)"
  },
  {
    "example_id": 335,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "t = 0.8\nm = -2*t\nT = (t, 9 - t**2)\nX = T + (1, m)\nY = T + (1, m)\n\ntriangle_area = abs(X[0] * Y[1] - X[1] * Y[0])\nprint(triangle_area)"
  },
  {
    "example_id": 336,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "3.0",
      "5.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "from sympy import symbols, solve, sqrt, pprint\n\nx, y = symbols('x y')\n\n# circle 1\nc1 = (x - 10)**2 + y**2 - 36\n\n# circle 2\nc2 = (x + 15)**2 + y**2 - 81\n\n# point P\nPx = 6\nPy = 3*sqrt(3)\n\n# point Q\nQx = -6\nQy = -3*sqrt(3)\n\n# tangent line at P\ntangent_line_P = solve(c1 - (x - Px)**2 - (y - Py)**2, y)\n\n# tangent line at Q\ntangent_line_Q = solve(c2 - (x - Qx)**2 - (y - Qy)**2, y)\n\n# slope of tangent line at P\nm_P = tangent_line_P[0].subs(x, Px)\n\n# slope of tangent line at Q\nm_Q = tangent_line_Q[0].subs(x, Qx)\n\n# slope of the shortest line\nslope = (m_P + m_Q)/2\n\n# length of the shortest line\nshortest_line_length = abs(1/slope)\n\npprint(shortest_line_length)"
  },
  {
    "example_id": 337,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "31.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a = 18\nb = 20\nh = -27\nk = 20\nexpression = (h + k + a + b)\nprint(expression)"
  },
  {
    "example_id": 338,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a1 = 1\na2 = 1\na3 = 1\nfor i in range(98, 100):\n    an = a3 - 2*a2 + a1\n    a1 = a2\n    a2 = a3\n    a3 = an\nprint(a1 + a2 + a3)"
  },
  {
    "example_id": 339,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "z1, z2 = symbols('z1 z2')\ncond1 = z1*z2 == I*I\ncond2 = z1/z2 == Re(z1/z2)\ncond3 = abs(z1) == abs(z2) == 1\nsol = solve((cond1, cond2, cond3), (z1, z2))\nprint(sol)"
  },
  {
    "example_id": 340,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "def log_log_log_2_512_64(x):\n    return log_log_2_512(log_2_64(x))\n\ndef log_log_2_512(x):\n    return log_2_512(log_2_x(x))\n\ndef log_2_512(x):\n    return x\n\ndef log_2_64(x):\n    return x\n\ndef log_2_x(x):\n    return log(x, 2)\n\nprint(log_log_log_2_512_64(256))"
  },
  {
    "example_id": 341,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-7.0",
      "2.0",
      "3.0",
      "2.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "1.0",
      "2.0",
      "3.0",
      "2.0",
      "7.0",
      "2.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "x = symbols('x')\nf = x**2 + 5*x + 7\nr = solve(f, x)[0]\nprint((r - 1)*(r + 2)*(r + 6)*(r + 3))"
  },
  {
    "example_id": 342,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "# Let x^12 - 1 = p1(x) p2(x)... pk(x) where each p_i(x) is monic and integer coefficient\n# and cannot be factored further over the integers\n# Find k\n\n# p1(x) = x - 1\n# p2(x) = x^2 + x + 1\n# p3(x) = x^3 - 3x^2 - 3x + 1\n# p4(x) = x^4 - 4x^3 - 6x^2 - 4x + 1\n# p5(x) = x^5 - 5x^4 - 10x^3 - 10x^2 - 5x + 1\n# p6(x) = x^6 - 6x^5 - 15x^4 - 20x^3 - 15x^2 - 6x + 1\n\n# k = 6"
  },
  {
    "example_id": 343,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "a = 2\nb = 3\nh = 4\nk = 5\nx = 1\ny = 2\n\nprint(a+k)"
  },
  {
    "example_id": 344,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "4.0",
      "2.0",
      "5.0",
      "2.0",
      "4.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "from sympy import *\nx, y, z = symbols('x y z')\nexpression = 2*x**2 + 5*y**2 + 2*z**2 + 4*x*y - 4*y*z - 2*z - 2*x\nprint(expression)"
  },
  {
    "example_id": 345,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "13.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "c = 5-12j\nprint(abs(c))"
  },
  {
    "example_id": 346,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.4778353687641919",
      "203"
    ],
    "annotated_answers": [
      "203.0"
    ],
    "solution": "x = symbols('x')\np = 0\nfor i in range(1, 101):\n    p += (i+1)*x**i\np += (102)*x**100\np = p.expand()\nprint(p.subs(x, 102))"
  },
  {
    "example_id": 347,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "39468.0"
    ],
    "annotated_answers": [
      "-10.0"
    ],
    "solution": "def P(x):\n    return x**2 + 4*x + 3\n\ndef PP(x):\n    return (x**2 + 4*x + 3)**2 + (x**2 + 4*x + 3)\n\ndef find_sum(n):\n    sum = 0\n    for i in range(n):\n        sum += PP(i)\n    return sum\n\nprint(find_sum(10))"
  },
  {
    "example_id": 348,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-46.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\neq = a**4 - 6*a**3 + 26*a**2 + a*b + 65\nroots = solve(eq, a)\np_value = [0, 0, 0, 0]\nfor k in range(len(roots)):\n    p_value[k] = (roots[k] - b).as_real_imag()[1]\n    if p_value[k]!= 0:\n        print(\"The roots are not real numbers\")\n        break\nelse:\n    print(\"The roots are real numbers\")\n    print(p_value[0])"
  },
  {
    "example_id": 349,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "973.0"
    ],
    "solution": "def geometric_progression(a, r, n):\n    return a * (1-r**n) / (1-r)\n\ndef arithmetic_progression(a, d, n):\n    return a + (n-1) * d\n\nn = 1\nwhile n < 1000:\n    a1 = 1\n    r = 2/3\n    a2 = geometric_progression(a1, r, n)\n    d = 1/2\n    a3 = arithmetic_progression(a1, d, n)\n    a4 = geometric_progression(a3, r, n)\n    a5 = arithmetic_progression(a4, d, n)\n    if a5 < 1000:\n        print(n, a1, a2, a3, a4, a5)\n        break\n    n += 1\n\nprint(n+a5)"
  },
  {
    "example_id": 350,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "29.0"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "f = lambda x: x**2 + 6*x + 1\nR = set()\nfor i in range(-10, 11):\n    for j in range(-10, 11):\n        if f(i) + f(j) <= 0 and f(i) - f(j) <= 0:\n            R.add((i, j))\nprint(len(R))"
  },
  {
    "example_id": 351,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "2.0",
      "4.0",
      "2.0",
      "3.0",
      "2.0",
      "-3.0",
      "2.0",
      "8.0",
      "3.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "from sympy import symbols, solve\n\nK, L, M = symbols('K L M')\nx = symbols('x')\n\neq = x**4 - K*x**3 + K*x**2 + L*x + M\neq_factored = eq.factor()\n\nroots = solve(eq_factored, x)\n\nsum = 0\nfor root in roots:\n    sum += root**2\n\nprint(sum)"
  },
  {
    "example_id": 352,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "4036.0"
    ],
    "solution": "n = 1\na = 0\nwhile a < 1/2018:\n    n += 1\n    a = sum( [ (k/n)**2 for k in range(1,n+1) ] )\nprint(n)"
  },
  {
    "example_id": 353,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "15.0",
      "1.0",
      "13.0",
      "1.0",
      "11.0",
      "1.0",
      "9.0",
      "1.0",
      "7.0"
    ],
    "annotated_answers": [
      "-588.0"
    ],
    "solution": "from sympy import symbols, factorial, expand_multinomial\n\nx = symbols('x')\n\ndef find_coefficient_of_x_squared(poly):\n    '''\n    Find the coefficient of x^2 in the expansion of the product of polynomial\n    '''\n    result = expand_multinomial(poly)\n    result = result.replace(x**2, x**2)\n    result = result.replace(x**0, 1)\n    result = result.replace(x**1, x)\n    return result\n\nresult = find_coefficient_of_x_squared((1-x)*(1+2*x)*(1-3*x)*(1+4*x)*(1-5*x)*(1+6*x)*(1-7*x)*(1+8*x)*(1-9*x)*(1+10*x)*(1-11*x)*(1+12*x)*(1-13*x)*(1+14*x)*(1-15*x))\nprint(result)"
  },
  {
    "example_id": 354,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "19941989.0"
    ],
    "annotated_answers": [
      "19941989.0"
    ],
    "solution": "n = 19941994\nprint(int(math.floor(math.sqrt(n**2 - 10*n + 29))))"
  },
  {
    "example_id": 355,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x, y = symbols('x y')\neq = x**2 + 2*y**2 - x*(2*y + 1)\nsol = solve(eq, [x, y])\nprint(len(sol))"
  },
  {
    "example_id": 356,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "40.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "p = lambda x: 8 if x in [55, 83, 204, 232, 103] else 0\nprint(sum(p(x) for x in range(1, 287)))"
  },
  {
    "example_id": 357,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-302.0"
    ],
    "annotated_answers": [
      "-150.0"
    ],
    "solution": "n = symbols('n')\na_n = (-1)**(n+1)*(3*n + 2)\nsum = a_n.subs(n, 100)\nprint(sum)"
  },
  {
    "example_id": 358,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "z = symbols('z')\neq = z**3 + z**2 - z**2 + 2*z\nsol = solve(eq, z)\nprint(sol)"
  },
  {
    "example_id": 359,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "S = lambda k: sum([f(a,b) for a in range(1, k+1) for b in range(1, k+1)])\np, q = 0, 0\nfor k in range(2, 10):\n    p, q = p + q, p\n    print(p, q)"
  },
  {
    "example_id": 360,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "65.0",
      "7.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "a, b = symbols('a b')\nab = 8\nexpr = (a**2 + b**2)/(a - b)\neq = expr.subs(a, ab/b)\neq = eq.subs(b, 1)\nprint(eq)"
  },
  {
    "example_id": 361,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-105.0",
      "32.0",
      "-3.0",
      "1155.0",
      "32.0",
      "-3.0",
      "1001.0",
      "32.0",
      "-3.0",
      "715.0",
      "32.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "x, y, z, w = symbols('x y z w')\neq = [x**2/(2**2 - 1) + y**2/(2**2 - 3**2) + z**2/(2**2 - 5**2) + w**2/(2**2 - 7**2) - 1,\n      x**2/(4**2 - 1) + y**2/(4**2 - 3**2) + z**2/(4**2 - 5**2) + w**2/(4**2 - 7**2) - 1,\n      x**2/(6**2 - 1) + y**2/(6**2 - 3**2) + z**2/(6**2 - 5**2) + w**2/(6**2 - 7**2) - 1,\n      x**2/(8**2 - 1) + y**2/(8**2 - 3**2) + z**2/(8**2 - 5**2) + w**2/(8**2 - 7**2) - 1]\nsol = solve(eq, [x, y, z, w])\nprint(sol[0])"
  },
  {
    "example_id": 362,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "x = 3\nexpression = 8*x**3 - 27\n\n# (ax+b)(cx^2+dx+e)\na = 2\nb = -3\nc = 3\nd = -1\ne = 1\n\n# a+b+c+d+e\nsum = a + b + c + d + e\nprint(sum)"
  },
  {
    "example_id": 363,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "8.0",
      "8.0",
      "8.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "a, b = symbols('a b')\nn = symbols('n', integer = True)\nsum_expr = 3*n**2 + 9*n + 7\ndenom = n**2 + 3*n + 2\nsum_expr = sum_expr / denom**3\nsum_expr = sum_expr.subs({n: 0})\nsum_expr = sum_expr.subs({n: 123456789})\nprint(sum_expr)\neq = sum_expr - a/b\neq = eq.subs({a: b - a})\neq = eq.cancel()\nprint(eq)"
  },
  {
    "example_id": 364,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "import math\n\n# Calculate |x| \\cdot |x-5| = 3\nx_values = []\nfor x in range(-100, 100):\n    if abs(x) * abs(x - 5) == 3:\n        x_values.append(x)\n\n# Sum all real solutions\nsum = 0\nfor x in x_values:\n    if x == int(x):\n        sum += x\n\nprint(sum)"
  },
  {
    "example_id": 365,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "5.0",
      "5.0",
      "14.0",
      "5.0",
      "10.0",
      "5.0",
      "5.0",
      "5.0",
      "14.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\neq = 5*x**4 - 10*x**3 + 10*x**2 - 5*x - 11\nsum = solve(eq, x)\nprint(sum)"
  },
  {
    "example_id": 366,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-46.0",
      "254.0",
      "-1246.0",
      "6254.0",
      "-31246.0",
      "156254.0",
      "-781246.0",
      "3906254.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "a = 14\nfor n in range(2, 10):\n    a = 24 - 5*a\n    print(a)"
  },
  {
    "example_id": 367,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "44100.0"
    ],
    "annotated_answers": [
      "64.0"
    ],
    "solution": "n = sum([a**3 for a in range(1, 21)], 0)\nprint(n)"
  },
  {
    "example_id": 368,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "226.0"
    ],
    "annotated_answers": [
      "406.0"
    ],
    "solution": "x = symbols('x')\nP = x**2 - 2*x + 2\nP_11 = P.subs(x, 11)\nP_16 = P.subs(x, 16)\nprint(P_16)"
  },
  {
    "example_id": 369,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "a = 7\nb = 4\nc = -8\nd = 2\ne = -4\nprint(a + b + c + d + e)"
  },
  {
    "example_id": 370,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "# Find f(x)\ndef f(x):\n    return (x**2 - x**4 + 2*x) / (x + 1 - x)\n\n# Find alpha and beta\nalpha = f(1)\nbeta = f(0)\n\n# Print alpha^2 + beta^2\nprint(alpha**2 + beta**2)"
  },
  {
    "example_id": 371,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "2.0",
      "3.0",
      "2.0",
      "3.0",
      "1.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "a, b, c = symbols('a b c')\nab_sub_c = (a*b - c)\nac_sub_b = (a*c - b)\nbc_sub_a = (b*c - a)\neq1 = ab_sub_c + ac_sub_b + bc_sub_a\neq2 = (a + b + c + 1)**2\neq3 = eq1 - eq2\neq3 = eq3.expand()\nprint(eq3)"
  },
  {
    "example_id": 372,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "64.0"
    ],
    "annotated_answers": [
      "576.0"
    ],
    "solution": "x = 8**2\nprint(x)"
  },
  {
    "example_id": 373,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "44.0"
    ],
    "solution": "# The minimum value is 1.\n# The denominator is (xy)^2 = (x^2)(y^2)\n# The numerator is x^4 + 1, y^4 + 1, z^4 + 1.\n# The minimum value is achieved when x = y = z = 1.\n# a = 1, b = 1, c = 1\nprint(1 + 1 + 1)"
  },
  {
    "example_id": 374,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3968.0"
    ],
    "annotated_answers": [
      "3968.0"
    ],
    "solution": "def f(x):\n    if x**0.5 % 1 == 0:\n        return x**0.5\n    else:\n        return (f(x-1))**2 - 1\n\nprint(f(8))"
  },
  {
    "example_id": 375,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "13.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "x = symbols('x')\neq = 4*x**3 - 41*x**2 + 10*x - 1989\nx_value = solve(eq, x)\nprint(x_value[0])"
  },
  {
    "example_id": 376,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "181.0"
    ],
    "solution": "def recurrence(n):\n    return 2 * a[n - 1] - 2 * a[n - 2] + a[n - 3]\n\na = [0, 0, 1]\nfor i in range(3, 1332):\n    a.append(recurrence(i))\nprint(a[1331])"
  },
  {
    "example_id": 377,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "100.0",
      "2.0",
      "100.0",
      "1.0",
      "99.0",
      "2.0",
      "99.0",
      "1.0",
      "98.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x_1, x_2, x_3, x_4, x_5, x_6, x_7, x_8, x_9, x_10 = symbols('x_1 x_2 x_3 x_4 x_5 x_6 x_7 x_8 x_9 x_10')\nsum = 0\nfor i in range(1, 101):\n    sum += x_1**i * x_2**i\nprint(sum)"
  },
  {
    "example_id": 378,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "n = symbols('n')\neq = 3*n**3 - 12*n\neq_solve = solve(eq)\nprint(len(eq_solve))"
  },
  {
    "example_id": 379,
    "selected_mode": "import",
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "b = symbols('b')\nz = 9 + b*I\nz2 = z**2\nz3 = z**3\neq1 = I*z2.imag == I*z3.imag\neq2 = z2.imag == z3.imag\neq3 = factor(expand(eq2))\neq4 = eq3.subs(z, z2)\neq5 = eq4.subs(z, z3)\nsol = solve(eq5, b)\nprint(sol)"
  },
  {
    "example_id": 380,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "36.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "z1 = 1\nz2 = 2\nz3 = 3\nexpression = abs(9*z1*z2 + 4*z1*z3 + z2*z3)\nprint(expression)"
  },
  {
    "example_id": 381,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "import math\n\ndef find_minimum(x):\n    return 2*math.log10(x) - math.log10(1/100)\n\nminimum = find_minimum(10)\nprint(minimum)"
  },
  {
    "example_id": 382,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x = symbols('x')\neq = x**5 + 5*x**4 + 10*x**3 + 10*x**2 - 5*x + 1\nexpr = eq.subs(x, -1)\nprint(expr)"
  },
  {
    "example_id": 383,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\nf = (2*x - 6)/(x**3 - 7*x**2 - 2*x + 6)\nf_value = solve(f, x)\nprint(f_value)"
  },
  {
    "example_id": 384,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "k = 3"
  },
  {
    "example_id": 385,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "3.0",
      "1.0",
      "4.0",
      "1.0",
      "3.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq1 = x + 2*y + 4*z - 12\neq2 = x*y + 2*x*z + 4*y*z - 22\neq3 = x*y*z - 6\nsolution = solve([eq1, eq2, eq3], [x, y, z])\nprint(solution)"
  },
  {
    "example_id": 386,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "1.0",
      "2.0",
      "2.0",
      "1.0",
      "-2.0",
      "2.0",
      "2.0",
      "1.0",
      "3.0"
    ],
    "annotated_answers": [
      "90.0"
    ],
    "solution": "z = sympy.Symbol('z')\neq = z**2 + z + 1\nterm = (z + 1/z)**2 + (z**2 + 1/z**2)**2 + (z**3 + 1/z**3)**2 + (z**4 + 1/z**4)**2 + (z**5 + 1/z**5)**2 + (z**6 + 1/z**6)**2\nsum = term.subs(z, eq.expand())\nprint(sum)"
  },
  {
    "example_id": 387,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "# Least possible value of |a_{n-1}| is 2"
  },
  {
    "example_id": 388,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0",
      "21.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x, a, b = symbols('x a b')\neq = a*x + b\neq1 = a*(a*x + b) + b\neq2 = a*(a*(a*x + b) + b) + b\neq3 = 8*x + 21\n\nsol = solve([eq1 - eq2, eq2 - eq3], [a, b])\nprint(sol[0][0] + sol[0][1])"
  },
  {
    "example_id": 389,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "7.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq = sqrt(c*(b - c)) + sqrt(c*(a - c))\nmaximum = eq.subs([(a, 8), (b, 8), (c, 1)])\nprint(maximum)"
  },
  {
    "example_id": 390,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "15.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "import math\n\nF1 = (4, 0)\nF2 = (-4, 0)\nP = (0, 3)\nQ = (0, 0)\n\ndef distance(a, b):\n    return math.sqrt((a[0] - b[0]) ** 2 + (a[1] - b[1]) ** 2)\n\ndef find_max_distance(x, y):\n    global P, Q\n    P = (x, y)\n    Q = (x - 2 * (x - F1[0]), y - 2 * (y - F1[1]))\n    return distance(P, Q) + distance(F1, Q)\n\nprint(find_max_distance(0, 3))"
  },
  {
    "example_id": 391,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "3.0",
      "59.0",
      "2.0",
      "4.0",
      "3.0",
      "59.0",
      "2.0",
      "4.0",
      "3.0",
      "59.0",
      "2.0"
    ],
    "annotated_answers": [
      "-376.0"
    ],
    "solution": "from sympy import *\nr, s, t = symbols('r, s, t')\nf = lambda x: 4*x**3 - 59*x**2\nprint(f(r) + f(s) + f(t))"
  },
  {
    "example_id": 392,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.4411518807585587",
      "17"
    ],
    "annotated_answers": [
      "1024.0"
    ],
    "solution": "from sympy import binomial, Integer\nn = 31\nk = Integer(1)/Integer(2)\nresult = binomial(Integer(1) + k, n)\na, b = result.as_numer_denom()\nprint(b)"
  },
  {
    "example_id": 393,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "0.0",
      "0.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "# Even function\ndef f(x):\n    return x\n\n# Odd function\ndef g(x):\n    return -x\n\nprint(f(0))\nprint(g(0))\nprint(f(0) + g(0))"
  },
  {
    "example_id": 394,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x = 2\ny = 1\nz = 1\nexpression = x*y + x*z + y*z\nprint(expression)"
  },
  {
    "example_id": 395,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "7.0",
      "41.0",
      "-1.0",
      "7.0",
      "41.0"
    ],
    "annotated_answers": [
      "163.0"
    ],
    "solution": "from sympy import Symbol, solve\nx = Symbol('x')\nf = x**2 + 2*x + 2010\nsol = solve(f, x)\nprint(sol)"
  },
  {
    "example_id": 396,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "a, b = symbols('a b')\neq = 3*a**3*3 + 2/(a*b - 2*b**2)\neq_min = eq.subs(a, 2*b).subs(b, 1)\nprint(eq_min)"
  },
  {
    "example_id": 397,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "16.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "import sympy as sp\nx, y = sp.symbols(\"x, y\")\nf1 = x**2 - 8*x + y**2 + 4*y - 8\nf2 = x**2 - 8*x + y**2 - 4*y + 8\nd = f1 + f2\nprint(d)"
  },
  {
    "example_id": 398,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "27.0"
    ],
    "solution": "def recurrence(x, k):\n    return abs(x + 3)\n\nx_0 = 0\nk_max = 2006\nx = recurrence(x_0, k_max)\nprint(abs(x))"
  },
  {
    "example_id": 399,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "x = symbols('x')\nP = x**3 + a*x**2 + b*x + c\nremainder1 = P.subs(x, 1)\nremainder2 = P.subs(x, 4)\nremainder3 = P.subs(x, 2)\nremainder4 = P.subs(x, 3)\nsolve([remainder1 - 2*remainder2, remainder3 - 2*remainder4], [a, b, c])"
  },
  {
    "example_id": 400,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = 0\ny = 3\nz = 0\nprint((x*y + z)*(x*z + y))"
  },
  {
    "example_id": 401,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "3.0",
      "2.0",
      "3.0",
      "108.0",
      "2009.0",
      "3.0",
      "2025.0",
      "2.0",
      "1.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "k, x = symbols('k x')\neq = x**4 + k*x**2 + 90*x - 2009\nalpha, beta, gamma, delta = solve(eq, x)\nprint(alpha*beta)"
  },
  {
    "example_id": 402,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "501.0"
    ],
    "solution": "from sympy import symbols, log, Eq, solve\nx, k = symbols('x k')\neq = Eq(log(k*x), 2*log(x+2))\nsol = solve(eq, k)\nprint(len(sol))"
  },
  {
    "example_id": 403,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "from sympy import symbols, expand, factor, collect, solve\nx, y = symbols('x y')\neq = (x**3 - x**2 + x)/(6*x**2 - 9*x)\nholes = eq.free_symbols\nasymptotes = [eq.as_numer_denom()[0].as_leading_term(x),\n              eq.as_numer_denom()[1].as_leading_term(x)]\nprint(len(holes))\nprint(len(asymptotes))"
  },
  {
    "example_id": 404,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "2.0",
      "-8.0",
      "2.0",
      "12.0",
      "6.0",
      "18.0",
      "2.0",
      "18.0"
    ],
    "annotated_answers": [
      "-14.0"
    ],
    "solution": "from sympy import *\nx, y, z = symbols(\"x, y, z\")\nexpr = 3*x**2 + 12*y**2 + 27*z**2 - 4*x*y - 6*x*z - 12*y*z - 8*y - 24*z\nsol = solve(expr, [x, y, z])\nprint(sol)"
  },
  {
    "example_id": 405,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "# Maximum possible value of deg q\nmax_deg_q = 9 - 3\nprint(max_deg_q)"
  },
  {
    "example_id": 406,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a, b = symbols('a b')\nx = symbols('x')\neq = (x - a)/b + (x - b)/a - (b/(x - a) + a/(x - b))\neq = eq.expand()\neq = eq.simplify()\nsol = solve(eq, x)\nprint(len(sol))"
  },
  {
    "example_id": 407,
    "selected_mode": "import",
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x = symbols('x')\na, b, c = symbols('a b c')\n\n# Define polynomial functions\nf = x**4 + a*x**3 + b*x**2 + c*x + 1\ng = x**4 + 2*a*x**3 + 2*b*x**2 + 2*c*x + 1\n\n# Find the roots of f(x) and g(x)\nf_roots = f.roots()\ng_roots = g.roots()\n\n# Find the common roots\ncommon_roots = set(f_roots).intersection(g_roots)\n\n# Find the sum of the coefficients\nsum_of_coefficients = 0\nfor root in common_roots:\n    sum_of_coefficients += root.coefficients(x)\n\nprint(sum_of_coefficients)"
  },
  {
    "example_id": 408,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "def is_root(x):\n    for i in range(2000, 0, -1):\n        if (2**i) * x**i + 3**i * x**(i-1) + 2**(i-1) * x**(i-2) + 3**(i-2) * x**(i-3) + 2 * x + 3!= 0:\n            return False\n    return True\n\nroot_count = 0\nfor i in range(1, 10000):\n    if is_root(i):\n        root_count += 1\n\nprint(root_count)"
  },
  {
    "example_id": 409,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "z = symbols('z')\ncondition = z*z - 1\nunits = solve(condition, z)\nprint(len(units))"
  },
  {
    "example_id": 410,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2101.0"
    ],
    "annotated_answers": [
      "2101.0"
    ],
    "solution": "x = 5\ny = 4\neq = x**4 + x**3*y + x**2*y**2 + x*y**3 + y**4\nprint(eq)"
  },
  {
    "example_id": 411,
    "selected_mode": "import",
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "89.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\neq = a**2 + b**2 + c**2 + 519 - (d + 36*sqrt(10*a + 14*b + 22*c - d))\nf = expand(eq)\nsol = solve(f, [a, b, c, d])\nprint(sol)"
  },
  {
    "example_id": 412,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\neq1 = a**4 + b**4 + c**4 + d**4 - 48\neq2 = a*b*c*d - 12\nsol = solve([eq1, eq2], [a, b, c, d])\nprint(len(sol))"
  },
  {
    "example_id": 413,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "-8.0"
    ],
    "solution": "from sympy import *\na, b, c = symbols('a b c')\nexpr = (a*b*c + a*b + a*c + b*c + a + b + c + 1).expand()\nprint(expr)"
  },
  {
    "example_id": 414,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3074728177.0"
    ],
    "annotated_answers": [
      "331.0"
    ],
    "solution": "def f(n):\n    if n == 1:\n        return 1986\n    if n % 2 == 0:\n        return n//2 - 2*f(n//2)\n    else:\n        return n//2 - 2*f(n//2 + 1)\n\nsum = 0\nfor i in range(1, 1985):\n    sum += f(i)\nprint(sum + f(1986))"
  },
  {
    "example_id": 415,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "70.0",
      "29.0"
    ],
    "annotated_answers": [
      "-99.0"
    ],
    "solution": "x = symbols('x')\na, b = symbols('a b')\neq1 = x**6 + a*x + b\neq2 = x**2 - 2*x - 1\nresult = sympy.rem(eq1, eq2)\nprint(result)"
  },
  {
    "example_id": 416,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2224.0"
    ],
    "annotated_answers": [
      "1999.0"
    ],
    "solution": "n = 0\nsum = 0\nwhile sum < 10000:\n    n += 1\n    sum += (n%10)\nprint(n)"
  },
  {
    "example_id": 417,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.5"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "a = 1/3\nb = 2/3\nexpression = 2/a + 1/b\nprint(expression)"
  },
  {
    "example_id": 418,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "5.0",
      "5.0",
      "5.0",
      "5.0"
    ],
    "annotated_answers": [
      "-7.0"
    ],
    "solution": "from sympy import *\n\na, b, c, d, e = symbols('a b c d e')\n\nexpression = a**5 / (a - b)*(a - c)*(a - d)*(a - e) + \\\n             b**5 / (b - a)*(b - c)*(b - d)*(b - e) + \\\n             c**5 / (c - a)*(c - b)*(c - d)*(c - e) + \\\n             d**5 / (d - a)*(d - b)*(d - c)*(d - e) + \\\n             e**5 / (e - a)*(e - b)*(e - c)*(e - d)\n\nprint(expression)"
  },
  {
    "example_id": 419,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a = 2 - 4*I\nb = 2 + I\nprint(abs(a/b))"
  },
  {
    "example_id": 420,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "-2.0",
      "3.0",
      "-18.0",
      "-36.0",
      "2.0",
      "3.0",
      "2.0",
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x, y = symbols('x y')\neq = x*y*(x**2 - y**2) - (x**2 + y**2)\nsol = solve(eq, [x, y])\nprint(sol)"
  },
  {
    "example_id": 421,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "# The minimum value of the expression is achieved when a = b = c.\na = b = c = 1\nexpression = (a + b)*(a + c)*(b + c)/(a*b*c)\nprint(expression)"
  },
  {
    "example_id": 422,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "101.0",
      "102.0",
      "103.0",
      "104.0",
      "105.0",
      "106.0",
      "107.0",
      "108.0",
      "109.0",
      "110.0"
    ],
    "annotated_answers": [
      "101.0"
    ],
    "solution": "for i in range(1, 100000000):\n    if 100000000 // i**4 < 1:\n        print(i)"
  },
  {
    "example_id": 423,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "15.0",
      "15.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "x = symbols('x')\np = symbols('p', positive=True)\nf = abs(x-p) + abs(x-15) + abs(x-p-15)\nf_min = f.subs(x, p)\nprint(f_min)"
  },
  {
    "example_id": 424,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "46656.0",
      "46656.0",
      "46656.0"
    ],
    "annotated_answers": [
      "111.0"
    ],
    "solution": "a, b, c = symbols('a b c')\nlog_a = log(a, 6)\nlog_b = log(b, 6)\nlog_c = log(c, 6)\neq1 = log_a + log_b + log_c\neq2 = 6\neq = Eq(eq1, eq2)\nsolve_for_a = solve(eq, a)\nsolve_for_b = solve(eq, b)\nsolve_for_c = solve(eq, c)\na_value = solve_for_a[0]\nb_value = solve_for_b[0]\nc_value = solve_for_c[0]\na_plus_b_plus_c = a_value + b_value + c_value\nprint(a_plus_b_plus_c)"
  },
  {
    "example_id": 425,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "450.0"
    ],
    "annotated_answers": [
      "24.0"
    ],
    "solution": "p = lambda x: x**4 + 2*x**3 + 3*x**2 + 4*x + 1\nprint(p(0) + p(4))"
  },
  {
    "example_id": 426,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2998905.0",
      "63001.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "x, y = symbols('x y')\nf1 = (3, 10 + sqrt(105))\nf2 = (3, 10 - sqrt(105))\na = sqrt((f1[0] - f2[0])**2 + (f1[1] - f2[1])**2)\nb = sqrt((-5 - f1[0])**2 + (10 - f1[1])**2)\nc = sqrt((11 - f1[0])**2 + (10 - f1[1])**2)\nsemi_major = (a**2 * b**2 * c**2) / (4 * (b**2 - a**2) * (c**2 - a**2))\nprint(semi_major)"
  },
  {
    "example_id": 427,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "27.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "# number of ordered triplets\n# of roots of the equation\n# x^3 + ax^2 + bx + c = 0\nn = 3*3*3\nprint(n)"
  },
  {
    "example_id": 428,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "x = symbols('x')\neq = (5*x + 9)**611 + (x + 5)**11 + (x - 1)**11 + 3*x**2 + 1\nremainder = sympy.rem(eq, x + 2)\nprint(remainder)"
  },
  {
    "example_id": 429,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0",
      "2.0",
      "4.0",
      "4.0",
      "1.0",
      "4.0",
      "-4.0",
      "2.0",
      "4.0",
      "4.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "x, y, z = symbols('x y z')\nexpr = x**4 + 4*y**2 + 4*z**4\nconstraint = x*y*z - 2\nsolve_expr = solve(expr, x, y, z, constraints=(constraint,))\nprint(solve_expr)"
  },
  {
    "example_id": 430,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "15.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x, y = symbols('x y')\neq = x**2 + 8*x*y + 7*y**2 - 225\ndist = sympy.sqrt(eq.subs({x: 0, y: 0}))\nprint(dist)"
  },
  {
    "example_id": 431,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "F1 = (10,2)\nF2 = (-16,2)\n\nx1, y1 = F1\nx2, y2 = F2\n\na = abs(x1 - x2)\nb = abs(y1 - y2)\nh = (x1 + x2)/2\nk = (y1 + y2)/2\n\nprint(h + k + a + b)"
  },
  {
    "example_id": 432,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "52.0",
      "581.0"
    ],
    "annotated_answers": [
      "962.0"
    ],
    "solution": "x = symbols('x')\nk = symbols('k')\neq = x**3 - 52*x**2 + 581*x - k\neq_solve = solve(eq, k)\nprint(eq_solve[0])"
  },
  {
    "example_id": 433,
    "selected_mode": "import",
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-9.0"
    ],
    "solution": "# define the function\nf = sympy.Function('f')\nf_expr = sympy.Mul(2*f(x) + 9, 1/f(x) - 7)\nf = lambdify(x, f_expr, modules=['numpy'])\n\n\n# find the solutions\nsolutions = []\nfor i in range(-10, 10):\n    # solve for the x value\n    x_solution = solve(f(f(i)), x)\n    # filter out the complex solutions\n    if x_solution[0].is_real:\n        solutions.append(x_solution[0].n())\n# multiply the solutions\nresult = 1\nfor solution in solutions:\n    result *= solution\nprint(result)"
  },
  {
    "example_id": 434,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "z = symbols('z')\nprint(abs(conjugate(z)**2))"
  },
  {
    "example_id": 435,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "c = 2"
  },
  {
    "example_id": 436,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0000000000000018",
      "0.0"
    ],
    "annotated_answers": [
      "79.0"
    ],
    "solution": "# given that three roots of f(x)=x^4+ax^2+bx+c are 2, -3, and 5\n# what is the value of a+b+c?\n\nimport numpy as np\n\ndef f(x):\n    return x**4 + 2*x**2 + 3*x + 4\n\nroots = np.roots([1, 2, -3, 5])\na, b, c = roots\n\nprint(a + b + c)"
  },
  {
    "example_id": 437,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "7.0",
      "6.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x = symbols('x')\nf = (7*x - 2)/(x**2 - 4)\nA, B = symbols('A B')\nf_decomposed = f.as_numer_denom()\nA_value = solve(f_decomposed[0] - A, A)\nB_value = solve(f_decomposed[1] - B, B)\nprint(A_value[0] + B_value[0])"
  },
  {
    "example_id": 438,
    "selected_mode": "import",
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "n = symbols('n')\nFibonacci = lambda n: (phi**n - (1-phi)**n)/sqrt(5)\nFibonacci_sum = sum(1/Fibonacci(n)**2/(Fibonacci(n+2)**2) for n in range(1, 1000000))\nFibonacci_sum"
  },
  {
    "example_id": 439,
    "selected_mode": "import",
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "49.0"
    ],
    "solution": "x = symbols('x')\nf = abs(x - 1) + abs(2*x - 1) + abs(3*x - 1) + abs(4*x - 1) + abs(5*x - 1) + abs(6*x - 1) + abs(7*x - 1) + abs(8*x - 1) + abs(9*x - 1) + abs(10*x - 1) + abs(11*x - 1) + abs(12*x - 1) + abs(13*x - 1) + abs(14*x - 1) + abs(15*x - 1) + abs(16*x - 1) + abs(17*x - 1) + abs(18*x - 1) + abs(19*x - 1) + abs(20*x - 1) + abs(21*x - 1) + abs(22*x - 1) + abs(23*x - 1) + abs(24*x - 1) + abs(25*x - 1) + abs(26*x - 1) + abs(27*x - 1) + abs(28*x - 1) + abs(29*x - 1) + abs(30*x - 1) + abs(31*x - 1) + abs(32*x - 1) + abs(33*x - 1) + abs(34*x - 1) + abs(35*x - 1) + abs(36*x - 1) + abs(37*x - 1) + abs(38*x - 1) + abs(39*x - 1) + abs(40*x - 1) + abs(41*x - 1) + abs(42*x - 1) + abs(43*x - 1) + abs(44*x - 1) + abs(45*x - 1) + abs(46*x - 1) + abs(47*"
  },
  {
    "example_id": 440,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-10.0"
    ],
    "annotated_answers": [
      "90.0"
    ],
    "solution": "x = symbols('x')\neq = (3620 + 322*x - 4*x**2)**0.5\nsol = solve(eq, x)\nprint(sol[0])"
  },
  {
    "example_id": 441,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-6.0",
      "2.0",
      "12.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "a, b, c = symbols('a b c')\nexpr = 2*a**2 + 3*b**2 + 6*c**2\nconstraint = a + b + c - 1\nsolution = solve(expr, a, b, c, dict=True)\nprint(solution[0][a])"
  },
  {
    "example_id": 442,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "-6.0"
    ],
    "solution": "# The first cubic\np = 5\nq = 1\n# The second cubic\nr = 1\n# The common roots\nroot = (p-q) / (p-r)\nprint(root)"
  },
  {
    "example_id": 443,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "34.0"
    ],
    "annotated_answers": [
      "34.0"
    ],
    "solution": "x = symbols('x')\nf = x**3 - 49*x**2 + 623*x - 2015\ng = f.subs(x, x + 5)\nroots = sympy.roots(g)\nprint(sum(roots))"
  },
  {
    "example_id": 444,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "4.0",
      "10.0"
    ],
    "annotated_answers": [
      "27648.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\nexpr = a*b**2*c**3*d**4\neq = expr - 10\neq = eq.expand()\neq = eq.factor()\neq = eq.simplify()\nprint(eq)"
  },
  {
    "example_id": 445,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "from sympy import symbols, Poly, S, nfloat\n\na, b, c, d = symbols('a b c d', real=True)\nx = symbols('x', real=True)\n\nroots = [a, b, c, d]\n\n# polynomial\np = Poly(x**4 - (a**2 + b**2 + c**2 + d**2), x)\n\n# polynomial degree\ndeg = p.degree()\n\nprint('The smallest possible degree of the polynomial is:', deg)"
  },
  {
    "example_id": 446,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "49.0"
    ],
    "annotated_answers": [
      "516.0"
    ],
    "solution": "total = 0\nfor i in range(1, 50):\n    total += (i + 1) - i\nprint(total)"
  },
  {
    "example_id": 447,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.63"
    ],
    "annotated_answers": [
      "0.63"
    ],
    "solution": "a = 1.63\nb = log(4, 9)\nprint(round(b, 2))"
  },
  {
    "example_id": 448,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "4.0",
      "2.0",
      "5.0",
      "3.0",
      "7.0",
      "3.0",
      "6.0",
      "2.0",
      "0.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq = 2*a**3 + 3*a**2*b + 4*a*b**2 + 5*b**3 + 6*c**2 + 7*c**3\nprint(eq.expand())\nprint(eq.expand().coeff(a*b*c))"
  },
  {
    "example_id": 449,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-79626240000000.0",
      "42467328000000.0"
    ],
    "annotated_answers": [
      "117649.0"
    ],
    "solution": "# r1, r2,..., r7 are the distinct complex roots of the polynomial x^7 - 7\nr1 = 1 + 1j\nr2 = 1 - 1j\nr3 = 2 + 2j\nr4 = 2 - 2j\nr5 = 3 + 3j\nr6 = 3 - 3j\nr7 = 4 + 4j\n\n# K is the product of all numbers of the form r_i + r_j\nK = (r1 + r2) * (r1 + r3) * (r1 + r4) * (r1 + r5) * (r1 + r6) * (r1 + r7) * (r2 + r3) * (r2 + r4) * (r2 + r5) * (r2 + r6) * (r2 + r7)\n\n# K^2\nK2 = K * K\nprint(K2)"
  },
  {
    "example_id": 450,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "827.9999999999999"
    ],
    "annotated_answers": [
      "828.0"
    ],
    "solution": "import math\n\ndef f(x):\n    return (x+6*math.sqrt(43))**(3/2) - (x-6*math.sqrt(43))**(3/2)\n\nprint(f(52))"
  },
  {
    "example_id": 451,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "190.0"
    ],
    "annotated_answers": [
      "198.0"
    ],
    "solution": "a19 = 99\na20 = 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15 + 16 + 17 + 18 + 19\nprint(a20)"
  },
  {
    "example_id": 452,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-6.0",
      "3.0",
      "-3.0",
      "3.0",
      "-6.0",
      "-3.0",
      "3.0",
      "3.0",
      "6.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq1 = x + y - z\neq2 = x*z - x*y + y*z - 27\neq3 = x*y*z - 54\nsol = solve([eq1, eq2, eq3], [x, y, z])\nprint(sol)"
  },
  {
    "example_id": 453,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-7.0",
      "82.0",
      "3.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "1325.0",
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "-7.0"
    ],
    "solution": "from sympy import Symbol\nfrom sympy import solve\n\nx = Symbol('x')\na, b, c = solve(x**3 + 7*x**2 - 11*x - 2, x)\nprint(a + b + c)"
  },
  {
    "example_id": 454,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1176.0"
    ],
    "annotated_answers": [
      "229.0"
    ],
    "solution": "def p(x):\n    return x**3 + 4*x**2 + 136*x\nprint(p(6))"
  },
  {
    "example_id": 455,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0",
      "4.0"
    ],
    "annotated_answers": [
      "697.0"
    ],
    "solution": "z, n = symbols('z n')\neq = (z/ (z + n)) - 4*sympy.I\nn_value = solve(eq, n)\nprint(n_value[0])"
  },
  {
    "example_id": 456,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "20.0",
      "2.0"
    ],
    "annotated_answers": [
      "500.0"
    ],
    "solution": "from sympy import sqrt\na, b = symbols('a b')\neq = sqrt(a) - sqrt(b) - 20\nmax_a = solve(eq, a)\nprint(max_a[0])"
  },
  {
    "example_id": 457,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "0.125",
      "1.0",
      "0.125",
      "1.0",
      "1.0",
      "9999.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "from sympy import Sum, sqrt\nn = symbols('n')\nexpr = 1/(sqrt(n) + sqrt(n + 1))/(sqrt(n**(1/4)) + sqrt(n + 1)**(1/4))\nsum_value = Sum(expr, (n, 1, 9999))\nprint(sum_value)"
  },
  {
    "example_id": 458,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-7.592972300545109",
      "96.0",
      "4.993836209843239",
      "96.0"
    ],
    "annotated_answers": [
      "500.0"
    ],
    "solution": "x = 0.5 - 1j\nexpression = x**2001 + (1/2-x)**2001\nprint(expression)"
  },
  {
    "example_id": 459,
    "selected_mode": "import",
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "214.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\ncond1 = (a + b)*(c + d) - 143\ncond2 = (a + c)*(b + d) - 150\ncond3 = (a + d)*(b + c) - 169\n\nf = expand((a**2 + b**2 + c**2 + d**2))\neq = [cond1, cond2, cond3]\n\nsol = solve(eq, [a, b, c, d])\nsol = dict(sol)\n\ndef func(x):\n    return x[0]**2 + x[1]**2 + x[2]**2 + x[3]**2\n\nsolve = minimize(func, sol)\nprint(solve)"
  },
  {
    "example_id": 460,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1004.0"
    ],
    "annotated_answers": [
      "1004.0"
    ],
    "solution": "sum = 0\nfor i in range(1, 2007+1):\n    if i%2 == 0:\n        sum += i\n    else:\n        sum -= i\nprint(sum)"
  },
  {
    "example_id": 461,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "8.0",
      "3.0",
      "4.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "from sympy import log, symbols\nm, n = symbols('m n')\nx = symbols('x')\neq = 8*(log(x)/log(n))*(log(x)/log(m)) - 7*log(x)/log(n) - 6*log(x)/log(m) - 2013\nsol = solve(eq, x)\nprod = 1\nfor i in sol:\n    prod *= i\nprint(prod)\nprint(m + n)"
  },
  {
    "example_id": 462,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "3.0",
      "4.0",
      "3.0",
      "4.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "from sympy import sqrt\nexpr = sqrt(Rational(3, 4) - sqrt(Rational(1, 2))) - sqrt(Rational(3, 4) + sqrt(Rational(1, 2)))\nprint(expr)"
  },
  {
    "example_id": 463,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "n = 1\nS = {0, 10}\nwhile True:\n    x = 10**n\n    if x not in S:\n        break\n    S.add(x)\n    n += 1\nprint(n)"
  },
  {
    "example_id": 464,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "32.0",
      "95232.0"
    ],
    "annotated_answers": [
      "1023.0"
    ],
    "solution": "d = symbols('d')\nmoney = d\nfor i in range(10):\n    if i % 2 == 0:\n        money *= 2\n    else:\n        money -= 1024\n    money -= 1024\nprint(money)"
  },
  {
    "example_id": 465,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "x = symbols('x')\neq = (1/(x**2 - 10*x - 29)) + (1/(x**2 - 10*x - 45)) - (2/(x**2 - 10*x - 69))\nsol = solve(eq, x)\nprint(sol[0])"
  },
  {
    "example_id": 466,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "4022030.0"
    ],
    "solution": "def f(x):\n    if x < floor(x) + 1/floor(x):\n        return floor(x)*abs(x-floor(x)-1/2*floor(x))\n    else:\n        return f(x-1/floor(x))\n\ndef g(x):\n    return 2**(x-2007)\n\nprint(len(set(f(x) for x in range(1,1000)) & set(g(x) for x in range(1,1000))))"
  },
  {
    "example_id": 467,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "269.0"
    ],
    "annotated_answers": [
      "269.0"
    ],
    "solution": "z = 10 - 13*1j\nprint(z.real**2 + z.imag**2)"
  },
  {
    "example_id": 468,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "15.0",
      "8.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "from sympy import symbols, Abs\nz1, z2 = symbols('z1 z2')\ndistance = Abs(z2 - z1)\ndistance_diff = Abs(z2 - z1 - (15+8*I))\nprint(distance_diff/distance)"
  },
  {
    "example_id": 469,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "11.0",
      "17.0"
    ],
    "annotated_answers": [
      "42.0"
    ],
    "solution": "p = sympy.Poly(sympy.sqrt(7), sympy.sqrt(11), sympy.sqrt(17))\nprint(p)"
  },
  {
    "example_id": 470,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "expression = 2011**2011\nprint(expression%100)"
  },
  {
    "example_id": 471,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "6981.0",
      "2.0",
      "1323.0",
      "2.0",
      "1.0",
      "3.0",
      "3.0",
      "3.0",
      "25.0"
    ],
    "annotated_answers": [
      "-14.0"
    ],
    "solution": "x = symbols('x')\nr, s, t = solve(x**3 + 9*x**2 + 2*x + 1, x)\nprint(1/(r**2) + 1/(s**2) + 1/(t**2))"
  },
  {
    "example_id": 472,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.059457190301176",
      "17",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "69.0",
      "25.0",
      "2.0",
      "3.0",
      "8.756212254307877",
      "18"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "from sympy import symbols, Poly, roots\nfrom sympy.abc import x\n\nQ = Poly(x**4 - x**3 - x**2 - 1, x)\n\nz1, z2, z3, z4 = roots(Q)\n\nP = Poly(x**6 - x**5 - x**3 - x**2 - x, x)\n\nprint(P(z1) + P(z2) + P(z3) + P(z4))"
  },
  {
    "example_id": 473,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "9.5"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "# The roots of the polynomial are:\nr1 = 2\nr2 = 4\nr3 = 5\nr4 = 8\n\n# The given equation is:\nsum = (r1/2) + (r2/4) + (r3/5) + (r4/8)\nprint(sum)\n\n# The given equation is:\na = (1/2) * (r1 + r2 + r3 + r4)\nprint(a)"
  },
  {
    "example_id": 474,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "10.0",
      "5.0",
      "2.0",
      "10.0",
      "5.0"
    ],
    "annotated_answers": [
      "-64.0"
    ],
    "solution": "x = symbols('x')\nsol = (5*x**2 + 8)/(x**2 - 16)\nprint(solve(sol, x))"
  },
  {
    "example_id": 475,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "3.0",
      "4.0",
      "5.0",
      "6.0",
      "7.0",
      "8.0",
      "9.0",
      "10.0"
    ],
    "annotated_answers": [
      "-10879.0"
    ],
    "solution": "def is_common_root(a, b):\n    x = (a - b) / (a + b)\n    return x == x\n\nfor b in range(1, 1000):\n    if is_common_root(1988*b**2 + 8891, 8891*b**2 + 1988):\n        print(b)"
  },
  {
    "example_id": 476,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\neq = a*log(2) + b*log(3) + c*log(5) + d*log(7)\neq = eq.subs(log(10), log(10)/log(2.5))\neq = eq.subs(log(2.5), 1)\nsol = solve(eq - 2005, [a, b, c, d])\nprint(len(sol))"
  },
  {
    "example_id": 477,
    "selected_mode": "import",
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "# define tau\ntau = (1 + sqrt(5))/2\n\n\n# define the summation\nS = sum(1/tau**n for n in range(1, 100))\n\n\n# find the solution\nn = int(minimize(lambda n: abs(tau**n - S), 0, 100).args[0])\n\n\n# print the solution\nprint(n)"
  },
  {
    "example_id": 478,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\ny = (1/(x**3 - 3*x**2 + 3*x - 1))\nprint(y.as_leading_term(x))"
  },
  {
    "example_id": 479,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "152.2185107203483"
    ],
    "annotated_answers": [
      "512.0"
    ],
    "solution": "a = 8**(5/4)\nb = 4**(7/4)\nab = a*b\nprint(ab)"
  },
  {
    "example_id": 480,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "101.0",
      "6.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\nexpr = (b + c + d)/a + (a + c + d)/b + (a + b + d)/c + (a + b + c)/d\nprint(expr.subs({a: 1, b: 2, c: 3, d: 4}))"
  },
  {
    "example_id": 481,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4538.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "n = 2017\nF = [0, 1]\nfor i in range(n):\n    F.append(F[i] + F[i + 1])\n    F[i + 1] %= 3\n\nprint(sum(F))"
  },
  {
    "example_id": 482,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "47.0"
    ],
    "solution": "x, y = 1, 2\nprint(x**2 + y**2)"
  },
  {
    "example_id": 483,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "-2.0",
      "7.0",
      "282.0",
      "36.0",
      "7.0",
      "2.0",
      "1.0",
      "3.0",
      "7.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "from sympy import symbols\nfrom sympy import solve\n\nx = symbols('x')\neq = 2*x**4 - 8*x**3 + 7\nroots = solve(eq, x)\nprint(roots)\na, b, c, d = roots\nprint(a + b + c + d)"
  },
  {
    "example_id": 484,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2007.0",
      "4.0",
      "6021.0",
      "4.0"
    ],
    "annotated_answers": [
      "49896.0"
    ],
    "solution": "n, l = symbols('n l')\n\n# Total length of all lines drawn\ntotal_length = 2007\n\n# Length of each line\nline_length = total_length/n\n\n# Number of lines\nnum_lines = n\n\n# Number of basic rectangles\nnum_basic_rectangles = n*(n-3)\n\n# Area of each basic rectangle\nbasic_rectangle_area = (line_length/2)**2\n\n# Total area of all basic rectangles\ntotal_basic_rectangle_area = num_basic_rectangles*basic_rectangle_area\n\n# Number of basic rectangles determined\nnum_basic_rectangles_determined = total_basic_rectangle_area/line_length\n\nprint(num_basic_rectangles_determined)"
  },
  {
    "example_id": 485,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "4.0",
      "5.0",
      "4.0",
      "-10.0",
      "2.0",
      "5.0",
      "4.0",
      "85.0",
      "1.0",
      "4.0",
      "5.0",
      "4.0",
      "-10.0",
      "2.0",
      "5.0",
      "4.0",
      "-85.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "z = symbols('z')\neq = z + 1/z - (1 + sqrt(5))/2\nz_value = solve(eq, z)\nprint(z_value[0]**85 + 1/z_value[0]**85)"
  },
  {
    "example_id": 486,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "z, n = symbols('z n')\neq = z**3 - 1\nroot = solve(eq, z)\nomega_value = root[0]\nprint(omega_value**n)"
  },
  {
    "example_id": 487,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "496.0"
    ],
    "solution": "for i in range(1000):\n    x = i/100\n    if int(x) * int(x * math.floor(x)) == i:\n        print(i)"
  },
  {
    "example_id": 488,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "h = 6\nk = -5\na = 4\nb = 2\nprint(h + k + a + b)"
  },
  {
    "example_id": 489,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "3.0",
      "4.0",
      "5.0",
      "6.0",
      "7.0",
      "8.0",
      "10.0",
      "1.0"
    ],
    "annotated_answers": [
      "30.0"
    ],
    "solution": "a_1, a_2, a_3, a_4, a_5, a_6, a_7, a_8, a_9, a_10 = symbols('a_1 a_2 a_3 a_4 a_5 a_6 a_7 a_8 a_9 a_10')\neq1 = a_1 + a_10 - 50\neq2 = 1/(a_1*a_2) + 1/(a_2*a_3) + 1/(a_3*a_4) + 1/(a_4*a_5) + 1/(a_5*a_6) + 1/(a_6*a_7) + 1/(a_7*a_8) + 1/(a_8*a_9) + 1/(a_9*a_10)\neq3 = eq2 - 10\nk = solve(eq3, a_10)\nprint(k[0])"
  },
  {
    "example_id": 490,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "4.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "a, b, c, x = symbols('a b c x')\nexpr = (x + a)**2 / (a - b)*(a - c) + (x + b)**2 / (b - a)*(b - c) + (x + c)**2 / (c - a)*(c - b)\nexpr = expr.expand()\nexpr = expr.simplify()\nprint(expr)"
  },
  {
    "example_id": 491,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq = x*y*z*(x + y + z)\neq = eq.subs([(x, 1), (y, 1), (z, 1)])\nprint(eq)"
  },
  {
    "example_id": 492,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "49.0"
    ],
    "solution": "from math import floor\nn = 2002\nfor k in range(1, 10000):\n    if floor(n/k)!= k:\n        print(k)\n        break"
  },
  {
    "example_id": 493,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "3.0",
      "14.0",
      "2.0",
      "49.0",
      "2.0",
      "4.0",
      "3.0",
      "2.0",
      "9.0",
      "4.0",
      "3.0",
      "81.0",
      "2.0",
      "18.0",
      "2.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "157.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq1 = (a/b + b/c + c/a) - 7\neq2 = (b/a + c/b + a/c) - 9\neq1_a = solve(eq1, a)\neq2_a = solve(eq2, a)\nprint(eq1_a[0] + eq2_a[0])"
  },
  {
    "example_id": 494,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "1003503.0",
      "4007.0"
    ],
    "annotated_answers": [
      "4014013.0"
    ],
    "solution": "side1 = 2003\nside2 = 2004\nside3 = side1 * side2\nside3_sqrt = sympy.sqrt(side3)\ndiagonal = side1 + side2 + side3_sqrt\nprint(diagonal)"
  },
  {
    "example_id": 495,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "59.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "def f(x):\n    return x**3 - 3*x**2 + 2*x - 1\nprint(f(5))"
  },
  {
    "example_id": 496,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "x = symbols('x')\nf = x*(x+1)*(x+2)*(x+3)\nmin_val = minimize(f, x, domain=S.Reals)\nprint(min_val)"
  },
  {
    "example_id": 497,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0",
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "from sympy import symbols, Max\nx = symbols('x')\nf = 2*x\nf = 8 - 2*x\nf = Max(f, f)\nprint(f)"
  },
  {
    "example_id": 498,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "20.0"
    ],
    "annotated_answers": [
      "31.0"
    ],
    "solution": "n = 20\nprint(n)"
  },
  {
    "example_id": 499,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "3996.0"
    ],
    "solution": "x = 1998\nn = 1997\nx_squared = x**2\nn_squared = n**2\nnumerator = (x_squared - n_squared)\ndenominator = (n_squared - x_squared)\nproduct = numerator / denominator\nprint(product)"
  },
  {
    "example_id": 500,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0",
      "1.0",
      "2.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "3.0",
      "4.0"
    ],
    "annotated_answers": [
      "100.0"
    ],
    "solution": "for a in range(1, 101):\n    for b in range(1, 101):\n        for c in range(1, 101):\n            if a**2 + b**2 + c**2 == a*b + a*c + b*c:\n                print(a, b, c)"
  },
  {
    "example_id": 501,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x_min = 5\nx_max = 11\ny_min = 1\ny_max = 3\n\nsum = 0\nfor x in range(x_min, x_max + 1):\n    for y in range(y_min, y_max + 1):\n        if x == y**2 - 6*y + 5:\n            sum += x\n\nprint(sum)"
  },
  {
    "example_id": 502,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\neq = x**3 - 3*x**2 - 9*x + 30\nremainder = sympy.rem(eq, x - 3)\nprint(remainder)"
  }
]