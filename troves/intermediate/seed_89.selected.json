[
  {
    "example_id": 0,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "51.0"
    ],
    "solution": "x = 2\nif x < x**2 < x**3:\n    print(10)"
  },
  {
    "example_id": 1,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "k = 0\nfor a in range(1, 10):\n    for b in range(1, 10):\n        for c in range(1, 10):\n            if (a, b, c) == (0, 0, 0):\n                continue\n            if math.isqrt(a*b*c)!= 0:\n                continue\n            if (a*b*c) % 4 == 0:\n                k += 1\nprint(k)"
  },
  {
    "example_id": 2,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "82.0"
    ],
    "annotated_answers": [
      "82.0"
    ],
    "solution": "expression = abs(2*(1-5j)**2 - 4*(1-5j) - 30)\nprint(expression)"
  },
  {
    "example_id": 3,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "-8490.0",
      "9.0",
      "-8490.0"
    ],
    "annotated_answers": [
      "195.0"
    ],
    "solution": "# Define the sequence\ns = [1, 3, 5]\n\n# Define the sum of the first and last terms of the sequence\nfirst_last_sum = 1 + 5\n\n# Define the sum of the middle terms of the sequence\nmiddle_sum = 3\n\n# Calculate the sum of the terms of the sequence\nsum = first_last_sum + middle_sum\n\n# Calculate the difference between the sum of the terms of the sequence and the sum of the first, last, and middle terms of the sequence\ndifference = sum - 715\n\n# Calculate the common difference of the sequence\ncommon_difference = difference / (len(s) - 1)\n\n# Define the sum of the terms of the new sequence\nnew_sum = 0\n\n# Calculate the sum of the terms of the new sequence\nfor i in range(len(s)):\n    new_sum += (i + 1) * common_difference\n\n# Calculate the sum of the first, last, and middle terms of the original sequence\nfirst_last_term = (s[0] + s[-1]) / 2\nmiddle_term = (s[1] + s[-2]) / 2\noriginal_sum = first_last_term + middle_term\n\n# Calculate the difference between the sum of the terms of the new sequence and the sum of the first, last, and middle terms of the original sequence\ndifference = new_sum - original_sum\n\n# Calculate the common difference of the new sequence\ncommon_difference = difference / (len(s) - 1)\n\n# Calculate the sum of the terms of the new sequence\nfor i in range(len(s)):\n    new_sum += (i + 1) * common_difference\n\n# Print the sum of the first, last, and middle terms of the original sequence\nprint(original_sum)\n\n# Print the sum of the first, last, and middle terms of the new sequence\nprint(new_sum)\n\n# Print the sum of the terms of the original sequence\nprint(sum)\n\n# Print the sum of the terms of the new sequence\nprint(new_sum)"
  },
  {
    "example_id": 4,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "5.0",
      "3.0",
      "6.0",
      "17.0",
      "30.0",
      "20.0",
      "15.0",
      "20.0",
      "2.0"
    ],
    "annotated_answers": [
      "34.0"
    ],
    "solution": "from sympy import Symbol, log, simplify\nx = Symbol('x', positive=True)\nexpr = 17*log(x, 30) - 3*log(x, 5) + 20*log(x, 15) - 3*log(x, 6) + 20*log(x, 2)\nprint(simplify(expr))"
  },
  {
    "example_id": 5,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-5.0"
    ],
    "solution": "# Define function f(x)\ndef f(x):\n    return f(x + 1) + f(x - 1)\n\n\n# Test f(15)\nf(15)\n\n\n# Test f(20)\nf(20)\n\n\n# Test f(20152015)\nf(20152015)"
  },
  {
    "example_id": 6,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "3.0",
      "3.0",
      "4.0",
      "3.0"
    ],
    "annotated_answers": [
      "46.0"
    ],
    "solution": "v, w, x, y, z = symbols('v w x y z')\ngrid = [[v, w, x, y], [y, z, v, w], [x, y, z, v], [w, x, y, z]]\ns = 0\nfor row in grid:\n    s += sum(row)\nprint(s)"
  },
  {
    "example_id": 7,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "-6.0"
    ],
    "solution": "# Evaluate the product of sqrt[3]{2^2} + sqrt[3]{2} with 2 - 2*sqrt[3]{2} - sqrt[3]{2^2}\nprint(Abs(sqrt(2) + sqrt(2)) * (2 - 2*sqrt(2) - sqrt(2)))"
  },
  {
    "example_id": 8,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1000.0"
    ],
    "annotated_answers": [
      "177.0"
    ],
    "solution": "def f(x):\n    return x\n\nf_list = [f(x) for x in range(1000)]\nprint(len(set(f_list)))"
  },
  {
    "example_id": 9,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "100.0",
      "3.0",
      "4.0",
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "m, n = symbols('m n')\neq = 3*m + 4*n - 100\nsolution = solve(eq, m, n)\nprint(solution)"
  },
  {
    "example_id": 10,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "r, s = symbols('r s')\neq = 1/(r + s) - 1/r - 1/s\nexpr = eq.subs([(r, 1/(r + s)), (s, 1/(r + s))])\nexpr = expr.subs(r, 1/(r + s))\nexpr = expr.subs(s, 1/(r + s))\nexpr = expr.subs(r, 1/r)\nexpr = expr.subs(s, 1/s)\nprint(expr)"
  },
  {
    "example_id": 11,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "16.0",
      "241.0",
      "50.0",
      "241.0",
      "205.0",
      "241.0",
      "79.0",
      "241.0"
    ],
    "annotated_answers": [
      "40.0"
    ],
    "solution": "z, w = symbols('z w')\neq1 = z + 20*w*I - 5 - I\neq2 = w + 12*z*I - 4 - 10*I\neq3 = eq1 - eq2\nsol = solve([eq1, eq2, eq3], [z, w])\nprint(sol)"
  },
  {
    "example_id": 12,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "129.0"
    ],
    "annotated_answers": [
      "81.0"
    ],
    "solution": "number_of_ordered_pairs = 0\nfor a in range(-6,6):\n    for b in range(-6,6):\n        if (a + b) <= 5:\n            number_of_ordered_pairs += 1\nprint(number_of_ordered_pairs)"
  },
  {
    "example_id": 13,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0",
      "2.0",
      "2.0",
      "4.0"
    ],
    "annotated_answers": [
      "28.0"
    ],
    "solution": "a, b, c = symbols('a b c')\ncond = Eq(a + b + c, 4*a*b*c)\nabc = symbols('abc')\nden = simplify(abc)\nnum = 4*sqrt(a) + 6*sqrt(b) + 12*sqrt(c)\nnum = expand(num)\nnum = simplify(num)\nnum = num/den\nnum_max = solve(num, a)\nprint(num_max)"
  },
  {
    "example_id": 14,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "# Define variables\nx = symbols('x')\n\n\n# Define equations\neq1 = x**8 + 3*x**4 - 4\neq2 = x**8 + 3*x**4 - 4\neq3 = x**8 + 3*x**4 - 4\neq4 = x**8 + 3*x**4 - 4\neq5 = x**8 + 3*x**4 - 4\neq6 = x**8 + 3*x**4 - 4\neq7 = x**8 + 3*x**4 - 4\neq8 = x**8 + 3*x**4 - 4\neq9 = x**8 + 3*x**4 - 4\neq10 = x**8 + 3*x**4 - 4\n\n\n# Define a function to compute the sum\ndef get_sum(eq):\n    return simplify(expand(eq))\n\n\n# Compute the sum\nsum = get_sum(eq1) + get_sum(eq2) + get_sum(eq3) + get_sum(eq4) + get_sum(eq5) + get_sum(eq6) + get_sum(eq7) + get_sum(eq8) + get_sum(eq9) + get_sum(eq10)\n\n\n# Print the sum\nprint(sum)"
  },
  {
    "example_id": 15,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "48.0"
    ],
    "solution": "n_ordered_pairs = 0\nfor u in range(10):\n    for v in range(10):\n        if (u * v) == 10 and (u.real % 1 == 0) and (u.imag % 1 == 0) and (v.real % 1 == 0) and (v.imag % 1 == 0):\n            n_ordered_pairs += 1\nprint(n_ordered_pairs)"
  },
  {
    "example_id": 16,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0",
      "49.0",
      "16.0",
      "3.0",
      "8.0",
      "8.0",
      "49.0",
      "16.0",
      "3.0",
      "8.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq = 4*a + 3*b + c**3/(a - b)*b\nconstraint = [a > b, a + b + c == 4]\nsolve_eq = solve(eq, [a, b, c], constraints=constraint)\nprint(solve_eq)"
  },
  {
    "example_id": 17,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "2.0",
      "5.0",
      "2.0",
      "3.0",
      "5.0",
      "2.0",
      "5.0",
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "50.0"
    ],
    "solution": "a, b = symbols('a b')\neq1 = a + b - 5\neq2 = a**2 + b**2 - 15\nsol = solve([eq1, eq2], [a, b])\nprint(sol[0][0]**3 + sol[0][1]**3)"
  },
  {
    "example_id": 18,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "-1.0",
      "-1.0",
      "1.0",
      "1.0",
      "-1.0",
      "1.0",
      "1.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x = symbols('x')\na, b = symbols('a b')\nf = log(x**2)\neq1 = Eq(f.subs(x, a), 0)\neq2 = Eq(f.subs(x, b), 0)\nsol = solve((eq1, eq2), (a, b))\nprint(sol)"
  },
  {
    "example_id": 19,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1007.5"
    ],
    "annotated_answers": [
      "62.0"
    ],
    "solution": "n = 2016\nS = range(0, n)\nprint(sum(S) / n)"
  },
  {
    "example_id": 20,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-9.0",
      "3.0",
      "32.0",
      "15.0",
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "# define variables\nk, x = symbols('k x')\n\n# define equations\neq = k*x**4 + 9*x**3 + k*x**2 + 32*x - 11\n\n# solve for k\nk_value = solve(Eq(eq, 4), k)\n\n# print solution\nprint(k_value[0])"
  },
  {
    "example_id": 21,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2019.0",
      "-2018.0",
      "-2017.0",
      "-2016.0",
      "-2015.0",
      "-2014.0",
      "-2013.0",
      "-2012.0",
      "-2011.0",
      "-2010.0"
    ],
    "annotated_answers": [
      "2039191.0"
    ],
    "solution": "f = Function('f')\nx, y = symbols('x y')\neq = f(x**2) + f(y**2) - f(x + y)**2 + 2*x*y\nsum = 0\nfor n in range(-2019, 2020):\n    sum += f(n)\nprint(sum)"
  },
  {
    "example_id": 22,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "1.0"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "z1, z2 = symbols('z1 z2')\neq = (z1/z2 + z2/z1 - 1)\nremainder = sympy.rem(eq, z1 - z2)\nprint(remainder)"
  },
  {
    "example_id": 23,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "15.0",
      "1.0",
      "15.0",
      "259921049894873.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\neq = (2)**(1/3) - a - (1/b)\nremainder = sympy.rem(eq, b + (1/c) + (1/d))\nb_value = solve(remainder - 1, b)\nprint(b_value[0])"
  },
  {
    "example_id": 24,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "4.0",
      "9.0",
      "16.0",
      "25.0",
      "36.0",
      "49.0",
      "64.0",
      "81.0",
      "100.0"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "x = symbols('x')\ns = 0\nfor i in range(1, 48, 2):\n    s = s + i\n    print(s)\nprint(s)"
  },
  {
    "example_id": 25,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "2.0",
      "5.0",
      "3.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "z = symbols('z')\nexpr = abs(z + 5 - 3*I) + abs(z - 7 + 2*I)\nprint(expr.evalf())"
  },
  {
    "example_id": 26,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "-2.0",
      "3.0",
      "4.0",
      "3.0",
      "1.0",
      "3.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x, y, z = symbols('x y z')\nexpr = x**3 + 2*y**3 + 4*z**3\ndenom = x*y*z\nmin_value = solve(expr/denom, x)\nprint(min_value[0])"
  },
  {
    "example_id": 27,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "17.0",
      "17.0",
      "17.0",
      "17.0",
      "17.0",
      "17.0",
      "17.0",
      "17.0",
      "51.0",
      "3.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x, y, z, w = symbols('x y z w')\neq1 = Eq(2*y, x + 17/x)\neq2 = Eq(2*z, y + 17/y)\neq3 = Eq(2*w, z + 17/z)\neq4 = Eq(2*x, w + 17/w)\nsol = solve([eq1, eq2, eq3, eq4], [x, y, z, w])\nprint(sol)"
  },
  {
    "example_id": 28,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "191.0"
    ],
    "annotated_answers": [
      "49.0"
    ],
    "solution": "k = 6\nprint(3*2**k - 1)"
  },
  {
    "example_id": 29,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "2.0",
      "1.0",
      "1.0",
      "3.0",
      "1.0"
    ],
    "annotated_answers": [
      "29800.0"
    ],
    "solution": "for a in range(1, 101):\n    for b in range(1, 101):\n        for c in range(1, 101):\n            if a**2*b + b**2*c + c**2*a == a*b**2 + b*c**2 + c*a**2:\n                print(a, b, c)"
  },
  {
    "example_id": 30,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "16.0",
      "25.0",
      "2.0",
      "36.0",
      "2.0",
      "2.0",
      "16.0",
      "25.0",
      "2.0",
      "36.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "x, y, z = symbols('x y z')\nconstraint = Eq(x + y + z, 9)\n\nf = sqrt(16 - x**2) + sqrt(25 - y**2) + sqrt(36 - z**2)\n\nsolve_for_f = solve(f, x, y, z)\nprint(solve_for_f)"
  },
  {
    "example_id": 31,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "3.0",
      "5.0",
      "2.0",
      "3.0",
      "5.0",
      "2.0",
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "-71.0"
    ],
    "solution": "x = symbols('x')\nP = x**8 + x**7 + x**6 + x**5 + x**4 + x**3 + x**2 + x + 1\nP = simplify(P)\nP = expand(P)\nP = P.subs(x, Abs(I*sqrt(2) + I*sqrt(3) + I*sqrt(5)))\nprint(P)\nprint(P.subs(x, 1))"
  },
  {
    "example_id": 32,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "341.0"
    ],
    "solution": "x = symbols('x')\nP = symbols('P')\neq1 = Eq(x**512 + x**256 + 1, (x**2 + x + 1)*P)\neq2 = Eq(P, expand(eq1.rhs))\nsol = solve(eq2, P)\nprint(sol)"
  },
  {
    "example_id": 33,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "1.0",
      "0.25",
      "4.0",
      "1.0",
      "0.25"
    ],
    "annotated_answers": [
      "250.0"
    ],
    "solution": "# define variables\nn = symbols('n')\n\n# define expression\nexp = (n**4 + 1)**(1/4) - (n**4 - 1)**(1/4)\n\n# find the integer closest in value to the expression\nclosest_integer = simplify(exp).evalf()\n\n# print the closest integer\nprint(closest_integer)"
  },
  {
    "example_id": 34,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "2500.0"
    ],
    "solution": "x = symbols('x')\nf = expand((x + 1)*(x + 3)*(x + 5)*(x + 7)*(x + 9)*(x + 11)*(x + 13)*(x + 15)*(x + 17)*(x + 19)*(x + 21)*(x + 23)*(x + 25)*(x + 27)*(x + 29)*(x + 31)*(x + 33)*(x + 35)*(x + 37)*(x + 39)*(x + 41)*(x + 43)*(x + 45)*(x + 47)*(x + 49))\nprint(simplify(f.coeff(x, 49)))"
  },
  {
    "example_id": 35,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "z = symbols('z')\neq = z**5 - 1\nsolve_eq = solve(eq, z)\nprint(solve_eq[0])"
  },
  {
    "example_id": 36,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.3404255319148937"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a = 1\nb = 2\nc = 3\n\ndef min_value(a, b, c):\n    numerator = 1/a + 1/b + 1/c\n    denominator = 1/(a+b) + 1/(a+c) + 1/(b+c)\n    return numerator/denominator\n\nprint(min_value(a, b, c))"
  },
  {
    "example_id": 37,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "4.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a, x = symbols('a x')\neq1 = x**2 + a*x + 1\neq2 = x**2 - x - a\ncommon_root = solve(eq1, eq2, x)\nprint(common_root)"
  },
  {
    "example_id": 38,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a, b = symbols('a b')\neq = Eq(a*b, a - b)\n\n# Expand both sides of the equation\neq = expand(eq)\n\n# Simplify the equation\neq = simplify(eq)\n\n# Solve the equation\nsol = solve(eq, [a, b])\n\n# Print all possible values\nprint(sol)"
  },
  {
    "example_id": 39,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.3333333333333335"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "c = 7/3\nprint(c)"
  },
  {
    "example_id": 40,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "3.0",
      "6.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\ny = (x + 3)**5 * (x + 2)**8 * (x + 1)**4 * (x - 7)**2 / ( (x + 3)**11 * (x + 2)**6 * (x + 1)**4 * x**2 )\nprint(y.as_numer_denom())"
  },
  {
    "example_id": 41,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-75.0",
      "2.0",
      "1350.0",
      "2.0",
      "90.0",
      "2.0",
      "1639.0",
      "360.0",
      "24.0",
      "2.0"
    ],
    "annotated_answers": [
      "5120.0"
    ],
    "solution": "x, y, z = symbols('x y z')\nf = (1 + 5*z)*(4*z + 3*x)*(5*x + 6*y)*(y + 18)\nf = expand(f)\nf = simplify(f)\nf = expand(f)\nf = simplify(f)\neq = Eq(f, x*y*z)\nsol = solve(eq, z)\nprint(sol)"
  },
  {
    "example_id": 42,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "def f(n):\n    if n == 1:\n        return 1\n    elif n % 2 == 1:\n        return f(n // 2) + 1\n    else:\n        return f(n // 2)\n\nprint(f(15))"
  },
  {
    "example_id": 43,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x = symbols('x')\neq = Eq(3*x + 2, 4*(x - 1))\nx_sol = solve(eq)\nprint(x_sol)"
  },
  {
    "example_id": 44,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x_list = []\nfor x in range(-100, 100):\n    if abs(x) + 5 < 7 and abs(x - 3) > 2:\n        x_list.append(x)\nprint(len(x_list))"
  },
  {
    "example_id": 45,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "2913.0",
      "9.0",
      "6.0",
      "1.0",
      "3.0",
      "1.0"
    ],
    "annotated_answers": [
      "-8.0"
    ],
    "solution": "x = symbols('x')\neq = sqrt(x+12) + sqrt(x)**3\nsol = solve(eq, x)\nprint(sol)"
  },
  {
    "example_id": 46,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.3125"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a = 8\nb = 4\nh = 2\nk = 2\n\nexpression = (h**2)/a**2 + (k**2)/b**2\nprint(expression)"
  },
  {
    "example_id": 47,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "x = symbols('x')\nf = 9*x**2*sin(x)**2 + 4/x*sin(x)\n\n# Calculate the derivative\nf_prime = diff(f, x)\n\n# Find the minimum\nsol = solve(f_prime, x)\nprint(sol)"
  },
  {
    "example_id": 48,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "import cmath\nz = 2j\nw = 5j\ndistance = abs(w - z)\nprint(distance)"
  },
  {
    "example_id": 49,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "# Define f function\nf = lambda i,j: simplify(expand(Eq(j + 1, (j + 1) % 5))) if i == 0 and 0 <= j <= 4 else f(i-1,1) if i >= 1 and j == 0 else f(i-1,f(i,j-1)) if i >= 1 and 1 <= j <= 4 else None\n\n\n# Print the result\nprint(f(2015,2))"
  },
  {
    "example_id": 50,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.1034482758620694"
    ],
    "annotated_answers": [
      "840.0"
    ],
    "solution": "def sequence(m, n):\n    return sum([1/(k**2 + k) for k in range(m, n)])\n\ndef find_m_n(m, n):\n    return sequence(m, n) / 0.29\n\nprint(find_m_n(1, 10))"
  },
  {
    "example_id": 51,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = log(x, 2) + log(x, 4) - 3\nsol = solve(eq, x)\nprint(sol)"
  },
  {
    "example_id": 52,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "38.0"
    ],
    "solution": "k = 10**9\nk_value = int(str(k)[:2])\na = k_value // 10\nb = k_value % 10\nprint(10*a + b)"
  },
  {
    "example_id": 53,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1798.0"
    ],
    "annotated_answers": [
      "277.0"
    ],
    "solution": "x = symbols('x')\np = x**3 + 4*x**2 - 3*x + 16\np1 = p.subs(x, -3)\np2 = p.subs(x, -2)\np3 = p.subs(x, 4)\np4 = p.subs(x, 5)\np5 = p.subs(x, 11)\np6 = p.subs(x, 1)\nprint(p5)"
  },
  {
    "example_id": 54,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "-2016.0"
    ],
    "solution": "A = -1\nB = -1\nprint(A*B)"
  },
  {
    "example_id": 55,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "def max_value(a, b, c):\n    if a**2 + b**2 + c**2 > 1:\n        return 0\n    return abs(a) + abs(b) + abs(c)\n\nprint(max_value(1, 1, 1))"
  },
  {
    "example_id": 56,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "54.0",
      "1.0",
      "0.0",
      "6.0",
      "54.0",
      "1.0",
      "1.0",
      "6.0",
      "54.0"
    ],
    "annotated_answers": [
      "-108.0"
    ],
    "solution": "x, y = symbols('x y')\neq = x**6 + y**6 - 54*x*y\nsol = solve(eq, (x, y))\nprint(sol)"
  },
  {
    "example_id": 57,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2664.0",
      "12.0",
      "66.0",
      "-39.0",
      "12.0",
      "66.0",
      "-2664.0",
      "12.0",
      "66.0",
      "-39.0",
      "12.0",
      "66.0"
    ],
    "annotated_answers": [
      "450.0"
    ],
    "solution": "# Define variables\na, b = symbols('a b')\n\n# Find mean\nmean_a = (2700 + a)/2\nmean_b = (75 + b)/2\n\n# Find geometric mean\ngeom_mean = simplify(mean_a*mean_b)\n\n# Find harmonic mean\nharm_mean = simplify(1/(1/mean_a + 1/mean_b))\n\n# Find geometric mean\ngeom_mean = simplify(geom_mean)\n\n# Find harmonic mean\nharm_mean = simplify(harm_mean)\n\n# Find equation\neq1 = Eq(geom_mean, 2700)\neq2 = Eq(harm_mean, 75)\n\n# Solve equations\nsol = solve([eq1, eq2], [a, b])\n\n# Print solution\nprint(sol)"
  },
  {
    "example_id": 58,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "562666.0"
    ],
    "annotated_answers": [
      "41230.0"
    ],
    "solution": "n = symbols('n')\ns = 0\nfor i in range(1, 20):\n    s += i*i*i*i\nprint(s)"
  },
  {
    "example_id": 59,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "3.0",
      "2.0",
      "2.0",
      "-1.0",
      "3.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\neq = Eq(log(x) + log(x**2), 6)\nsol = solve(eq)\nprint(sol)"
  },
  {
    "example_id": 60,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "87.0"
    ],
    "solution": "z1 = 2j\nz2 = 3j\nz3 = 4j\nexpression = abs(z1 - z2)**2 + abs(z1 - z3)**2 + abs(z2 - z3)**2\nprint(expression)"
  },
  {
    "example_id": 61,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "1.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "1.0",
      "2.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x, y = symbols('x y')\neq = (x + y)**2 - (x + 1)*(y - 1)\nsol = solve(eq)\nprint(sol)"
  },
  {
    "example_id": 62,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "2.0",
      "10.0",
      "2.0",
      "104.0",
      "3.0",
      "72.0",
      "30.0",
      "468.0",
      "5.0",
      "1003.0",
      "2.0"
    ],
    "annotated_answers": [
      "936.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq = (104*sqrt(6) + 468*sqrt(10) + 144*sqrt(15) + 2006)\nexpr = a*sqrt(2) + b*sqrt(3) + c*sqrt(5)\nsolve_expr = solve(expr - eq, [a, b, c])\nprint(solve_expr[0])"
  },
  {
    "example_id": 63,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "n = 0\nwhile True:\n    if (7 + 3) ** n == (7 - 1) ** n:\n        n += 1\n    else:\n        break\nprint(n)"
  },
  {
    "example_id": 64,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "4.0",
      "4.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "from sympy import symbols, Eq, solve\n\nx = symbols('x', real=True)\np = x**6 + 4*x**5 - 2*x**4 - 11*x**3 - 10*x**2 - 22*x - 14\n\nsol1 = solve(Eq(p, 1), x)\nsol2 = solve(Eq(p, 3), x)\nsol3 = solve(Eq(p, 5), x)\n\nprint(len(sol1))\nprint(len(sol2))\nprint(len(sol3))"
  },
  {
    "example_id": 65,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "z = symbols('z')\nexpr = Abs(sqrt(5) + 2*I)\nexpr_simplified = simplify(expr)\nprint(expr_simplified)"
  },
  {
    "example_id": 66,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "4.0",
      "1.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "100.0"
    ],
    "solution": "a1, a2, a3, a4 = symbols('a1 a2 a3 a4')\neq = Eq(a1*a2**2 - a2*a3*a4, 1)\na_n = solve(eq, a1)\nprint(a_n[0])"
  },
  {
    "example_id": 67,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "6.0",
      "2.0",
      "6.0",
      "15.0"
    ],
    "annotated_answers": [
      "38.0"
    ],
    "solution": "x = symbols('x')\np = x**3 + 6*x**2 - 3*x - 15\np_value = p.subs(-3, -6).subs(4, 8).subs(5, 10).subs(7, 15)\nprint(p_value)"
  },
  {
    "example_id": 68,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "2.0",
      "5.0",
      "23.0"
    ],
    "annotated_answers": [
      "23.0"
    ],
    "solution": "y = symbols('y')\neq = 6*y**3 + 5*y**2 - 16*y + 8\ndivide = sympy.div(eq, 2*y + 3)\nprint(divide)"
  },
  {
    "example_id": 69,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\neq = abs(a + b)*abs(a + c)*abs(a + d)*abs(b + c)*abs(b + d)*abs(c + d)\n\nmaximum = 0\nfor i in range(1, 5):\n    for j in range(1, 5):\n        for k in range(1, 5):\n            for l in range(1, 5):\n                if i + j + k + l == 0:\n                    val = solve([a, b, c, d], [i, j, k, l])\n                    if maximum < abs(val[0]):\n                        maximum = abs(val[0])\nprint(maximum)"
  },
  {
    "example_id": 70,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "361.0",
      "8836.0"
    ],
    "annotated_answers": [
      "4561.0"
    ],
    "solution": "f = lambda x: x**2\nprint(f(19))\nprint(f(94))"
  },
  {
    "example_id": 71,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "80.0"
    ],
    "solution": "n = 100\na = 3**n + 2**n\nb = 3**(n-1) + 2**(n-1)\nprint(int(a/b))"
  },
  {
    "example_id": 72,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "f = lambda x: -3*x**2 + 36*x - 7\nc = -5\ninverse_domain = [x for x in range(c, 1000000) if f(x) == 0]\nprint(inverse_domain)"
  },
  {
    "example_id": 73,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "6.0",
      "3.0",
      "72.0",
      "6.0",
      "3.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "x, y = symbols('x y')\neq = (2/x) - (y/3) - (x/y)\nx_value = solve(eq, x)\nprint(x_value[0]**3)"
  },
  {
    "example_id": 74,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "11.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x = symbols('x')\ny = simplify(expand(Eq(x**2 - 13*x + 22, 0)))\ny = solve(y, x)\nprint(y)"
  },
  {
    "example_id": 75,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "105.0",
      "1.0"
    ],
    "annotated_answers": [
      "384.0"
    ],
    "solution": "x1, x2, x3, x4, x5, x6, x7, x8 = symbols('x1 x2 x3 x4 x5 x6 x7 x8')\nx = [x1, x2, x3, x4, x5, x6, x7, x8]\nfor i in range(1, 8):\n    x[i] = i / x[i - 1]\nresult = 1\nfor i in range(1, 8):\n    result *= x[i]\nprint(result)"
  },
  {
    "example_id": 76,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "999.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "def f(x):\n    return (x + 1) * (x + 2)\n\nn = 0\nwhile f(n) <= 10**6:\n    n += 1\n\nprint(n)"
  },
  {
    "example_id": 77,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "15.0",
      "15.0",
      "15.0",
      "16.0",
      "15.0",
      "4624.0",
      "17.0",
      "16.0",
      "17.0"
    ],
    "annotated_answers": [
      "272.0"
    ],
    "solution": "from sympy import binomial, summation\nn = symbols('n', integer=True, positive=True)\ninfinity = symbols('oo')\nsum_value = summation(binomial(n, 15)/binomial(n, 17), (n, 17, infinity))\nprint(sum_value)"
  },
  {
    "example_id": 78,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "-6.0",
      "9.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x, y = symbols('x y')\nfraction = (8*x**3 + 27*y**3)/(2*x + 3*y)\na, b, c = symbols('a b c')\neq = Eq(simplify(fraction), a*x**2 + b*x*y + c*y**2)\nsol = solve(expand(eq), [a, b, c])\nprint(sol)"
  },
  {
    "example_id": 79,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-324.0",
      "2.0",
      "4.0",
      "1.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq = x + 108/(x - y)**3 * (y - z)**2 * z\nprint(eq.diff(x))"
  },
  {
    "example_id": 80,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "a,b,c,d = symbols('a b c d')\neq = a*log(2, 10) + b*log(3, 10) + c*log(5, 10) + d*log(7, 10)\nsol = solve(eq - 2005, [a, b, c, d])\nprint(len(sol))"
  },
  {
    "example_id": 81,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "49.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "52.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "z = symbols('z')\nsol = solve(z**2 + z + 1, z)\nprint(sol[0]**49 + sol[0]**50 + sol[0]**51 + sol[0]**52 + sol[0]**53)"
  },
  {
    "example_id": 82,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "n, a = symbols('n a')\neq1 = 4*n + 3\neq2 = 7*n - 12\neq = eq1.subs(n, a) - eq2.subs(n, a)\na_value = solve(eq, a)\nprint(a_value[0])"
  },
  {
    "example_id": 83,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "12.0"
    ],
    "annotated_answers": [
      "66673.0"
    ],
    "solution": "a = sympy.sqrt(2) + sympy.sqrt(3)\nprint(a**12)"
  },
  {
    "example_id": 84,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "104.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\neq1 = a**2 + b**2 - 8\neq2 = c**2 + d**2 - 13\neq3 = (a*d - b*c)**2 + (a*c + b*d)**2\nsolve([eq1, eq2], [a, b, c, d])\nprint(eq3)"
  },
  {
    "example_id": 85,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "3.0",
      "-1.0",
      "3.0",
      "2.0",
      "5.0",
      "4.0",
      "2.0",
      "1.0",
      "0.0"
    ],
    "annotated_answers": [
      "48.0"
    ],
    "solution": "x = symbols('x')\nexpr = (x**7 + 32*x**2 + 128)/(x**3)\nsol = solve(expr, x)\nprint(sol)"
  },
  {
    "example_id": 86,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "15360.0"
    ],
    "annotated_answers": [
      "336.0"
    ],
    "solution": "p = lambda x: 8*(x-4)*(x+6)*(x+10)\nprint(p(10))"
  },
  {
    "example_id": 87,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "-9.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "a = symbols('a')\na_1 = a_3 = a\nfor i in range(2, 10):\n    a = 1/(1 - a)\na_9 = a\nprint(a_9**9)"
  },
  {
    "example_id": 88,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "3.0",
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "x, c = symbols('x c')\nf = c/(2*x + 3)\nf_inv = (2*x + 3)/c\neq = Eq(f_inv, f)\nsol = solve(eq, c)\nprint(sol)"
  },
  {
    "example_id": 89,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5050.0"
    ],
    "annotated_answers": [
      "-50.0"
    ],
    "solution": "def sum_of_neg_ints(n):\n    return sum(range(1, n+1))\n\nprint(sum_of_neg_ints(100))"
  },
  {
    "example_id": 90,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "67.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "n = sympy.nextprime(63)\nprint(n)"
  },
  {
    "example_id": 91,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "x, y = symbols('x y')\nexpr = (x + y)**2 + (x - y)**2\nexpr = expr.expand()\nexpr = expr.subs(x + y, 2)\nprint(expr)"
  },
  {
    "example_id": 92,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "508.0"
    ],
    "annotated_answers": [
      "508.0"
    ],
    "solution": "a, b, c, d, e, f = symbols('a b c d e f')\neq1 = Eq(a + b + c + d + e + f, 0)\neq2 = Eq(a + 2*b + 3*c + 4*d + 2*e + 2*f, 0)\neq3 = Eq(a + 3*b + 6*c + 9*d + 4*e + 6*f, 0)\neq4 = Eq(a + 4*b + 10*c + 16*d + 8*e + 24*f, 0)\neq5 = Eq(a + 5*b + 15*c + 25*d + 16*e + 120*f, 42)\n\nsol = solve([eq1, eq2, eq3, eq4, eq5], [a, b, c, d, e, f])\n\na_plus_6b_plus_21c_plus_36d_plus_32e_plus_720f = simplify(expand(a + 6*b + 21*c + 36*d + 32*e + 720*f))\n\nprint(a_plus_6b_plus_21c_plus_36d_plus_32e_plus_720f.evalf(subs=sol))"
  },
  {
    "example_id": 93,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "a = symbols('a')\nx = symbols('x')\npolynomial = x**4 + (a**2 - 1)*x**2 + a**3\nroots = solve(polynomial, x)\ncount = 0\nfor root in roots:\n    if count == 2:\n        break\n    if Abs(root) == 1:\n        count += 1\n    if Abs(root) == I:\n        count += 1\nif count == 2:\n    print(a**2 - 1)"
  },
  {
    "example_id": 94,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "21.0",
      "2.0",
      "5.0",
      "2.0",
      "1.0",
      "3.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "from sympy import symbols, solve\n\nx = symbols('x')\nf = x**3 - 3*x - 5\na, b, c = solve(f, x)\nabc = a*b*c\nprint(abc)"
  },
  {
    "example_id": 95,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "1052.0"
    ],
    "solution": "# Define n, k and x\nn, k, x = symbols('n k x')\n# Define the expression\nexpr = (1 + x)**1000 + 2*x*(1 + x)**999 + 3*x**2*(1 + x)**998 + \\\n       4*x**3*(1 + x)**997 + 5*x**4*(1 + x)**996 + 6*x**5*(1 + x)**995 + \\\n       7*x**6*(1 + x)**994 + 8*x**7*(1 + x)**993 + 9*x**8*(1 + x)**992 + \\\n       10*x**9*(1 + x)**991 + 11*x**10*(1 + x)**990 + 12*x**11*(1 + x)**989 + \\\n       13*x**12*(1 + x)**988 + 14*x**13*(1 + x)**987 + 15*x**14*(1 + x)**986 + \\\n       16*x**15*(1 + x)**985 + 17*x**16*(1 + x)**984 + 18*x**17*(1 + x)**983 + \\\n       19*x**18*(1 + x)**982 + 20*x**19*(1 + x)**981 + 21*x**20*(1 + x)**980 + \\\n       22*x**21*(1 + x)**979 + 23*x**22*(1 + x)**978 + 24*x**23*(1 + x)**977 + \\\n       25*x**24*(1 + x)**976 + 26*x**25*(1 + x)**975 + 27*x**26*(1 + x)**974 + \\\n       28"
  },
  {
    "example_id": 96,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "0.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a = 0\nb = 0\nwhile a <= 10:\n    if ((a**2 + a*b + b) == 0):\n        print(a, b)\n    a += 1\n    b += 1"
  },
  {
    "example_id": 97,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "3.0",
      "2.0",
      "2.0",
      "5.0",
      "2.0",
      "2.0",
      "3.0",
      "2.0",
      "4.0",
      "2.0",
      "3.0",
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "-48.0"
    ],
    "solution": "x = symbols('x')\nf = x**4 + 2*x**3 - 3*x**2 - 2*x + 1\nf = f.subs({x: 1 + 2*sqrt(3), x: 3 - sqrt(2)})\nf = f.subs({x: 0}, -154)\nprint(f)"
  },
  {
    "example_id": 98,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0",
      "8.0"
    ],
    "annotated_answers": [
      "-81.0"
    ],
    "solution": "a, b = symbols('a b')\neq = (a + I*b)**8 + (a - I*b)**8\neq_simplified = simplify(eq)\nprint(eq_simplified)"
  },
  {
    "example_id": 99,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "11.0",
      "4.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\nterm = a + b + c + d\ngeometric = term / (1 - c)\nratio = simplify(geometric.subs(d, 11) / geometric.subs(d, 4))\nprint(ratio)"
  },
  {
    "example_id": 100,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5050.0"
    ],
    "annotated_answers": [
      "50.0"
    ],
    "solution": "# Create a list of numbers from 1 to 100\n# Note: The list starts from 1 and ends at 100\nnumbers = list(range(1, 101))\n\n# Initialize the sum variable\nsum = 0\n\n# Iterate through the list\nfor i in numbers:\n    sum = sum + i\n\n# Print the sum\nprint(sum)"
  },
  {
    "example_id": 101,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\neq = (5*x - 7)/((x-1)**3)\nA, B, C = symbols('A B C')\neq1 = eq.subs(x, 1)\neq2 = eq.subs(x, 1)\neq3 = eq.subs(x, 1)\nA_value = solve(eq1 - (A/x + B/(x**2) + C/(x**3)), A)\nB_value = solve(eq2 - (A/x + B/(x**2) + C/(x**3)), B)\nC_value = solve(eq3 - (A/x + B/(x**2) + C/(x**3)), C)\nprint(A_value[0] + B_value[0] + C_value[0])"
  },
  {
    "example_id": 102,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "27.0",
      "26.0",
      "26.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "a1, b1, a2, b2, an, bn = symbols('a_1 b_1 a_2 b_2 a_n b_n')\n\n# Define equations\neq1 = Eq(a1 + 5*I*b1, 5)\neq2 = Eq(b1 + 5*I*a1, 4)\neq3 = Eq(a2 + 5*I*b2, 5)\neq4 = Eq(b2 + 5*I*a2, 4)\neq5 = Eq(an + 5*I*bn, 5)\neq6 = Eq(bn + 5*I*an, 4)\n\n# Solve equations\nsol1 = solve([eq1, eq2], [a1, b1])\nsol2 = solve([eq3, eq4], [a2, b2])\nsol3 = solve([eq5, eq6], [an, bn])\n\n# Find the sum\na_sum = sum([sol1[a1], sol2[a2], sol3[an]])\nb_sum = sum([sol1[b1], sol2[b2], sol3[bn]])\n\n# Find the absolute value\nsum_abs = Abs(a_sum + b_sum)\n\n# Print the result\nprint(sum_abs)"
  },
  {
    "example_id": 103,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "3.0",
      "3.0",
      "9.0",
      "2.0",
      "-4.0",
      "2.0",
      "3.0",
      "3.0"
    ],
    "annotated_answers": [
      "80.0"
    ],
    "solution": "import sympy as sym\n\na = sym.Symbol('a')\nb = sym.Symbol('b')\nr = sym.Symbol('r')\ns = sym.Symbol('s')\n\nx = sym.Symbol('x')\n\np = x**3 - a*x**2 + b*x - 65\n\nroots = sym.solve(p, x)\n\nprint(sum(roots))"
  },
  {
    "example_id": 104,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "1.0",
      "2.0",
      "2.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = Eq(x + y, 2)\neq2 = Eq(x**5 + y**5, 82)\nsol = solve((eq1, eq2), (x, y))\ns = 0\nfor i in range(len(sol[0])):\n    s += (sol[0][i]**2 + sol[1][i]**2)\nprint(s)"
  },
  {
    "example_id": 105,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0",
      "1.0",
      "2.0",
      "1.0",
      "3.0",
      "1.0",
      "4.0",
      "1.0",
      "5.0",
      "1.0",
      "6.0",
      "1.0",
      "7.0",
      "1.0",
      "8.0",
      "1.0",
      "9.0",
      "1.0",
      "10.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "from cmath import polar\n\ndef sum_of_values(a, b):\n    if polar(a)[0]!= polar(b)[0] or polar(a + b)[0]!= polar(a)[0]:\n        return 0\n    return (a / b).real\n\n\ndef test_sum_of_values(a, b, expected):\n    result = sum_of_values(a, b)\n    if result!= expected:\n        print(f\"Test failed for ({a}, {b})\")\n    else:\n        print(f\"Test passed for ({a}, {b})\")\n\n\ntest_sum_of_values(1, 1, 2)\ntest_sum_of_values(1, 2, 1.5)\ntest_sum_of_values(1, 3, 1.3333333333333333)\ntest_sum_of_values(1, 4, 1.25)\ntest_sum_of_values(1, 5, 1.2)\ntest_sum_of_values(1, 6, 1.1666666666666666)\ntest_sum_of_values(1, 7, 1.1428571428571428)\ntest_sum_of_values(1, 8, 1.125)\ntest_sum_of_values(1, 9, 1.111111111111111)\ntest_sum_of_values(1, 10, 1.1)"
  },
  {
    "example_id": 106,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-5.0",
      "-4.0",
      "-3.0",
      "-2.0",
      "-1.0",
      "0.0",
      "1.0",
      "2.0",
      "3.0",
      "4.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "g = lambda x: x**3 - 14*x**2 + 18*x + 72\nfor i in range(-5, 5):\n    if g(i) % 1 == 0:\n        print(i)"
  },
  {
    "example_id": 107,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "-3.0",
      "2.0",
      "8.0",
      "4.0",
      "10.0",
      "2.0",
      "4.0",
      "26.0",
      "2.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq = 2*x**2 + 2*y**2 + 5*z**2 - 2*x*y - 4*y*z - 4*x - 2*z + 15\nsol = sympy.solve(eq, (x, y, z))\nprint(sol)"
  },
  {
    "example_id": 108,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "5.0",
      "2.0",
      "2.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "z = symbols('z')\neq = (z - 3)**2 + (z - 5 + 2*I)**2 + (z - 1 + I)**2\nprint(eq.doit())"
  },
  {
    "example_id": 109,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "x = symbols('x')\nf = sqrt(5*x**2 + 2*x*sqrt(5) + 1) + x*sqrt(5)\nf_min = f.subs(x, 0)\nprint(f_min)"
  },
  {
    "example_id": 110,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "2.0",
      "1.0",
      "3.0",
      "-2.0",
      "2.0",
      "1.0",
      "3.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "a, b, c = symbols('a b c')\ncond1 = (a + 1)*(b + 1)*(c + 1) - 1\ncond2 = (a + 2)*(b + 2)*(c + 2) - 2\ncond3 = (a + 3)*(b + 3)*(c + 3) - 3\nsolve_set = solve([cond1, cond2, cond3], [a, b, c])\nprint(solve_set)"
  },
  {
    "example_id": 111,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "def f(x):\n    return 1\n\nn = 0\ns = 0\n\nfor i in range(1, 10000):\n    if f(5) == i:\n        n += 1\n        s += i\n\nprint(n * s)"
  },
  {
    "example_id": 112,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "a, b, c = 1, 2, 3\nd = a*c - b**2\nif d == 0:\n    print(\"The polynomial is not divisible by x^2 + bx + c\")\nelse:\n    print(\"The polynomial is divisible by x^2 + bx + c\")\n    print(\"The quotient is\", a*c)"
  },
  {
    "example_id": 113,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq = log(b, a) + log(c, b) + log(a, c)\neq_power = eq**3\nprint(eq_power)"
  },
  {
    "example_id": 114,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2010.5"
    ],
    "annotated_answers": [
      "2014.0"
    ],
    "solution": "a = 2011\nb = 2\nc = 1\nexpression = a - 1/b**c\nprint(expression)"
  },
  {
    "example_id": 115,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "224.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "225.0",
      "2.0",
      "2.0",
      "2.0",
      "225.0",
      "2.0",
      "450.0",
      "225.0",
      "15.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "# Ellipse\na, b = symbols('a b')\nx, y = symbols('x y', real=True)\neq = (x - 1)**2/a**2 + (y - 1)**2/b**2\n\n# Circle\nc = symbols('c')\neq_c = x**2 + y**2 - c**2\n\n# Area of triangle PF1 F2\na_area = 26\n\n# Distance between foci\nd = solve((eq - eq_c).subs({a:15}), c)\nprint(d[0])"
  },
  {
    "example_id": 116,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "-4.0",
      "1.0",
      "6.0",
      "2.0",
      "6.0"
    ],
    "annotated_answers": [
      "-6.0"
    ],
    "solution": "x = symbols('x')\nP = 1/(x**2 - 4*x - 3)\nP_root = P.subs(x, sqrt(1 + sqrt(6)))\nprint(P_root)"
  },
  {
    "example_id": 117,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "-2.0",
      "-701490.0",
      "111.0",
      "356539.0",
      "1745.0",
      "201.0",
      "111.0",
      "1.0",
      "3.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = x**4 - 5*x**2 - x + 4\neq2 = x**2 - 3*x\n\nsolution = solve([eq1 - y, eq2 - y])\nprint(solution)"
  },
  {
    "example_id": 118,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "35.0",
      "1.0",
      "7.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\nf = (1/(Abs(x**2 - 6*x + 8) + Abs(x**2 + x - 6)))\nprint(f.subs(x, -3))\nprint(f.subs(x, 3))"
  },
  {
    "example_id": 119,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "z = symbols('z')\neq = z + 1/z - 1\nz_value = solve(eq, z)\nprint(z_value[0])"
  },
  {
    "example_id": 120,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq = (1/a + 1/b + 1/c)\neq1 = (b*c)/(a**2) + (a*c)/(b**2) + (a*b)/(c**2)\nprint(eq1)"
  },
  {
    "example_id": 121,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x = symbols('x')\neq = sqrt(x + sqrt(3*x + 6)) + sqrt(x - sqrt(3*x + 6)) - 6\nprint(solve(eq, x))"
  },
  {
    "example_id": 122,
    "selected_mode": "import",
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-5.0"
    ],
    "solution": "x, y = symbols('x y')\nf = x + y*f(y, x)\nf = f.subs(f(y, x), x + y*f(y, x))\nf = f.subs(f(y, x), x + y*f(y, x))\nf = f.subs(f(y, x), x + y*f(y, x))\nf = f.subs(f(y, x), x + y*f(y, x))\nf = f.subs(f(y, x), x + y*f(y, x))\nf = f.subs(f(y, x), x + y*f(y, x))\nf = f.subs(f(y, x), x + y*f(y, x))\nf = f.subs(f(y, x), x + y*f(y, x))\nf = f.subs(f(y, x), x + y*f(y, x))\nf = f.subs(f(y, x), x + y*f(y, x))\nf = f.subs(f(y, x), x + y*f(y, x))\nf = f.subs(f(y, x), x + y*f(y, x))\nf = f.subs(f(y, x), x + y*f(y, x))\nf = f.subs(f(y, x), x + y*f(y, x))\nf = f.subs(f(y, x), x + y*f(y, x))\nf = f.subs(f(y, x), x + y*f(y, x))\nf = f.subs(f(y, x), x + y*f(y, x))\nf = f.subs(f(y, x), x + y*f(y, x))\nf = f.subs(f(y, x), x + y*f(y, x))\nf = f.subs(f(y, x), x + y*f(y, x))\nf = f.subs"
  },
  {
    "example_id": 123,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "2.0",
      "3.0",
      "2.0",
      "3.0",
      "2.0",
      "3.0",
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "# Define variables\na1, b1, a2, b2, an, bn = symbols('a1 b1 a2 b2 an bn')\n\n# Define equations\neq1 = Eq(a1 + (17*a1 + 6*b1)/(a1**2 + b1**2), 6)\neq2 = Eq(b1 + (6*a1 - 17*b1)/(a1**2 + b1**2), 0)\neq3 = Eq(a2 + (17*a2 + 6*b2)/(a2**2 + b2**2), 6)\neq4 = Eq(b2 + (6*a2 - 17*b2)/(a2**2 + b2**2), 0)\neq5 = Eq(an + (17*an + 6*bn)/(an**2 + bn**2), 6)\neq6 = Eq(bn + (6*an - 17*bn)/(an**2 + bn**2), 0)\n\n# Define solution\nsol = solve([eq1, eq2, eq3, eq4, eq5, eq6], [a1, b1, a2, b2, an, bn])\n\n# Print solution\nprint(sol)"
  },
  {
    "example_id": 124,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "405.0"
    ],
    "annotated_answers": [
      "405.0"
    ],
    "solution": "z = -324 + 243*1j\nprint(abs(z))"
  },
  {
    "example_id": 125,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "3.0",
      "4.0",
      "4.0",
      "5.0",
      "5.0",
      "6.0",
      "6.0",
      "7.0"
    ],
    "annotated_answers": [
      "1004.0"
    ],
    "solution": "n = 2\nwhile n <= 2010:\n    product = 1\n    for i in range(1, n + 1):\n        product *= 1 + 1/i\n    if product.is_integer():\n        print(f\"{n}: {product}\")\n    n += 1"
  },
  {
    "example_id": 126,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "1.0",
      "3.0",
      "1.0",
      "2.0",
      "2.0",
      "6.0",
      "2.0",
      "9.0",
      "2.0",
      "10.0",
      "2.0",
      "27.0",
      "22.0"
    ],
    "annotated_answers": [
      "2150.0"
    ],
    "solution": "x, c2, c1, c0 = symbols('x c2 c1 c0')\neq = x**3 + x**2 - 5 - (x - 3)**3 - c2*(x - 3)**2 - c1*(x - 3) - c0\neq = eq.expand()\nc2_squared = c2**2\nc1_squared = c1**2\nc0_squared = c0**2\neq = eq.subs(c2**2, c2_squared).subs(c1**2, c1_squared).subs(c0**2, c0_squared)\nprint(eq)"
  },
  {
    "example_id": 127,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "8.0",
      "4.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "16.0",
      "3.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq = (x + 1/y) * (y + 1/z) * (z + 1/x)\nsol = solve(eq - 8, [x, y, z])\nprint(sol)"
  },
  {
    "example_id": 128,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1260.0"
    ],
    "annotated_answers": [
      "676.0"
    ],
    "solution": "def f(x):\n    return x * (x - 2) * (x - 3) * (x + 1) * (x + 2)\nprint(f(5))"
  },
  {
    "example_id": 129,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2721864.0"
    ],
    "annotated_answers": [
      "348.0"
    ],
    "solution": "n = 8\na1 = 1440\nd1 = 12\na2 = 1716\nd2 = 10\ns1 = a1 + (n - 1)*d1\ns2 = a2 + (n - 1)*d2\nprint(s1*s2)"
  },
  {
    "example_id": 130,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "216.0"
    ],
    "solution": "# Find the dimensions of the box\nl, b, h = symbols('l b h')\n\n# Find the surface area of the box\nsurface_area = 2*l*b + 2*l*h + 2*b*h\n\n# Find the volume of the box\nvolume = l*b*h\n\n# Find the ratio of the surface area to the volume\nratio = surface_area/volume\n\n# Simplify the ratio\nratio = simplify(ratio)\n\n# Find the smallest possible value of the ratio\nsmallest_ratio = solve(ratio - 1, l)\n\n# Print the smallest possible surface area\nprint(smallest_ratio[0])"
  },
  {
    "example_id": 131,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "3.0",
      "2.0",
      "3.0",
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "89.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = x**4*y**5 + y**4*x**5 - 810\neq2 = x**3*y**6 + y**3*x**6 - 945\nsolve([eq1, eq2], [x, y])\nprint(2*x**3 + (x*y)**3 + 2*y**3)"
  },
  {
    "example_id": 132,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "0.0",
      "-2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = -1\ny = 1\nG = 0\nG_prime = 0\n\nwhile x < 1:\n    G += x\n    G_prime += y\n    x *= y\n    y *= x\n\nprint(G)\nprint(G_prime)\nprint(G - G_prime)"
  },
  {
    "example_id": 133,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "4.0",
      "2.0",
      "9.0",
      "4.0",
      "42.0",
      "243.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "from sympy import sqrt\nx = symbols('x')\neq = 9*x**3 - 20*x\nroot = 8*sqrt(2)\nsolution = solve(eq - root)\nprint(solution[0])"
  },
  {
    "example_id": 134,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "n = 1\nwhile True:\n    sum = 0\n    for i in range(1, n + 1):\n        sum += (i * (n - i + 1))\n    if sum > 0:\n        break\n    n += 1\nprint(n)"
  },
  {
    "example_id": 135,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq = x**4 + y**4 + z**4 - 4*x*y*z\nsol = solve(eq, x, y, z)\nprint(len(sol))"
  },
  {
    "example_id": 136,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-77.0"
    ],
    "annotated_answers": [
      "763.0"
    ],
    "solution": "x = symbols('x')\nP0 = x**3 + 313*x**2 - 77*x - 8\nPn = P0\nfor n in range(1, 20):\n    Pn = Pn.subs(x, x - n)\ncoeff_x = Pn.coeff(x)\nprint(coeff_x)"
  },
  {
    "example_id": 137,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "100.0",
      "100.0",
      "3.14159265358979",
      "100.0",
      "100.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "# Define symbols\nr, theta = symbols('r theta')\n\n# Define the area of the sector\narea = r**2*theta/2\n\n# Define the perimeter of the sector\nperimeter = r*theta\n\n# Define the constraint\nconstraint = Eq(perimeter, 100)\n\n# Solve for theta\nsolutions = solve(constraint, theta)\n\n# Print the solution\nprint(solutions)\n\n# Define the arc length of the sector\narc_length = r*theta\n\n# Define the constraint\nconstraint = Eq(arc_length, 100)\n\n# Solve for theta\nsolutions = solve(constraint, theta)\n\n# Print the solution\nprint(solutions)\n\n# Define the radius of the sector\nradius = r\n\n# Define the constraint\nconstraint = Eq(radius, 10)\n\n# Solve for theta\nsolutions = solve(constraint, theta)\n\n# Print the solution\nprint(solutions)\n\n# Define the central angle of the sector\ncentral_angle = theta\n\n# Define the constraint\nconstraint = Eq(central_angle, math.pi)\n\n# Solve for theta\nsolutions = solve(constraint, theta)\n\n# Print the solution\nprint(solutions)\n\n# Define the area of the sector\narea = r**2*theta/2\n\n# Define the perimeter of the sector\nperimeter = r*theta\n\n# Define the constraint\nconstraint = Eq(perimeter, 100)\n\n# Solve for theta\nsolutions = solve(constraint, theta)\n\n# Print the solution\nprint(solutions)\n\n# Define the area of the sector\narea = r**2*theta/2\n\n# Define the perimeter of the sector\nperimeter = r*theta\n\n# Define the constraint\nconstraint = Eq(perimeter, 100)\n\n# Solve for theta\nsolutions = solve(constraint, theta)\n\n# Print the solution\nprint(solutions)\n\n# Define the area of the sector\narea = r**2*theta/2\n\n# Define the perimeter of the sector\nperimeter = r*theta\n\n#"
  },
  {
    "example_id": 138,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-45.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\nf = 5*x\nf_floor = floor(f)\nf_floor_value = f_floor.subs(x, -9)\nprint(f_floor_value)"
  },
  {
    "example_id": 139,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0",
      "2.0",
      "-4.0",
      "2.0",
      "2.0",
      "4.0",
      "2.0",
      "4.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "from sympy import symbols, solve\n\nx1, x2, x3, x4 = symbols('x1 x2 x3 x4')\n\nsum_of_numbers = x1 + x2 + x3 + x4\nsum_of_squares = x1**2 + x2**2 + x3**2 + x4**2\n\ncondition = sum_of_numbers - sum_of_squares\n\nlargest_mean = solve(condition, x1)\nprint(largest_mean)"
  },
  {
    "example_id": 140,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\neq = Eq(a**2 + b**2 + c**2 + d**2, 1)\nsol = solve(eq, (a, b, c, d))\nprint(sol[0])"
  },
  {
    "example_id": 141,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "4.0",
      "4.0",
      "4.0",
      "4.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "import sympy as sym\n\na, b, c, d, e = sym.symbols('a b c d e')\nexpression = (a**4/(a - b)*(a - c)*(a - d)*(a - e) + b**4/(b - a)*(b - c)*(b - d)*(b - e) + c**4/(c - a)*(c - b)*(c - d)*(c - e) + d**4/(d - a)*(d - b)*(d - c)*(d - e) + e**4/(e - a)*(e - b)*(e - c)*(e - d))\nprint(expression)"
  },
  {
    "example_id": 142,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2001.0",
      "2.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "# Set up the sequence\nn = symbols('n')\na = 2001\nb = 2002\nc = 2003\n# Set up the equation for the sequence\neq = Eq(n, simplify(expand((a - b) + (b - c) + (c - n))))\n# Solve for n\nsol = solve(eq, n)\nprint(sol)"
  },
  {
    "example_id": 143,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "1.0",
      "2.0",
      "8.0",
      "4.0",
      "3.0",
      "7.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "from sympy import symbols, factor, simplify\nx = symbols('x')\ny = (x + 8)*(x + 5)**2*(x + 1)**3*x**5*(x - 3)**2/( (x + 7)*(x + 5)**2*(x + 1)*x*(x - 3)**3*(x - 4))\nf = factor(simplify(y))\nprint(f)"
  },
  {
    "example_id": 144,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "solutions = 2"
  },
  {
    "example_id": 145,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.999999999999998"
    ],
    "annotated_answers": [
      "553.0"
    ],
    "solution": "# Find the maximum value of n_i/k\nk = 1000\nn_i = k**(1/3)\nprint(n_i)"
  },
  {
    "example_id": 146,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "169.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "z = 156 + 65j\nprint(abs(z))"
  },
  {
    "example_id": 147,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "52.0",
      "51.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "x = symbols('x')\np, q = symbols('p q', cls=Function)\n\n# p(x) = x^8 + 98*x^4 + 1 = (x^4 + 24*x^2 + 1)(x^4 + 49*x^2 + 1)\np = x**4 + 24*x**2 + 1\nq = x**4 + 49*x**2 + 1\n\n# p(x) = p1(x)*q(x) + p2(x)*q(x)\np1 = p/q\np2 = p/q\n\n# p1(x) = x^4 + 24*x^2 + 1\np1 = p1.expand()\n\n# p2(x) = x^4 + 49*x^2 + 1\np2 = p2.expand()\n\n# p1(1) + p2(1) = 1 + 24 + 1 + 49 + 1 = 76\nprint(p1.subs(x, 1) + p2.subs(x, 1))"
  },
  {
    "example_id": 148,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "3.0",
      "15.0",
      "20.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\nf = (6*x**3 + 4*x**2 - 11*x + 5)/(3*x**3 - 15*x + 20)\nc = simplify(f.as_numer_denom()[1])\nprint(c)"
  },
  {
    "example_id": 149,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq1 = Eq(a**3 + b**3 + c**3 - 3*a*b*c, 0)\neq2 = simplify(expand(eq1))\nsolve_eq = solve(eq2, [a, b, c])\nprint(solve_eq)"
  },
  {
    "example_id": 150,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "4.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "-9.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq1 = Eq(x + y + z, 0)\neq2 = Eq(x*y*z, 2)\nsol = solve((eq1, eq2), (x, y, z))\nx, y, z = sol[0]\nprint(x, y, z)\n\n\nx, y, z = symbols('x y z')\neq1 = Eq(x + y + z, 0)\neq2 = Eq(x*y*z, 2)\nsol = solve((eq1, eq2), (x, y, z))\nx, y, z = sol[0]\nprint(x, y, z)\n\n\nx, y, z = symbols('x y z')\neq1 = Eq(x + y + z, 0)\neq2 = Eq(x*y*z, 2)\nsol = solve((eq1, eq2), (x, y, z))\nx, y, z = sol[0]\nprint(x, y, z)\n\n\nx, y, z = symbols('x y z')\neq1 = Eq(x + y + z, 0)\neq2 = Eq(x*y*z, 2)\nsol = solve((eq1, eq2), (x, y, z))\nx, y, z = sol[0]\nprint(x, y, z)\n\n\nx, y, z = symbols('x y z')\neq1 = Eq(x + y + z, 0)\neq2 = Eq(x*y*z, 2)\nsol = solve((eq1, eq2), (x, y, z))\nx, y, z = sol[0]\nprint(x, y, z)\n\n\nx, y, z = symbols('x y z')\neq1 = Eq(x + y + z, 0)\neq2 = Eq(x*y*z, 2)\nsol = solve((eq1, eq2), (x, y, z))\nx, y, z = sol[0]\nprint(x, y, z"
  },
  {
    "example_id": 151,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "13.0"
    ],
    "annotated_answers": [
      "104.0"
    ],
    "solution": "N = 7\na = 1\nb = 2\nwhile a < N:\n    a, b = b, a + b\nprint(b)"
  },
  {
    "example_id": 152,
    "selected_mode": "import",
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "100.0"
    ],
    "solution": "a, b, c = symbols('a b c')\nexpr = ((a + b + c) * (a + b)**2 + (a + b + 4*c)**2) / (a*b*c)\neq = Eq(expr, 0)\nsol = solve(eq, [a, b, c])\n\nfor i in sol:\n    i = i.evalf()\n    print(i)"
  },
  {
    "example_id": 153,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "67.0"
    ],
    "solution": "# define variables\nx = symbols('x')\nn = symbols('n')\n\n\n# define equations\neq1 = Eq(x**2 + x + 1, 0)\neq2 = Eq(x**2*n + x*n + n, 0)\neq3 = Eq(x**2*n + x*n + n, x**2 + x + 1)\n\n\n# solve equations\nsol1 = solve(eq1)\nsol2 = solve(eq2)\nsol3 = solve(eq3)\n\n\n# find solutions\nsolutions = []\nfor i in range(len(sol1)):\n    for j in range(len(sol2)):\n        if sol1[i] == sol2[j]:\n            solutions.append(sol1[i])\n\n\n# print solutions\nprint(solutions)"
  },
  {
    "example_id": 154,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "# |z| = 2\nz = 2j\n# |w| = 5\nw = 5j\n\n# |z + w| = sqrt((2+5)**2 + (2-5)**2) = sqrt(34)\nprint(abs(z + w))"
  },
  {
    "example_id": 155,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "100.0"
    ],
    "annotated_answers": [
      "1700.0"
    ],
    "solution": "x = 100\nwhile (x // 19) * 19 < (x // 89) * 89:\n    x += 1\nprint(x)"
  },
  {
    "example_id": 156,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "a = 1\nb = 2\nc = 3\n\nA = (b**2 - 4*a*c)/(4*a)\nB = (b**2 - 4*a*c)/(4*a)\n\nprint(A + B)"
  },
  {
    "example_id": 157,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "3.0",
      "3.0",
      "11.0",
      "2.0",
      "27.0",
      "1.0",
      "-497.0"
    ],
    "annotated_answers": [
      "1112.0"
    ],
    "solution": "x = symbols('x')\np = x**4 + 3*x**3 + 11*x**2 + 27*x + 1\np_value = simplify(p)\nprint(p_value)\np_value_1 = p.subs(x, 1)\np_value_3 = p.subs(x, 3)\np_value_5 = p.subs(x, 5)\np_value_2 = p.subs(x, 2)\np_value_6 = p.subs(x, 6)\np_value_n = p_value_1 + 7*p_value_3 - p_value_5 + 7*p_value_2 - p_value_6\nprint(p_value_n)"
  },
  {
    "example_id": 158,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "170.0",
      "13.0",
      "170.0",
      "170.0",
      "1.0",
      "810932305.0",
      "8.0",
      "499769140.0",
      "7.0",
      "134723250.0"
    ],
    "annotated_answers": [
      "850.0"
    ],
    "solution": "x, y = symbols('x y')\neq = x**10 + (13*x - 1)**10\nroots = solve(eq, x)\nval = 0\nfor root in roots:\n    val += 1/root\nprint(val)"
  },
  {
    "example_id": 159,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.197531985674193"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "# define the function\ndef sum(n):\n    s = 0\n    for i in range(1, n+1):\n        s += 1/(i**3)\n    return s\n\n# print the result\nprint(sum(10))"
  },
  {
    "example_id": 160,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x, a_3, a_2, a_1 = symbols('x a_3 a_2 a_1')\n\neq = 2*x**4 + a_3*x**3 + a_2*x**2 + a_1*x + 1\n\nrational_roots = []\nfor i in range(-10, 10):\n    if simplify(eq.subs(x, i)) == 0:\n        rational_roots.append(i)\n\nprint('Number of different possible rational roots is', len(rational_roots))"
  },
  {
    "example_id": 161,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "13535.0"
    ],
    "annotated_answers": [
      "13535.0"
    ],
    "solution": "expression = int(((7**0.5 + 5**0.5)**6))\nprint(expression)"
  },
  {
    "example_id": 162,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4030.0"
    ],
    "annotated_answers": [
      "1209.0"
    ],
    "solution": "f = lambda x: 2*x\nprint(f(2015))"
  },
  {
    "example_id": 163,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "# define variables\nx = symbols('x')\nq = symbols('q')\n\n\n# define numerator and denominator\nnum = q*x**6 - 4*q*x**5 + 3*q*x**3 + q*x**2 - q\nden = x**6 - 4*x**5 + 3*x**3 + x**2 - 1\n\n\n# simplify expressions\nnum_simplified = simplify(num)\nden_simplified = simplify(den)\n\n\n# find common factor\ncommon_factor = Abs(num_simplified)\n\n\n# factor numerator and denominator\nnum_factored = num_simplified/common_factor\nden_factored = den_simplified/common_factor\n\n\n# find degree of numerator\ndegree_num = den_factored.degree()\n\n\n# find degree of denominator\ndegree_den = den_factored.degree()\n\n\n# print results\nprint('The degree of numerator is', degree_num)\nprint('The degree of denominator is', degree_den)"
  },
  {
    "example_id": 164,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.8909090909090908"
    ],
    "annotated_answers": [
      "56.0"
    ],
    "solution": "# Solution\nz1 = 18 + 83j\nz2 = 18 + 39j\nz3 = 78 + 99j\nz = 18 + 79j\n\ndenominator = (z3 - z1) / (z2 - z1) * (z - z2) / (z - z3)\nprint(denominator.real)"
  },
  {
    "example_id": 165,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "840.0"
    ],
    "annotated_answers": [
      "92.0"
    ],
    "solution": "a, b, c, d, z0 = symbols('a b c d z0')\npolys = [4*z0**4+a*z0**3+b*z0**2+c*z0+d for a in range(5) for b in range(a, 5) for c in range(b, 5) for d in range(c, 5)]\nprint(sum(p.subs({z0: 1}) for p in polys))"
  },
  {
    "example_id": 166,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\neq1 = Eq(a**2 + b**2, 3)\neq2 = Eq(c**2 + d**2, 4)\nac = a*c\nbd = b*d\nad = a*d\nbc = b*c\n\nexpr = (ac + bd)**2 + (bc - ad)**2\nsol = solve([eq1, eq2], [a, b, c, d])\n\nfor i in sol:\n    a = i[0]\n    b = i[1]\n    c = i[2]\n    d = i[3]\n    expr_sol = expand(expr.subs({a: a, b: b, c: c, d: d}))\n    print(expr_sol)"
  },
  {
    "example_id": 167,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "3.0",
      "4.0",
      "5.0",
      "6.0",
      "7.0",
      "8.0",
      "9.0",
      "10.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "for k in range(1, 1000):\n    if k**2 % k == 0:\n        print(k)"
  },
  {
    "example_id": 168,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "# Define a and b\na, b = symbols('a b')\n\n# Define a logarithmic equation\nlog_equation = Eq(log(a) * log(b), 1)\n\n# Solve for a and b\nsolve_log_equation = solve(log_equation, [a, b])\n\n# Print the solutions\nprint(solve_log_equation)"
  },
  {
    "example_id": 169,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "x = symbols('x')\na, b, c = symbols('a b c', complex=True)\np = x**3 + a*x**2 + b*x + c\n\n# Find roots\nroots = solve(p.subs(x, 2009 + 9002*I), x)\n\n# Find nonreal roots\nnonreal_roots = []\nfor root in roots:\n    if Abs(root)!= 0:\n        nonreal_roots.append(root)\n\n# Count nonreal roots\nprint(len(nonreal_roots))"
  },
  {
    "example_id": 170,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25.0",
      "3.0",
      "4.0",
      "3.0",
      "2.0",
      "25.0",
      "3.0",
      "4.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "# define z\nz = symbols('z')\n\n# define equation\neq = z**3 - 100 - 75*I\n\n# solve for z\nsol = solve(eq, z)\n\n# print absolute value\nprint(Abs(sol[0]))"
  },
  {
    "example_id": 171,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "43.0"
    ],
    "annotated_answers": [
      "43.0"
    ],
    "solution": "from sympy import Eq, solve, Symbol\nx = Symbol('x', complex=True)\n\ndef f(x):\n    return (1/(x-1) + 1/(x-5) + 1/(x-10) + 1/(x-25)) - 2\n\nsolutions = solve(Eq(f(x), 0), x, simplify=True)\n\nsum = 0\nfor solution in solutions:\n    sum += solution\n\nprint(sum)"
  },
  {
    "example_id": 172,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0",
      "1.278204206624374",
      "-8.0",
      "-7.368",
      "-9.0",
      "-7.385",
      "-9.0",
      "-7.385",
      "-9.0",
      "8.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "import numpy as np\nfrom scipy.optimize import minimize\n\ndef dist(p):\n    return np.linalg.norm(p)\n\ndef curve(p):\n    return p[0]*p[1]*p[2]*p[1]**2\n\nres = minimize(dist, np.array([1, 1, 1]))\nprint(res)"
  },
  {
    "example_id": 173,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "1.0",
      "2.0",
      "4.0",
      "2.0",
      "2.0",
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "from sympy import symbols, solve\na, x1, y1, x2, y2 = symbols('a x1 y1 x2 y2')\neq1 = y1**2 - 4*a*x1\neq2 = y2**2 - 4*a*x2\neq3 = (y1 - y2)*(x1 - x2)\nsol1 = solve(eq1, x1)\nsol2 = solve(eq2, x2)\nsol3 = solve(eq3, x1)\nsol4 = solve(eq3, x2)\nprint(sol1[0] + sol2[0] + sol3[0] + sol4[0])"
  },
  {
    "example_id": 174,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "384.0"
    ],
    "annotated_answers": [
      "384.0"
    ],
    "solution": "print(2009**4 - 4*2007**4 + 6*2005**4 - 4*2003**4 + 2001**4)"
  },
  {
    "example_id": 175,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "1000.0"
    ],
    "solution": "m = 1\nwhile m <= 1000:\n    for n in range(1, m + 1):\n        if m * n > m + n:\n            break\n    else:\n        print(m)\n    m += 1"
  },
  {
    "example_id": 176,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "561.0"
    ],
    "solution": "a, b = symbols('a b')\na_n = a_0 = 1\nb_n = b_0 = 1\n\nfor n in range(1, 32):\n    a_n = a_n + a_n**2/a_n - 1\n    b_n = b_n + b_n**2/b_n - 1\n\nprint(b_n/a_n)"
  },
  {
    "example_id": 177,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "40.0"
    ],
    "solution": "import sympy\na, b = sympy.symbols('a b')\nx = sympy.symbols('x')\nexpression = (x**4 + a*x**3 + 3*x**2 + b*x + 1)\nprint(expression.expand().subs(x, 0))\na_squared = a**2\nb_squared = b**2\nprint(a_squared + b_squared)"
  },
  {
    "example_id": 178,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2011.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "1.0",
      "111.0",
      "9.0",
      "1.0",
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\neq1 = (1/(x-2009)) + (1/(x-2010)) + (1/(x-2011)) - 1\nsol = solve(eq1, x)\nprint(sol)"
  },
  {
    "example_id": 179,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "18.0",
      "1.0",
      "1.0",
      "7.0",
      "22.0",
      "7.0",
      "2.0",
      "1.0",
      "3.0",
      "2.0",
      "1.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "import sympy\nx = sympy.Symbol('x')\nexpression = (1/(7-x)*(1+x)*(1-x) + 3*x**2 - 18*x - 22/(x**2 - 1)*(x - 7) + 3/(x-2) - 3/(x-1)*(x-2))\nprint(expression)"
  },
  {
    "example_id": 180,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.095903274289385"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "import math\n\nx = math.log(10) / math.log(3)\nprint(x)"
  },
  {
    "example_id": 181,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "3.0",
      "2.0",
      "1.0",
      "2.0",
      "1.0",
      "1.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "x = symbols('x')\neq = (2*x**2 + x + 3)/(x**2 + x + 1) - (2*x + 1)/(x + 1)\nprint(eq)"
  },
  {
    "example_id": 182,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "8.0",
      "2.0"
    ],
    "annotated_answers": [
      "27.0"
    ],
    "solution": "x = symbols('x')\nlog2_log8 = log(log(x), 8)\nlog8_log2 = log(log(x), 2)\nprint(log2_log8**2)"
  },
  {
    "example_id": 183,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "A, B, C, P, Q = 1, 2, 3, 4, 5\n\n# Roots of x^3 + Px^2 + Qx - 19 = 0\nx1 = (-P + (P**2 - 4*Q)**(1/2)) / 3\nx2 = (-P - (P**2 - 4*Q)**(1/2)) / 3\nx3 = (P - (P**2 - 4*Q)**(1/2)) / 3\n\n# Roots of x^3 - Ax^2 + Bx - C = 0\ny1 = (-A + (A**2 - 4*B)**(1/2)) / 2\ny2 = (-A - (A**2 - 4*B)**(1/2)) / 2\ny3 = (A - (A**2 - 4*B)**(1/2)) / 2\n\nprint(A + B + C)"
  },
  {
    "example_id": 184,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "1929.0",
      "18.0",
      "5.0",
      "2.0",
      "1.0",
      "3.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq1 = a**3 - 2*a - 5\neq2 = b**3 - 2*b - 5\neq3 = c**3 - 2*c - 5\neq = [eq1, eq2, eq3]\nsol = solve(eq, [a, b, c])\nprint(sol)"
  },
  {
    "example_id": 185,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\na = symbols('a')\n\n# Expand the equation\neq = x**6 + 3*a*x**5 + (3*a**2 + 3)*x**4 + (a**3 + 6*a)*x**3 + (3*a**2 + 3)*x**2 + 3*a*x + 1\nexpanded_eq = expand(eq)\n\n# Simplify the expanded equation\nsimplified_eq = simplify(expanded_eq)\n\n# Solve the simplified equation\nsol = solve(simplified_eq, a)\n\n# Print the solution\nprint(sol[0])"
  },
  {
    "example_id": 186,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0",
      "2.0",
      "3.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "3.0",
      "2.0",
      "3.0",
      "2.0",
      "4.0",
      "3.0",
      "9.0",
      "2.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x, k = symbols('x k')\neq1 = (x - 2)**4 - (x - 2)\neq2 = x**2 - k*x + k\nsol = solve([eq1, eq2], [x, k])\nprint(sol)"
  },
  {
    "example_id": 187,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "81.0",
      "3.0",
      "2.0",
      "27.0",
      "3.0",
      "2.0",
      "2.0",
      "2.0",
      "864.0"
    ],
    "annotated_answers": [
      "64.0"
    ],
    "solution": "# define variables\na = symbols('a')\nb = symbols('b')\n\n# define equation\neq = (a+b)**3 - 2*a*b*I\n\n# solve equation for a\nsol = solve(eq, a)\nprint(sol[0])\n\n# solve equation for b\nsol = solve(eq, b)\nprint(sol[0])\n\n# simplify equation\nsimplify(sol[0])\n\n# expand equation\nexpand(sol[0])\n\n# find absolute value\nabs_sol = Abs(sol[0])\nprint(abs_sol)"
  },
  {
    "example_id": 188,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "# Let P(x) be the degree three polynomial with\n# P(1) = log(1) = 0\n# P(2) = log(2) = 1\n# P(3) = log(3) = 2\n# P(4) = log(4) = 3\n\n# P(5) = A log(B/C)\n# where A, B, and C are positive integers, and C is prime\n# Find A + B + C\n\n# A = log(B/C)\n# B = P(5) = A log(B/C)\n# C = P(1) = 0\n\n# Solve the system of equations\n# A = log(B/C) = log(B/0) = B\n# B = P(5) = A log(B/C) = A log(B/B) = A\n# C = P(1) = 0\n\n# Find A, B, and C\nA, B, C = symbols('A B C')\neq1 = sympy.Eq(A, sympy.log(B/C))\neq2 = sympy.Eq(B, A * sympy.log(B/C))\neq3 = sympy.Eq(C, 0)\nsol = solve([eq1, eq2, eq3], [A, B, C])\nprint(sol)\n\n# Check the solution\n# A = 1\n# B = 2\n# C = 0\n\n# Find A + B + C\nA, B, C = symbols('A B C')\nA, B, C = 1, 2, 0\nprint(A + B + C)"
  },
  {
    "example_id": 189,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "512.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq = 10*x*(4/3)*(6/4)*(8/5)*(10/6)*(12/7)*(14/8)*(16/9)*(18/10)\neq = simplify(eq)\neq = expand(eq)\neq = solve(eq, x)\nprint(eq)"
  },
  {
    "example_id": 190,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "1.0",
      "1.0",
      "2.0",
      "1.0",
      "1.0",
      "1.0",
      "2.0",
      "1.0",
      "1.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq1 = x*y*z - 4\neq2 = x**3 + y**3 + z**3 - 4\neq3 = x**2*y + x*y**2 + x**2*z + x*z**2 + y*z**2 + y**2*z - 12\nsol = solve([eq1, eq2, eq3], [x, y, z])\nprint(sol)"
  },
  {
    "example_id": 191,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "5.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "log_6_xy = 2\nlog_y_5x = 2\n\n# Solving for x\nx = log_6_xy / log_y_5x\nx = 5\n\n# Solving for y\ny = 5**(1/log_y_5x)\ny = 5**(1/2)\ny = 5**0.5\ny = 5\n\nprint(x, y)"
  },
  {
    "example_id": 192,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2873.0"
    ],
    "annotated_answers": [
      "743.0"
    ],
    "solution": "r = 100*546/19\nprint(int(r))"
  },
  {
    "example_id": 193,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\nf = (a + b + c + d) * (1/a + 1/b + 1/c + 1/d)\neq = Eq(simplify(f), 1)\nsol = solve(eq, [a, b, c, d])\nfor x in sol:\n    print(x)"
  },
  {
    "example_id": 194,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "3.0",
      "4.0",
      "4.0",
      "2.0",
      "4.0",
      "3.0",
      "4.0",
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "z = symbols('z')\neq = Eq(z**4, Rational(64, 5) - Rational(48, 5)*I)\nsol = solve(eq, z)\nz_value = sol[0]\nprint(Abs(z_value))"
  },
  {
    "example_id": 195,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "a_3 = -7\na_2 = -1\na_1 = 14\n\nfor x in range(1, 3):\n    if (a_3*x**3 + a_2*x**2 + a_1*x - 14) % x == 0:\n        print(\"The number of different possible rational roots of this polynomial is 1\")\n    else:\n        print(\"The number of different possible rational roots of this polynomial is 0\")"
  },
  {
    "example_id": 196,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1000.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "n = 1\nwhile True:\n    r = n*10**(-3)\n    if r.is_integer():\n        print(n)\n        break\n    n += 1"
  },
  {
    "example_id": 197,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "2.0",
      "0.0",
      "1.0",
      "1.0",
      "2.0",
      "1.0",
      "1.0",
      "10.0",
      "2.0"
    ],
    "annotated_answers": [
      "-50.0"
    ],
    "solution": "r = symbols('r:99')\nroots = r[:98]\nsum = 0\nfor i in range(98):\n    sum += r[i]**2/(r[i] + 1)\nprint(sum)"
  },
  {
    "example_id": 198,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0",
      "2.0",
      "10.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x, y, z = symbols('x y z')\nexpr = 10*x**2 + 10*y**2 + z**2\neq = x*y + x*z + y*z - 1\nsolve(eq, z)\nexpr = expr.subs(z, solve(eq, z)[0])\nprint(expr)"
  },
  {
    "example_id": 199,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "x = symbols('x')\ne = x**2\no = x**2\nf = e + o\nf = f.expand()\nf = f.simplify()\nf = f.subs(x, 2)\nprint(f)"
  },
  {
    "example_id": 200,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "199.0"
    ],
    "solution": "x = 10000/10000\nprint(x)"
  },
  {
    "example_id": 201,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "n = symbols('n')\n\n# Generate the polynomial\npoly = 42\nfor i in range(1, 21):\n    poly += Abs(I)*(n**i)\n\n# Find the roots\nroots = solve(poly, n)\n\n# Find the largest number of integer roots\nmax_int = 0\nfor i in roots:\n    if i.is_integer:\n        max_int += 1\n\nprint(max_int)"
  },
  {
    "example_id": 202,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "(x1, y1) = (5, 8)\n(x2, y2) = (7, 14)\n\na = y2 - y1\nb = x2 - x1\n\nprint(a - b)"
  },
  {
    "example_id": 203,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "27.0",
      "2.0",
      "27.0",
      "1312.0",
      "2.0",
      "1755904.0",
      "2.0",
      "656.0",
      "1.0",
      "3.0"
    ],
    "annotated_answers": [
      "-80.0"
    ],
    "solution": "x, c = symbols('x c')\neq = Eq(x**3 + 8*x**2 - 4*x + c, 0)\nrts = solve(eq, x)\nsum_of_rts = sum(rts)\nprint(c - sum_of_rts)"
  },
  {
    "example_id": 204,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "-3.0",
      "2.0",
      "6054.0",
      "2018.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "27.0"
    ],
    "annotated_answers": [
      "8080.0"
    ],
    "solution": "x, y = symbols('x y')\neq = (x + 1/y) * (x + 1/y + 2018) + (y + 1/x) * (y + 1/x + 2018)\nsol = solve(eq, y)\nprint(sol)"
  },
  {
    "example_id": 205,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.000000000000001"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "x = 3\nfor n in range(1, 12345):\n    x = (1 + x) / (1 - x)\nprint(x)"
  },
  {
    "example_id": 206,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "9.0"
    ],
    "annotated_answers": [
      "30.0"
    ],
    "solution": "from sympy import sqrt\na = 2\nb = 4\nc = 2\nd = 1\n\nside_length = (a*sqrt(b) - c)/d\n\nprint(side_length)\n\n# 1.25\n\nprint(a+b+c+d)\n\n# 9"
  },
  {
    "example_id": 207,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "# Setup\na, b = symbols('a b')\ns = a + b + a*b\n\n# Find a\na = s/(b + 1)\n\n# Find b\nb = simplify(s - a)\n\n# Find smallest possible value of S\nS = a*b*b\n\n# Find smallest possible value of a\nsmallest_a = Abs(a)\n\n# Find smallest possible value of b\nsmallest_b = Abs(b)\n\n# Find smallest possible value of S\nsmallest_s = smallest_a*smallest_b*smallest_b\n\n# Print smallest possible value of S\nprint(smallest_s)"
  },
  {
    "example_id": 208,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-23940.0",
      "1.0",
      "3.0",
      "2.0",
      "3.0",
      "23940.0",
      "1.0",
      "3.0",
      "2.0",
      "-3.0"
    ],
    "annotated_answers": [
      "-63.0"
    ],
    "solution": "a, b, c = symbols('a b c')\n\n# arithmetic sequence\neq1 = a*b*c - 17955\n\n# geometric sequence\neq2 = (3*a + b)*(3*b + c)*(3*c + a)\n\n# arithmetic and geometric sequences are in the same order\neq3 = a + b + c\n\nsolve_list = solve([eq1, eq2, eq3], [a, b, c])\nprint(solve_list[0])"
  },
  {
    "example_id": 209,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "3.0",
      "2.0",
      "3.0",
      "2.0",
      "3.0",
      "6.0",
      "0.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "from sympy import *\nfrom sympy.abc import x\n\nA, B, C, D, E = symbols('A B C D E')\n\nAB = x + 3\nBC = 3*x + 5\nCD = 6*x + 7\nDE = 9*x + 9\nEA = 12*x + 3\n\nseq = [AB, BC, CD, DE, EA]\n\nseq_diff = [seq[i] - seq[i-1] for i in range(1, len(seq))]\nprint(seq_diff)\n\nk = solve(seq_diff[1] - seq_diff[0])\nprint(k[0])"
  },
  {
    "example_id": 210,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0",
      "3.0",
      "13.0",
      "2.0",
      "4.0",
      "4.0",
      "44.0",
      "3.0",
      "141.0",
      "2.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq1 = Eq(x + y + z, 6)\neq2 = Eq(1/x + 1/y + 1/z, 2)\nsolve([eq1, eq2], [x, y, z])\nx_y_z = solve([eq1, eq2], [x, y, z])\nx_y_z = solve([eq1, eq2], [x, y, z])\nprint(simplify(expand(x_y_z[0][0] + x_y_z[0][1]/x_y_z[0][2] + x_y_z[0][2]/x_y_z[0][1])))"
  },
  {
    "example_id": 211,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "import math\n\ndef hyperbola(x, a, h, b, k):\n    return (x - h)**2 / a**2 - (y - k)**2 / b**2\n\ndef find_hkab(p):\n    \"\"\"Find the hyperbola that passes through the point p=(x, y).\"\"\"\n    a = 2 * math.sqrt(y**2 - x**2)\n    h = x - a\n    b = 2 * math.sqrt(y**2 - x**2)\n    k = y - b\n    return h, k, a, b\n\n# Point p=(x, y) is given.\nx = 1\ny = 3\nh, k, a, b = find_hkab((x, y))\nprint(h + k + a + b)"
  },
  {
    "example_id": 212,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "-27.0",
      "2.0",
      "2950.0",
      "27.0",
      "2.0",
      "1098500.0"
    ],
    "annotated_answers": [
      "150.0"
    ],
    "solution": "c, x = symbols('c x')\neq = x**3 - 10*x**2 + 55*x - c\nroots = solve(eq, x)\nprint(roots[0]*roots[1])"
  },
  {
    "example_id": 213,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "4.0",
      "6.0",
      "16.0",
      "18.0",
      "20.0",
      "22.0",
      "24.0",
      "26.0",
      "28.0"
    ],
    "annotated_answers": [
      "340.0"
    ],
    "solution": "n = 1\nwhile n < 1000:\n    if (n <= 1 or n % 2 == 0) and sympy.floor(log(n, 2)) % 2 == 0:\n        print(n)\n    n += 1"
  },
  {
    "example_id": 214,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "def sgn(x):\n    if x < 0:\n        return -1\n    elif x == 0:\n        return 0\n    else:\n        return 1\n\nsum = 0\nfor n in range(-10, 21):\n    sum += sgn(n)\nprint(sum)"
  },
  {
    "example_id": 215,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "x = symbols('x')\nexpr = (x + 3)**50\nexpr_expand = expand(expr)\nexpr_simplify = simplify(expr_expand)\nexpr_solve = solve(expr_simplify, x)\nexpr_max = expr_solve[0]\nprint(expr_max)"
  },
  {
    "example_id": 216,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "-4.0",
      "41.0",
      "8.0",
      "41.0",
      "2.0",
      "36.0",
      "2.0",
      "4.0",
      "41.0",
      "36.0",
      "41.0",
      "8.0",
      "2.0"
    ],
    "annotated_answers": [
      "40.0"
    ],
    "solution": "from sympy import symbols, solve, sqrt, diff\n\nx, y = symbols('x y')\n\n# first equation\ne1 = x**2 + y**2 + 6*x - 24*y + 72\n# second equation\ne2 = x**2 - y**2 + 6*x + 16*y - 46\n\n# solve for the intersection point\nsol = solve([e1, e2], [x, y])\n\n# compute the distance\ndef distance(p1, p2):\n    return sqrt((p1[0] - p2[0])**2 + (p1[1] - p2[1])**2)\n\nsum_distances = 0\nfor p in sol:\n    sum_distances += distance(p, (-3, 2))\n\nprint(sum_distances)"
  },
  {
    "example_id": 217,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "73.0"
    ],
    "solution": "r, s, t = symbols('r s t')\nroots = solve(x**3 + 9*x**2 - 9*x - 8, x)\npoly = expand((r + s)*(s + t)*(t + r))\nprint(poly)"
  },
  {
    "example_id": 218,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "29.0",
      "2.0",
      "43.0"
    ],
    "annotated_answers": [
      "30.0"
    ],
    "solution": "k = symbols('k')\nQ1 = k - 29\nQ2 = 2*k - 43\nP = Q1*Q2\nprint(P.factor())"
  },
  {
    "example_id": 219,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "97.0"
    ],
    "solution": "n = symbols('n')\ni = I\neq = i + 2*i**2 + 3*i**3 + 4*i**4 + 5*i**5 + 6*i**6 + 7*i**7 + 8*i**8 + 9*i**9 + 10*i**10\neq_r = eq.subs(i, I)\neq_r = eq_r.subs(n, 1)\neq_r = eq_r.subs(n, 2)\neq_r = eq_r.subs(n, 3)\neq_r = eq_r.subs(n, 4)\neq_r = eq_r.subs(n, 5)\neq_r = eq_r.subs(n, 6)\neq_r = eq_r.subs(n, 7)\neq_r = eq_r.subs(n, 8)\neq_r = eq_r.subs(n, 9)\neq_r = eq_r.subs(n, 10)\neq_r = eq_r.subs(n, 11)\neq_r = eq_r.subs(n, 12)\neq_r = eq_r.subs(n, 13)\neq_r = eq_r.subs(n, 14)\neq_r = eq_r.subs(n, 15)\neq_r = eq_r.subs(n, 16)\neq_r = eq_r.subs(n, 17)\neq_r = eq_r.subs(n, 18)\neq_r = eq_r.subs(n, 19)\neq_r = eq_r.subs(n, 20)\neq_r = eq_r.subs(n, 21)\neq_r = eq_r.subs(n, 22)\neq_r = eq_r.subs(n, 23)\neq_r = eq_r.subs"
  },
  {
    "example_id": 220,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "5.0"
    ],
    "annotated_answers": [
      "61.0"
    ],
    "solution": "a, b = symbols('a b')\nc = [a + b]\nfor i in range(1, 5):\n    c.append(c[i - 1] + a + b)\nprint(c[4])"
  },
  {
    "example_id": 221,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0",
      "2.0",
      "21.0",
      "2.0",
      "21.0",
      "2.0",
      "5.0",
      "2.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\neq = x**6 + x**4 - 115*x**3 + x**2 + 1\nroots = solve(eq, x)\nfor root in roots:\n    if root.is_real:\n        print(root)"
  },
  {
    "example_id": 222,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-13999.0"
    ],
    "annotated_answers": [
      "401.0"
    ],
    "solution": "f = lambda x: 6*x - 2005\nn = f(f(1))\nprint(n)"
  },
  {
    "example_id": 223,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "22.0"
    ],
    "annotated_answers": [
      "64.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\nassumptions = [a + b + c + d - 1, a > 0, b > 0, c > 0, d > 0]\neq = (a + b + c + d) / a + (a + b + c + d) / b + (4*c) / c + (16*d) / d\neq = simplify(eq)\nprint(eq)\n\nsolve(eq, [a, b, c, d])"
  },
  {
    "example_id": 224,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.417807840205229",
      "16"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "def g(x):\n    return x**2 - 11*x + 30\n\ndef f(x):\n    return x**4 - 14*x**3 + 62*x**2 - 91*x + 42\n\nans = 0\nfor i in range(1, 101):\n    ans += g(f(i))\n\nprint(ans)"
  },
  {
    "example_id": 225,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "6.0"
    ],
    "annotated_answers": [
      "30.0"
    ],
    "solution": "f = sympy.Function('f')\nf_expression = f(x) - f(2)\neq = f_expression - 12\nsol = solve(eq, f(6))\nf_value = sympy.simplify(f_expression.subs(x, 6))\nprint(f_value)"
  },
  {
    "example_id": 226,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "-1.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "def f(x):\n    return x*x - 2\n\ndef g(x):\n    return f(f(f(x)))\n\nprint(g(1))"
  },
  {
    "example_id": 227,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "n = 1\nwhile True:\n    x = 1\n    for i in range(n):\n        x = x * (-1)\n        x = x / (i + 1)\n    if x.real == 0:\n        n += 1\n    else:\n        break\nprint(n)"
  },
  {
    "example_id": 228,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "3.0",
      "3.0",
      "3.0",
      "3.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "from sympy import *\ninit_printing()\n\na, b, c, d, e = symbols('a, b, c, d, e')\n\nexpression = a**3/(a-b)*(a-c)*(a-d)*(a-e) + b**3/(b-a)*(b-c)*(b-d)*(b-e) + c**3/(c-a)*(c-b)*(c-d)*(c-e) + d**3/(d-a)*(d-b)*(d-c)*(d-e) + e**3/(e-a)*(e-b)*(e-c)*(e-d)\n\nprint(expression)"
  },
  {
    "example_id": 229,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "254.0"
    ],
    "solution": "a0, a1, a2, a3, a4, a5, a6 = symbols('a0 a1 a2 a3 a4 a5 a6')\nQ = a0 + a1*x + a2*x**2 + a3*x**3 + a4*x**4 + a5*x**5 + a6*x**6\n\n# Condition 1\nQ.subs(x, 1) == 4\n\n# Condition 2\nQ.subs(x, 5) == 152\n\n# Find Q(6)\nQ.subs(x, 6)"
  },
  {
    "example_id": 230,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "x = symbols('x')\na, b = symbols('a b')\n\n# a = (5 / (3 + 2 ** (1 / 3))) + (1 / (3 - 2 ** (1 / 3)))\n# b = (5 / (3 - 2 ** (1 / 3))) + (1 / (3 + 2 ** (1 / 3)))\n\n# a = (5 / (3 + 2 ** (1 / 3))) + (1 / (3 - 2 ** (1 / 3)))\n# b = (5 / (3 - 2 ** (1 / 3))) + (1 / (3 + 2 ** (1 / 3)))\n\n# a = (5 / (3 + 2 ** (1 / 3))) + (1 / (3 - 2 ** (1 / 3)))\n# b = (5 / (3 - 2 ** (1 / 3))) + (1 / (3 + 2 ** (1 / 3)))\n\n# a = (5 / (3 + 2 ** (1 / 3))) + (1 / (3 - 2 ** (1 / 3)))\n# b = (5 / (3 - 2 ** (1 / 3))) + (1 / (3 + 2 ** (1 / 3)))\n\n# a = (5 / (3 + 2 ** (1 / 3))) + (1 / (3 - 2 ** (1 / 3)))\n# b = (5 / (3 - 2 ** (1 / 3))) + (1 / (3 + 2 ** (1 / 3)))\n\n# a = (5 / (3 + 2 ** (1 / 3))) + (1 / (3 - 2 ** (1 / 3)))\n# b = (5 / (3 - 2 ** (1 / 3))) + (1 / (3 + 2 ** (1 / 3)))\n\n# a = (5 / (3 + 2 ** (1 / 3))) + (1 / (3 - 2 ** (1 / 3)))\n# b = (5 / (3 - 2 ** (1 / 3))) + (1 / (3 + 2 ** (1"
  },
  {
    "example_id": 231,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "0.0",
      "1.0",
      "2.0",
      "11.0",
      "0.0"
    ],
    "annotated_answers": [
      "112.0"
    ],
    "solution": "a0, a1, a2 = symbols('a_0 a_1 a_2')\n\na = [a0, a1, a2]\n\nfor i in range(3, 2023):\n    a.append(a[i - 3] + a[i - 2] + a[i - 1])\n    a[i] %= 11\n\nans = simplify(expand(a[2018] * a[2020] * a[2022]))\nprint(ans)"
  },
  {
    "example_id": 232,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x, y = symbols('x y')\neq = Eq(x**2 + y**2, 4*x*y)\nsol = solve(eq, [x, y])\nprint(sol)"
  },
  {
    "example_id": 233,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a, g = symbols('a g')\nseq = [0, 0, 1, 0]\n\n# Using the first four terms of the sum, we can write the equation\neq = Eq(a + g, simplify(sum(seq)))\n\n# Solve for the next term of the sum\nsolve(eq, a + g)"
  },
  {
    "example_id": 234,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "x, y = symbols('x y')\neq = Eq(x**2 + y**2, 0)\nx_y = solve(eq, x)\nprint(x_y)"
  },
  {
    "example_id": 235,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "164.0",
      "1.0",
      "4.0",
      "2.0",
      "1.0",
      "4.0",
      "2.0",
      "8.0",
      "1.0",
      "4.0"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "omega = -1+4*I\nprint(abs(omega**2+2*omega-8))"
  },
  {
    "example_id": 236,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "13.0"
    ],
    "annotated_answers": [
      "154.0"
    ],
    "solution": "N = 2**(1+floor(log(19-1, 2))) - 19\nprint(N)"
  },
  {
    "example_id": 237,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "expression = 0\nfor x in range(1, 17):\n    for y in range(1, 17):\n        if x * y == 16:\n            expression += 1\nprint(expression)"
  },
  {
    "example_id": 238,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-20.0",
      "9.0",
      "2.0",
      "181.0",
      "9.0",
      "-2.0",
      "181.0",
      "9.0",
      "20.0",
      "9.0"
    ],
    "annotated_answers": [
      "-5.0"
    ],
    "solution": "x = symbols('x')\neq = (4*x - 23)/(x**2 + 5*x - 24)\nsol = solve(eq - (x - 3)/x + (x + 8)/(x - 3))\nprint(sol)"
  },
  {
    "example_id": 239,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "14.0",
      "2.0",
      "14.0",
      "49.0"
    ],
    "annotated_answers": [
      "175.0"
    ],
    "solution": "x, y = symbols('x y')\neq = 3*x**2 - 18*x + 4*y**2 - 32*y + 91\nexpr = x**2 + y**2 + 2*x*y - 14*x - 14*y + 49\nconstraint = eq - 300\nsol = solve(constraint, (x, y))\nprint(expr.subs(sol))"
  },
  {
    "example_id": 240,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "2007.0"
    ],
    "solution": "x = symbols('x')\nf = lambda x: 2*x if x <= 0.5 else 2 - 2*x\nf2 = lambda x: f(f(x))\nf3 = lambda x: f2(f(x))\nf4 = lambda x: f3(f(x))\nf5 = lambda x: f4(f(x))\nf6 = lambda x: f5(f(x))\nf7 = lambda x: f6(f(x))\nf8 = lambda x: f7(f(x))\nf9 = lambda x: f8(f(x))\nf10 = lambda x: f9(f(x))\nf11 = lambda x: f10(f(x))\nf12 = lambda x: f11(f(x))\nf13 = lambda x: f12(f(x))\nf14 = lambda x: f13(f(x))\nf15 = lambda x: f14(f(x))\nf16 = lambda x: f15(f(x))\nf17 = lambda x: f16(f(x))\nf18 = lambda x: f17(f(x))\nf19 = lambda x: f18(f(x))\nf20 = lambda x: f19(f(x))\nf21 = lambda x: f20(f(x))\nf22 = lambda x: f21(f(x))\nf23 = lambda x: f22(f(x))\nf24 = lambda x: f23(f(x))\nf25 = lambda x: f24(f(x))\nf26 = lambda x: f25(f(x))\nf27 = lambda x: f26(f(x))\nf28 = lambda x: f27(f(x))\nf29 = lambda x: f28(f(x))\nf30 = lambda x: f29(f(x))\nf31 = lambda x: f30(f(x))\nf32 = lambda x: f31(f(x))"
  },
  {
    "example_id": 241,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "24.0",
      "2.0",
      "36.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "a, b = symbols('a b')\neq1 = Eq(x**2 - a*x + 24, 0)\neq2 = Eq(x**2 - b*x + 36, 0)\nsolve_set = solve((eq1, eq2), (a, b))\nprint(solve_set)"
  },
  {
    "example_id": 242,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "n = 3"
  },
  {
    "example_id": 243,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "3.0",
      "3.0",
      "13.0",
      "2.0",
      "11.0",
      "23.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "y = symbols('y')\neq = 3*y**3 - 13*y**2 + 11*y + 23\nd = 3*y + 2\nquotient = eq / d\nremainder = simplify(expand(eq % d))\nprint(remainder)"
  },
  {
    "example_id": 244,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "4.0",
      "4.0",
      "4.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq1 = Eq(a + b + c, 0)\neq2 = Eq(a**2 + b**2 + c**2, 4)\nsol = solve((eq1, eq2), [a, b, c])\nprint(simplify(expand(a**4 + b**4 + c**4)))"
  },
  {
    "example_id": 245,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "3.0",
      "7.0",
      "3.0",
      "125.0",
      "78125.0",
      "7.0",
      "3.0",
      "3.0",
      "3.0",
      "7.0",
      "125.0",
      "78125.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "x = symbols('x')\na, c = symbols('a c', real=True)\nf = x**7 + a*x**3 + c\nf_eq = Eq(f, 3)\nf_5 = f.subs(x, 5)\nprint(simplify(f_eq))\nprint(f_5)\nf_sol = solve(f_eq, a, c)\nprint(f_sol)\nf_5_sol = f.subs(f_sol)\nprint(f_5_sol)\nf_sol_5 = f.subs(x, 5)\nprint(f_sol_5)"
  },
  {
    "example_id": 246,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "i = symbols('i')\nz = -1 + I*sqrt(3)\nz_abs = Abs(z)\nsolve(Eq(z_abs, 5), i)"
  },
  {
    "example_id": 247,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "3.0",
      "5.0",
      "4.0",
      "7.0",
      "4.0",
      "6.0",
      "13.0",
      "7.0",
      "5.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x = symbols('x')\nf = (x + 1/x)**6 - (x**6 + 1/x**6) - 2\nf = f/(x + 1/x)**3 + (x**3 + 1/x**3)\nf = simplify(expand(f))\nf = Eq(f, 0)\nprint(solve(f, x))"
  },
  {
    "example_id": 248,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x, y = symbols('x y')\nf = x*sqrt(1 - y**2) + y*sqrt(1 - x**2)\neq = Eq(f, 0)\nf_x = simplify(diff(f, x))\nf_y = simplify(diff(f, y))\nf_x_y = simplify(diff(f_x, y))\nf_y_x = simplify(diff(f_y, x))\na = -1\nb = 1\nc = -1\nd = 1\nconditions = [Eq(f_x, 0), Eq(f_y, 0), Eq(f_x_y, 0), Eq(f_y_x, 0), Eq(f_x**2, 0), Eq(f_y**2, 0)]\nresult = solve(conditions, [x, y])\nprint(result)"
  },
  {
    "example_id": 249,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "11.0",
      "2.0",
      "1100.0",
      "5.0"
    ],
    "annotated_answers": [
      "24.0"
    ],
    "solution": "from sympy import symbols, solve\nx, y = symbols('x y')\neq = (x**2/50 - y**2/22 - 2)\nf = solve(eq, y)\nprint(f[0])"
  },
  {
    "example_id": 250,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "# Define symbols\nx, y = symbols('x y')\n\n\n# Define equations\neq1 = x**2 + y**2 + 12*x - 34\neq2 = x**2 + y**2 - 12*x - 34\n\n\n# Find common chord\nslope_common_chord = simplify(Eq(eq1, eq2).as_numer_denom_coeff()[1])\nprint(slope_common_chord)"
  },
  {
    "example_id": 251,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25.0"
    ],
    "annotated_answers": [
      "243.0"
    ],
    "solution": "def f(x):\n    return x**2\n\nprint(f(5))"
  },
  {
    "example_id": 252,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq1 = Eq(a**2, b*c)\neq2 = Eq(a + b + c, a*b*c)\nsolve([eq1, eq2], [a, b, c])"
  },
  {
    "example_id": 253,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "1.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "# Define variables\na, b = symbols('a b')\n\n# Define the equation\neq = Eq(a*b, 1)\n\n# Simplify the equation\neq = simplify(eq)\n\n# Expand the equation\neq = expand(eq)\n\n# Find the solution\nsol = solve(eq, a)\n\n# Find the largest possible value\nlargest = sol[0]\n\n# Print the answer\nprint(largest)"
  },
  {
    "example_id": 254,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "819.0"
    ],
    "solution": "a_1 = 0\nfor i in range(1, 19):\n    a_i = a_1 + i\n    a_i = a_i + 1\n    a_i = a_i + 1\n    a_i = a_i + 1\n    a_i = a_i + 1\n    a_i = a_i + 1\n    a_i = a_i + 1\n    a_i = a_i + 1\n    a_i = a_i + 1\n    a_i = a_i + 1\n    a_i = a_i + 1\n    a_i = a_i + 1\n    a_i = a_i + 1\n    a_i = a_i + 1\n    a_i = a_i + 1\n    a_i = a_i + 1\n    a_i = a_i + 1\n    a_i = a_i + 1\n    a_i = a_i + 1\n    a_i = a_i + 1\n    a_i = a_i + 1\n    a_i = a_i + 1\n    a_i = a_i + 1\n    a_i = a_i + 1\n    a_i = a_i + 1\n    a_i = a_i + 1\n    a_i = a_i + 1\n    a_i = a_i + 1\n    a_i = a_i + 1\n    a_i = a_i + 1\n    a_i = a_i + 1\n    a_i = a_i + 1\n    a_i = a_i + 1\n    a_i = a_i + 1\n    a_i = a_i + 1\n    a_i = a_i + 1\n    a_i = a_i + 1\n    a_i = a_i + 1\n    a_i = a_i + 1\n    a_i = a_i + 1\n    a_i = a_i + 1"
  },
  {
    "example_id": 255,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-8.0",
      "0.0",
      "9.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\neq = x**5 - x**4 - 72*x**3\nsol = solve(eq, x)\nprint(sol)"
  },
  {
    "example_id": 256,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "48.0"
    ],
    "solution": "a = symbols('a')\nf = x**3 - 12*x**2 + a*x - 64\nf_roots = solve(f, x)\nfor root in f_roots:\n    if root.is_real and root.is_nonnegative:\n        print(root)"
  },
  {
    "example_id": 257,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "504.0"
    ],
    "solution": "a, b = symbols('a b')\neq = (a + b)**2 - 4*a*b\neq_sol = solve(eq, b)\nb_value = eq_sol[0]\na_value = simplify((b_value + a)/2)\nprint(a_value)"
  },
  {
    "example_id": 258,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "from sympy import *\n\nx, y = symbols('x y')\n\ndef upperparab(x):\n    return sqrt(8*x)\n\ndef lowerparab(x):\n    return -sqrt(8*x)\n\nA = (-1, 1)\nB = (2, 4)\nC = (-1, -1)\nD = (2, -4)\n\narea = (upperparab(1) - upperparab(-1))*(lowerparab(1) - lowerparab(-1))\nprint(area)"
  },
  {
    "example_id": 259,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.8"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "a = 0.5\nb = 0.5\nprint((a + b) / (a*b + 1))"
  },
  {
    "example_id": 260,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "0.0"
    ],
    "annotated_answers": [
      "225.0"
    ],
    "solution": "x, y, z = symbols('x y z')\ni = I\n\n# set of elements\nset = {i**x, (1+i)**y, z}\n\n# number of elements\nnum_elements = len(set)\n\n# number of triples\nnum_triples = 0\n\nfor x in range(0, 20):\n    for y in range(0, 20):\n        for z in range(0, 20):\n            if x!= y and x!= z and y!= z:\n                if i**x in set and (1+i)**y in set and z in set:\n                    num_triples += 1\n\nprint(num_triples)"
  },
  {
    "example_id": 261,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "0.0"
    ],
    "annotated_answers": [
      "32.0"
    ],
    "solution": "P, Q, R, S = symbols('P Q R S')\neq = x**5 - 40*x**4 + P*x**3 + Q*x**2 + R*x + S\nroots = solve(eq, x)\nreciprocal_sum = 0\nfor i in range(len(roots)):\n    reciprocal_sum += 1/roots[i]\nprint(reciprocal_sum)"
  },
  {
    "example_id": 262,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0"
    ],
    "annotated_answers": [
      "913.0"
    ],
    "solution": "n = 10\nf = [0, 0, 0]\nf[0] = f[1] = f[2] = 0\nfor i in range(3, n+1):\n    f.append(f[i-1] + f[i-2])\nprint(f)"
  },
  {
    "example_id": 263,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "9.0",
      "2.0",
      "2.0",
      "11.0",
      "2.0",
      "2.0",
      "7.0",
      "2.0",
      "2.0",
      "2.0",
      "9.0",
      "2.0",
      "2.0",
      "11.0",
      "2.0",
      "2.0",
      "7.0",
      "2.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq1 = a + b + c - 4\neq2 = 1/a + 1/b + 1/c - 5\neq = eq1.expand() + eq2.expand()\nprint(solve(eq, a))"
  },
  {
    "example_id": 264,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1414.0"
    ],
    "annotated_answers": [
      "255.0"
    ],
    "solution": "n = 0\nm = 1\nwhile m < 1000000:\n    n += 1\n    m += n\nprint(n)"
  },
  {
    "example_id": 265,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "102.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "x = symbols('x')\nf = Abs(x + 15) + Abs(x + 12) + Abs(x + 8) + Abs(x - 1) + Abs(x - 3) + Abs(x - 19)\nf_min = f.subs(x, -19)\nprint(f_min)"
  },
  {
    "example_id": 266,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "-256.0"
    ],
    "solution": "# Create symbols\na, b = symbols('a b')\n\n# Create equations\neq1 = 8*x**3 + 4*a*x**2 + 2*b*x + a\n\n# Find solutions\nsolutions = solve(eq1, x)\n\n# Find sum of base-2 logarithms\nsum_of_log = 0\nfor solution in solutions:\n    sum_of_log += log(solution, 2)\n\n# Check if sum is 5\nif sum_of_log == 5:\n    print(a)"
  },
  {
    "example_id": 267,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "6.0",
      "7.0",
      "6.0",
      "5.0",
      "7.0",
      "7.0",
      "5.0",
      "6.0",
      "7.0",
      "6.0",
      "5.0"
    ],
    "annotated_answers": [
      "104.0"
    ],
    "solution": "sqrt5 = sqrt(5)\nsqrt6 = sqrt(6)\nsqrt7 = sqrt(7)\nprod = (sqrt5+sqrt6+sqrt7)*(sqrt5-sqrt6+sqrt7)*(sqrt5+sqrt6-sqrt7)*(sqrt5-sqrt6-sqrt7)\nprint(prod)"
  },
  {
    "example_id": 268,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "3.0",
      "4.0",
      "5.0",
      "2.0",
      "3.0",
      "4.0",
      "5.0"
    ],
    "annotated_answers": [
      "163.0"
    ],
    "solution": "w1, w2, w3, w4, w5 = symbols('w1 w2 w3 w4 w5')\nz1, z2, z3, z4, z5 = symbols('z1 z2 z3 z4 z5')\neq = (z1 - w1) + (z2 - w2) + (z3 - w3) + (z4 - w4) + (z5 - w5)\nsol = solve(eq, z1)\nslope = sympy.re(sol[0]).evalf()\nprint(slope)"
  },
  {
    "example_id": 269,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "a, b, c = symbols('a b c')\np = (x - b)*(x - c)/(a - b)*(a - c) + (x - a)*(x - c)/(b - a)*(b - c) + (x - a)*(x - b)/(c - a)*(c - b)\ndegree = simplify(expand(p).as_numer_denom()[1])\nprint(degree)"
  },
  {
    "example_id": 270,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "990.0"
    ],
    "annotated_answers": [
      "990.0"
    ],
    "solution": "# Let A = \u2308log22\u2309 + \u2308log23\u2309 + \u2026 + \u2308log21000\u2309and B = \u230alog22\u230b + \u230alog23\u230b + \u2026 + \u230alog21000\u230b. Compute A\u2212B.\nA = 0\nB = 0\nfor i in range(1, 1001):\n    A += ceiling(log(i, 2))\n    B += floor(log(i, 2))\n\nprint(A - B)"
  },
  {
    "example_id": 271,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0",
      "1.0",
      "2.0",
      "1.0",
      "3.0",
      "1.0",
      "4.0",
      "1.0",
      "5.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "for a in range(1,10):\n    for b in range(1,10):\n        if a*b > 0:\n            if a*b**2 + b > 0:\n                print(f\"a = {a}, b = {b}\")"
  },
  {
    "example_id": 272,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "1995.0",
      "1.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "3980025.0"
    ],
    "solution": "x = symbols('x')\neq = Eq(sqrt(1995) * x**log(x, 1995), x**2)\nsol = solve(eq, x)\nprint(simplify(expand(sol[0])))"
  },
  {
    "example_id": 273,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "from sympy import Symbol\nx = Symbol('x')\ny = (27*x**2+9*x+3)/(27*x**3+9*x**2+3*x+1)\n\nprint(y.as_leading_term(x))"
  },
  {
    "example_id": 274,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "898.0"
    ],
    "solution": "x1, x2, x3, x4, xn = symbols('x_1 x_2 x_3 x_4 x_n')\n\n# Find the general formula\n# x_n = x_{n-1} - x_{n-2} + x_{n-3} - x_{n-4}\n\n# x_5 = 211 - 375 + 420 - 523\n# x_6 = 375 - 420 + 523 - 638\n# x_7 = 420 - 523 + 638 - 761\n# x_8 = 523 - 638 + 761 - 894\n# x_9 = 638 - 761 + 894 - 1027\n#...\n# x_{531} = 211 - 375 + 420 - 523\n# x_{753} = 375 - 420 + 523 - 638\n# x_{975} = 420 - 523 + 638 - 761\n\n# x_{531} + x_{753} + x_{975} = 211 + 375 + 420 + 523 + 638 + 761 + 894 + 1027\n#                              = 1511\n\n# x_{531} + x_{753} + x_{975} = 1511"
  },
  {
    "example_id": 275,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "17.0",
      "2.0",
      "17.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a, b = symbols('a b')\neq = (1/a) + (1/b) - (2/17)\nprint(solve(eq, [a, b]))"
  },
  {
    "example_id": 276,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "-1.0",
      "2.0",
      "2.0",
      "-1.0",
      "2.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = x**4 - 2*x**2 - 7\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 277,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "21.0",
      "20.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "a, b = symbols('a b')\nexpr = Eq(a*b, 21-20*I)\nexpr_simplified = simplify(expr)\nexpr_expanded = expand(expr_simplified)\nexpr_solved = solve(expr_expanded, a)\nprint(expr_solved)"
  },
  {
    "example_id": 278,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "327680.0"
    ],
    "annotated_answers": [
      "327680.0"
    ],
    "solution": "def an(n):\n    return 4*n**3 + 6*n**2 + 4*n + 1\n\nprint(sum(an(i) for i in range(8, 24)))"
  },
  {
    "example_id": 279,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "2.0",
      "2.0",
      "3.0",
      "2.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a = symbols('a')\neq = Eq(x**3 + a*x**2 + a*x + 1, 0)\nroots = solve(eq, x)\nfor root in roots:\n    if root.is_real:\n        continue\n    else:\n        print('The root is:', root)\n        break\nprint('The smallest value of a is:', simplify(a))"
  },
  {
    "example_id": 280,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "363.0"
    ],
    "solution": "# Declare variables\na, b = symbols('a b')\n\n# Define equations\neq1 = Eq(a**9, 27)\neq2 = Eq(b**9, 99)\neq3 = Eq(a**15, b**11)\n\n# Solve equations\nsol = solve([eq1, eq2, eq3], [a, b])\n\n# Print result\nprint(sol)"
  },
  {
    "example_id": 281,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\neq = x**100\nremainder = sympy.rem(eq, x**8 - x**6 + x**4 - x**2 + 1)\nprint(remainder)"
  },
  {
    "example_id": 282,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "17.0",
      "10.0",
      "209.0",
      "10.0",
      "209.0",
      "10.0",
      "17.0",
      "10.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\neq = (2*x**2 - 3*x)/(x**2 - x) + 5*x - 11\neq2 = (3*x**2 + 5*x + 2)/(x**2 - 1)\neq_simplified = eq.subs(x**2 - x, x**2 - x**2 + x**2)\neq_simplified = eq_simplified.subs(x**2 - x**2 + x**2, x**2 - x)\nsolution = solve(eq_simplified - eq2, x)\nprint(solution)"
  },
  {
    "example_id": 283,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "cos_x = 1\nexpression = cos_x**3 + cos_x**2\nprint(expression)"
  },
  {
    "example_id": 284,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "27.0",
      "2.0"
    ],
    "annotated_answers": [
      "270.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq = Eq(log(162, 12), log(x, 12) + 1)\neq = eq.replace(log(y, 12), log(z, 12) + 1)\neq = eq.replace(log(1250, 12), log(1250, 12))\nsol = solve(eq, x)\nprint(sol)"
  },
  {
    "example_id": 285,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x, y = symbols('x y')\neq = Eq(x**2 + y**2, 1)\nmax_val = (x + y)**2\nmax_val_expr = expand(max_val)\nsol = solve(max_val_expr, y)\nprint(sol)"
  },
  {
    "example_id": 286,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "1.0",
      "7.0",
      "2.0",
      "2.0",
      "1.0",
      "7.0",
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "# define variables\nz1, z2 = symbols('z1 z2')\n\n# define equations\neq1 = Eq(z2/z1, I)\neq2 = Eq(2*z1, 7*z2)\n\n# solve equations\nsol = solve([eq1, eq2], [z1, z2])\n\n# print solution\nprint(sol)\n\n# define expressions\nexpr1 = 2*z1 + 7*z2\nexpr2 = 2*z1 - 7*z2\n\n# simplify expressions\nexpr1_simplified = simplify(expr1)\nexpr2_simplified = simplify(expr2)\n\n# compute absolute value\nexpr1_abs = Abs(expr1_simplified)\nexpr2_abs = Abs(expr2_simplified)\n\n# print absolute value\nprint(expr1_abs)\nprint(expr2_abs)"
  },
  {
    "example_id": 287,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "2.0",
      "1.0",
      "4.0",
      "2.0",
      "4.0",
      "2.0",
      "1.0",
      "4.0",
      "2.0",
      "4.0",
      "2.0",
      "1.0",
      "2.0",
      "1.0",
      "1.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "from sympy import Symbol, Poly, factor\nx = Symbol('x')\nP = Poly(x**4 - x**2 + 1, x)\nP_x = Poly(x**4 - x**2, x)\nprint(P)\nprint(P_x)\nprint(P/P_x)\nprint(factor(P/P_x))"
  },
  {
    "example_id": 288,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "2.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "88.0"
    ],
    "solution": "x, y = symbols('x y')\nf = Function('f')\neq = Eq(f(x + y), f(x) + f(y) + 2*x*y)\nf1 = expand(eq)\nf2 = simplify(f1)\nf3 = f2.subs(x, 1)\nf4 = f3.subs(y, 1)\nf5 = f4.subs(f(x), 4)\nf6 = f5.subs(f(y), 4)\nf7 = f6.subs(x, 8)\nf8 = f7.subs(y, 8)\nf9 = f8.subs(f(x), 4)\nf10 = f9.subs(f(y), 4)\nprint(f10)"
  },
  {
    "example_id": 289,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "135.0",
      "2.0",
      "27.0",
      "29.0",
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "from sympy import Symbol, solve\nx = Symbol('x')\nexpression = x**3 + 3*x + 5\nprint(solve(expression, x))"
  },
  {
    "example_id": 290,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "28.0"
    ],
    "solution": "a, b = symbols('a b')\n\n# |a|^2 = a*a = a^2\n# |b|^2 = b*b = b^2\n# |ab| = |a| |b| = a*b\n\nab = a*b\n\n# |ab| = |a| |b| = a*b\n# |a|^2 = a*a = a^2\n# |b|^2 = b*b = b^2\n# |ab| = a^2 b^2 = (a*b)^2 = ab*ab\n\nab2 = ab**2\n\n# |ab| = a^2 b^2 = (a*b)^2 = ab*ab\n# |a|^2 = a*a = a^2\n# |b|^2 = b*b = b^2\n# |ab| = a^2 b^2 = (a*b)^2 = ab*ab\n# |ab| = ab*ab = a*b*a*b = a^2*b^2\n# |ab| = a^2*b^2\n\nprint(simplify(ab2 - (a**2)*(b**2)))"
  },
  {
    "example_id": 291,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "5.0",
      "1.0",
      "2.0",
      "5.0",
      "1.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "from sympy import diff, solve, Eq, Min, Max, symbols\nx = symbols('x')\nexpression = (x + 5)*(x + 2)/(x + 1)\nprint(expression)\nprint(Min(expression))"
  },
  {
    "example_id": 292,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "1.0",
      "1.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x, y = symbols('x y')\na, b, c = symbols('a b c', real = True)\neq1 = Eq(x*y + a*x + b*y + c*x*y, 3)\neq2 = Eq(x*y + a*x + b*y + c*x*y, 4)\neq3 = Eq(x*y + a*x + b*y + c*x*y, x)\nsol1 = solve([eq1, eq2], [a, b, c])\nsol2 = solve(eq3, x)\nsol3 = solve(eq3, y)\nprint(sol1)\nprint(sol2)\nprint(sol3)"
  },
  {
    "example_id": 293,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "2.0",
      "1.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "from sympy import Sum\nfrom sympy import symbols\n\nk = symbols('k')\nsum = Sum(k - 3, (k, 2, oo)) / (k*(k**2 - 1))\nprint(sum.doit())"
  },
  {
    "example_id": 294,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "3.0",
      "2.0",
      "2.0",
      "9.0",
      "23.0",
      "23.0",
      "4.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "x = symbols('x')\neq = x**23 + 23*x**17 - 18*x**16 - 24*x**15 + 108*x**14\npolynomial = x**4 - 3*x**2 - 2*x + 9\nsolution = eq.subs(x, polynomial)\nprint(solution)"
  },
  {
    "example_id": 295,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "6.0",
      "-3.0",
      "1.0",
      "2.0",
      "2.0",
      "2.0",
      "4.0",
      "3.0",
      "-9.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "x = symbols('x')\na_2, a_1 = symbols('a_2 a_1')\neq = 2*x**3 + a_2*x**2 + a_1*x - 4\nroots = solve(eq, x, rational=True)\nprint(roots)"
  },
  {
    "example_id": 296,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "2.0",
      "4.0",
      "2.0",
      "2.0",
      "2.0",
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq1 = Eq(x**2 + a*x + b, 0)\neq2 = Eq(x**2 - 2, 0)\nsol = solve(eq1, x)\nprint(sol)\nfor x in sol:\n    sol2 = solve(eq2, x)\n    print(sol2)\n    if (x in sol2):\n        print(\"Yes\")\n    else:\n        print(\"No\")"
  },
  {
    "example_id": 297,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "1.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "from sympy import fibonacci, Sum\nn = symbols('n', integer=True)\nfib_sum = Sum(fibonacci(n + 1)/(fibonacci(n)*fibonacci(n + 2)), (n, 1, oo))\nprint(fib_sum.doit())"
  },
  {
    "example_id": 298,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "1.0",
      "80.0",
      "2.0",
      "2.0",
      "308.0",
      "2.0",
      "3.0",
      "3.0",
      "648.0"
    ],
    "annotated_answers": [
      "440.0"
    ],
    "solution": "# create symbols\na, c = symbols('a c')\n# create the polynomial\nP = 2*x**3 - 2*a*x**2 + (a**2 - 81)*x - c\n\n# create the equation for the roots\neq1 = Eq(P.subs(x, 1), 0)\neq2 = Eq(P.subs(x, 2), 0)\neq3 = Eq(P.subs(x, 3), 0)\n\n# solve the equations\nsol1 = solve(eq1, a)\nsol2 = solve(eq2, a)\nsol3 = solve(eq3, a)\n\n# print the solutions\nprint('a =', sol1[0], 'or', sol2[0], 'or', sol3[0])\n\n# check if the solutions are correct\nif len(sol1) > 1:\n    print('a =', sol1[0], 'or', sol1[1])\nif len(sol2) > 1:\n    print('a =', sol2[0], 'or', sol2[1])\nif len(sol3) > 1:\n    print('a =', sol3[0], 'or', sol3[1])\n\n# find the sum of the possible values of c\nsum_c = 0\nfor sol in (sol1, sol2, sol3):\n    for s in sol:\n        sum_c += c.subs(a, s)\nprint('sum of the possible values of c =', sum_c)"
  },
  {
    "example_id": 299,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "44.0"
    ],
    "solution": "r, s, t = symbols('r s t')\neq = r**3 - 20*r**2 + 18*r - 7\nsum = s**2*t**2 + s**2*r**2 + t**2*r**2\nprint(sum)"
  },
  {
    "example_id": 300,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "22.0"
    ],
    "annotated_answers": [
      "22.0"
    ],
    "solution": "x = symbols('x')\na = 5 + sqrt(3)\nb = 5 - sqrt(3)\nprint(simplify(a*b))"
  },
  {
    "example_id": 301,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "3.0",
      "4.0",
      "5.0",
      "6.0",
      "7.0",
      "19.0"
    ],
    "annotated_answers": [
      "0.61"
    ],
    "solution": "A_1, A_2, A_3, A_4, A_5, A_6, A_7 = symbols('A_1 A_2 A_3 A_4 A_5 A_6 A_7')\na_1, a_2, a_3, a_4, a_5, a_6, a_7 = 2.56, 2.61, 2.65, 2.71, 2.79, 2.82, 2.86\n\nA = A_1 + A_2 + A_3 + A_4 + A_5 + A_6 + A_7\na = a_1 + a_2 + a_3 + a_4 + a_5 + a_6 + a_7\n\nM = Max(Abs(A - a))\n\nprint(M)"
  },
  {
    "example_id": 302,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0",
      "-120.0",
      "2.0",
      "135.0",
      "45.0",
      "4.0",
      "-120.0",
      "2.0",
      "135.0",
      "45.0"
    ],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "from sympy import symbols, solve, integrate\n\nx, y = symbols('x y')\n\ndef ellipse(x, y):\n    return x**2/16 + y**2/9 - 1\n\ndef PF1(x, y):\n    return x**2/2 + y**2/2 - 1\n\ndef PF2(x, y):\n    return x**2/2 + y**2/2 + 1\n\nd = solve(PF1(x,y) + PF2(x,y) - ellipse(x,y), x)\nprint(d)"
  },
  {
    "example_id": 303,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "1023.0"
    ],
    "solution": "a1, a2, a3, a4, a5 = symbols('a1 a2 a3 a4 a5')\neq1 = Eq(a5 - a4, 576)\neq2 = Eq(a2 - a1, 9)\na1_plus_a2_plus_a3_plus_a4_plus_a5 = a1 + a2 + a3 + a4 + a5\nsolve([eq1, eq2], [a1, a2, a3, a4, a5])"
  },
  {
    "example_id": 304,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "30.0"
    ],
    "solution": "# Define the symbols\nx = symbols('x')\n\n\n# Define the functions\nf = Abs(x - 1) + Abs(x - 3)\ng = 8\n\n\n# Find the area\narea = integrate(f, (x, 0, g))\nprint(area)"
  },
  {
    "example_id": 305,
    "selected_mode": "import",
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-26.0"
    ],
    "solution": "# Define symbols and equations\nr1, r2, r3, z, a, b, c = symbols('r1 r2 r3 z a b c')\nf = x**3 - 3*x**2 - 4*x + 4\ng = x**3 + a*x**2 + b*x + c\n\n# Find the coefficients of g(x)\ns1 = r1 + r2*z + r3*z**2\ns2 = r1*z + r2*z**2 + r3\ns3 = r1*z**2 + r2 + r3*z\n\n# Find the real part of the sum of the coefficients of g(x)\nreal_part_sum = simplify(expand(g)).real\nprint(real_part_sum)"
  },
  {
    "example_id": 306,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "3.0",
      "32.0",
      "1.0",
      "3.0",
      "2.0",
      "3.0",
      "3.0",
      "32.0",
      "1.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = x - y - 4\neq2 = x**3 - y**3 - 28\neq3 = eq1.subs(x, eq2)\nx_value = solve(eq3, x)\ny_value = solve(eq1, y)\nprint(x_value[0]*y_value[0])"
  },
  {
    "example_id": 307,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "3.0",
      "2.0",
      "27.0"
    ],
    "annotated_answers": [
      "-9.0"
    ],
    "solution": "x, t = symbols('x t')\neq = x**3 - 3*x**2 + t*x + 27\nf = sympy.factor(eq)\nprint(f)"
  },
  {
    "example_id": 308,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "0.0",
      "0.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "from math import sqrt\n\ndef quartic(x):\n    return x**4 - 80*x - 36\n\ndef solve_quartic(a):\n    D = (27*a*a - 9*a**3)**0.5\n    u = (3*a - D) / 9\n    v = (3*a - D) / 3\n    u1 = u**0.5\n    u2 = u1**2\n    v1 = v**0.5\n    v2 = v1**2\n    r1 = u1 - u2\n    r2 = v1 - v2\n    r3 = v1 + v2\n    return r1, r2, r3\n\na = 2\nr1, r2, r3 = solve_quartic(a)\nprint(r1, r2, r3)"
  },
  {
    "example_id": 309,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "# define symbols\nx = symbols('x')\n\n\n# define expressions\nf = (x**2 + 3*x)/(x**2 + 4*x + 3)\n\n\n# find number of horizontal asymptotes\nc = len(f.as_real_imag()[0].atoms(Pow))\n\n\n# find number of vertical asymptotes\nb = len(f.atoms(Pow)) - len(f.atoms(Symbol)) - c\n\n\n# find number of holes\na = len(f.atoms(Mul)) - 1\n\n\n# find number of oblique asymptotes\nd = 0\n\n\n# find sum of holes and asymptotes\nans = a + b + c + d\n\n\n# print answer\nprint(ans)"
  },
  {
    "example_id": 310,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.677050983124842"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "import math\n\ndef find_lambda(x, y, z):\n    lambda_ = (math.sqrt(5) / 2) / (x * y + y * z)\n    return lambda_\n\nx = y = z = 1 / math.sqrt(3)\n\nprint(find_lambda(x, y, z))"
  },
  {
    "example_id": 311,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a, b = symbols('a b')\neq = a + 1/(b*(a - b))\nsolve(eq, a)"
  },
  {
    "example_id": 312,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "1810.0"
    ],
    "annotated_answers": [
      "729.0"
    ],
    "solution": "L, W, H = symbols('L W H')\n\n# Find the volume of a slice\nvolume_of_slice = (1)**3\n\n# Find the volume of the block of cheese\nvolume_of_cheese = L*W*H\n\n# Find the volume of the cheese after ten slices have been cut off\nvolume_of_remaining_cheese = volume_of_cheese - 10*volume_of_slice\n\n# Find the maximum possible volume of the remaining block of cheese\nmaximum_volume_of_remaining_cheese = (L*W*H) - 10*1\n\n# Find the volume of the remaining block of cheese after ten slices have been cut off\nvolume_of_remaining_cheese = volume_of_remaining_cheese.subs([(L, 10), (W, 13), (H, 14)])\n\nprint('The maximum possible volume of the remaining block of cheese after ten slices have been cut off is:', Abs(volume_of_remaining_cheese))"
  },
  {
    "example_id": 313,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "x, y, z = symbols('x y z')\nexpr = 3*x + 4*y + 12*z\nexpr_value = expr.subs([(x, 1), (y, 0), (z, 0)])\nprint(expr_value)"
  },
  {
    "example_id": 314,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "27.0"
    ],
    "annotated_answers": [
      "134.0"
    ],
    "solution": "# This problem is equivalent to finding the number of ways to distribute 26\n# indistinguishable balls into 27 indistinguishable boxes.\nfrom sympy import factorial\nn = 27\nk = 26\nprint(factorial(n)/(factorial(k)*factorial(n-k)))"
  },
  {
    "example_id": 315,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "224.0"
    ],
    "solution": "# define variables\na1, a2, n = symbols('a_1 a_2 n')\n\n\n# define the recurrence relation\na = a1*a2\nfor i in range(2, n + 1):\n    a = a*(a2**2 + 2007)/(a1*a2)\n\n\n# find the largest integer less than or equal to a_n^2 + a_{n-1}^2/a_n*a_{n-1}\nlargest_integer = simplify(a.subs(n, 2007))\nprint(largest_integer)"
  },
  {
    "example_id": 316,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "75.0"
    ],
    "solution": "z = symbols('z')\na = 9*I - 12\nb = 3 + 4*I\nc = Abs(a) * Abs(b)\nsolve(Eq(c, simplify(expand(c))), z)"
  },
  {
    "example_id": 317,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "-0.162162162162162",
      "0.162162162162162",
      "0.986764122352902",
      "2.0",
      "0.27906976744186",
      "2.0",
      "-0.162162162162162",
      "0.162162162162162",
      "0.986764122352902",
      "2.0",
      "0.27906976744186",
      "2.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "a, b, c = symbols('a b c')\n\neq = (2*a + 1/3*b)**2 + (2*b + 1/3*c)**2 + (2*c + 1/3*a)**2\n\nsol = solve(eq, [a, b, c])\n\nprint(sol)"
  },
  {
    "example_id": 318,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "997.0"
    ],
    "solution": "# Point on circle\nx0, y0 = 1994, 1994\n# Point on tangent\nx1, y1 = 2*1994, 2*1994\n# Equation of tangent line\ntangent = (x1 - x0) / (y1 - y0)\n# Distance between point and tangent\nd = math.sqrt(abs((x1 - x0)**2 + (y1 - y0)**2))\n# Slope of tangent line\nm = (y1 - y0) / (x1 - x0)\n# Slope of circle\nc = 1 / (1994**2)\n# y-intercept\nb = -1994\n# Solving for y\ny2 = y1 + tangent * d\n# Solving for x\nx2 = (y2 - b) / m\n# Substituting values\nsolve(x2 + x1 - 2*1994, x1)"
  },
  {
    "example_id": 319,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "# create symbols\nc = symbols('c')\n\n\n# define inequality\nineq = (x + c)/(x**2 + ax + b) <= 0\n\n\n# solve for a and b\nsol = solve(ineq, [a, b])\n\n\n# simplify the solution\nsol = simplify(sol)\n\n\n# expand the solution\nsol = expand(sol)\n\n\n# print the solution\nprint(sol)"
  },
  {
    "example_id": 320,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "1.0",
      "-2.0",
      "-1.0",
      "0.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "def f(x):\n    return (2*x**7 - 5*x**4 + 3*x**3 - x + 5)\n\ndef g(x):\n    return (2*x**7 - 5*x**4 + 3*x**3 - x + 5)/(x**2 - 4*x + 5)\n\ndef h(x):\n    return (2*x**7 - 5*x**4 + 3*x**3 - x + 5)/(x**3 - 4*x**2 + 5*x + 3)\n\ndef k(x):\n    return (2*x**7 - 5*x**4 + 3*x**3 - x + 5)/(x**4 - 4*x**3 + 5*x**2 - 4*x + 3)\n\n\nprint(\"The smallest possible degree of q(x) is 4\")\nprint(\"f(x) has a horizontal asymptote at x=1\")\nprint(\"g(x) has a horizontal asymptote at x=-2\")\nprint(\"h(x) has a horizontal asymptote at x=-1\")\nprint(\"k(x) has a horizontal asymptote at x=0\")"
  },
  {
    "example_id": 321,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "5.0",
      "2.0"
    ],
    "annotated_answers": [
      "50.0"
    ],
    "solution": "a, b = symbols('a b')\neq = Eq(a*b**2, 5)\nab_min = simplify(expand(eq))\nab_min_value = solve(ab_min, a)\nprint(ab_min_value[0])"
  },
  {
    "example_id": 322,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "z = symbols('z')\nimz = I*z\nimz5 = imz**5\nsimplify(imz5)\nsimplify(imz)\nimz5_over_imz5 = imz5/imz**5\nsolve(imz5_over_imz5 - 1, z)"
  },
  {
    "example_id": 323,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "-21.0",
      "18.0",
      "-3.0",
      "2.0",
      "1511.0",
      "2.0",
      "-3.0",
      "2.0",
      "1511.0",
      "2.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "x = symbols('x')\neq = (x*(x + 1)*(x + 2)*(x + 3) + 1) - 379**2\nsol = solve(eq, x)\nprint(sol)"
  },
  {
    "example_id": 324,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "3.0",
      "5.0",
      "6.0",
      "2.0",
      "6.0",
      "3.0",
      "5.0",
      "7.0",
      "2.0",
      "5.0",
      "3.0",
      "6.0",
      "7.0",
      "2.0",
      "3.0",
      "5.0",
      "6.0",
      "7.0",
      "2.0"
    ],
    "annotated_answers": [
      "84.0"
    ],
    "solution": "from sympy import sqrt\n\nexpr = (sqrt(3) + sqrt(5) + sqrt(6) + sqrt(7))**2 + (sqrt(3) - sqrt(5) + sqrt(6) + sqrt(7))**2 + (sqrt(3) + sqrt(5) - sqrt(6) + sqrt(7))**2 + (sqrt(3) + sqrt(5) + sqrt(6) - sqrt(7))**2\nprint(expr)"
  },
  {
    "example_id": 325,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x = symbols('x')\nf = (x - 1)**7 + 3*(x - 1)**6 + (x - 1)**5 + 1\ndf = (x - 1)**5\neq = Eq(f, df)\nsolve(eq, x)"
  },
  {
    "example_id": 326,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "22.0"
    ],
    "solution": "x, y, z = symbols('x y z')\n\neq1 = Eq(x*y, 24)\neq2 = Eq(x*z, 48)\neq3 = Eq(y*z, 72)\n\nsolve([eq1, eq2, eq3], [x, y, z])\n\n# x + y + z = 11\nprint(simplify(x + y + z))"
  },
  {
    "example_id": 327,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "-338016.0"
    ],
    "solution": "x = symbols('x')\nf = x**2016 + x**2015 + x**2014 + x**2013 + x**2012 + x**2011 + x**2010 + x**2009 + x**2008 + x**2007 + x**2006 + x**2005 + x**2004 + x**2003 + x**2002 + x**2001 + x**2000 + x**1999 + x**1998 + x**1997 + x**1996 + x**1995 + x**1994 + x**1993 + x**1992 + x**1991 + x**1990 + x**1989 + x**1988 + x**1987 + x**1986 + x**1985 + x**1984 + x**1983 + x**1982 + x**1981 + x**1980 + x**1979 + x**1978 + x**1977 + x**1976 + x**1975 + x**1974 + x**1973 + x**1972 + x**1971 + x**1970 + x**1969 + x**1968 + x**1967 + x**1966 + x**1965 + x**1964 + x**1963 + x**1962 + x**1961 + x**1960 + x**1959 + x**1958 + x**1957 + x**1956 + x**1955 + x**1954 + x**1953 + x**1952 + x**1951 + x**1950 + x**1949 + x**1948 + x**1947 + x**1946 + x**1"
  },
  {
    "example_id": 328,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "k, x, y = symbols('k x y')\neq1 = k*x**2 + y**2 - 1\neq2 = x**2 + y**2 - 1\nsolve_for_k = solve(eq1, k)\nk_value = solve_for_k[0]\nprint(k_value)"
  },
  {
    "example_id": 329,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "f = Function('f')\nm, n = symbols('m n')\neq = Eq(f(m*f(n)), n*f(m))\nsimplify(eq)\nexpand(eq)\nsolve(eq, f(2007))"
  },
  {
    "example_id": 330,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "# define variables\nx = symbols('x')\n\n\n# define equations\neq1 = log(2, (2*x + 8)/(x + 2)) + log(2, (x + 2)/(x - 5))\neq2 = 3\n\n\n# solve equations\nsol = solve(Eq(eq1, eq2), x)\nprint(sol)"
  },
  {
    "example_id": 331,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "16.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "print(abs((1-1j)**8))"
  },
  {
    "example_id": 332,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "a = symbols('a')\neq = (a**3 - 1**3)/(a - 1)\nprint(solve(eq - 0, a))"
  },
  {
    "example_id": 333,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "499994.0"
    ],
    "annotated_answers": [
      "996506.0"
    ],
    "solution": "# Define a function to find the value of n given a value of k\ndef find_n(k):\n    n = 0\n    for i in range(4):\n        n = n + 1\n    while True:\n        n = n + 1\n        if (n + 3) == k:\n            return n\n\n# Define a function to find the value of k given a value of n\ndef find_k(n):\n    k = 0\n    for i in range(4):\n        k = k + 1\n    while True:\n        k = k + 1\n        if (k + 3) == n:\n            return k\n\n# Find the value of n given the value of k\nn = find_n(500000)\n\n# Find the value of k given the value of n\nk = find_k(n)\n\n# Print the value of k\nprint(k)"
  },
  {
    "example_id": 334,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "6.0",
      "1.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "from sympy import simplify\nfrom sympy.abc import x\nexpression = simplify((x**9 - x**6 + x**3 - 1)/(x**2 + x + 1))\nprint(expression)"
  },
  {
    "example_id": 335,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.596433149783888"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "import math\n\ndef parab(x):\n    return 9 - x**2\n\nt = 0.8\nm = -2*t\n\nT = (t, parab(t))\nX = (T[0] + 1, T[1] + m)\nY = (T[0] + 1, T[1] + m)\n\narea = abs(m/2) * math.sqrt(X[0]**2 + X[1]**2)\n\nprint(area)"
  },
  {
    "example_id": 336,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "15.0",
      "15.0",
      "15.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "import math\n\n# radius of circle 1\nr1 = 6\n# radius of circle 2\nr2 = 9\n\n# distance between centers of circles\nd = 15\n\n# distance between the centers of the circles is equal to the sum of their radii\nprint(d)\n\n# length of the shortest line segment that is tangent to both circles is equal to the sum of their radii\nprint(r1 + r2)\n\n# length of the shortest line segment that is tangent to both circles is equal to the sum of their radii\nprint(r1 + r2)"
  },
  {
    "example_id": 337,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "9.0",
      "2.0",
      "4.0",
      "2.0",
      "40.0",
      "6.0",
      "3.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "# Solve for x and y\nx, y = symbols('x y')\neq = 9*x**2 + 4*y**2 - 54*x + 40*y + 145\n\n# Find the value of h, k, a, b\nh, k, a, b = symbols('h k a b')\neq2 = (x-h)**2/a**2 + (y-k)**2/b**2 - 1\nsol = solve([eq, eq2], [x, y, h, k, a, b])\n\n# Print the result\nprint(sol[0][3] + sol[0][4] + sol[0][0] + sol[0][1])"
  },
  {
    "example_id": 338,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "# Define the sequence\nn = symbols('n')\na_n = symbols('a_n', real=True)\n\n\n# Define the recurrence relation\nR = Eq(a_n, a_n - 2*a_n + a_n + a_n - 2*a_n + a_n)\n\n\n# Solve the recurrence relation\nsolve_R = solve(R, a_n)\n\n\n# Print the first two terms\nprint(solve_R[0])\nprint(solve_R[1])\n\n\n# Print the sum of the first 100 terms\nprint(sum(solve_R[:100]))"
  },
  {
    "example_id": 339,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "0.0",
      "1.0",
      "0.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "z1 = 1 + 0j\nz2 = 1 - 0j\n\nexpression1 = z1*z2\nexpression2 = (z1/z2)\n\nif expression1.imag == 0 and expression2.real == 1:\n    print(\"One pair:\", z1, z2)"
  },
  {
    "example_id": 340,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "64.0",
      "1.0",
      "256.0",
      "256.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "print(log(log(log(256, 64), 256), 256))"
  },
  {
    "example_id": 341,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "-7.0",
      "2.0",
      "3.0",
      "2.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "1.0",
      "2.0",
      "3.0",
      "2.0",
      "7.0",
      "2.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "# Define the equation\neq = x**2 + 5*x + 7\n\n# Solve the equation\nr = solve(eq, x)\n\n# Simplify the expression\nexpr = simplify(r[0] - 1) * simplify(r[0] + 2) * simplify(r[0] + 6) * simplify(r[0] + 3)\n\n# Print the answer\nprint(expr)"
  },
  {
    "example_id": 342,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0",
      "2.0",
      "1.0",
      "2.0",
      "1.0",
      "2.0",
      "1.0",
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "from sympy import *\nk = 12\nx = Symbol('x')\np1 = x**12 - 1\np2 = x**6 + x**5 + x**4 + x**3 + x**2 + x + 1\np3 = x**6 - x**5 - x**4 - x**3 - x**2 - x - 1\np4 = x**6 + x**5 + x**4 + x**3 + x**2 + x + 1\np5 = x**6 - x**5 - x**4 - x**3 - x**2 - x - 1\np6 = x**6 + x**5 - x**4 - x**3 - x**2 - x - 1\np7 = x**6 - x**5 + x**4 - x**3 - x**2 - x - 1\np8 = x**6 + x**5 - x**4 + x**3 - x**2 - x - 1\np9 = x**6 - x**5 + x**4 + x**3 - x**2 - x - 1\np10 = x**6 + x**5 - x**4 + x**3 + x**2 - x - 1\np11 = x**6 - x**5 + x**4 + x**3 + x**2 + x - 1\np12 = x**6 + x**5 - x**4 + x**3 + x**2 + x + 1\n\nprint(p1.factor())\nprint(p2.factor())\nprint(p3.factor())\nprint(p4.factor())\nprint(p5.factor())\nprint(p6.factor())\nprint(p7.factor())\nprint(p8.factor())\nprint(p9.factor())\nprint(p10.factor())\nprint(p11.factor())\nprint(p12.factor())"
  },
  {
    "example_id": 343,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "a = 2\nb = 3\nh = 1\nk = 4\nexpression = a + k\nprint(expression)"
  },
  {
    "example_id": 344,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "4.0",
      "2.0",
      "5.0",
      "2.0",
      "4.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "from sympy import *\nx, y, z = symbols('x y z')\nexpression = 2*x**2 + 5*y**2 + 2*z**2 + 4*x*y - 4*y*z - 2*z - 2*x\nprint(expression)"
  },
  {
    "example_id": 345,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "13.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "z = 5-12j\nprint(abs(z))"
  },
  {
    "example_id": 346,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "203.0"
    ],
    "solution": "x = symbols('x')\np = x**100 + x**99 + x**98 + x**97 + x**96 + x**95 + x**94 + x**93 + x**92 + x**91 + x**90 + x**89 + x**88 + x**87 + x**86 + x**85 + x**84 + x**83 + x**82 + x**81 + x**80 + x**79 + x**78 + x**77 + x**76 + x**75 + x**74 + x**73 + x**72 + x**71 + x**70 + x**69 + x**68 + x**67 + x**66 + x**65 + x**64 + x**63 + x**62 + x**61 + x**60 + x**59 + x**58 + x**57 + x**56 + x**55 + x**54 + x**53 + x**52 + x**51 + x**50 + x**49 + x**48 + x**47 + x**46 + x**45 + x**44 + x**43 + x**42 + x**41 + x**40 + x**39 + x**38 + x**37 + x**36 + x**35 + x**34 + x**33 + x**32 + x**31 + x**30 + x**29 + x**28 + x**27 + x**26 + x**25 + x**24 + x**23 + x**22 + x**21 + x**20 + x**19 + x**18 + x**17 + x**16 + x**15 + x**14 + x**13 + x**12 + x**11 + x**10 + x**9 + x**8 + x**7 + x**6 + x**5 + x**4 + x**3 + x**2 + x\n\n\neq = Eq(p"
  },
  {
    "example_id": 347,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "-10.0"
    ],
    "solution": "# P(x) = a(x^2 + 2x + 1)\n# P(P(x)) + P(x) = 6x\n# a(x^4 + 4x^3 + 4x^2 + 4x + 1) + a(x^2 + 2x + 1) = 6x\n# a(x^4 + 4x^3 + 4x^2 + 4x + 1) = 6x - a(x^2 + 2x + 1)\n# a(x^4 + 4x^3 + 4x^2 + 4x + 1) = 6x - a(x^2 + 2x + 1)\n# a(x^4 + 4x^3 + 4x^2 + 4x + 1) = 6x - a(x^2 + 2x + 1)\n# a(x^4 + 4x^3 + 4x^2 + 4x + 1) = 6x - a(x^2 + 2x + 1)\n# a(x^4 + 4x^3 + 4x^2 + 4x + 1) = 6x - a(x^2 + 2x + 1)\n# a(x^4 + 4x^3 + 4x^2 + 4x + 1) = 6x - a(x^2 + 2x + 1)\n# a(x^4 + 4x^3 + 4x^2 + 4x + 1) = 6x - a(x^2 + 2x + 1)\n# a(x^4 + 4x^3 + 4x^2 + 4x + 1) = 6x - a(x^2 + 2x + 1)\n# a(x^4 + 4x^3 + 4x^2 + 4x + 1) = 6x - a(x^2 + 2x + 1)\n# a(x^4 + 4x^3 + 4x^2 + 4x"
  },
  {
    "example_id": 348,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "-46.0"
    ],
    "solution": "# Let p be an integer\np = symbols('p')\n\n# The roots of f(x) = x^4 - 6x^3 + 26x^2 + px + 65\na1, b1, a2, b2, a3, b3, a4, b4 = symbols('a1 b1 a2 b2 a3 b3 a4 b4')\n\n# The roots are a1 + ib1, a2 + ib2, a3 + ib3, a4 + ib4\n\n# f(x) = x^4 - 6x^3 + 26x^2 + px + 65\nf = x**4 - 6*x**3 + 26*x**2 + p*x + 65\n\n# The roots are not real\n# This means that a1, a2, a3, a4 are not all real\n\n# a1 + ib1 = 0\n# a2 + ib2 = 0\n# a3 + ib3 = 0\n# a4 + ib4 = 0\n\n# Simplify the above equations\n\n# a1 + ib1 = 0\n# a1 - ib1 = 0\n# a1 = 0\n# b1 = 0\n\n# a2 + ib2 = 0\n# a2 - ib2 = 0\n# a2 = 0\n# b2 = 0\n\n# a3 + ib3 = 0\n# a3 - ib3 = 0\n# a3 = 0\n# b3 = 0\n\n# a4 + ib4 = 0\n# a4 - ib4 = 0\n# a4 = 0\n# b4 = 0\n\n# The roots are not real\n# This means that a1, a2, a3, a4 are not all real\n\n# The roots are a1 + ib1, a2 + ib2, a3 + ib3, a4 + ib4\n# The roots are not real\n# This means that a1, a2, a3, a4 are not all real\n\n# The roots are a"
  },
  {
    "example_id": 349,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "973.0"
    ],
    "solution": "n = symbols('n')\na_n = symbols('a_n')\n\n# first three terms are in geometric progression\na_1 = 1\na_2 = a_1 * 2\na_3 = a_2 * 3\n\n# second, third, and fourth terms are in arithmetic progression\na_4 = a_1 + 2\na_5 = a_4 + 1\na_6 = a_5 + 1\n\n# for all n\\ge1, the terms a_{2n-1}, a_{2n}, and a_{2n+1} are in geometric progression\na_7 = a_3 * 2\na_8 = a_7 * 2\na_9 = a_8 * 3\n\n# for all n\\ge1, the terms a_{2n}, a_{2n+1}, and a_{2n+2} are in arithmetic progression\na_10 = a_4 + 2\na_11 = a_10 + 1\na_12 = a_11 + 1\n\n# a_9+a_{10}=646\na_9 + a_10 - 646\n\n# a_n is the greatest term in this sequence that is less than 1000\na_n = symbols('a_n')\na_n < 1000\n\n# find n+a_n\nn_plus_a_n = n + a_n\nprint(n_plus_a_n)"
  },
  {
    "example_id": 350,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = Eq(f(x) + f(y), 0)\neq2 = Eq(f(x) - f(y), 0)\nsol = solve([eq1, eq2], [x, y])\nprint(sol)\n\n\nA = 0\nfor point in sol:\n    x, y = point\n    A += simplify(expand(abs(f(x) - f(y))))\nprint(A)"
  },
  {
    "example_id": 351,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-1.0",
      "-6.0",
      "6.0",
      "6.0",
      "2.0",
      "16.0",
      "2.0",
      "1.0",
      "3.0",
      "3.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "K, L, M = symbols('K L M')\na, b, c, d = symbols('a b c d')\neq = x**4 - K*x**3 + K*x**2 + L*x + M\nroots = solve(eq, x)\nsum_of_squares = 0\nfor r in roots:\n    sum_of_squares += simplify(r**2)\nprint(sum_of_squares)"
  },
  {
    "example_id": 352,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "4036.0"
    ],
    "solution": "n = 1\nwhile sum([k**2 for k in range(1, n+1)]) < 1/2018:\n    n += 1\nprint(n)"
  },
  {
    "example_id": 353,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "14.0",
      "1.0",
      "15.0",
      "14.0",
      "1.0",
      "13.0",
      "14.0",
      "1.0",
      "11.0",
      "14.0"
    ],
    "annotated_answers": [
      "-588.0"
    ],
    "solution": "from sympy import factorial\nfrom sympy.abc import x\n\nn = 14\n(1-x)*(1+2*x)*(1-3*x)*(1+4*x)*(1-5*x)*(1+6*x)*(1-7*x)*(1+8*x)*(1-9*x)*(1+10*x)*(1-11*x)*(1+12*x)*(1-13*x)*(1+14*x)*(1-15*x)\n\nfactors = []\nfor i in range(1, n+1):\n    factors.append(x**i)\n\ncoefficient = 0\nfor i in range(len(factors)):\n    coefficient += factors[i]*(1-x)\n    coefficient += factors[i]*(1+2*x)\n    coefficient += factors[i]*(1-3*x)\n    coefficient += factors[i]*(1+4*x)\n    coefficient += factors[i]*(1-5*x)\n    coefficient += factors[i]*(1+6*x)\n    coefficient += factors[i]*(1-7*x)\n    coefficient += factors[i]*(1+8*x)\n    coefficient += factors[i]*(1-9*x)\n    coefficient += factors[i]*(1+10*x)\n    coefficient += factors[i]*(1-11*x)\n    coefficient += factors[i]*(1+12*x)\n    coefficient += factors[i]*(1-13*x)\n    coefficient += factors[i]*(1+14*x)\n    coefficient += factors[i]*(1-15*x)\n\nprint(coefficient)"
  },
  {
    "example_id": 354,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "19941989.0"
    ],
    "annotated_answers": [
      "19941989.0"
    ],
    "solution": "n = 19941994\nprint(floor(sqrt(n**2 - 10*n + 29)))"
  },
  {
    "example_id": 355,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.5",
      "0.5",
      "2.0",
      "0.5",
      "0.5",
      "2.0",
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x, y = symbols('x y')\neq = x**2 + 2*y**2 + 0.5 - x*(2*y + 1)\nprint(solve(eq, (x, y)))"
  },
  {
    "example_id": 356,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "# define p(x)\np = symbols('p')\n\n\n# define x\nx = symbols('x')\n\n\n# define the equation\neq = Eq(p(55), 8) & Eq(p(83), 8) & Eq(p(204), 8) & Eq(p(232), 8) & Eq(p(103), 13)\n\n\n# solve for p(x)\np_sol = solve(eq, p(x))\n\n\n# define p(1) - p(2) + p(3) - p(4) +... + p(285) - p(286)\nsum = 0\n\n\n# define the range\nfor i in range(1, 286):\n    sum += simplify(p_sol[0] - p_sol[1] + p_sol[2] - p_sol[3] + p_sol[4] - p_sol[5])\n\n\n# print the sum\nprint(sum)"
  },
  {
    "example_id": 357,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "-305.0"
    ],
    "annotated_answers": [
      "-150.0"
    ],
    "solution": "n = symbols('n')\na_n = (-1)**(n+1)*(3*n + 2)\nsum = a_n.subs(n, 1) + a_n.subs(n, 2) + a_n.subs(n, 100)\nprint(sum)"
  },
  {
    "example_id": 358,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "def get_z(c):\n    return complex(c, 0)\n\n\ndef get_expression(z):\n    return z**3 + z**2 - abs(z)**2 + 2*z\n\n\ndef get_all_z(expression):\n    return [\n        get_z(c)\n        for c in range(-10, 10)\n        if expression(get_z(c)) == 0\n    ]\n\n\nprint(get_all_z(get_expression))"
  },
  {
    "example_id": 359,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "# define f(m,n)\ndef f(m,n):\n    if m == 1 and n == 1:\n        return 1\n    elif m > 1 and n > 1:\n        return f(m-1,n) + f(m,n-1) + f(m-1,n-1)\n    else:\n        return 0\n\n\n# define S(k)\ndef S(k):\n    return sum(f(a,b) for a in range(1,k+1) for b in range(1,k+1) if a+b == k)\n\n\n# define p,q\np, q = symbols('p q')\n\n\n# define k\nk = symbols('k')\n\n\n# define equation\neq = Eq(S(k+2), p*S(k+1) + q*S(k))\n\n\n# solve equation\nsol = solve(eq, p, q)\nprint(sol)"
  },
  {
    "example_id": 360,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "2.0",
      "0.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "# Find minimum value of (a^2 + b^2)/(a - b)\n# Find minimum value of (a^2 + b^2)/(a - b)\na, b = symbols('a b')\neq = (a**2 + b**2)/(a - b)\n# Find the minimum value of eq\nmin_value = Eq(eq, 0)\nprint(simplify(min_value))"
  },
  {
    "example_id": 361,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "2.0",
      "-48.0",
      "2.0",
      "40.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "w, x, y, z = symbols('w x y z')\neq1 = Eq(x**2 + (2**2-1)*y**2 + (2**2-3**2)*z**2 + (2**2-7**2)*w**2, 1)\neq2 = Eq(x**2 + (4**2-1)*y**2 + (4**2-3**2)*z**2 + (4**2-7**2)*w**2, 1)\neq3 = Eq(x**2 + (6**2-1)*y**2 + (6**2-3**2)*z**2 + (6**2-7**2)*w**2, 1)\neq4 = Eq(x**2 + (8**2-1)*y**2 + (8**2-3**2)*z**2 + (8**2-7**2)*w**2, 1)\n\nsol = solve([eq1, eq2, eq3, eq4], [w, x, y, z])\nprint(sol)"
  },
  {
    "example_id": 362,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "4.0",
      "2.0",
      "6.0",
      "9.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "x, a, b, c, d, e = symbols('x a b c d e')\neq = 8*x**3 - 27\nfactors = eq.factor()\nprint(factors)"
  },
  {
    "example_id": 363,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.540706226267073",
      "48"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "a = 3 * 123456789 * 123456789**2 + 9 * 123456789 * 123456789 + 7\nb = (123456789**2 + 3 * 123456789 + 2)**3\nprint(b - a)"
  },
  {
    "example_id": 364,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "# real solutions to |x| \\* |x-5| = 3\nsolutions = [x for x in range(1, 6) if abs(x) * abs(x - 5) == 3]\nprint(sum(solutions))"
  },
  {
    "example_id": 365,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "5.0",
      "5.0",
      "14.0",
      "5.0",
      "10.0",
      "5.0",
      "5.0",
      "5.0",
      "14.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "from sympy import Symbol, solve\nx = Symbol('x')\nsol = solve(5*x**4 - 10*x**3 + 10*x**2 - 5*x - 11)\nprint(sol)"
  },
  {
    "example_id": 366,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "# Define sequence\na_n = 14\n\n\n# Define recurrence relation\na_n = 24 - 5*a_n-1\n\n\n# Find p, q, and r\np, q, r = symbols('p q r')\na_n = p*q**n + r\na_n = 14\np + q + r"
  },
  {
    "example_id": 367,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0",
      "9.0",
      "9.0",
      "9.0"
    ],
    "annotated_answers": [
      "64.0"
    ],
    "solution": "# Solution 1\nn = 1\nwhile (n * (n + 1) // 2 + n * (n + 1) // 3 + n * (n + 1) // 4) < 96:\n    n += 1\nprint(n)\n\n# Solution 2\nn = 1\nwhile (n * (n + 1) // 2 + n * (n + 1) // 3 + n * (n + 1) // 4) <= 96:\n    n += 1\nprint(n)\n\n# Solution 3\nn = 1\nwhile (n * (n + 1) // 2 + n * (n + 1) // 3 + n * (n + 1) // 4) < 96:\n    n += 1\nprint(n)\n\n# Solution 4\nn = 1\nwhile (n * (n + 1) // 2 + n * (n + 1) // 3 + n * (n + 1) // 4) <= 96:\n    n += 1\nprint(n)"
  },
  {
    "example_id": 368,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "406.0"
    ],
    "solution": "# define P(x) as a quadratic polynomial\nP = symbols('P(x)')\n\n\n# find P(11)\nP_11 = P(11)\n\n\n# find P(x)\nP_x = solve(Eq(P_11, 181), P)\n\n\n# simplify P(x)\nP_x_simplified = simplify(P_x)\n\n\n# find P(16)\nP_16 = P_x_simplified(16)\n\n\n# print P(16)\nprint(P_16)"
  },
  {
    "example_id": 369,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "4.0",
      "4.0",
      "8.0",
      "3.0",
      "24.0",
      "2.0",
      "32.0",
      "16.0",
      "8.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "from sympy import expand\nfrom sympy.abc import x, a, b, c, d, e\nexpression = (5*x**4 - 8*x**3 + 2*x**2 + 4*x + 7) / (x + 2)**4\nresult = expand(expression)\nprint(result)"
  },
  {
    "example_id": 370,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\nf = Function('f')\neq = x**2 * f(x) + f(1 - x) - (-x**4 + 2*x)\nsolve(eq, f(x))"
  },
  {
    "example_id": 371,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "4.0",
      "3.0",
      "5.0",
      "2.0",
      "2.0",
      "1.0",
      "1.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "a, b, c = symbols('a b c')\n\n# ab + ac + bc = 0\nEq(a*b + a*c + b*c, 0)\n\n# (a + b + c + 1)^2 = abc\nEq((a + b + c + 1)**2, a*b*c)\n\n# find the values of ab - c, ac - b, and bc - a\n# and combine them into one expression\nexpr = expand((a*b - c)*(a*c - b)*(b*c - a))\n\n# find the possible values of the expression\n# by solving for the values of a, b, and c\n# that satisfy the given conditions\nsolutions = solve([expr, Eq(a + b + c + 1, a*b*c)], [a, b, c])\n\n# print the possible values of the expression\nprint(solutions)"
  },
  {
    "example_id": 372,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0",
      "1.0"
    ],
    "annotated_answers": [
      "576.0"
    ],
    "solution": "x = symbols('x')\neq = sympy.sqrt(x/(1 + sympy.sqrt(x/(1 + sympy.sqrt(x/(1 + sympy.sqrt(x)))))))\nprint(eq)\nsolution = solve(eq - 8, x)\nprint(solution)"
  },
  {
    "example_id": 373,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "44.0"
    ],
    "solution": "a = 1\nb = 3\nc = 2\nresult = (a*b*c) // (2*a*c)\nprint(result)"
  },
  {
    "example_id": 374,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "1.0",
      "2.0",
      "1.0",
      "2.0",
      "1.0"
    ],
    "annotated_answers": [
      "3968.0"
    ],
    "solution": "x = symbols('x')\nf = Function('f')\nf_x = f(x)\nf_x_plus_1 = f(x+1)\nf_x_minus_1 = f(x-1)\n\neq1 = Eq(f_x, sqrt(x))\neq2 = Eq(f_x, (f_x_minus_1)**2 - 1)\n\nsol1 = solve(eq1, f_x)\nsol2 = solve(eq2, f_x)\n\nf_x_value = simplify(sol1[0])\nf_x_plus_1_value = simplify(sol2[0])\n\nf_x_plus_1_sq_value = simplify(f_x_plus_1_value**2)\n\nf_x_value_sq = simplify(f_x_value**2)\n\nf_x_value_sq_plus_1 = simplify(f_x_value_sq + 1)\n\nprint(f_x_value_sq_plus_1 - f_x_plus_1_sq_value)"
  },
  {
    "example_id": 375,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "13.0",
      "-11.0",
      "8.0",
      "2327.0",
      "8.0",
      "-11.0",
      "8.0",
      "2327.0",
      "8.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "x = symbols('x')\neq = 4*x**3 - 41*x**2 + 10*x - 1989\nsol = solve(eq)\nprint(sol)"
  },
  {
    "example_id": 376,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "0.0"
    ],
    "annotated_answers": [
      "181.0"
    ],
    "solution": "n = symbols('n')\na_0, a_1, a_2 = symbols('a_0 a_1 a_2')\na_n = a_0 + a_1*n + a_2*n**2\neq = Eq(a_n, 2*a_n - 2*a_n - a_n + a_n - a_n + a_n)\nsol = solve(eq, a_n)\nprint(sol[0])"
  },
  {
    "example_id": 377,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.009999999999999995"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = [1/100 for _ in range(101)]\nexpression = sum([x[i] * x[i+1] for i in range(100)])\nprint(expression)"
  },
  {
    "example_id": 378,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "n = symbols('n')\neq = 3*n**3 - 12*n\nsolve(eq, n)"
  },
  {
    "example_id": 379,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "# from sympy import symbols\nz = symbols('z')\n\n\n# from sympy import Eq\neq1 = Eq(z**2, I*z)\neq2 = Eq(z**3, I*z**2)\n\n\n# from sympy import simplify\nsolve([eq1, eq2], [z])"
  },
  {
    "example_id": 380,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "z1, z2, z3 = symbols('z1 z2 z3')\ncond = Abs(9*z1*z2 + 4*z1*z3 + z2*z3) == 12\neq = Eq(Abs(z1 + z2 + z3), 5)\nsol = solve([cond, eq], [z1, z2, z3])\nprint(sol)"
  },
  {
    "example_id": 381,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\neq = 2*log(10*x, 10) - log(x, 100)\nsolve(eq, x)"
  },
  {
    "example_id": 382,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0",
      "1.0",
      "4.0",
      "-10.0",
      "1.0",
      "4.0",
      "10.0",
      "1.0",
      "4.0",
      "-10.0",
      "1.0",
      "4.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x = symbols('x')\neq = x**5 + 5*x**4 + 10*x**3 + 10*x**2 - 5*x + 1 - 10\nsol = solve(eq, x)\nfor x_value in sol:\n    if x_value!= -1:\n        print(x_value + 1)"
  },
  {
    "example_id": 383,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "4.0",
      "5.0",
      "4.0",
      "5.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\nf = (2*x - 6)/(x**3 - 7*x**2 - 2*x + 6)\nf_prime = f.diff(x)\nx_cross_asymptote = solve(f_prime, x)\nprint(x_cross_asymptote)"
  },
  {
    "example_id": 384,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "0.0",
      "0.0",
      "3.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "print(f\"The possible values of k are: {(-3, 0), (0, 3)}\")"
  },
  {
    "example_id": 385,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "3.0",
      "1.0",
      "4.0",
      "1.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x, y, z = symbols('x y z')\n\n# equation 1\neq1 = Eq(x + 2*y + 4*z, 12)\n\n# equation 2\neq2 = Eq(x*y + 2*x*z + 4*y*z, 22)\n\n# equation 3\neq3 = Eq(x*y*z, 6)\n\n# solve the equations\nsol = solve([eq1, eq2, eq3], [x, y, z])\n\n# print the solution\nprint(sol)"
  },
  {
    "example_id": 386,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "90.0"
    ],
    "solution": "z = symbols('z')\neq = z**2 + z + 1\nz_value = solve(eq, z)\nprint(z_value[0])"
  },
  {
    "example_id": 387,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "a, b, c, d, e, f = symbols('a b c d e f')\nf = a*e**2 + b*e*f + c*f**2 + d*e*f + e*f**2 + f*e**2\nf = f.expand()\nf = f.simplify()\nf = f.subs({e:I})\nf = f.simplify()\nf = f.subs({e:1})\nf = f.simplify()\nf = f.subs({f:1})\nf = f.simplify()\nf = f.subs({f:1})\nf = f.simplify()\nf = f.subs({f:1})\nf = f.simplify()\nf = f.subs({f:1})\nf = f.simplify()\nf = f.subs({f:1})\nf = f.simplify()\nf = f.subs({f:1})\nf = f.simplify()\nf = f.subs({f:1})\nf = f.simplify()\nf = f.subs({f:1})\nf = f.simplify()\nf = f.subs({f:1})\nf = f.simplify()\nf = f.subs({f:1})\nf = f.simplify()\nf = f.subs({f:1})\nf = f.simplify()\nf = f.subs({f:1})\nf = f.simplify()\nf = f.subs({f:1})\nf = f.simplify()\nf = f.subs({f:1})\nf = f.simplify()\nf = f.subs({f:1})\nf = f.simplify()\nf = f.subs({f:1})\nf = f.simplify()\nf = f.subs({f:1})\nf = f.simplify()\nf = f.subs({f:1})\nf = f.simplify()\nf = f.subs({f:1})\nf"
  },
  {
    "example_id": 388,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "14.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "a = 1\nb = 2\nf = lambda x: a*x + b\nf2 = lambda x: f(f(x))\nf3 = lambda x: f(f2(x))\nprint(f3(8))"
  },
  {
    "example_id": 389,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "8.0",
      "8.0",
      "4.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq1 = Eq(a + b, 16)\neq2 = Eq(c, simplify(expand(b - c)))\neq3 = Eq(c, simplify(expand(a - c)))\nsol = solve((eq1, eq2, eq3), (a, b, c))\nprint(sol)"
  },
  {
    "example_id": 390,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "# define the symbols\nx, y, a, b, c, d, e, f, g, h, k, m, n, p, q, r, s, t, u, v, w, x, y, z = symbols('x, y, a, b, c, d, e, f, g, h, k, m, n, p, q, r, s, t, u, v, w, x, y, z')\n\n\n# define the equations\neq1 = (x**2/49 + y**2/33 - 1)\neq2 = (x**2 + (y-3)**2 - 4)\n\n\n# solve for the intersection point\nsol = solve([eq1, eq2], [x, y])\nP = (sol[x], sol[y])\n\n\n# find the length of the line segment\nQ = (4, 0)\nl = P - Q\ndist = sqrt(l[0]**2 + l[1]**2)\nprint(dist)\n\n\n# find the maximum value of the sum\nmax_sum = dist + P - Q\nprint(max_sum)"
  },
  {
    "example_id": 391,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-59.0",
      "3481.0",
      "144.0",
      "1253010.0",
      "36.0",
      "212291.0",
      "1728.0",
      "1.0",
      "3.0",
      "59.0"
    ],
    "annotated_answers": [
      "-376.0"
    ],
    "solution": "x = symbols('x')\nf = 4*x**3 - 59*x**2\nroots = solve(f - 32, x)\nprint(f.subs(x, roots[0]) + f.subs(x, roots[1]) + f.subs(x, roots[2]))"
  },
  {
    "example_id": 392,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "287626.588849326"
    ],
    "annotated_answers": [
      "1024.0"
    ],
    "solution": "n = 31\na, b = symbols('a b')\neq = Eq(simplify(expand((1 + 1/2)**n)), a/b)\nsol = solve(eq, [a, b])\nprint(sol)"
  },
  {
    "example_id": 393,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\neven_odd = [Eq(simplify(expand(f)), 0) for f in [f(x) for f in [lambda x: f(x), lambda x: -f(x)]]]\neven_odd = [solve(f, x) for f in even_odd]\neven_odd = [f for f in even_odd if f]\nprint(len(even_odd))"
  },
  {
    "example_id": 394,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq = Eq(x**2 + 2*y**2 + 5*z**2, 22)\nexpand(eq)\nsimplify(eq)\nsolve(eq, [x, y, z])"
  },
  {
    "example_id": 395,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "163.0"
    ],
    "solution": "from sympy import Symbol, solve\nx = Symbol('x')\nf = x**2 + 2010\nroots = solve(f, x)\nprint(len(roots))"
  },
  {
    "example_id": 396,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "3.0",
      "1.0",
      "3.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "a, b = symbols('a b')\neq = 3*a**3*sqrt(3) + (2/b**2 - 2*b**3)\nsol = solve(eq, a)\nprint(sol)"
  },
  {
    "example_id": 397,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "2.0",
      "10.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "import sympy as sp\nx, y = sp.symbols('x, y')\neq1 = 4*x**2 - 8*x + y**2 + 4*y - 8\neq2 = 2*x + 3*y - 10\nd = eq1 - eq2\nprint(d)"
  },
  {
    "example_id": 398,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "27.0"
    ],
    "solution": "x = symbols('x')\nf = 0\nfor i in range(2006):\n    f = f + x\n    x = simplify(x + 3)\nf = Abs(f)\nsolve(f, x)"
  },
  {
    "example_id": 399,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "# define symbol x\nx = symbols('x')\n\n\n# define polynomial p(x)\np = x**3 + 3*x**2 + 2*x - 1\n\n\n# define remainder r(x)\nr = p.subs(x, 1) + p.subs(x, 4)\n\n\n# define second remainder\ns = p.subs(x, 2) + p.subs(x, 3)\n\n\n# solve for p(5)\np5 = p.subs(x, 5)\n\n\n# print p5\nprint(p5)"
  },
  {
    "example_id": 400,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x, y, z = 0, 0, 3\nexpression = (x * y) * (x * z) + (y * z)\nprint(expression)"
  },
  {
    "example_id": 401,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-21707.0",
      "18.0",
      "3770875.0",
      "216.0",
      "75455873907.0",
      "12.0",
      "1.0",
      "3.0",
      "98.0",
      "3.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "k = 49\nx = symbols('x')\neq = x**4 + k*x**2 + 90*x - 2009\nroots = solve(eq, x)\nprint(roots)"
  },
  {
    "example_id": 402,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "501.0"
    ],
    "solution": "k = symbols('k')\nx = symbols('x')\neq = log(k*x) - 2*log(x+2)\neq = eq.expand()\neq = eq.simplify()\neq = eq.subs(x, x+2)\neq = eq.subs(k, k)\nsolution = solve(eq, k)\nprint(solution)"
  },
  {
    "example_id": 403,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x = symbols('x')\nf = (x**3-x**2+x)/(6*x**2-9*x)\n\n# Find the number of holes\na = len(f.free_symbols)\n\n# Find the number of vertical asymptotes\nb = len(solve(f.as_numer_denom()[0].as_expr(), x))\n\n# Find the number of horizontal asymptotes\nc = len(solve(f.as_numer_denom()[1].as_expr(), x))\n\n# Find the number of oblique asymptotes\nd = len(solve(f.as_numer_denom()[0].as_expr() - f.as_numer_denom()[1].as_expr(), x))\n\nprint(a + 2*b + 3*c + 4*d)"
  },
  {
    "example_id": 404,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "2.0",
      "-8.0",
      "2.0",
      "12.0",
      "6.0",
      "18.0",
      "2.0",
      "18.0"
    ],
    "annotated_answers": [
      "-14.0"
    ],
    "solution": "from sympy import solve, symbols\n\nx, y, z = symbols('x, y, z')\nexpr = 3*x**2 + 12*y**2 + 27*z**2 - 4*x*y - 6*x*z - 12*y*z - 8*y - 24*z\nsol = solve(expr, [x, y, z])\nprint(sol)"
  },
  {
    "example_id": 405,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "f, d, q, r = symbols('f d q r')\neq1 = f*d - q*d - r\neq2 = q*d - r\ndegree_f = 9\ndegree_r = 3\ndegree_q = degree_f - degree_r\nmax_degree_q = degree_q\nprint(max_degree_q)"
  },
  {
    "example_id": 406,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "# define x and a\nx, a = symbols('x a')\n# define b\nb = symbols('b')\n\n# define the equation\neq = (x - a)/b + (x - b)/a - (b/(x - a)) - (a/(x - b))\n\n# simplify the equation\neq = simplify(eq)\n\n# solve the equation\nsol = solve(eq, x)\n\n# print the solution\nprint(sol)"
  },
  {
    "example_id": 407,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "14.0",
      "36.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "a, b, c = 1, 2, 3\nexpression1 = a**2 + b**2 + c**2\nexpression2 = (a + b + c)**2\nprint(expression1)\nprint(expression2)"
  },
  {
    "example_id": 408,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\neq = 2*x**2001 + 3*x**2000 + 2*x**1999 + 3*x**1998 + 2*x**1997 + \\\n2*x**1996 + 3*x**1995 + 2*x**1994 + 3*x**1993 + 2*x**1992 + 3*x**1991 + \\\n2*x**1990 + 3*x**1989 + 2*x**1988 + 3*x**1987 + 2*x**1986 + 3*x**1985 + \\\n2*x**1984 + 3*x**1983 + 2*x**1982 + 3*x**1981 + 2*x**1980 + 3*x**1979 + \\\n2*x**1978 + 3*x**1977 + 2*x**1976 + 3*x**1975 + 2*x**1974 + 3*x**1973 + \\\n2*x**1972 + 3*x**1971 + 2*x**1970 + 3*x**1969 + 2*x**1968 + 3*x**1967 + \\\n2*x**1966 + 3*x**1965 + 2*x**1964 + 3*x**1963 + 2*x**1962 + 3*x**1961 + \\\n2*x**1960 + 3*x**1959 + 2*x**1958 + 3*x**1957 + 2*x**1956 + 3*x**1955 + \\\n2*x**1954 + 3*x**1953 + 2"
  },
  {
    "example_id": 409,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "6.0",
      "6.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "# This is the solution for the question in the image\ndef count_units(S):\n    count = 0\n    for z in S:\n        if z.conjugate() in S:\n            count += 1\n    return count\n\n# Test the function with a few examples\nprint(count_units([1, 2, 3, 4, 5, 6]))\nprint(count_units([1, 1, 1, 1, 1, 1]))\nprint(count_units([-1, -2, -3, -4, -5, -6]))"
  },
  {
    "example_id": 410,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2101.0"
    ],
    "annotated_answers": [
      "2101.0"
    ],
    "solution": "x = 5\ny = 4\nexpression = x**4 + x**3*y + x**2*y**2 + x*y**3 + y**4\nprint(expression)"
  },
  {
    "example_id": 411,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "89.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\n\n# Using the above equation, we can simplify the expression\nexpression = a**2 + b**2 + c**2 + 519 - d - 36*sqrt(10*a + 14*b + 22*c - d)\n\n# Using the simplify function to simplify the expression\nexpression = simplify(expression)\n\n# Solving the equation\nsolution = solve(expression, a + b + c + d)\nprint(solution)"
  },
  {
    "example_id": 412,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "1.0",
      "4.0",
      "2.0",
      "2.0",
      "4.0",
      "4.0",
      "48.0",
      "12.0",
      "4.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\neq1 = Eq(a**4 + b**4 + c**4 + d**4, 48)\neq2 = Eq(a*b*c*d, 12)\nsol = solve([eq1, eq2], [a, b, c, d])\nprint(sol)"
  },
  {
    "example_id": 413,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "-8.0"
    ],
    "solution": "a, b, c = symbols('a b c')\nx = symbols('x')\neq = x**3 - 7*x + 2\nsol = solve(eq, [a, b, c])\nprint(sol)\nprint(a*b*c + a*b + a*c + b*c + a + b + c + 1)"
  },
  {
    "example_id": 414,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "991.0"
    ],
    "annotated_answers": [
      "331.0"
    ],
    "solution": "n = 1\nf = lambda x: (-1)**(x + 1) * (x - 2)\nsum = f(n)\nfor i in range(2, 1986):\n    sum += f(i)\nprint(sum)"
  },
  {
    "example_id": 415,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "-99.0"
    ],
    "solution": "x = symbols('x')\na, b = symbols('a b')\npolynomial = x**6 + a*x + b\ndivisor = x**2 - 2*x - 1\npolynomial_divisor = polynomial / divisor\npolynomial_divisor_expanded = expand(polynomial_divisor)\npolynomial_divisor_expanded_simplified = simplify(polynomial_divisor_expanded)\npolynomial_divisor_expanded_simplified_coeff = polynomial_divisor_expanded_simplified.coeff(x, 1)\nprint(polynomial_divisor_expanded_simplified_coeff)"
  },
  {
    "example_id": 416,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "1999.0"
    ],
    "solution": "n = 0\nwhile n < 10000:\n    n = n + 1\n    if (n % 10) + ((n + 1) % 10) + ((n + 2) % 10) > 10:\n        break\n\nprint(n)"
  },
  {
    "example_id": 417,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "15.0",
      "10.0",
      "1.0",
      "4.0",
      "15.0",
      "20.0",
      "1.0",
      "2.0",
      "15.0",
      "10.0",
      "1.0",
      "4.0",
      "15.0",
      "20.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "a, b = symbols('a b')\neq1 = Eq(a + 2*b, 1)\neq2 = Eq(2/a + 1/b, 5)\nsol = solve([eq1, eq2], [a, b])\nprint(sol)"
  },
  {
    "example_id": 418,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "7.0",
      "4.0",
      "2.0",
      "0.0",
      "5.0",
      "7.0",
      "4.0",
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "-7.0"
    ],
    "solution": "from sympy import symbols, solve, Poly, diff\nx = symbols('x')\nroots = solve(x**5 + 7*x**4 - 2, x)\na, b, c, d, e = roots\n\ndef f(x, roots):\n    return sum([(x - r)**5 for r in roots])\n\nresult = f(a, roots) / (a - b) / (a - c) / (a - d) / (a - e) + \\\n         f(b, roots) / (b - a) / (b - c) / (b - d) / (b - e) + \\\n         f(c, roots) / (c - a) / (c - b) / (c - d) / (c - e) + \\\n         f(d, roots) / (d - a) / (d - b) / (d - c) / (d - e) + \\\n         f(e, roots) / (e - a) / (e - b) / (e - c) / (e - d)\n\nprint(result)"
  },
  {
    "example_id": 419,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "numerator = 2 - 4j\ndenominator = 2 + 1j\nexpression = abs(numerator/denominator)\nprint(expression)"
  },
  {
    "example_id": 420,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = 1\ny = 1\nexpression = x**2 + y**2\nprint(expression)"
  },
  {
    "example_id": 421,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "a, b, c = symbols('a b c')\nabc = a*b*c\nabc_expr = (a + b)*(a + c)*(b + c)\nabc_expr_simplified = simplify(abc_expr)\nabc_expr_expanded = expand(abc_expr_simplified)\nabc_expr_min = abc_expr_expanded.subs([(a, 1), (b, 1), (c, 1)])\nprint(abc_expr_min)"
  },
  {
    "example_id": 422,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-100.0",
      "100.0",
      "-100.0",
      "100.0"
    ],
    "annotated_answers": [
      "101.0"
    ],
    "solution": "x = symbols('x')\nsol = solve(Eq(100000000/x**4, 1), x)\nprint(sol)"
  },
  {
    "example_id": 423,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "15.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "x = symbols('x')\nf = abs(x - 10) + abs(x - 15) + abs(x - 20)\nf_min = f.subs(x, 10)\nprint(f_min)"
  },
  {
    "example_id": 424,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "46656.0"
    ],
    "annotated_answers": [
      "111.0"
    ],
    "solution": "a, b, c = symbols('a b c')\ngeometric_seq = a*b**(c-1)\nlog_seq = sympy.log(geometric_seq, 6)\nsum_of_logs = solve(log_seq - 6, c)\nprint(sum_of_logs[0])"
  },
  {
    "example_id": 425,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "342.0"
    ],
    "annotated_answers": [
      "24.0"
    ],
    "solution": "x = symbols('x')\np = x**4 + x**3 + x**2 + x + 1\np_expanded = expand(p)\np_expanded_0 = p_expanded.subs(x, 0)\np_expanded_4 = p_expanded.subs(x, 4)\np_expanded_0_plus_p_expanded_4 = p_expanded_0 + p_expanded_4\nprint(simplify(p_expanded_0_plus_p_expanded_4))"
  },
  {
    "example_id": 426,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "2.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0",
      "2.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "x1, y1, x2, y2 = symbols('x1 y1 x2 y2')\na = sqrt( (x1 - x2)**2 + (y1 - y2)**2 )\nb = sqrt( (x1**2 + y1**2) - (x2**2 + y2**2) )\nc = sqrt( (x1**2 + y1**2) - (x2**2 + y2**2) )\nd = sqrt( (x1 - x2)**2 + (y1 - y2)**2 )\nf = sqrt( (x1 - x2)**2 + (y1 - y2)**2 )\n\n# find semi-major axis\nsemi_major_axis = (b**2 - a**2)/(2*b*c)\nprint(semi_major_axis)"
  },
  {
    "example_id": 427,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq = Eq(a**3 + a**2*b + a*b**2 + b**3, c**3)\nsol = solve(expand(eq), [a, b, c])\nprint(len(sol))"
  },
  {
    "example_id": 428,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "x = symbols('x')\neq = (5*x + 9)**611 + (x + 5)**11 + (x - 1)**11 + 3*x**2 + 1\nremainder = sympy.rem(eq, x + 2)\nprint(remainder)"
  },
  {
    "example_id": 429,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "4.0",
      "2.0",
      "4.0",
      "4.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq = Eq(x*y*z, 2)\nsol = solve(eq)\nprint(simplify(expand(x**4 + 4*y**2 + 4*z**4)))"
  },
  {
    "example_id": 430,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "from sympy import sqrt\nfrom sympy.abc import x, y\n\n# The equation of the hyperbola is x^2 + 8xy + 7y^2 = 225\n# To find the shortest distance from the origin to P, we\n# need to find the point where the line x = 0 intersects the\n# hyperbola.\n\n# We can use the fact that the line x = 0 has a slope of 0\n# to find the y-coordinate of the point on the hyperbola.\n\n# We can also use the fact that the hyperbola has a y-coordinate\n# of 0 at the point (0,0).\n\n# We can solve for y in terms of x and substitute into the\n# equation of the hyperbola to find the point on the hyperbola\n# with the shortest distance from the origin.\n\n# We can then use the distance formula to find the distance\n# from the origin to the point on the hyperbola.\n\npoint_on_hyperbola = (0, 0)\ndistance = sqrt((x - point_on_hyperbola[0])**2 + (y - point_on_hyperbola[1])**2)\nprint(distance)"
  },
  {
    "example_id": 431,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "0.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "# Define points\nF1 = (10,2)\nF2 = (-16,2)\n\n# Find distance between points\ndistance = simplify(Abs(F1[0] - F2[0]) + Abs(F1[1] - F2[1]))\n\n# Find equation of hyperbola\nx, y = symbols('x y')\na, b = symbols('a b')\nh, k = symbols('h k')\n\n# Find equation of hyperbola\neq = (x - h)**2/a**2 - (y - k)**2/b**2\n\n# Solve equation\nsolve = solve(Eq(eq, distance), [a, b, h, k])\n\n# Print result\nprint(solve[0])"
  },
  {
    "example_id": 432,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "962.0"
    ],
    "solution": "k = symbols('k')\nx = symbols('x')\neq = x**3 - 52*x**2 + 581*x - k\nf = expand(eq)\nf = f.as_numer_denom()\nf = f[0]\nsolve(f, k)"
  },
  {
    "example_id": 433,
    "selected_mode": "import",
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-9.0"
    ],
    "solution": "x = symbols('x')\nf = (2*x + 9)/(x - 7)\nf1 = f(f(x))\nf1_sol = solve(Eq(f1, x), x)\nf1_sol_prod = 1\nfor i in f1_sol:\n    f1_sol_prod *= i\nprint(f1_sol_prod)"
  },
  {
    "example_id": 434,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "z = symbols('z')\neq = abs(z)\nprint(eq)\nprint(eq.subs(z, 5))"
  },
  {
    "example_id": 435,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-3.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "c, x = symbols('c x')\nf = c*x/(2*x + 3)\nf_of_f = c*f/(2*f + 3)\neq = f_of_f - x\neq = eq.subs(x, f_of_f)\nc_value = solve(eq, c)\nprint(c_value[0])"
  },
  {
    "example_id": 436,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "38.0",
      "4.0",
      "3.0",
      "722.0"
    ],
    "annotated_answers": [
      "79.0"
    ],
    "solution": "f = lambda x: x**4 + a*x**2 + b*x + c\na, b, c = symbols('a b c')\nroots = [2, -3, 5]\nf_roots = [f(i) for i in roots]\nsum_of_roots = sum(f_roots)\nprint(sum_of_roots)"
  },
  {
    "example_id": 437,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0",
      "2.0",
      "1.0",
      "2.0",
      "4.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x, A, B = symbols('x A B')\neq = (7*x - 2)/(x**2 - 4)\neq = eq.rewrite(frac)\nA, B = eq.args\nprint(A + B)"
  },
  {
    "example_id": 438,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "def sum_of_series(n):\n    F_n = Fibonacci(n)\n    return 1/F_n/F_n+2"
  },
  {
    "example_id": 439,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "1.0",
      "3.0",
      "1.0",
      "4.0",
      "1.0",
      "5.0",
      "1.0",
      "6.0"
    ],
    "annotated_answers": [
      "49.0"
    ],
    "solution": "x = symbols('x')\nterms = [abs(i*x - 1) for i in range(1, 120)]\nexpr = sum(terms)\nprint(expr)"
  },
  {
    "example_id": 440,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-10.0",
      "181.0",
      "2.0"
    ],
    "annotated_answers": [
      "90.0"
    ],
    "solution": "x = symbols('x')\nexpr = sqrt(3620 + 322*x - 4*x**2)\nsol = solve(expr, x)\nprint(sol)"
  },
  {
    "example_id": 441,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "5.0",
      "6.0",
      "-6.0",
      "2.0",
      "2.0",
      "1.0",
      "5.0",
      "3.0",
      "5.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq1 = Eq(a + b + c, 1)\neq2 = Eq(2*a**2 + 3*b**2 + 6*c**2, 0)\nsol = solve((eq1, eq2), (a, b, c))\nprint(sol)"
  },
  {
    "example_id": 442,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "-6.0"
    ],
    "solution": "p, q, r = symbols('p q r')\nx = symbols('x')\neq1 = x**3 + 5*x**2 + p*x + q\neq2 = x**3 + x**2 + p*x + r\ncommon_roots = solve(eq1 - eq2, x)\nprint(common_roots[0] + common_roots[1])"
  },
  {
    "example_id": 443,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "34.0"
    ],
    "annotated_answers": [
      "34.0"
    ],
    "solution": "x = symbols('x')\nf = x**3 - 49*x**2 + 623*x - 2015\ng = f.subs(x, x + 5)\nroots = solve(g, x)\nprint(sum(roots))"
  },
  {
    "example_id": 444,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "27648.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\neq = a*b**2*c**3*d**4\nconstraint = a + b + c + d - 10\nmaximize = eq.subs({a: 1, b: 1, c: 1, d: 1})\nsolve_for = solve(constraint, {a, b, c, d})\nsolutions = [maximize.subs(solve_for) for solve_for in solve_for]\nprint(max(solutions))"
  },
  {
    "example_id": 445,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "from sympy import symbols, Eq, simplify, expand, solve, Abs, I\nfrom sympy import *\nfrom math import *\n\nx = symbols('x')\nf = x**4 + x**3 + x**2 + x + 1\n\n# find the roots\nroots = solve(f, x)\n\n# find the degree\ndegree = len(roots)\n\n# print the result\nprint('The smallest possible degree of the polynomial is:', degree)"
  },
  {
    "example_id": 446,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1176.0"
    ],
    "annotated_answers": [
      "516.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\n\nsum = 0\n\nfor i in range(1, 50):\n    sum += (751 - 745) + (748 - 742) + (745 - 739) + (742 - 736)\n\nprint(sum)"
  },
  {
    "example_id": 447,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "0.63"
    ],
    "solution": "print(round(sympy.log(4, 9) - sympy.log(6, 3), 2))"
  },
  {
    "example_id": 448,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "-15.0",
      "2.0",
      "4.0",
      "15.0",
      "3.0",
      "2.0",
      "3.0",
      "27.0",
      "3.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq = 2*a**3 + 3*a**2*b + 4*a*b**2 + 5*a*c**3\nprint(solve(eq - 12, a))"
  },
  {
    "example_id": 449,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "117649.0"
    ],
    "solution": "from sympy import symbols, poly, factor, prod\nfrom sympy.abc import x\n\nr = symbols('r1:8')\nP = x**7 - 7\nf = factor(P)\nr_roots = f.args[0].args\n\nK = prod([r_i + r_j for r_i, r_j in zip(r_roots, r_roots[1:])])\nprint(K**2)"
  },
  {
    "example_id": 450,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "52.0",
      "6.0",
      "43.0",
      "1.5",
      "6.0",
      "43.0",
      "52.0",
      "1.5"
    ],
    "annotated_answers": [
      "828.0"
    ],
    "solution": "eq = (52+6*sympy.sqrt(43))**(3/2) - (52-6*sympy.sqrt(43))**(3/2)\nprint(eq)"
  },
  {
    "example_id": 451,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25952256.0"
    ],
    "annotated_answers": [
      "198.0"
    ],
    "solution": "a = [99]\nfor i in range(19):\n    a.append(sum(a))\nprint(a[19])"
  },
  {
    "example_id": 452,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-6.0",
      "3.0",
      "-3.0",
      "3.0",
      "-6.0",
      "-3.0",
      "3.0",
      "3.0",
      "6.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "# Declare symbols\nx, y, z = symbols('x y z')\n\n# Define equations\neq1 = Eq(x + y - z, 0)\neq2 = Eq(x*z - x*y + y*z, 27)\neq3 = Eq(x*y*z, 54)\n\n# Solve equations\nsol = solve([eq1, eq2, eq3], [x, y, z])\n\n# Print solutions\nprint(sol)"
  },
  {
    "example_id": 453,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-7.0",
      "82.0",
      "3.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "1325.0",
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "-7.0"
    ],
    "solution": "from sympy import *\nx = symbols('x')\nexpression = x**3 + 7*x**2 - 11*x - 2\na, b, c = solve(expression, x)\nprint(a + b + c)"
  },
  {
    "example_id": 454,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3304.0"
    ],
    "annotated_answers": [
      "229.0"
    ],
    "solution": "x = symbols('x')\np = x**4 + 4*x**3 + 9*x**2 + 136*x + 4\n\n# Find the roots of the polynomial\nroots = solve(p, x)\n\n# Find the coefficients of the polynomial\ncoeff = simplify(expand(p))\n\n# Find the value of the polynomial at x = 6\np_6 = coeff.subs(x, 6)\n\nprint(p_6)"
  },
  {
    "example_id": 455,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0",
      "4.0"
    ],
    "annotated_answers": [
      "697.0"
    ],
    "solution": "z, n = symbols('z n')\neq = (z / (z + n)) - 4*I\nn_value = solve(eq, n)\nprint(n_value[0])"
  },
  {
    "example_id": 456,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "20.0"
    ],
    "annotated_answers": [
      "500.0"
    ],
    "solution": "a, b = symbols('a b')\neq = (sqrt(a) - sqrt(b)) - 20\neq = expand(eq)\nmax_a = simplify(eq.subs(sqrt(a), a/2).subs(sqrt(b), b/2))\nprint(max_a)"
  },
  {
    "example_id": 457,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.26235729633936195"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "s = 0\nfor n in range(1, 10000):\n    s += 1/(sqrt(n)*(sqrt(n + 1) + sqrt(n + 1)) + sqrt(n + 1)**4 + sqrt(n + 1)**4)\nprint(s)"
  },
  {
    "example_id": 458,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.9998538466111837",
      "0.0031397957595920793"
    ],
    "annotated_answers": [
      "500.0"
    ],
    "solution": "# solve for x using the quadratic formula\nx1 = (-1 + (1/2))**(1/2001)\nx2 = (-1 - (1/2))**(1/2001)\n\n# sum of roots\nprint(x1 + x2)"
  },
  {
    "example_id": 459,
    "selected_mode": "import",
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "214.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\neq1 = Eq((a + b)*(c + d), 143)\neq2 = Eq((a + c)*(b + d), 150)\neq3 = Eq((a + d)*(b + c), 169)\n\n# Find the smallest possible value of a^2 + b^2 + c^2 + d^2\nexpr = (a**2 + b**2 + c**2 + d**2)\n\nfor t in solve([eq1, eq2, eq3], [a, b, c, d]):\n    if simplify(expand(expr.subs(t))) == 100:\n        print(f\"{t[0]}^2 + {t[1]}^2 + {t[2]}^2 + {t[3]}^2 = 100\")\n        break\nelse:\n    print(\"No solution found.\")"
  },
  {
    "example_id": 460,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1004.0"
    ],
    "annotated_answers": [
      "1004.0"
    ],
    "solution": "expression = 0\nfor i in range(1, 2008, 2):\n    expression += i\n    expression -= i + 1\nprint(expression)"
  },
  {
    "example_id": 461,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "16.0",
      "3.0",
      "8.0",
      "49.0",
      "2.0",
      "64500.0",
      "36.0",
      "2.0",
      "16.0",
      "7.0",
      "16.0",
      "3.0",
      "8.0",
      "49.0",
      "2.0",
      "64500.0",
      "36.0",
      "2.0",
      "16.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "m, n = symbols('m n')\neq = 8*log(x, n)*log(x, m) - 7*log(x, n) - 6*log(x, m) - 2013\nsol = solve(eq, x)\nprint(sol)"
  },
  {
    "example_id": 462,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "print(sympy.sqrt((3/4) - sympy.sqrt(1/2)) - sympy.sqrt((3/4) + sympy.sqrt(1/2)))"
  },
  {
    "example_id": 463,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "S = {0,10}\nwhile True:\n    x = 10\n    for a in S:\n        if x**2 - a == 0:\n            S.add(x)\n            break\n    else:\n        break\nprint(len(S))"
  },
  {
    "example_id": 464,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "517.0",
      "512.0"
    ],
    "annotated_answers": [
      "1023.0"
    ],
    "solution": "# Define the variables\nd, x = symbols('d x')\n\n# Define the equation\neq = d - 10*x - 1024*x + 1024*x**2\n\n# Solve for d\nsolve(eq, d)\n\n# Print the result\nprint(solve(eq, d))"
  },
  {
    "example_id": 465,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "13.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "x = symbols('x')\neq1 = (1/(x**2 - 10*x - 29)) + (1/(x**2 - 10*x - 45)) - (2/(x**2 - 10*x - 69))\neq2 = simplify(expand(eq1))\nsol = solve(eq2, x)\nprint(sol)"
  },
  {
    "example_id": 466,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "4022030.0"
    ],
    "solution": "import math\n\ndef f(x):\n    if x < math.floor(x) + 0.5/math.floor(x):\n        return math.floor(x) * abs(x - math.floor(x) - 0.5/math.floor(x))\n    else:\n        return f(x - 1/math.floor(x))\n\ndef g(x):\n    return 2**(x - 2007)\n\nintersections = 0\n\nfor x in range(1, 1000):\n    if f(x) == g(x):\n        intersections += 1\n\nprint(intersections)"
  },
  {
    "example_id": 467,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "269.00000000000006"
    ],
    "annotated_answers": [
      "269.0"
    ],
    "solution": "print(abs(10-13j)*abs(10+13j))"
  },
  {
    "example_id": 468,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0",
      "2.0",
      "225.0",
      "2.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "import sympy\nfrom sympy import symbols, solve\n\nsasha_x, sasha_y = symbols('sasha_x sasha_y')\nsasha_d = sympy.sqrt(sasha_x**2 + sasha_y**2)\n\nchloe_x, chloe_y = symbols('chloe_x chloe_y')\nchloe_d = sympy.sqrt(chloe_x**2 + chloe_y**2)\n\nsasha_d_value = solve(sasha_d - 15, sasha_x)\nchloe_d_value = solve(chloe_d - 3, chloe_x)\n\nprint(chloe_d_value[0] - sasha_d_value[0])"
  },
  {
    "example_id": 469,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "7.0",
      "8.0",
      "2.0",
      "11.0",
      "12.0",
      "2.0",
      "17.0",
      "18.0"
    ],
    "annotated_answers": [
      "42.0"
    ],
    "solution": "x = symbols('x')\np = x**2 + 2*x + 1\np_value = p.subs({x: sqrt(7)})\nprint(p_value)\np_value = p.subs({x: sqrt(11)})\nprint(p_value)\np_value = p.subs({x: sqrt(17)})\nprint(p_value)"
  },
  {
    "example_id": 470,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "a, b = symbols('a b')\na**2 + b**2 == 2\nsol = solve((a**2 + b**2 - 2).expand(), b)\nprint(sol)"
  },
  {
    "example_id": 471,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "6981.0",
      "2.0",
      "1323.0",
      "2.0",
      "1.0",
      "3.0",
      "3.0",
      "3.0",
      "25.0"
    ],
    "annotated_answers": [
      "-14.0"
    ],
    "solution": "x = symbols('x')\nr, s, t = roots(x**3 + 9*x**2 + 2*x + 1)\nprint((1/r**2) + (1/s**2) + (1/t**2))"
  },
  {
    "example_id": 472,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "9.0",
      "69.0",
      "18.0",
      "25.0",
      "54.0",
      "1.0",
      "3.0",
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x = symbols('x')\nP = x**6 - x**5 - x**3 - x**2 - x\nQ = x**4 - x**3 - x**2 - 1\nsolve_Q = solve(Q, x)\nP_sum = 0\nfor z in solve_Q:\n    P_sum += P.subs(x, z)\nprint(P_sum)"
  },
  {
    "example_id": 473,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "16.0",
      "-29.0",
      "96.0",
      "2.0",
      "-301.0",
      "6912.0",
      "7.0",
      "7437.0",
      "2304.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "import sympy\n\nx = sympy.Symbol('x')\nr_1, r_2, r_3, r_4 = sympy.roots(4*x**4 - x**3 + x**2 - x + 5)\nprint(r_1, r_2, r_3, r_4)\n\nr_1_2, r_2_2, r_3_2, r_4_2 = [r_1/2, r_2/4, r_3/5, r_4/8]\nprint(r_1_2, r_2_2, r_3_2, r_4_2)\n\na = 1 - r_1_2 - r_2_2 - r_3_2 - r_4_2\nprint(a)"
  },
  {
    "example_id": 474,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "16.0",
      "5.0",
      "8.0"
    ],
    "annotated_answers": [
      "-64.0"
    ],
    "solution": "from sympy import sqrt\nfrom sympy.abc import x\n\nexpression = sqrt(5*abs(x) + 8) - sqrt(x**2 - 16)\nprint(expression.factor())"
  },
  {
    "example_id": 475,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "-10879.0",
      "-1.0",
      "10879.0"
    ],
    "annotated_answers": [
      "-10879.0"
    ],
    "solution": "a, b = symbols('a b')\neq1 = Eq(1988*x**2 + b*x + 8891, 0)\neq2 = Eq(8891*x**2 + b*x + 1988, 0)\nsol = solve([eq1, eq2], [x, b])\nprint(sol)"
  },
  {
    "example_id": 476,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\neq = a*log(2, 10) + b*log(3, 10) + c*log(5, 10) + d*log(7, 10)\nsol = solve(Eq(eq, 2005), [a, b, c, d])\nprint(len(sol))"
  },
  {
    "example_id": 477,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "# Define symbols\nn = symbols('n')\n\n\n# Define expression\nexpr = (1/tau + 1/tau**2 + 1/tau**3 +... + 1/tau**n)\n\n\n# Define equation\neq = Eq(expand(expr), tau**n)\n\n\n# Solve equation\nsol = solve(eq, n)\n\n\n# Print solution\nprint(sol)"
  },
  {
    "example_id": 478,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "-3.0",
      "2.0",
      "3.0",
      "1.0",
      "1.0",
      "3.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "from sympy import symbols, solve\nx = symbols('x')\nf = (1/x**3-3*x**2+3*x-1)\nprint(f.as_numer_denom())"
  },
  {
    "example_id": 479,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0",
      "8.0",
      "8.0",
      "8.0"
    ],
    "annotated_answers": [
      "512.0"
    ],
    "solution": "a, b = symbols('a b')\neq1 = log(a, 8) + log(b**2, 4) - 5\neq2 = log(b, 8) + log(a**2, 4) - 7\neq11 = Eq(eq1, eq2)\nsol = solve(eq11, a)\nsol = solve(eq11, b)\nprint(sol)"
  },
  {
    "example_id": 480,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "6.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\nexpression = (b + c + d)/a + (a + c + d)/b + (a + b + d)/c + (a + b + c)/d\nmin_value = solve(expression, a)\nprint(min_value[0])"
  },
  {
    "example_id": 481,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "9.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "F = [0, 1]\n\nfor i in range(2, 2025):\n    F.append((F[i - 1] + F[i - 2]) % 3)\n\nprint(sum(F[2017:2024 + 1]))"
  },
  {
    "example_id": 482,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "2.0",
      "3.0",
      "5.0",
      "2.0",
      "3.0",
      "5.0",
      "2.0",
      "7.0",
      "2.0"
    ],
    "annotated_answers": [
      "47.0"
    ],
    "solution": "# define symbols\nx, y = symbols('x y')\n\n# define equation\neq = (log(y, x) + log(x, y)) - 7\n\n# simplify equation\nsimplified = simplify(eq)\n\n# expand equation\nexpanded = expand(simplified)\n\n# solve equation\nsolution = solve(expanded)\n\n# print solution\nprint(solution)"
  },
  {
    "example_id": 483,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "6.0",
      "35.0",
      "6.0",
      "36.0",
      "5.0",
      "2.0",
      "1.0",
      "3.0",
      "35.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "# solve the equation\na, b, c, d = symbols('a b c d')\neq = 2*a**4 - 8*a**3 + 7*a**2 - 8*a + 7\nsol = solve(eq, a)\n\n# calculate the sum of the roots\nsum = 0\nfor x in sol:\n    sum += x\nprint(sum)"
  },
  {
    "example_id": 484,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "49896.0"
    ],
    "solution": "# Create symbols\na, b = symbols('a b')\n\n# Find the length of all lines\nlength = 2007\n\n# Find the maximum possible number of basic rectangles\nmax_basic_rectangles = 0\n\n# Find the maximum possible number of basic rectangles\nfor i in range(0, length):\n    # Find the number of segments\n    segments = 4\n\n    # Find the length of each segment\n    segment_length = length / segments\n\n    # Find the total length of the segments\n    total_length = length\n\n    # Find the maximum possible number of basic rectangles\n    max_basic_rectangles = max(max_basic_rectangles, segments)\n\n# Print the result\nprint(max_basic_rectangles)"
  },
  {
    "example_id": 485,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "4.0",
      "5.0",
      "4.0",
      "-10.0",
      "2.0",
      "5.0",
      "4.0",
      "1.0",
      "4.0",
      "5.0",
      "4.0",
      "-10.0",
      "2.0",
      "5.0",
      "4.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "z = symbols('z')\neq = z + 1/z - (1 + sqrt(5))/2\nz_solution = solve(eq, z)\nprint(z_solution[0])\nprint(z_solution[1])"
  },
  {
    "example_id": 486,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "n = symbols('n')\nomega = symbols('omega')\n\nomega_cube = omega**3\nomega_cube_1 = (omega + 1)**3\nomega_cube_1_simplified = simplify(omega_cube_1)\nomega_cube_1_expanded = expand(omega_cube_1_simplified)\nomega_cube_1_solved = solve(omega_cube_1_expanded - 1, omega)\n\nomega_cube_1_solved_values = []\n\nfor omega_solved in omega_cube_1_solved:\n    omega_cube_1_solved_values.append(omega_solved.evalf())\n\nprint(len(omega_cube_1_solved_values))"
  },
  {
    "example_id": 487,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "496.0"
    ],
    "solution": "n = 1\nwhile n < 1000:\n    x = (n-1)/n\n    if x.is_integer():\n        print(n)\n    n += 1"
  },
  {
    "example_id": 488,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "h = 6\nk = -5\na = 4\nb = 2\nprint(h + k + a + b)"
  },
  {
    "example_id": 489,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "4001.0"
    ],
    "annotated_answers": [
      "30.0"
    ],
    "solution": "a1, a2, a3, a4001 = symbols('a1 a2 a3 a4001')\n\neq = Eq(a1 + a4001, 50)\n\nsum = 0\nfor i in range(4000):\n    sum += 1/a2*a3\n\neq2 = Eq(sum, 10)\n\nsolve([eq, eq2], [a1, a2, a3, a4001])\n\nprint(Abs(a1 - a4001))"
  },
  {
    "example_id": 490,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "a, b, c, x = symbols('a b c x')\nexpr = (x + a)**2 / (a - b)*(a - c) + (x + b)**2 / (b - a)*(b - c) + (x + c)**2 / (c - a)*(c - b)\nprint(expr)"
  },
  {
    "example_id": 491,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq = x*y*z*(x + y + z) - (x + y)*(y + z)\neq_solved = solve(eq, x + y)\nprint(eq_solved[0])"
  },
  {
    "example_id": 492,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "49.0"
    ],
    "solution": "k = 1\nwhile True:\n    n = 2002//k\n    if n % 1 == 0 and n % k == 0:\n        k += 1\n    else:\n        print(k - 1)\n        break"
  },
  {
    "example_id": 493,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "3.0",
      "3.0",
      "3.0",
      "3.0",
      "3.0"
    ],
    "annotated_answers": [
      "157.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq1 = (a/b + b/c + c/a - 7)\neq2 = (b/a + c/b + a/c - 9)\neq3 = (a**3/b**3 + b**3/c**3 + c**3/a**3)\nsolve([eq1, eq2], [a, b, c])\nprint(eq3.subs(solve([eq1, eq2], [a, b, c])))"
  },
  {
    "example_id": 494,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "4014013.0"
    ],
    "solution": "a, b, c = symbols('a b c')\nsides = [2003, 2004, a*b]\ndiagonal = simplify(sqrt(a**2 + b**2))\nprint(diagonal)"
  },
  {
    "example_id": 495,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "253.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "x = symbols('x')\nf = x**3 + 4*x**2 + 5*x + 3\nf_0 = f.subs(x, 0)\nf_1 = f.subs(x, 1)\nf_2 = f.subs(x, 2)\nf_3 = f.subs(x, 3)\nf_5 = f.subs(x, 5)\nprint(f_5)"
  },
  {
    "example_id": 496,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "-2.0",
      "-1.0",
      "0.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "x = symbols('x')\nf = x*(x + 1)*(x + 2)*(x + 3)\nf_simplified = simplify(f)\nsolution = solve(f_simplified, x)\nprint(solution)"
  },
  {
    "example_id": 497,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\nf = Eq(2*x, simplify(8 - 2*x))\nf_max = solve(f, x)\nprint(f_max)"
  },
  {
    "example_id": 498,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1000.0"
    ],
    "annotated_answers": [
      "31.0"
    ],
    "solution": "n = 1000\nf = lambda x: x**2 + x + 1\nmax_n = 0\nmax_f = 0\nfor i in range(1, n+1):\n    f_i = f(i)\n    if f_i > max_f:\n        max_n = i\n        max_f = f_i\nprint(max_n)"
  },
  {
    "example_id": 499,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "3996.0"
    ],
    "solution": "n = 1998\ni = 1996\nk = 0\n\n# Compute the product\nproduct = 1\nwhile k < n - i:\n    product *= n - k\n    k += 1\n\n# Compute the numerator and denominator\nnumerator = product\ndenominator = product\n\n# Compute the difference between the numerator and denominator\ndifference = 0\nfor j in range(i, n):\n    difference += (n - j) * (n - j - 1)\n\n# Compute the quotient\nquotient = numerator / denominator\n\n# Compute the remainder\nremainder = quotient % difference\n\n# Print the remainder\nprint(remainder)"
  },
  {
    "example_id": 500,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0",
      "1.0",
      "2.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "3.0",
      "4.0"
    ],
    "annotated_answers": [
      "100.0"
    ],
    "solution": "for a in range(1, 101):\n    for b in range(1, 101):\n        for c in range(1, 101):\n            if a**2 + b**2 + c**2 == a*b + a*c + b*c:\n                print(a, b, c)"
  },
  {
    "example_id": 501,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "def get_x(y):\n    x = y**2 - 6*y + 5\n    return x\n\ndef get_y(x):\n    y = abs(x)\n    return y\n\ndef get_sum(n):\n    sum = 0\n    for y in range(1, n+1):\n        x = get_x(y)\n        if get_y(x) == y:\n            sum += x\n    return sum\n\nprint(get_sum(100))"
  },
  {
    "example_id": 502,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\neq = x**3 - 3*x**2 - 9*x + 30\nremainder = sympy.rem(eq, x - 3)\nprint(remainder)"
  }
]