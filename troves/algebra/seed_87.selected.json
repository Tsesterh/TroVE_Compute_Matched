[
  {
    "example_id": 0,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "64.0",
      "7.0",
      "224.0",
      "6.0",
      "336.0",
      "5.0",
      "280.0",
      "4.0",
      "140.0",
      "3.0",
      "42.0",
      "2.0",
      "7.0",
      "3.0",
      "0.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "n = symbols('n')\ns = 1 + 2*(n-1)\ns3 = s**3\ns4 = s**4\neq = s3*s4 - 5\nsolution = solve(eq, n)\nn_value = solution[0]\nprint(n_value)"
  },
  {
    "example_id": 1,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-2.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "a = symbols('a')\neq = (8**(-1))/(4**(-1)) - a**(-1) - 1\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 2,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "256.0",
      "2.0",
      "2.0",
      "2.0",
      "256.0"
    ],
    "annotated_answers": [
      "268.0"
    ],
    "solution": "# define the variables\na = symbols('a')\nb = symbols('b')\nc = symbols('c')\nd = symbols('d')\n\n# define the equation\neq = (a**2) + (b**2) + (c**2) + (d**2) - 256\n\n# solve for a, b, c, d\nsolution = solve(eq, [a, b, c, d])\n\n# print the solutions\nprint(solution)"
  },
  {
    "example_id": 3,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7945.0"
    ],
    "annotated_answers": [
      "7945.0"
    ],
    "solution": "rent = 5000\nelectricity = 1.45\ntotal_cost = 16520.25\nelectricity_used = (total_cost - rent) / electricity\nprint(electricity_used)"
  },
  {
    "example_id": 4,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.75"
    ],
    "annotated_answers": [
      "7.5"
    ],
    "solution": "# Define variables\nflour = symbols('flour')\ncake = 2\n\n# Define equation\neq = flour*cake - 1.5\n\n# Solve for flour\nsolution = solve(eq, flour)\n\n# Print solution\nprint(solution)"
  },
  {
    "example_id": 5,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "164.0"
    ],
    "solution": "def get_largest_matches(win_ratio):\n    return int(1 / (1 - win_ratio))\n\ndef get_win_ratio(matches):\n    return 1 / (1 + matches)\n\nwin_ratio = get_win_ratio(4)\nlargest_matches = get_largest_matches(win_ratio)\nprint(largest_matches)"
  },
  {
    "example_id": 6,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "60.0"
    ],
    "annotated_answers": [
      "30.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq = (x**2) - (y**2) - 60\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 7,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "8.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq1 = x/y - 2\neq2 = z/x - 4\nsol = solve([eq1, eq2], [x, y, z])\nprint(sol)"
  },
  {
    "example_id": 8,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x, y = symbols('x, y')\neq1 = x + y - 12\neq2 = x - y - 8\neq3 = 2*x - x*y\nsol1 = solve([eq1, eq2], [x, y])\nsol2 = solve(eq3, x)\nx_value = sol2[0]\nprint(x_value)"
  },
  {
    "example_id": 9,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.333333333333333"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "K = 7 - 4*7/6\nprint(K)"
  },
  {
    "example_id": 10,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "202.5"
    ],
    "annotated_answers": [
      "1545.0"
    ],
    "solution": "x = symbols('x')\neq = (405/3)*(3/2) - x\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 11,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "81.0"
    ],
    "solution": "x = symbols('x')\neq = (x-1/x)**4\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 12,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "16.0",
      "-1.0",
      "16.0",
      "1.0"
    ],
    "annotated_answers": [
      "125.0"
    ],
    "solution": "m, n = symbols('m n')\nsum1 = 2000\nsum2 = 16*sum1\nratio = m/n\n# Find m and n\nm, n = solve([sum2 - (ratio**n)*sum1, m*n - ratio], [m, n])\nprint(m+n)"
  },
  {
    "example_id": 13,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3702.0"
    ],
    "annotated_answers": [
      "3702.0"
    ],
    "solution": "N = 1/3\nprint(floor(10*N) + floor(100*N) + floor(1000*N) + floor(10000*N))"
  },
  {
    "example_id": 14,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "40.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "# Define the distance formula\ndef distance(x, y):\n    return math.floor(math.sqrt((x - 0)**2 + (y - 0)**2))**2\n\n# Define the labeling function\ndef label(x, y):\n    return distance(x, y)\n\n# Define the counter\ncounter = 0\n\n# Iterate through all points\nfor x in range(-100, 101):\n    for y in range(-100, 101):\n        if label(x, y) == 25:\n            counter += 1\n\n# Print the answer\nprint(counter)"
  },
  {
    "example_id": 15,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "10.0",
      "2.0",
      "6.0"
    ],
    "annotated_answers": [
      "33.0"
    ],
    "solution": "x, y, c = symbols('x y c')\neq = x**2 - 10*x + y**2 + 6*y + c\nsolution = solve(eq, c)\nc_value = solution[0]\nprint(c_value)"
  },
  {
    "example_id": 16,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "# circle equation\nx, y = symbols('x y')\neq = x**2 + y**2 + 2*x + 5*y - 11\n\n# find A, B, C, D\nA = eq.coeff(x**2)\nB = eq.coeff(x)\nC = eq.coeff(y**2)\nD = eq.coeff(y)\n\n# find A+B+C+D\nsum = A + B + C + D\n\n# print the result\nprint(\"A+B+C+D =\", sum)"
  },
  {
    "example_id": 17,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "# create symbols for the three consecutive even integers\na = symbols('a')\nb = symbols('b')\nc = symbols('c')\n\n# create the equation\neq = 2*a + 2*b + 2*c + a*b*c\n\n# solve for the smallest of the three integers\nsolution = solve(eq, a)\n\n# extract the smallest integer\nsmallest = solution[0]\n\n# print the smallest integer\nprint(smallest)"
  },
  {
    "example_id": 18,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\neq = a + b - 25\nsolution = solve(eq, b)\nb_value = solution[0]\nprint(b_value)"
  },
  {
    "example_id": 19,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.23007451985306",
      "43.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = x**(1/12) - 8**4\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 20,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1994.5"
    ],
    "annotated_answers": [
      "445.0"
    ],
    "solution": "# Define the variables\ncost_fees = 1000\ncost_widget = 0.50\nprice_widget = 2.75\n\n# Define the equation\nn_widgets = symbols('n_widgets')\neq = cost_fees + n_widgets * cost_widget - price_widget\n\n# Solve the equation\nsolution = solve(eq, n_widgets)\n\n# Find the solution\nn_widgets_value = solution[0]\nprint(n_widgets_value)"
  },
  {
    "example_id": 21,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "# 50% of 1/3 of 36\nresult = 0.5 * (1/3) * 36\nprint(result)"
  },
  {
    "example_id": 22,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "2.0",
      "3.0",
      "5.0",
      "2.0",
      "2.0",
      "1.0",
      "7.0",
      "2.0",
      "3.0",
      "5.0",
      "2.0",
      "-2.0"
    ],
    "annotated_answers": [
      "48.0"
    ],
    "solution": "x = symbols('x')\neq = x + (1/x) - 7\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value**2 + (1/x_value**2) + 1)"
  },
  {
    "example_id": 23,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "f = symbols('f(x)')\ng = symbols('g(x)')\nf_degree = floor(f.as_poly().degree())\ng_degree = floor(g.as_poly().degree())\nf_plus_g_degree = f_degree + g_degree\nprint(f_plus_g_degree)"
  },
  {
    "example_id": 24,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "512.0"
    ],
    "annotated_answers": [
      "512.0"
    ],
    "solution": "x = 2\nprint(x**(x+1)**x)"
  },
  {
    "example_id": 25,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "65536.0"
    ],
    "annotated_answers": [
      "64.0"
    ],
    "solution": "def cells_at_day(n):\n    if n == 0:\n        return 2\n    else:\n        return 2 * cells_at_day(n-1)\n\nprint(cells_at_day(15))"
  },
  {
    "example_id": 26,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-9.0"
    ],
    "annotated_answers": [
      "-9.0"
    ],
    "solution": "y = symbols('y')\neq = y**2 - 81\nsolution = solve(eq, y)\ny_value = solution[0]\nprint(y_value)"
  },
  {
    "example_id": 27,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1120.0"
    ],
    "annotated_answers": [
      "1120.0"
    ],
    "solution": "print(43**2 - 27**2)"
  },
  {
    "example_id": 28,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "print(math.log(27, 3))"
  },
  {
    "example_id": 29,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1472.0"
    ],
    "annotated_answers": [
      "194.0"
    ],
    "solution": "a = 2\nd = 30\nn = 50\ns = a + (n - 1) * d\nprint(s)"
  },
  {
    "example_id": 30,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "# Define the variables\na, b, c, d = symbols('a b c d')\n\n# Define the equations\neq1 = (a**2 + b**2 + c**2 + d**2) - (a*b + a*c + b*c + d**2)\neq2 = (a**2 + b**2 + c**2 + d**2) - (a*b + b*c + c*d + d**2)\neq3 = (a**2 + b**2 + c**2 + d**2) - (a*c + b*d + c*d + d**2)\neq4 = (a**2 + b**2 + c**2 + d**2) - (a*d + b*c + c*d + d**2)\n\n# Solve the equations\nsolution = solve([eq1, eq2, eq3, eq4], [a, b, c, d])\n\n# Print the solution\nprint(solution)"
  },
  {
    "example_id": 31,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-312.50000000000017",
      "-541.2658773652738"
    ],
    "annotated_answers": [
      "625.0"
    ],
    "solution": "print((-125)**(4/3))"
  },
  {
    "example_id": 32,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "9.0",
      "20.0",
      "1.0",
      "2.0",
      "3.0",
      "4.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "from sympy import symbols, Abs\nx = symbols('x')\nf = Abs(1/(x**2 + 3*x - 4)) + Abs(1/(x**2 + 9*x + 20))\nprint(f.as_expr())"
  },
  {
    "example_id": 33,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-3.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "import math\ncenter_x = (7 + -3) / 2\ncenter_y = (-6 + -4) / 2\nprint(center_x + center_y)"
  },
  {
    "example_id": 34,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "a = symbols('a')\nf = 1/(1-a)\neq = f**(-1) * a * f\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 35,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "m = 1\nn = 1\n\nprint(m+n)"
  },
  {
    "example_id": 36,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0",
      "1.0",
      "1.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "a, b = symbols('a b')\neq = 2*a*b - 7*a + 2\nsolution = solve(eq, [a, b])\nprint(1/(a-1) + 1/(b-1))"
  },
  {
    "example_id": 37,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "expr = (9-4*I) - (-3-4*I)\nprint(expr)"
  },
  {
    "example_id": 38,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-55.0"
    ],
    "annotated_answers": [
      "-55.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\neq1 = (-1)**2*a + (-1)*b + c - 0\neq2 = 0**2*a + 0*b + c - 5\neq3 = 5**2*a + 5*b + c - 0\nsolution = solve([eq1, eq2, eq3], [a, b, c])\na_value = solution[a]\nb_value = solution[b]\nc_value = solution[c]\nprint(100*a_value + 10*b_value + c_value)"
  },
  {
    "example_id": 39,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "839808.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq1 = 12**2 * 18**3 - 2**x * 3**y\neq2 = eq1.expand()\nsolution = solve(eq2, x, y)\nx_value = solution[0][0]\ny_value = solution[0][1]\nprint(x_value + y_value)"
  },
  {
    "example_id": 40,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-129.0",
      "129.0",
      "2.0",
      "129.0"
    ],
    "annotated_answers": [
      "103.0"
    ],
    "solution": "# Define variables\nm = 129\nn = symbols('n')\n\n# Define the equation\neq = (m-n) * (m+n) * (m-2*n)\n\n# Solve for n\nsolution = solve(eq, n)\n\n# Print the result\nprint(solution)"
  },
  {
    "example_id": 41,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.4641016151377544"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "def my_sqrt(n):\n    if n < 0:\n        raise ValueError(\"n must be non-negative\")\n    x = n\n    while True:\n        y = (x + n / x) / 2\n        if y >= x:\n            return y\n        x = y\n\n\nn = 12\nans = my_sqrt(n)\nprint(ans)"
  },
  {
    "example_id": 42,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "575.0"
    ],
    "solution": "# x = 1001\nx = 1001\n# y = n\ny = floor(1000/x)\nprint(y)"
  },
  {
    "example_id": 43,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "# Declare variables\nx = 1024\ny = 0.125\nz = 2**12\n\n# Simplify the expression\nresult = (x/y)/z\nprint(result)"
  },
  {
    "example_id": 44,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "blue = 4\nyellow = 3\nblue_add = 5\nyellow_remove = 3\nblue_before = blue - yellow_remove + blue_add\nprint(blue_before)"
  },
  {
    "example_id": 45,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "13.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "from math import sqrt\n\ndef distance(p1, p2):\n    return sqrt((p2[0] - p1[0])**2 + (p2[1] - p1[1])**2)\n\nprint(distance((1,2), (-4, -10)))"
  },
  {
    "example_id": 46,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "16.0"
    ],
    "annotated_answers": [
      "-10.0"
    ],
    "solution": "x1 = 6 + 1\ny1 = 8 + 1\nprint(x1 + y1)"
  },
  {
    "example_id": 47,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a = 4\nb = -1\nc = -1\nprint(a+b+c)"
  },
  {
    "example_id": 48,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "399.0",
      "2.0"
    ],
    "annotated_answers": [
      "286.0"
    ],
    "solution": "n = symbols('n')\na = 13\nd = 10\ns = a + d*n\neq = s - 2008\nsolution = solve(eq, n)\nnum_ints = solution[0]\nprint(num_ints)"
  },
  {
    "example_id": 49,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "14.0",
      "-15.0"
    ],
    "annotated_answers": [
      "28.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\n\nx = 14.6\ny = -14.6\n\nfloor_x = floor(x)\nceil_x = ceil(x)\n\nfloor_y = floor(y)\nceil_y = ceil(y)\n\neq1 = floor_x - a\neq2 = ceil_x - a\neq3 = floor_y - b\neq4 = ceil_y - b\n\nsolution1 = solve(eq1, a)\nsolution2 = solve(eq2, a)\nsolution3 = solve(eq3, b)\nsolution4 = solve(eq4, b)\n\na_value = solution1[0]\nb_value = solution3[0]\n\nprint(a_value)\nprint(b_value)"
  },
  {
    "example_id": 50,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "b = 3\nprint(b)"
  },
  {
    "example_id": 51,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5000.0"
    ],
    "annotated_answers": [
      "5000.0"
    ],
    "solution": "print(255**2 - 245**2)"
  },
  {
    "example_id": 52,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x1 = 2\ny1 = 3\nx2 = 4\ny2 = 3\nb = (y2 - y1)/(x2 - x1)\nc = y1 - b*x1\nprint(c)"
  },
  {
    "example_id": 53,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x = symbols('x')\neq = 7**log(49, x) - 49\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 54,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq1 = 125**b - 5\neq2 = 27**b - c\nsolution = solve([eq1, eq2], [a, b, c])\nc_value = solution[0][2]\nprint(c_value)"
  },
  {
    "example_id": 55,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-6.0",
      "2.0",
      "48.0",
      "108.0",
      "2.0",
      "2.0",
      "-6.0",
      "2.0",
      "48.0",
      "108.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x, y = symbols('x y')\nexpr = 2*x**2 + 3*y**2 + 8*x - 24*y + 62\nsolution = solve(expr, [x, y])\nprint(solution)"
  },
  {
    "example_id": 56,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "144.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "# Define variables\nF = 3\nD = 4\nM = 12\n\n# Define the problem\nF_miles = F * D * M\nprint(\"The fewest number of miles Suzanne can walk in February is: \", floor(F_miles))"
  },
  {
    "example_id": 57,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "s = symbols('s')\nx = symbols('x')\neq = (1/2)*x**2 + s*x - 1/2\nsolution = solve(eq, x)\nx_values = []\nfor i in solution:\n    if isinstance(i, int):\n        x_values.append(i)\nx_values = list(set(x_values))\ns_values = []\nfor i in x_values:\n    s_values.append(int(floor(i)))\ns_values = list(set(s_values))\ntotal_sum = 0\nfor i in s_values:\n    total_sum += i\nprint(total_sum)"
  },
  {
    "example_id": 58,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0",
      "7.0",
      "8.0",
      "1.0",
      "2.0",
      "2.0",
      "7.0",
      "8.0",
      "7.0",
      "4.0",
      "7.0",
      "2.0",
      "7.0",
      "8.0",
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq1 = a - 7*b + 8*c - 4\neq2 = 8*a + 4*b - c - 7\na_value = solve(eq1, a)[0]\nb_value = solve(eq1, b)[0]\nc_value = solve(eq1, c)[0]\na2_value = a_value**2\nb2_value = b_value**2\nc2_value = c_value**2\na2_b2_c2 = a2_value + b2_value + c2_value\nprint(a2_b2_c2)"
  },
  {
    "example_id": 59,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.6",
      "2.5",
      "6.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "a,b,c,d = symbols('a b c d')\neq1 = a/b - 3/5\neq2 = b/c - 15/6\neq3 = c/d - 6\n\n# Solve equations\neq1_solution = solve(eq1, a)\neq2_solution = solve(eq2, b)\neq3_solution = solve(eq3, c)\n\n# Get solution for a\na_solution = eq1_solution[0]\n\n# Get solution for b\nb_solution = eq2_solution[0]\n\n# Get solution for c\nc_solution = eq3_solution[0]\n\n# Print solution\nprint(a_solution)\nprint(b_solution)\nprint(c_solution)"
  },
  {
    "example_id": 60,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "216.0"
    ],
    "solution": "# Define the variables\nr1, h1, r2, h2 = symbols('r1 h1 r2 h2')\n\n# Define the equation\neq = (pi * r1**2 * h1) - (pi * r2**2 * h2)\n\n# Solve for the height of the second cone\nsolution = solve(eq, h2)\n\n# Print the solution\nprint(solution)"
  },
  {
    "example_id": 61,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "9.0",
      "2.0",
      "32.0",
      "2.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "x, y = symbols('x y')\neq = y**2 - 3*y*x + 8\nsolution = solve(eq, y)\ny_value = solution[0]\nprint(y_value)"
  },
  {
    "example_id": 62,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x, y, a, b, c = symbols('x y a b c')\neq1 = a*x + b*y + c - x - 7\neq2 = a + b*x + c*y - 2*x - 6*y\neq3 = a*y + b + c*x - 4*x - y\nsolution = solve([eq1, eq2, eq3], [a, b, c])\nprint(solution)"
  },
  {
    "example_id": 63,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "165.0"
    ],
    "annotated_answers": [
      "165.0"
    ],
    "solution": "smallest_multiples = [3, 6, 9, 12, 15, 18, 21, 24, 27, 30]\nprint(sum(smallest_multiples))"
  },
  {
    "example_id": 64,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4005.0"
    ],
    "annotated_answers": [
      "4005.0"
    ],
    "solution": "n = 2003\nprint(n*2-1)"
  },
  {
    "example_id": 65,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x = symbols('x')\nc = symbols('c')\nf = 4*x**7+x**5+3*x**2-2*x+c\neq = f.subs(x, -1)\nsolution = solve(eq, c)\nc_value = solution[0]\nprint(c_value)"
  },
  {
    "example_id": 66,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "pints = 1.5\nmiles = 3\ntotal_miles = 10\npints_per_mile = pints/miles\ntotal_pints = pints_per_mile*total_miles\nprint(total_pints)"
  },
  {
    "example_id": 67,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a, b = symbols('a b')\neq = a*b-a-b\nsolution = solve(eq, a)\na_value = solution[0]\nb_value = a_value / a\nprint(a_value, b_value)"
  },
  {
    "example_id": 68,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0"
    ],
    "annotated_answers": [
      "3.5"
    ],
    "solution": "t = symbols('t')\ny = -16*t**2 + 26*t + 105\nsolution = solve(y, t)\nt_value = solution[0]\nprint(floor(t_value))"
  },
  {
    "example_id": 69,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.999500998003992",
      "-0.500249625561658",
      "0.866169477209129",
      "0.999500998003992",
      "-0.500249625561658",
      "0.866169477209129"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "x = symbols('x')\neq = (2003/2004)*x + 1 + 1/x\nroots = solve(eq, x)\nreciprocal_sum = 0\nfor root in roots:\n    reciprocal_sum += 1/root\nprint(reciprocal_sum)"
  },
  {
    "example_id": 70,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "5.4"
    ],
    "solution": ""
  },
  {
    "example_id": 71,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-10.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "n = symbols('n')\neq = (n**2-n)/2 - 55\nsolution = solve(eq, n)\nn_value = solution[0]\nprint(n_value)"
  },
  {
    "example_id": 72,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "4.0",
      "233.0",
      "4.0"
    ],
    "annotated_answers": [
      "0.5"
    ],
    "solution": "x = symbols('x')\neq = (2*x+5)*(x-3) - 14\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 73,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-5.0",
      "3.0",
      "15.0",
      "2.0",
      "62.0",
      "56.0",
      "2.0",
      "3.0",
      "4.0"
    ],
    "annotated_answers": [
      "-5.0"
    ],
    "solution": "x, a = symbols('x a')\neq = (x**2 - 3*x + 4)*(2*x**2 + a*x + 7) - 2*x**4 + 11*x**3 - 30*x**2 - 41*x + 28\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 74,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "6.0",
      "2.0",
      "2.0",
      "6.0",
      "2.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\nsol = solve(2*x**2+4*x-1, x)\nsum_of_squares = 0\nfor s in sol:\n    sum_of_squares += s**2\nprint(sum_of_squares)"
  },
  {
    "example_id": 75,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "13.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "import math\n\ndef distance(a, b):\n    return math.sqrt((b[0] - a[0]) ** 2 + (b[1] - a[1]) ** 2)\n\nline_length = distance((-3, 7), (2, -5))\nprint(line_length)"
  },
  {
    "example_id": 76,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0",
      "10.0",
      "90.0",
      "10.0"
    ],
    "annotated_answers": [
      "40.0"
    ],
    "solution": "Wells = 105\nTed = 105\nVino = 105\ntotal = Wells + Ted\nextra = total - 100\ntotal_cost = 10\n\nWells_cost = 0\nTed_cost = 0\nVino_cost = 0\n\nif extra > 0:\n    Wells_cost = floor(extra/100) * 10\n    Ted_cost = floor(extra/100) * 10\n    Vino_cost = extra - (Wells_cost + Ted_cost)\n\nprint(\"Wells cost: \", Wells_cost)\nprint(\"Ted cost: \", Ted_cost)\nprint(\"Vino cost: \", Vino_cost)\nprint(\"Total cost: \", total_cost)"
  },
  {
    "example_id": 77,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.75"
    ],
    "annotated_answers": [
      "73.5"
    ],
    "solution": "k = 32\nj = 42 / 56\nprint(j)"
  },
  {
    "example_id": 78,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "43.0"
    ],
    "annotated_answers": [
      "43.0"
    ],
    "solution": "x = 5 ** 2 + 18\nprint(x)"
  },
  {
    "example_id": 79,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "1.0"
    ],
    "annotated_answers": [
      "2015.0"
    ],
    "solution": "b = symbols('b')\nn = symbols('n')\nx = symbols('x')\n\nTb = (b*(b+1))/2\nTb_1 = (b+1)*(b+2)/2\nTx = (x*(x+1))/2\n\neq = Tb_1 - Tb - Tx\nsolution = solve(eq, b)\nb_value = solution[0]\nprint(b_value)"
  },
  {
    "example_id": 80,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "350.0"
    ],
    "annotated_answers": [
      "350.0"
    ],
    "solution": "print(113+276-13-26)"
  },
  {
    "example_id": 81,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "625.0"
    ],
    "annotated_answers": [
      "400.0"
    ],
    "solution": "perimeter = 100\nwidth = perimeter / 4\narea = width * width\nprint(area)"
  },
  {
    "example_id": 82,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = (2**x - 2) * (5 * 2**x + 10) - 3 * 4**x + 12\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 83,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = (2**(x+1))**3*4**x - 8192\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 84,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "81.0",
      "2.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "a, b, x = symbols('a b x')\neq = a**2 + 2*a*b + b**2 - 2*x\neq2 = 2*x - 81\nsolution = solve([eq, eq2], [a, b, x])\nx_value = solution[0][2]\nprint(x_value)"
  },
  {
    "example_id": 85,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "27.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "degree_f = 6\ndegree_g = 3\ndegree_h = 36 - degree_f - degree_g\nprint(degree_h)"
  },
  {
    "example_id": 86,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "-15.0"
    ],
    "solution": "x = symbols('x')\neq1 = x - 7\neq2 = 7 - x\neq = eq1 - eq2\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 87,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "f_pi_over_3 = math.floor(math.pi/3)\nf_sqrt_45 = math.ceil(math.sqrt(45))\nf_8_squared_over_3 = math.floor(8**(2/3))\nprint(f_pi_over_3 + f_sqrt_45 + f_8_squared_over_3)"
  },
  {
    "example_id": 88,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "42.0",
      "48.0",
      "5.0",
      "28.0",
      "5.0"
    ],
    "annotated_answers": [
      "38.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq1 = 5*x - 2*y - 7\neq2 = 3*x + y - 2\nsolution1 = solve(eq1, x)\nsolution2 = solve(eq2, y)\nx_value = solution1[0]\ny_value = solution2[0]\nprint(24*x_value - 14*y_value)"
  },
  {
    "example_id": 89,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-10.0",
      "3.0",
      "-9.0",
      "-9.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\ny = (x - 3)/(x**2 + 7*x - 30)\n\n# Vertical asymptotes\nasymptotes = []\n\n# Horizontal asymptotes\n# 1.\nh_asymptote = solve(y.as_numer_denom()[1], x)\nh_asymptote = h_asymptote[0]\nasymptotes.append(h_asymptote)\n\n# 2.\nh_asymptote = solve(y.as_numer_denom()[0], x)\nh_asymptote = h_asymptote[0]\nasymptotes.append(h_asymptote)\n\n# 3.\nh_asymptote = solve(y.as_numer_denom()[0] - y.as_numer_denom()[1], x)\nh_asymptote = h_asymptote[0]\nasymptotes.append(h_asymptote)\n\n# 4.\nh_asymptote = solve(y.as_numer_denom()[1] - y.as_numer_denom()[0], x)\nh_asymptote = h_asymptote[0]\nasymptotes.append(h_asymptote)\n\nprint(asymptotes)"
  },
  {
    "example_id": 90,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "75.0"
    ],
    "annotated_answers": [
      "75.0"
    ],
    "solution": "import math\n\n# 8 fish per cubic meter\n# 600 fish\n# 600 / 8 = 75 cubic meters\n\nprint(75)"
  },
  {
    "example_id": 91,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "print(531**2 - 2*531*530 + 530**2)"
  },
  {
    "example_id": 92,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "0.0",
      "1.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x = symbols('x')\neq = x**(-1) > x\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 93,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "three_squigs = 3\none_goolee = 1\none_squig = 2\ntotal_weight = three_squigs + one_goolee\nprint(total_weight)"
  },
  {
    "example_id": 94,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "8.0",
      "0.25",
      "2.0",
      "1.0",
      "8.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\n\n# Ratio of two numbers is 3:5\nratio = (3*y)/(5*x)\n\n# When 4 is subtracted from the lesser of the two numbers and 8 is added to the larger of the two, the new ratio is 2:7\nnew_ratio = (2*y)/(7*x)\n\n# The greater of the two numbers before 8 is added to it\ngreater_num = (x*y)**(1/2)\n\n# The smaller of the two numbers before 4 is subtracted from the larger of the two numbers\nlesser_num = (x*y)**(1/2) - 4\n\n# New ratio is 2:7\nnew_ratio_eq = new_ratio - (2*lesser_num)/(7*greater_num)\n\n# Substitute new ratio with ratio\nsol = solve(new_ratio_eq, x)\nx_value = sol[0]\n\n# print(x_value)\nprint(x_value)"
  },
  {
    "example_id": 95,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-0.41742430504416",
      "1.4142135623731"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x = symbols('x')\nh = (25 - x**2)**0.5 + (x - 2)**0.5\nwidth = (h.subs(x, 2) - h.subs(x, 0))\nprint(width)"
  },
  {
    "example_id": 96,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1500.0"
    ],
    "annotated_answers": [
      "187.5"
    ],
    "solution": "bottle_size = 12\ncalories_per_ounce = 125\ncalories_per_bottle = calories_per_ounce * bottle_size\nprint(calories_per_bottle)"
  },
  {
    "example_id": 97,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "k = symbols('k')\neq = (3**k)**6 - 3**6\nsolution = solve(eq, k)\nk_value = solution[0]\nprint(k_value)"
  },
  {
    "example_id": 98,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "print(2 * (-2)**2 + 3 * (-2) + 4)"
  },
  {
    "example_id": 99,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "243.0"
    ],
    "annotated_answers": [
      "243.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\n\neq1 = 2**a - 32\neq2 = a**b - 125\n\nsolution = solve([eq1, eq2], [a, b])\n\na_value = solution[0][0]\nb_value = solution[0][1]\n\nprint(b_value**a_value)"
  },
  {
    "example_id": 100,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "8.0",
      "641.0",
      "8.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "# Define the variables\np = symbols('p')\n\n# Define the equation\neq = 120 - 3*p - 12*p**2\n\n# Find the minimum value of p\nsolution = solve(eq, p)\n\n# Find the maximum value of p\np_value = solution[0]\n\n# Print the answer\nprint(p_value)"
  },
  {
    "example_id": 101,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "4.0",
      "2.0",
      "2.0",
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\na = symbols('a')\neq = a*x**2 + 8*x + 4\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 102,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-9.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "81.0",
      "99999997.0",
      "810000.0",
      "1.0",
      "3.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "81.0",
      "99999997.0",
      "810000.0",
      "1.0",
      "3.0",
      "3.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "a = symbols('a')\neq = 20000 - a*3 + a**3/3\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 103,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "80.0"
    ],
    "annotated_answers": [
      "80.0"
    ],
    "solution": "print((34-10)+(20-9)+(55-10))"
  },
  {
    "example_id": 104,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "700.0"
    ],
    "annotated_answers": [
      "700.0"
    ],
    "solution": "print(32**2 - 18**2)"
  },
  {
    "example_id": 105,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.25"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x = symbols('x')\neq1 = (3/2)**2\neq2 = ceil((3/2)**2)\neq3 = ceil(eq2)\neq4 = eq1 + eq3\nprint(eq4)"
  },
  {
    "example_id": 106,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "16.0",
      "15.0",
      "15.0",
      "16.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "for i in range(2, 20):\n    for j in range(2, 20):\n        if i*j - (i+j) == 39:\n            print(i+j)"
  },
  {
    "example_id": 107,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "b = 2\nprint(b)"
  },
  {
    "example_id": 108,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "def f(n):\n    if n > 1:\n        return n**3 + 2*n - 1\n    else:\n        return n - 1\n\nprint(f(0) + f(1) + f(2))"
  },
  {
    "example_id": 109,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "2.0"
    ],
    "solution": ""
  },
  {
    "example_id": 110,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "16.0",
      "2.0",
      "9.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "x = symbols('x')\ns = (x + 2*x + x)/3\ns_squared = s**2\nprint(s_squared)"
  },
  {
    "example_id": 111,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-33.0"
    ],
    "annotated_answers": [
      "27.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 - 6*x + 2 - 29\nsolution = solve(eq, x)\na = solution[0]\nb = solution[1]\nprint(2*a - 3*b)"
  },
  {
    "example_id": 112,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "4.0"
    ],
    "solution": ""
  },
  {
    "example_id": 113,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-3.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "x = symbols('x')\neq = (5+x)/(8+x) - 0.4\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 114,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-6.0"
    ],
    "annotated_answers": [
      "-6.0"
    ],
    "solution": "from math import sin, pi\ndef g(x):\n    return -6*sin(x*pi/6)\n\nprint(g(g(-1)))"
  },
  {
    "example_id": 115,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "c = 0"
  },
  {
    "example_id": 116,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "c = -1\nprint(c)"
  },
  {
    "example_id": 117,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\neq = (5*x)**(1/2)*(10*x)**(1/2)*(18*x)**(1/2) - 30\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 118,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "def f(x):\n    return x**2 + 12\n\nm = 3\nwhile f(m) == 3*f(m/3):\n    m += 1\n\nprint(m)"
  },
  {
    "example_id": 119,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\neq = 2*x*(x-10) + 50\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 120,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\neq = 2**8 - 4**x\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 121,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "34.0"
    ],
    "solution": "y = 8 - 5*(-2) + 4*(-2)^2\nprint(y)"
  },
  {
    "example_id": 122,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "20.0"
    ],
    "solution": ""
  },
  {
    "example_id": 123,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0",
      "19.0",
      "9.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\nk = symbols('k')\n\nA = (9, 1)\nB = (19, k)\nC = (7, 0)\n\n# equation of line\neq = (y-1)/(x-9) - (B[1]-A[1])/(B[0]-A[0])\n\n# solve for k\nk_value = solve(eq, k)[0]\nprint(k_value)"
  },
  {
    "example_id": 124,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "33822.557760000025"
    ],
    "annotated_answers": [
      "74726.0"
    ],
    "solution": "amount = 100000 * 1.06**5 - 100000\nprint(amount)"
  },
  {
    "example_id": 125,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 - 5*x - 36\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 126,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "# log_2(1) = 0\nprint(log(1,2))"
  },
  {
    "example_id": 127,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6561.0"
    ],
    "annotated_answers": [
      "24.0"
    ],
    "solution": "N = 2**3**2**3\na = log(N, 2)\nprint(a)"
  },
  {
    "example_id": 128,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.21213203435596426"
    ],
    "annotated_answers": [
      "93.0"
    ],
    "solution": "# 1. Express the given expression in the form A\\sqrt{B}/C where A and C are relatively prime integers, C is positive, and B is not divisible by the square of any prime.\nA = 6\nB = 245 + 3*125 + 4*45\nC = (245 + 3*125 + 4*45)**(1/2)\nA_over_C = A/C\nprint(A_over_C)\n\n\n# 2. Find the value of A+B+C.\nprint(A+B+C)"
  },
  {
    "example_id": 129,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "14.0"
    ],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "u = symbols('u')\neq = (u+4)*(u-1) - (u-3)*(u+6)\nsolution = simplify(eq)\nprint(solution)"
  },
  {
    "example_id": 130,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "13.5"
    ],
    "annotated_answers": [
      "13.5"
    ],
    "solution": "A = 1/4\nB = -1/2\ndifference = abs(18*A - 18*B)\nprint(difference)"
  },
  {
    "example_id": 131,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "3.0",
      "1.0",
      "-1.0",
      "1.0",
      "1.0",
      "-3.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "# Define functions f and g\nf = lambda x: (4 - x) / 2\ng = lambda x: 2 * x - 4\n\n# Evaluate f(g(1)) and g(f(1))\nf_g1 = f(g(1))\ng_f1 = g(f(1))\n\n# Evaluate f(g(1)) * g(f(1))\nf_g1_g_f1 = f_g1 * g_f1\n\n# Print result\nprint(\"f(g(1)) =\", f_g1)\nprint(\"g(f(1)) =\", g_f1)\nprint(\"f(g(1)) * g(f(1)) =\", f_g1_g_f1)"
  },
  {
    "example_id": 132,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "32.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "a = 20/2\nb = 44/2\nprint(a+b)"
  },
  {
    "example_id": 133,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\nd = symbols('d')\nm = symbols('m')\nn = symbols('n')\n\n# Distance between A and M\ndistance_a_m = (c-a) + (d-b)\n\n# Distance between B and M\ndistance_b_m = (c-a) + (d-b)\n\n# Distance between M and M'\ndistance_m_m = (m-c) + (n-d)\n\n# Distance between M and M'\ndistance_m_m = distance_a_m + distance_b_m\n\nprint(distance_m_m)"
  },
  {
    "example_id": 134,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-50.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "m = symbols('m')\nn = symbols('n')\neq1 = 70 + m + n - 20\neq2 = 2 * n\nsol1 = solve(eq1, n)\nsol2 = solve(eq2, n)\nn_value = sol1[0]\nn_value = n_value.subs(m, sol2[0])\nprint(n_value)"
  },
  {
    "example_id": 135,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "2.0",
      "5.0",
      "1.0",
      "4.0",
      "3.0",
      "1.0",
      "5.0",
      "1.0",
      "16.0",
      "1.0",
      "5.0",
      "1.0",
      "8.0"
    ],
    "annotated_answers": [
      "125.0"
    ],
    "solution": "x = (4/(root(5, 1) + 1) * (root(5, 4) + 1) * (root(5, 8) + 1) * (root(5, 16) + 1))\nprint(x)"
  },
  {
    "example_id": 136,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "f = lambda x: x + 1\ng = lambda x: x**2 + 3\nf_of_g = f(g(2))\nprint(f_of_g)"
  },
  {
    "example_id": 137,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-3.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "print(ceil(3.6**2) - ceil(3.6)**2)"
  },
  {
    "example_id": 138,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "121.0"
    ],
    "annotated_answers": [
      "121.0"
    ],
    "solution": "n = symbols('n')\neq = (400**(1/2)) - (81**(1/2)) - (n**(1/2))\nsolution = solve(eq, n)\nn_value = solution[0]\nprint(n_value)"
  },
  {
    "example_id": 139,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "49.0",
      "2.0",
      "14.0",
      "19.0",
      "7.0",
      "19.0",
      "7.0",
      "2.0"
    ],
    "annotated_answers": [
      "361.0"
    ],
    "solution": "x = symbols('x')\nf = 49*x**2 + 14*x*(19-7*x) + (19-7*x)**2\nprint(f)"
  },
  {
    "example_id": 140,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "0.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a, b = symbols('a b')\neq1 = 5*a + 2*b\neq2 = a*b\nsolution = solve([eq1, eq2], [a, b])\n\n# find the maximum value of a\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 141,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-15.0",
      "15.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "# Define variables\nn = 15\nx = symbols('x')\n\n# Solve for x\nsolution = solve(x**2 - n**2, x)\n\n# Print solution\nprint(solution)"
  },
  {
    "example_id": 142,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "5.0",
      "2.0",
      "3.0",
      "5.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\na = solve(x**2 - x - 1, x)\nb = a[0]\nc = b**3 - 2*b + 1\nprint(c)"
  },
  {
    "example_id": 143,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.46409300939037",
      "2.98107020420331",
      "-5.0",
      "6.46409300939037",
      "2.98107020420331",
      "-5.0",
      "6.464093009459111",
      "12.9282158295515"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\n\ne = (6 + (1/(2 + (1/(6 + (1/(2 + (1/(6 + I))))))))).evalf()\nprint(e)\n\na_val = e.as_real_imag()[0]\nb_val = e.as_real_imag()[1]\nc_val = pow(a_val**2 + b_val**2, 0.5)\n\nprint(a_val, b_val, c_val)\n\na_plus_b_plus_c = a_val + b_val + c_val\nprint(a_plus_b_plus_c)"
  },
  {
    "example_id": 144,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1152000000.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "180.0"
    ],
    "solution": "Abby, Bart, Cindy, Damon = symbols('Abby Bart Cindy Damon')\neq = (Abby + Bart) * (Bart + Cindy) * (Cindy + Damon) * (Damon + Abby) - 160 * 180 * 200 * 200\nsolution = solve(eq, Abby + Damon)\nprint(solution[0])"
  },
  {
    "example_id": 145,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "5.0",
      "3.0",
      "11.0",
      "5.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq1 = 3*y - x\neq2 = 2*x + 5*y - 11\na = solve(eq1, x)\nb = solve(eq2, y)\nprint(a[0] + b[0])"
  },
  {
    "example_id": 146,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "22.4987731546641"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "from sympy import S\n\na = 1 + S(2)**(1/2)\nb = 2 + S(3)**(1/2)\nA = a/(b - a)\nB = a**2 - b**2\nC = a*b\nD = a**2 + b**2\nprint(A + B + C + D)"
  },
  {
    "example_id": 147,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "x, a, b = symbols('x a b')\np = x**2 + a*x + b\neq = p.subs({x:2*a}) - p.subs({x:b})\nsolution = solve(eq, a)\na_value = solution[0]\nb_value = solution[1]\nprint(a_value + b_value)"
  },
  {
    "example_id": 148,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "7.0"
    ],
    "solution": ""
  },
  {
    "example_id": 149,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "from sympy import I\nz = symbols('z')\nf = z**2 if not z.is_real else z + 2\nf_values = [f.subs(z, x) for x in [I, 1, -1, -I]]\nprint(sum(f_values))"
  },
  {
    "example_id": 150,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-114.0"
    ],
    "annotated_answers": [
      "-114.0"
    ],
    "solution": "sum = 0\nfor x in range(-30, 27):\n    sum += x\nprint(sum)"
  },
  {
    "example_id": 151,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "# Calculate the total number of cookies\ntotal_cookies = 216\n\n# Calculate the number of pans needed\npans_needed = ceil(total_cookies / 15)\n\n# Calculate the number of tablespoons needed\ntablespoons = 1.5 * pans_needed\n\n# Calculate the number of sticks of butter needed\nbutter_sticks = floor(tablespoons / 8)\n\n# Print the number of sticks of butter needed\nprint(\"The number of sticks of butter needed is:\", butter_sticks)"
  },
  {
    "example_id": 152,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-9.0",
      "31.0",
      "2.0",
      "7.0",
      "31.0",
      "2.0",
      "31.0",
      "3.0",
      "1.0",
      "3.0",
      "2.0",
      "100.0",
      "9.0",
      "31.0",
      "3.0",
      "1.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "64.0"
    ],
    "solution": "x, y = symbols('x y')\neq = (2*x + 3*y)**2 - 4\neq1 = x*y + 5\nsolution = solve([eq, eq1], [x, y])\nx_value = solution[0][0]\ny_value = solution[0][1]\nprint(4*x_value**2 + 9*y_value**2)"
  },
  {
    "example_id": 153,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x = symbols('x')\n\n# Solve for x\neq = (x - 3)/(x**2 - 10*x + 16)\n\n# Print the result\nprint(solve(eq))"
  },
  {
    "example_id": 154,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\ny = (x+1)/(x**2-2*x+1)\nsolution = solve(y, x)\nprint(solution)"
  },
  {
    "example_id": 155,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "26.0"
    ],
    "annotated_answers": [
      "26.0"
    ],
    "solution": "def f1(x):\n    return (x-0.5)*(x-2.5)*(x-6.5)*(x-7.5)/16+x\n\ndef h(x):\n    return f1(x)\n\nsum = 0\nfor x in range(9):\n    if h(x) > x:\n        sum += x\nprint(sum)"
  },
  {
    "example_id": 156,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "f = lambda x: 1/4*x\n(x, y) = (8, f(8))\nprint(x+y)"
  },
  {
    "example_id": 157,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "f = lambda x: 5*x + 2\ng = lambda x: 3*x**2 - 4*x\nprint(f(f(1)) - g(g(2)))"
  },
  {
    "example_id": 158,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "-3.0",
      "3.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = (x + 13 - 16 + 6)/3\neq2 = y**3\neq = eq1 + eq2\nsolution = solve(eq, [x, y])\nx_value = solution[0][0]\ny_value = solution[0][1]\nprint(x_value**2 + y_value**3)"
  },
  {
    "example_id": 159,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-11.0"
    ],
    "annotated_answers": [
      "-11.0"
    ],
    "solution": "# define the variable x\nx = symbols('x')\n\n# define the equation\neq = (x-9)/(x+1) - 2\n\n# solve the equation for x\nsolution = solve(eq, x)\n\n# print the solution\nprint(solution)"
  },
  {
    "example_id": 160,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10140.0"
    ],
    "annotated_answers": [
      "1710.0"
    ],
    "solution": "# define variables\nn = 10\nk = 12\na = 28\nb = 86\n\n# calculate the sum\nsum = (n*k*a + (n*k*b)/2 + (n*k*b)*(n-1))/n\n\n# print the answer\nprint(sum)"
  },
  {
    "example_id": 161,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a = symbols('a')\nx = symbols('x')\nf = a*x**2 + (a*x + 2*a)\nsolution = solve(f, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 162,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "# Find the degree of g(x)\ng_degree = 8 - 4\nprint(g_degree)"
  },
  {
    "example_id": 163,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "3.0",
      "1.0",
      "3.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "m = symbols('m')\nx = symbols('x')\nsolution = solve((3*x**2-4*x+1)/(x-1) - m, x)\nx_value = solution[0]\nif x_value == 1:\n    print(\"m can have any real value except 1\")\nelse:\n    print(\"m can have any real value except 1 and\", x_value)"
  },
  {
    "example_id": 164,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "4.0",
      "7.0",
      "2.0",
      "2.0",
      "4.0",
      "7.0",
      "-4.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x = symbols('x')\np = 3*(x - 4) + 2*(x**2 - x + 7) - 5*(x - 1)\nprint(p)\nsimplified = p.expand()\nprint(simplified)\ncoeff = simplified.coeff(x)\nprint(coeff)"
  },
  {
    "example_id": 165,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "64.0"
    ],
    "annotated_answers": [
      "64.0"
    ],
    "solution": "print((1+3)**3)"
  },
  {
    "example_id": 166,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "20.0",
      "6.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "# Define variables\nI = 40\nR = 3\nV = 120\nR_new = 20\n\n# Calculate new current\nI_new = V / R_new\n\n# Print result\nprint(\"The current when the resistor is 20 ohms is:\", I_new)"
  },
  {
    "example_id": 167,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-4.0",
      "-4.0",
      "3.0215734278848",
      "-4.0",
      "3.0215734278848"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "x = symbols('x')\neq = (2**12) - (1/8)**x\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 168,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25.0",
      "625.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\nlog_x = log(5**2, 5**4)\nprint(log_x)"
  },
  {
    "example_id": 169,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0",
      "-1.0",
      "3.0",
      "-1.0",
      "3.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\nf = 4*x**3 + 1\nf_inverse = solve(f-33, x)\nprint(f_inverse)"
  },
  {
    "example_id": 170,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "5.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "# define variables\nk = symbols('k')\nx = symbols('x')\n# define equation\neq = (3*x**2) + (5*x) + k\n# solve for k\nsolution = solve(eq, k)\n# extract k value\nk_value = solution[0]\n# print result\nprint(k_value)"
  },
  {
    "example_id": 171,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0",
      "10.0",
      "2.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "a = symbols('a')\neq = (2-2*a)*(5+5*a)\nsolution = simplify(eq)\nprint(solution)"
  },
  {
    "example_id": 172,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "45.0"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "# Find the number of rows\nR = 450 / 10\nR = int(R)\nprint(R)"
  },
  {
    "example_id": 173,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "63.0"
    ],
    "annotated_answers": [
      "23.0"
    ],
    "solution": "f = lambda x: 2*x + 1\nf_inv = lambda x: f(f(x) - 4)\neq = f_inv(17)\nprint(eq)"
  },
  {
    "example_id": 174,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "7.0",
      "10.0",
      "7.0",
      "3.0",
      "44.0",
      "2.0",
      "54.0",
      "2.0",
      "7.0",
      "10.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\na = symbols('A')\nb = symbols('B')\neq1 = (5*x - 16)/(x**2 - 7*x + 10)\neq2 = (a/x - 2) + (b/x - 5)\neq3 = eq1 - eq2\nsol = solve(eq3, [a, b])\na_value = sol[0][0]\nb_value = sol[0][1]\nprint(a_value + b_value)"
  },
  {
    "example_id": 175,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = 0\nwhile 2**(x + 2)!= 32:\n    x += 1\nprint(x)"
  },
  {
    "example_id": 176,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "# x = symbols('x')\nx = symbols('x')\n# P(x) = 4x^3 - 2x^2 + 7x - 1\nP = 4*x**3 - 2*x**2 + 7*x - 1\n# Q(x) = P(x)^2\nQ = P**2\n# y-intercept of Q(x)\nprint(Q.subs(x, 0))"
  },
  {
    "example_id": 177,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "1929.0",
      "2.0"
    ],
    "annotated_answers": [
      "23.0"
    ],
    "solution": "# Find the smallest value of n such that the sum of the first n consecutive integers is 241.\nn = symbols('n')\neq = n*(n + 1)/2 - 241\nsolution = solve(eq, n)\nn_value = solution[0]\nprint(n_value)"
  },
  {
    "example_id": 178,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "79.0"
    ],
    "annotated_answers": [
      "79.0"
    ],
    "solution": "print(ceil(floor(52/3)/(5/23)))"
  },
  {
    "example_id": 179,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-5.0",
      "5.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "x = symbols('x')\neq = (x-5)*(x+5) < 0\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 180,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "from sympy import *\nx = Symbol('x')\ny = - (x + 1)**2 + 1\nsolution = solve(y, x)\na, b = solution[0], solution[1]\nprint(b - a)"
  },
  {
    "example_id": 181,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "a, b, S = symbols('a b S')\neq1 = a/(1-b) + b/(1-b) - S\neq2 = b/(1-a) + a/(1-a) - 1/S\nsolution1 = solve(eq1, a)\nsolution2 = solve(eq2, b)\na_value = solution1[0]\nb_value = solution2[0]\nprint(a_value + b_value)"
  },
  {
    "example_id": 182,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "3.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a1, a2, a3 = 1, 2, 3\na4 = 3 * a2\na5 = 3 * a3\n\nprint(a4/a2)\nprint(a5/a3)"
  },
  {
    "example_id": 183,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "989.0",
      "989.0"
    ],
    "annotated_answers": [
      "978121.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 - 989\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 184,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "9.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "x = symbols('x')\nc = symbols('c')\neq = x**2 + c*x + 9*c\nsolution = solve(eq, c)\nc_value = solution[0]\nprint(c_value)"
  },
  {
    "example_id": 185,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.5",
      "52.0"
    ],
    "annotated_answers": [
      "-10.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\nline_1 = 4*x + 6\ny_axis = 0\nline_1_x_coord = 5\nline_1_y_coord = 10\nline_1_slope = line_1.diff(x).simplify()\nline_1_y_intercept = line_1.subs(x, line_1_x_coord).simplify()\ncross_point_x = (line_1_y_intercept - y_axis) / line_1_slope\ncross_point_y = line_1_slope * cross_point_x + line_1_y_intercept\nprint(\"The point where the line crosses the y-axis is (%.2f, %.2f)\" % (cross_point_x, cross_point_y))"
  },
  {
    "example_id": 186,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "8.0",
      "2.0",
      "4.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x, y = symbols('x y')\nc = symbols('c')\neq = x**2 + 8*x + y**2 + 4*y + c\nsolution = solve(eq, c)\nc_value = solution[0]\nprint(c_value)"
  },
  {
    "example_id": 187,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "from math import log, ceil\n\nx = 2938\na = int(log(x, 8))\nb = a + 1\nprint(a + b)"
  },
  {
    "example_id": 188,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "# Define variables\nteaspoons_of_salt = 2\nquart_of_water = 1\n\n# Define salt_to_water_ratio\nsalt_to_water_ratio = 4\n\n# Define quarts_of_water_for_teaspoon\nquarts_of_water_for_teaspoon = salt_to_water_ratio / teaspoons_of_salt\n\n# Calculate quarts_of_water_for_teaspoon\nquarts_of_water_for_teaspoon = quarts_of_water_for_teaspoon\n\n# Calculate quarts_of_water\nquarts_of_water = quarts_of_water_for_teaspoon * teaspoons_of_salt\n\n# Print quarts_of_water\nprint(quarts_of_water)"
  },
  {
    "example_id": 189,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "f = lambda x: 2*x - 4\ng = lambda x: x**2 + 3\nprint(f(g(2)))"
  },
  {
    "example_id": 190,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0",
      "7.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x, k = symbols('x k')\neq = (4*x**2 + 7*x + k)\nsolution = solve(eq, k)\nk_value = solution[0]\nprint(k_value)"
  },
  {
    "example_id": 191,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\ny = 2*x**2 - 4*x + 4\nm = y.subs(x, 0)\nn = y.subs(x, 1)\nprint(m)\nprint(n)"
  },
  {
    "example_id": 192,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "28.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\n\n# Adina's size\nadina = 6\n\n# Lynn's size\nlynn = 9\n\n# Calculate the difference between the two sizes\ndiff = abs(lynn - adina)\n\n# Calculate the ratio between the two sizes\nratio = diff / lynn\n\n# Calculate the shoe size for Adina\nadina_shoe_size = floor(lynn * ratio)\n\n# Calculate the shoe size for Lynn\nlynn_shoe_size = ceil(adina * ratio)\n\nprint(adina_shoe_size)\nprint(lynn_shoe_size)"
  },
  {
    "example_id": 193,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-0.0"
    ],
    "annotated_answers": [
      "28.0"
    ],
    "solution": "f_4 = 3120\nf_m4 = -60 / 13\nf_m4_x = -4\nf_4_x = 4\nf_4_x = f_4_x + f_m4_x\nf_4_x = f_4_x / f_m4\nprint(f_4_x)"
  },
  {
    "example_id": 194,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "# log_base_x(y) = log(y)/log(x)\nlog_381 = log(81, 3)\nprint(log_381)"
  },
  {
    "example_id": 195,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.14285714285714"
    ],
    "annotated_answers": [
      "0.43"
    ],
    "solution": "t = symbols('t')\neq = (-4.9*t**2 - 3.5*t + 2.4)\nsolution = solve(eq, t)\nt_value = solution[0]\nprint(t_value)"
  },
  {
    "example_id": 196,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "44.0"
    ],
    "annotated_answers": [
      "44.0"
    ],
    "solution": "print((4**3 + 2**3) - (3**3 + 1**3))"
  },
  {
    "example_id": 197,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "73.0",
      "576.0",
      "2.0"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\neq1 = a*b - 24\neq2 = a**2 + b**2 - 73\nsolution1 = solve(eq1, a)\nsolution2 = solve(eq2, b)\na_value = solution1[0]\nb_value = solution2[0]\nprint(a_value**2 - b_value**2)"
  },
  {
    "example_id": 198,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "a, b, c = symbols('a b c')\n\ndef D(a, b, c):\n    return (a*b*c)/(a+b+c)\n\nprint(D(2, 4, 6))"
  },
  {
    "example_id": 199,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "8000.0"
    ],
    "annotated_answers": [
      "8000.0"
    ],
    "solution": "print(((26**2 - 24**2 - 10)**2) - 10**2)"
  },
  {
    "example_id": 200,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "153.0"
    ],
    "annotated_answers": [
      "27.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq = (x+y) - (153)\nsolution = solve(eq, [x, y])\nx_value = solution[0][0]\ny_value = solution[0][1]\nprint(y_value - x_value)"
  },
  {
    "example_id": 201,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0",
      "1.0",
      "2.0",
      "1.0",
      "3.0",
      "1.0",
      "4.0",
      "1.0",
      "5.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "def harmonic_mean(x, y):\n    return 20\n\ndef is_solution(x, y):\n    return harmonic_mean(x, y) == 20\n\nfor x in range(1, 10):\n    for y in range(x, 10):\n        if is_solution(x, y):\n            print(x, y)"
  },
  {
    "example_id": 202,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.66666666666667",
      "1.15470053837925",
      "-0.75",
      "2.0",
      "0.333333333333333",
      "1.15470053837925",
      "-0.75",
      "2.0",
      "0.333333333333333",
      "3.66666666666667",
      "1.15470053837925",
      "-0.75",
      "2.0",
      "0.333333333333333",
      "3.66666666666667"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "x1, y1 = -1, 2\nx2, y2 = 3, 0\nx3, y3 = 9, 0\n\nx_mid = (x1 + x2 + x3) / 3\ny_mid = (y1 + y2 + y3) / 3\n\nr = sqrt((x2 - x_mid)**2 + (y2 - y_mid)**2)\n\nh, k = symbols('h k')\n\ncenter = (h, k)\n\neq = r**2 - (center[0] - x_mid)**2 - (center[1] - y_mid)**2\n\nsolution = solve(eq, h, k)\n\nprint(solution)\n\nprint(solution[0][0] + solution[0][1])"
  },
  {
    "example_id": 203,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "0.75",
      "1.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\nf = (4*x + 1)/3\nf_inv = 3/4*x + 1\nf_inv_inv = 1/(3/4*x + 1)\nprint(f_inv_inv)"
  },
  {
    "example_id": 204,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "17.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "p, q = symbols('p q')\neq = (q+4)*(p+3) - (q+2)*(p+1) - 44\nsolution = solve(eq, p)\np_value = solution[0]\nprint(p_value)"
  },
  {
    "example_id": 205,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "125.5"
    ],
    "annotated_answers": [
      "125.5"
    ],
    "solution": "def mean_of_whole_numbers(n):\n    total = 0\n    for i in range(1, n + 1):\n        total += i\n    return total / n\n\nn = 250\nprint(mean_of_whole_numbers(n))"
  },
  {
    "example_id": 206,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "2.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 - 4*x - 14\nsolution = solve(eq, x)\nsolution_1 = solution[0]\nsolution_2 = solution[1]\ndifference = solution_2 - solution_1\nprint(difference)"
  },
  {
    "example_id": 207,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = 3 + (1/x) - 7/x\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 208,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.999999999999987"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "f = lambda x: (1+x)/(1-x)\ng = lambda x: -2/(x+1)\n\nn = 8\n\ng_value = g(f(g(f(g(f(g(f(g(f(12))))))))))\n\nprint(g_value)"
  },
  {
    "example_id": 209,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-3.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "x = symbols('x')\neq = (x+3)*(x-1) - x*(x+2)\nsolution = simplify(eq)\nprint(solution)"
  },
  {
    "example_id": 210,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "3.0",
      "4.0",
      "3.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "from sympy import sqrt, simplify\n\nexpr = sqrt( (4/sqrt(24)) + (sqrt(3456)/9) + sqrt(6) ) / sqrt(6)\nresult = simplify(expr)\nprint(result)"
  },
  {
    "example_id": 211,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\neq = (x**(-1))*((x-2)**(1/2)) - (x**2 + x - 6)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 212,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "15.999999999999998"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "x = symbols('x')\neq = 4**5 + 4**5 + 4**5 + 4**5\nsolution = pow(eq, 1/3)\nprint(solution)"
  },
  {
    "example_id": 213,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "A, B, C = 1, 2, 3\nA + B + C"
  },
  {
    "example_id": 214,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "# midpoint of segment with endpoints at (0, 0) and (2, 2)\nx1 = 1\ny1 = 1\n\n# midpoint of segment with endpoints at (5, 0) and (6, 2)\nx2 = 3\ny2 = 2\n\n# slope of line containing the midpoint of the segment\nslope = (y2 - y1) / (x2 - x1)\n\n# simplify the fraction\nslope = 1\n\nprint(slope)"
  },
  {
    "example_id": 215,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = 6\nprint(x)"
  },
  {
    "example_id": 216,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\neq = log(10-2*x, x-1) - 2\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 217,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "a, b, d = 1, 2, 3\nc = (a - b - d + 2) / 2\nprint(c)"
  },
  {
    "example_id": 218,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "0.0"
    ],
    "annotated_answers": [
      "288.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\neq1 = 2*a*b - 12\neq2 = 8*a**2*b**2\nsolution1 = solve(eq1, a)\nsolution2 = solve(eq2, a)\na_value = solution1[0]\nb_value = solution2[0]\nprint(a_value)\nprint(b_value)"
  },
  {
    "example_id": 219,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.9999999999999996"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "a = 8\nvalue = (16*a**(2/3))**(1/3)\nprint(value)"
  },
  {
    "example_id": 220,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "2.0",
      "2.0",
      "5.0",
      "1.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "x1, y1, x2, y2 = symbols('x1 y1 x2 y2')\nmidx = (x1 + x2)/2\nmidy = (y1 + y2)/2\neq = midx + midy - 5\nsolution = solve(eq, [midx, midy])\nmidx_value = solution[0][0]\nmidy_value = solution[0][1]\nprint(midx_value)\nprint(midy_value)"
  },
  {
    "example_id": 221,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "16.0",
      "8.0",
      "8.0",
      "16.0",
      "32.0",
      "2.0",
      "20.0",
      "12.0",
      "12.0",
      "20.0",
      "24.0",
      "2.0"
    ],
    "annotated_answers": [
      "32.0"
    ],
    "solution": "from sympy import symbols, solve, sqrt\nx = symbols('x')\ny = symbols('y')\neq1 = x**2 - 24*x + y**2 - 32*y + 384\neq2 = x**2 + 24*x + y**2 + 32*y + 384\ndistance = sqrt((solve(eq1, x)[0] - solve(eq2, x)[0])**2 + (solve(eq1, y)[0] - solve(eq2, y)[0])**2)\nprint(distance)"
  },
  {
    "example_id": 222,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x = symbols('x')\neq = (66-2**x)/(2**x+3) - (4-2**x)/(2**(x+1)+6)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 223,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "160.25"
    ],
    "annotated_answers": [
      "29.0"
    ],
    "solution": "# Number of pencils in 3 pencils and a jumbo eraser\nnum_pencils_1 = 3\n# Cost of 3 pencils and a jumbo eraser\ncost_1 = 1.24\n# Number of pencils in 5 pencils and a jumbo eraser\nnum_pencils_2 = 5\n# Cost of 5 pencils and a jumbo eraser\ncost_2 = 1.82\n\n# Cost of a pencil\ncost_of_pencil = (cost_1 * num_pencils_1 + cost_2 * num_pencils_2) / (num_pencils_1 + num_pencils_2)\nprint(cost_of_pencil * 100)"
  },
  {
    "example_id": 224,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "4.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nm = symbols('m')\neq = (a/4) + (b/12) - 1\nsolution = solve(eq, [a, b, m])\na_value = solution[0][0]\nb_value = solution[0][1]\nm_value = solution[0][2]\nprint(a_value + b_value + m_value)"
  },
  {
    "example_id": 225,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "22.0",
      "2.0",
      "6.0",
      "2.0",
      "-2.0",
      "2.0",
      "8.0",
      "3.0"
    ],
    "annotated_answers": [
      "22.0"
    ],
    "solution": "x = symbols('x')\ny = 2*x**2 + 8*x + 4\neq = y**2 - 7**2\nsolution = solve(eq, x)\nx1, x2 = solution[0], solution[1]\narea = (x2 - x1) * (7 - y)\nprint(area)"
  },
  {
    "example_id": 226,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "p = symbols('p')\nq = symbols('q')\n\neq = p/q - 28/7\nsolution = solve(eq, p)\np_value = solution[0]\n\nprint(p_value)"
  },
  {
    "example_id": 227,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "7.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x = symbols('x')\neq = (x-4)**2 - 9\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 228,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "n = symbols('n')\neq = (9**n*3**(2*n+1))/81 - 243\nsolution = solve(eq, n)\nn_value = solution[0]\nprint(n_value)"
  },
  {
    "example_id": 229,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "a = symbols('a')\neq = (4+sqrt(16+16*a))**(1/2) + (1+sqrt(1+a))**(1/2) - 6\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 230,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "4.0",
      "3.0",
      "4.0",
      "1.0",
      "2.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x1, y1, x2, y2, x3, y3, x4, y4 = symbols('x1 y1 x2 y2 x3 y3 x4 y4')\n\nm1 = (y2 - y1)/(x2 - x1)\nm2 = (y4 - y3)/(x4 - x3)\n\nprint(m1 - m2)"
  },
  {
    "example_id": 231,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\neq = (x**2-5*x+7) - (x-3)*(x-2)\nprint(eq.expand().simplify())"
  },
  {
    "example_id": 232,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "4.0",
      "2.0",
      "2.0",
      "2.0",
      "4.0",
      "2.0",
      "2.0",
      "2.0",
      "4.0",
      "2.0",
      "2.0",
      "2.0",
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "# k and t are positive integers\nk, t = symbols('k t', positive=True)\n\n# m and n are prime numbers\nm, n = symbols('m n', prime=True)\n\n# x is a variable\nx = symbols('x')\n\n# equation to be solved\neq = x**2 - m*x + n\n\n# solve the equation\nsolutions = solve(eq, x)\n\n# k and t are the solutions of the equation\nk = solutions[0]\nt = solutions[1]\n\n# value of m^n + n^m + k^t + t^k\nvalue = m**n + n**m + k**t + t**k\n\n# print the value\nprint(value)"
  },
  {
    "example_id": 233,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-15.0",
      "2.0",
      "-15.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "# define symbols\nf = 5\ns = symbols('s')\n\n# define equations\neq1 = f*s - s + 30\neq2 = f*s - 3*s + 30\n\n# solve for s\nsol = solve(eq1, s)\nsol2 = solve(eq2, s)\n\n# print results\nprint(sol)\nprint(sol2)"
  },
  {
    "example_id": 234,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4950.0"
    ],
    "annotated_answers": [
      "4950.0"
    ],
    "solution": "start = 100\nend = 200\nsum = 0\nfor i in range(start, end):\n    if i % 3 == 0:\n        sum += i\nprint(sum)"
  },
  {
    "example_id": 235,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "22.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "annual_interest_rate = (1225 - 1000) / 1000\nprint(round(annual_interest_rate * 100))"
  },
  {
    "example_id": 236,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.75"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "f = lambda x: 2*x + 1\nf_inv = lambda x: (x-1)/2\n\nprint(f_inv(f_inv(6)))"
  },
  {
    "example_id": 237,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "8281.0"
    ],
    "annotated_answers": [
      "8281.0"
    ],
    "solution": "print(91**2)"
  },
  {
    "example_id": 238,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "12.0",
      "2.0",
      "1.0",
      "2.0",
      "9.0"
    ],
    "annotated_answers": [
      "-27.0"
    ],
    "solution": "g = symbols('g')\nq = (g**2 + 12*g + 9) - (2*g + 1)**2\nprint(q)"
  },
  {
    "example_id": 239,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\nf = x**4 + x**3 - 25*x**2 + 38*x - 17\ndegree = len(f.args) - 1\nprint(degree)"
  },
  {
    "example_id": 240,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "2.0",
      "11.0",
      "3.0"
    ],
    "annotated_answers": [
      "3.5"
    ],
    "solution": "# Create symbols for variables\nt = symbols('t')\n\n# Create equation\neq = -6*t**2 + 43*t\n\n# Find the time at which the height is 77 feet\ntime = solve(eq - 77, t)\n\n# Print the time\nprint(time)"
  },
  {
    "example_id": 241,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "3.0",
      "3.0",
      "2.0",
      "3.0",
      "4.0",
      "24.0",
      "4.0",
      "6.0",
      "3.0",
      "4.0",
      "2.0",
      "7.0",
      "5.0"
    ],
    "annotated_answers": [
      "-15.0"
    ],
    "solution": "x = symbols('x')\na = 24*x**4 + 6*x**3 + 4*x**2 - 7*x - 5\nb = 6*x**3 + 3*x**2 + 3*x + 4\nprint(a*b)"
  },
  {
    "example_id": 242,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "1.0",
      "0.0",
      "0.0",
      "2.0",
      "0.0"
    ],
    "annotated_answers": [
      "96.0"
    ],
    "solution": "for a in range(0, 6):\n    for b in range(0, 6):\n        for c in range(0, 6):\n            if a**2*b + b**2*c + c**2*a - a*b**2 - b*c**2 - c*a**2 == 0:\n                print(a, b, c)"
  },
  {
    "example_id": 243,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "x = -3\nprint(x)"
  },
  {
    "example_id": 244,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x = symbols('x')\neq = 2/3 - (4/(x-5))\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 245,
    "selected_mode": "import",
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "2.2"
    ],
    "solution": "x = symbols('x')\na = symbols('a')\nb = symbols('b')\nc = symbols('c')\neq1 = a*x**2 + b*x + c\neq2 = (x - 1) * (x + 1)\n\nsolution = solve([eq1, eq2], [a, b, c])\n\n# extract values from the solution\na_value = solution[0][0]\nb_value = solution[0][1]\nc_value = solution[0][2]\n\n# calculate the discriminant\nD = b**2 - 4*a*c\n\n# find the two real roots\nr1 = (-b + sqrt(D)) / (2*a)\nr2 = (-b - sqrt(D)) / (2*a)\n\n# find the greater root\ngreater_root = max(r1, r2)\n\n# find the other root\nother_root = abs(r1) - abs(r2)\n\n# calculate n\nn = (other_root + greater_root)**2\n\nprint(n)"
  },
  {
    "example_id": 246,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\nf = (sqrt(x-1))/(x-2)\nsolution = solve(f, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 247,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "129.0"
    ],
    "solution": "# Define a function\ndef A(n):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return A(n-1) + A(n-2)\n\n# Find the first term greater than 125\nn = 1\nwhile A(n) < 125:\n    n += 1\nprint(n)"
  },
  {
    "example_id": 248,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0",
      "10.0",
      "9.0",
      "90.0",
      "8.0",
      "720.0",
      "7.0",
      "5040.0",
      "6.0",
      "30240.0",
      "5.0",
      "151200.0",
      "4.0",
      "604800.0",
      "3.0",
      "1814400.0",
      "2.0",
      "3628800.0",
      "435456000.0",
      "0.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "f = lambda t: 100*t + 100*t**2/2 + 100*t**3/6 + 100*t**4/24 + 100*t**5/120 + 100*t**6/720 + 100*t**7/5040 + 100*t**8/40320 + 100*t**9/362880 + 100*t**10/3628800\nt = symbols('t')\nsol = solve(f(t) - 12000, t)\nprint(sol[0])"
  },
  {
    "example_id": 249,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\nf = x**2 - 1\ng = 5*x**6 - x**5 + 3*x**4 + x**3 - 25*x**2 + 38*x - 17\neq = g.subs(x, f)\ndegree = len(eq.args) - 1\nprint(degree)"
  },
  {
    "example_id": 250,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0"
    ],
    "annotated_answers": [
      "54.0"
    ],
    "solution": "# Solve the quadratic\nx = symbols('x')\nquadratic = x**2 - 6*x + 66\n# (x+b)^2+c\nquadratic_factored = (x + 3)**2 + 63\n# Solve for b+c\nb_plus_c = solve(quadratic_factored - quadratic, x)[0]\nprint(b_plus_c)"
  },
  {
    "example_id": 251,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-9.0",
      "2.0"
    ],
    "annotated_answers": [
      "0.75"
    ],
    "solution": "t = symbols('t')\neq = (-16*t**2 - 60*t + 54)\nsolution = solve(eq, t)\nt_value = solution[0]\nprint(t_value)"
  },
  {
    "example_id": 252,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.0",
      "3.0",
      "4.0",
      "3.0",
      "12.0",
      "12.0",
      "3.0"
    ],
    "annotated_answers": [
      "30.0"
    ],
    "solution": "# Define the number of days\nn_days = 6\n\n# Define the number of houses\nn_houses = 4\n\n# Define the number of workers\nn_workers = 5\n\n# Define the number of houses to paint\nn_houses_to_paint = 12\n\n# Define the number of days to paint\nn_days_to_paint = 3\n\n# Calculate the number of workers needed\nn_workers_needed = floor(n_houses_to_paint/n_days_to_paint)\n\n# Calculate the number of houses that can be painted\nn_houses_painted = n_workers_needed * n_days_to_paint\n\n# Calculate the number of days needed\nn_days_needed = ceil(n_houses_to_paint/n_workers_needed)\n\n# Print the number of workers needed\nprint(\"The number of workers needed to paint\", n_houses_to_paint, \"houses in\", n_days_to_paint, \"days is:\", n_workers_needed)\n\n# Print the number of houses that can be painted\nprint(\"The number of houses that can be painted in\", n_days_to_paint, \"days is:\", n_houses_painted)\n\n# Print the number of days needed\nprint(\"The number of days needed to paint\", n_houses_to_paint, \"houses is:\", n_days_needed)"
  },
  {
    "example_id": 253,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "8.64580823289529",
      "-0.0133779264214047",
      "2.0",
      "0.240802675585284",
      "1.0",
      "1.0",
      "13.0",
      "3.0"
    ],
    "annotated_answers": [
      "7.5"
    ],
    "solution": "x, y = symbols('x, y')\neq1 = (x - 9)**2 + (y - 5)**2 - 6.25\neq2 = (x + 6)**2 + (y + 3)**2 - 49\n\nsolution1 = solve(eq1, y)\nsolution2 = solve(eq2, y)\n\nx_value = solution1[0]\ny_value = solution2[0]\n\nx_coord = x_value.subs(y, y_value)\ny_coord = y_value\n\nprint(x_coord, y_coord)"
  },
  {
    "example_id": 254,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = (1/(x-1)) + (2*x)/(x-1) - 5\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 255,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "6.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x_mid = (5 + (-9)) / 2\ny_mid = (4 + 8) / 2\nprint(x_mid, y_mid)"
  },
  {
    "example_id": 256,
    "selected_mode": "import",
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "t = symbols('t')\neq1 = (t+2) * (t+1) - (t+1) * (t-3)\neq2 = (t) * (t+2) - (t+1) * (t+1)\nsolution = solve(eq1, t)\nsolution1 = solve(eq2, t)\nprint(solution[0])\nprint(solution1[0])"
  },
  {
    "example_id": 257,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0",
      "7.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "x, y = symbols('x, y')\neq1 = 2*x - y - 3\neq2 = x + y - 1\nsolution = solve([eq1, eq2], [x, y])\nx_value, y_value = solution\nprint(8*x_value - 7*y_value)"
  },
  {
    "example_id": 258,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "print(8.8+(-8.8))"
  },
  {
    "example_id": 259,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "from sympy import sqrt, simplify, powsimp, gcd, cancel\n\na = 4\nb = 3\n\nresult = sqrt(a)/b\n\nprint(simplify(result))"
  },
  {
    "example_id": 260,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = y = (x-2)/(x**2-7*x+10)\nsolution = solve(eq, y)\nprint(solution)"
  },
  {
    "example_id": 261,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\neq = x**6 - 2*x**5 + 2*x**3 - 2*x + 1 - 292\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 262,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "m = 20\nn = 0\nwhile n < m:\n    n += 1\n    if (n**2 - m*n + 1) % 2 == 0:\n        break\nprint(n)"
  },
  {
    "example_id": 263,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "15.222222222222221"
    ],
    "annotated_answers": [
      "27.0"
    ],
    "solution": "# Initialize variables\ngames_won = 2/9\ngames_lost = 15\n\n# Calculate total games played\ngames_played = games_won + games_lost\n\n# Print the result\nprint(games_played)"
  },
  {
    "example_id": 264,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "2.0",
      "2.0",
      "2.0",
      "6.0",
      "2.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "x = symbols('x')\ny = x**2 + 2*x - 6\ndistance = sqrt(y**2 + (5 - x)**2)\nprint(distance)"
  },
  {
    "example_id": 265,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "402.0"
    ],
    "annotated_answers": [
      "402.0"
    ],
    "solution": "n = 100\na = 6\nd = 4\nterm = a + (n-1)*d\nprint(term)"
  },
  {
    "example_id": 266,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "6.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "# variables\nx = symbols('x')\ny = symbols('y')\na = symbols('a')\nb = symbols('b')\n\n# equation\neq = y - a*x**2 - b*x + 6\n\n# solving for the largest possible integral value of b\nsolution = solve(eq, b)\nb_value = solution[0]\nprint(b_value)\n\n# if a^2 = 49\nif a**2 == 49:\n    # largest possible integral value of b\n    b_value = ceil(pow(a,2)/49)\n    print(b_value)"
  },
  {
    "example_id": 267,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-92.0",
      "8.0",
      "133.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "# 1. Denali walks 16 dogs\nD = 16\n# 2. Nate walks 12 dogs\nN = 12\n# 3. The company's new policy is to assign or unassign dogs in groups of x\nx = symbols('x')\n# 4. Denali will walk 4x more dogs\nD4x = D + 4*x\n# 5. Nate will stay at 12 dogs\nN12 = N\n# 6. The ratio of Denali's pay to Nate's pay is the same if Denali walks 4x more dogs and Nate stays at 12 dogs or if x of Nate's dogs are reassigned to Denali\neq1 = (D4x*N12)/(4*x*N12)\neq2 = (D*N)/(N-x)\nsolution = solve(eq1-eq2, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 268,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "5.0",
      "2.0",
      "5.0"
    ],
    "annotated_answers": [
      "22.0"
    ],
    "solution": "from sympy import sqrt, simplify, fraction\nfrom sympy.abc import A, B, C, D\n\nexpr = (sqrt(5) + sqrt(2)) / (sqrt(5) - sqrt(2))\nprint(simplify(fraction(expr)))"
  },
  {
    "example_id": 269,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "8.0",
      "12.0"
    ],
    "annotated_answers": [
      "28.0"
    ],
    "solution": "from sympy import symbols, Max\n\nx = symbols('x')\neq = -x**2 - 8*x + 12\nmax_value = Max(eq, x)\nprint(max_value)"
  },
  {
    "example_id": 270,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "4.0",
      "3.0",
      "23.0",
      "4.0",
      "5.0",
      "4.0",
      "3.0",
      "23.0",
      "4.0"
    ],
    "annotated_answers": [
      "26.0"
    ],
    "solution": "# define t\nt = symbols('t')\n# define height\nh = 2*t**2 - 5*t + 29\n# solve for minimum height\nmin_height = -5\n# solve for maximum height\nmax_height = 56\n# solve for root\nroot = solve(h, t)\n# print root\nprint(root)"
  },
  {
    "example_id": 271,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "1.0",
      "2.0",
      "48.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "# Define the free throw variables\nn1 = symbols('n1')\nn2 = symbols('n2')\nn3 = symbols('n3')\nn4 = symbols('n4')\nn5 = symbols('n5')\n\n# Define the equation\neq = 2*n2 - n1\n\n# Define the equation for n5\neq2 = n5 - 48\n\n# Solve for n1\nsolution = solve(eq, n1)\nn1_value = solution[0]\n\n# Solve for n2\nsolution2 = solve(eq, n2)\nn2_value = solution2[0]\n\n# Solve for n5\nsolution3 = solve(eq2, n5)\nn5_value = solution3[0]\n\n# Print the solutions\nprint('Jenny made', n1_value, 'free throws at the first practice.')\nprint('Jenny made', n2_value, 'free throws at the second practice.')\nprint('Jenny made', n5_value, 'free throws at the fifth practice.')"
  },
  {
    "example_id": 272,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x, y = symbols('x, y')\neq = 3*x + 2*y - 12\na = 4\nb = solve(eq, y)[0]\nprint(b)"
  },
  {
    "example_id": 273,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "900.0",
      "270.0",
      "600.0",
      "900.0",
      "900.0"
    ],
    "annotated_answers": [
      "150.0"
    ],
    "solution": "d = symbols('d')\nalan = 30*3\ndavid = 30*floor(30*3/3)\ntotal = 600\nalan_bricks = alan*3\ndavid_bricks = d*david\nsum_bricks = alan_bricks + david_bricks\nprint(sum_bricks)\nprint(total)\nprint(david_bricks)\nprint(david)\nprint(d)"
  },
  {
    "example_id": 274,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x1 = 7\ny1 = -1\nx2 = -1\ny2 = 7\n\nm = (y2 - y1) / (x2 - x1)\nb = y1 - m * x1\n\nprint(m + b)"
  },
  {
    "example_id": 275,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "22.0"
    ],
    "annotated_answers": [
      "42.0"
    ],
    "solution": "dad_age = 53 - 31\nprint(dad_age)"
  },
  {
    "example_id": 276,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0",
      "7.0"
    ],
    "annotated_answers": [
      "-8.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = x + y - 7\neq2 = x - y - 9\n\n# find the product of x and y\nproduct = eq1*eq2\nprint(product)"
  },
  {
    "example_id": 277,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.73205080756888"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\neq = ((((x**(1/2))*(x**(1/2)))*(x**(1/2)))*(x**(1/2))) - 3\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 278,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\nf = floor((-5/8)**x)\nsolution = f.subs(x, 0)\nprint(solution)"
  },
  {
    "example_id": 279,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "1.0",
      "2.0",
      "1.0",
      "2.0",
      "1.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0",
      "1.0"
    ],
    "annotated_answers": [
      "-120.0"
    ],
    "solution": "x1, y1, x2, y2 = symbols('x1 y1 x2 y2')\nA = (x2 - x1)*(y1 + y2)\nB = (x1 + x2)*(y2 - y1)\nC = x1*y2 - x2*y1\nresult = A*B*C\nprint(result)"
  },
  {
    "example_id": 280,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\neq = (3*x - 5)**(1/2) - 2\nsolution = solve(eq, x)\nx_values = solution\nprint(x_values)"
  },
  {
    "example_id": 281,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "def F(a, b, c, d):\n    return a**b + c**d\n\nb = symbols('b')\neq = F(4, b, 2, 3) - 12\nsolution = solve(eq, b)\nb_value = solution[0]\nprint(b_value)"
  },
  {
    "example_id": 282,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "5.0",
      "2.0",
      "101.0",
      "2.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "from sympy import sqrt\nx = sqrt(-45)\ny = sqrt(-101)\nprint((x + y)/2)"
  },
  {
    "example_id": 283,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "123.0"
    ],
    "annotated_answers": [
      "123.0"
    ],
    "solution": "print(123123 // 1001)"
  },
  {
    "example_id": 284,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0"
    ],
    "annotated_answers": [
      "-10.0"
    ],
    "solution": "result = 4 * (5 - 6)\nprint(result)"
  },
  {
    "example_id": 285,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "2500.0"
    ],
    "solution": "x = symbols('x')\ny = 3*x**2 - 2*(x**2 + 4)\nsolution = solve(y, x)\nprint(solution)"
  },
  {
    "example_id": 286,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "f = lambda x: x**3 + 2*x + 1\ng = lambda x: x - 1\nprint(f(g(1)))"
  },
  {
    "example_id": 287,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4800.0"
    ],
    "annotated_answers": [
      "4800.0"
    ],
    "solution": "num_bacteria_12_hrs = 600 * 2 ** (12 / 4)\nprint(num_bacteria_12_hrs)"
  },
  {
    "example_id": 288,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-102.0"
    ],
    "solution": ""
  },
  {
    "example_id": 289,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "166.0",
      "15.0",
      "2.0",
      "5.0",
      "7.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x, y = symbols('x y')\neq = 10*x*y + 14*x + 15*y - 166\nsolution = solve(eq, x, y)\nx_value, y_value = solution[0]\nprint(x_value + y_value)"
  },
  {
    "example_id": 290,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x = symbols('x')\neq = (x**(1/2))**(4)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 291,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "import math\n\ndef get_tangent_circle(center, radius, point):\n    x, y = center\n    xp, yp = point\n    d = math.sqrt((x-xp)**2 + (y-yp)**2)\n    if d == radius:\n        return True\n    if d < radius:\n        return False\n    a = (radius**2 - d**2 + xp**2 + yp**2) / (2 * (xp - x) * (yp - y))\n    b = (radius**2 - d**2 - xp**2 - yp**2) / (2 * (xp - x) * (yp - y))\n    if a >= 0 and b >= 0 and a + b <= 1:\n        return True\n    return False\n\ndef get_tangent_circles(center1, radius1, center2, radius2, point):\n    circles = []\n    if get_tangent_circle(center1, radius1, point) and get_tangent_circle(center2, radius2, point):\n        circles.append((center1, radius1))\n        circles.append((center2, radius2))\n    return circles\n\ndef main():\n    point = (0, 5)\n    circles = get_tangent_circles((4, 0), 1, (-4, 0), 1, point)\n    print(len(circles))\n\nif __name__ == \"__main__\":\n    main()"
  },
  {
    "example_id": 292,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "3.0",
      "5.0",
      "2.0",
      "46.0",
      "3.0",
      "14.0",
      "2.0",
      "26.0",
      "6.0",
      "4.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "t = symbols('t')\na = symbols('a')\nb = symbols('b')\neq = (3*t**2+5*t+a)*(4*t**2+b*t-2) - 12*t**4+26*t**3-8*t**2-16*t+6\nsolution = solve(eq, [a, b])\nprint(solution[0])"
  },
  {
    "example_id": 293,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-0.224744871391587"
    ],
    "annotated_answers": [
      "23.0"
    ],
    "solution": "a, b, c = symbols('a b c')\nexpr = (a*sqrt(2) + b*sqrt(3))/c\nsolution = solve(expr, [a, b, c])\na_value = solution[0][0]\nb_value = solution[0][1]\nc_value = solution[0][2]\nprint(a_value + b_value + c_value)"
  },
  {
    "example_id": 294,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "12296.0",
      "3.0",
      "2.0",
      "3.0",
      "0.0",
      "12296.0",
      "3.0",
      "2.0",
      "3.0",
      "12296.0",
      "3.0",
      "2.0",
      "0.0",
      "3.0",
      "12296.0",
      "3.0",
      "2.0",
      "0.0",
      "3.0"
    ],
    "annotated_answers": [
      "32736.0"
    ],
    "solution": "x1, x2, x3 = symbols('x1, x2, x3')\n\n# Find the sum of the squares\neq1 = x1**2 + x2**2 + x3**2 - 12296\n\n# Find the product\neq2 = (x1*x2*x3)/8\n\n# Find the values of x1, x2, and x3\nsolution = solve([eq1, eq2], [x1, x2, x3])\n\n# Print the values\nprint(solution)"
  },
  {
    "example_id": 295,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "50.0",
      "50.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq = x*y - 50\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)\n\neq = x*y - 50\nsolution = solve(eq, y)\ny_value = solution[0]\nprint(y_value)"
  },
  {
    "example_id": 296,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-4.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "g = lambda x: 3*x - 4\nprint(g(0))"
  },
  {
    "example_id": 297,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "378.0"
    ],
    "annotated_answers": [
      "81.0"
    ],
    "solution": "sum_of_consecutive_integers = 27 * 28 / 2\nprint(sum_of_consecutive_integers)"
  },
  {
    "example_id": 298,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "81.0"
    ],
    "solution": "# define variables\nx = symbols('x')\ny = symbols('y')\n\n# define the circle equation\neq = (x - 0)**2 + (y - 0)**2 - (5**2)\n\n# define the lattice points\nlattice = [\n    (int(x), int(y))\n    for x in range(int(-5), int(5) + 1)\n    for y in range(int(-5), int(5) + 1)\n    if eq.subs({x: x, y: y}) == 0\n]\n\n# print the number of lattice points\nprint(len(lattice))"
  },
  {
    "example_id": 299,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3369.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "f = lambda x: x**2 - 15*x + 3\nprint(f(f(9)))"
  },
  {
    "example_id": 300,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "21.0",
      "2.0"
    ],
    "annotated_answers": [
      "81.0"
    ],
    "solution": "x = symbols('x')\nx_plus_5 = x + 5\nx_squared = x**2\neq = x_squared - x_plus_5\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 301,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "from sympy import sqrt\n\ndef solve_equation(a, b):\n    \"\"\"\n    Find all solutions to the equation sqrt(3x + 6) = x + 2\n    \"\"\"\n    solutions = []\n    for x in range(0, 1000):\n        if sqrt(3 * x + 6) == x + 2:\n            solutions.append(x)\n    return solutions\n\nprint(solve_equation(3, 6))"
  },
  {
    "example_id": 302,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = 3\ny = 2\n\ndef expression(x, y):\n    return (4*x**2)/(9*y**2)\n\nprint(expression(x, y))"
  },
  {
    "example_id": 303,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\np = 3*x + 2\nq = 4*x + 7\np_value = p.subs(x, 2)\nq_value = q.subs(x, -1)\nprint(q_value)"
  },
  {
    "example_id": 304,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "40.0",
      "35.0",
      "30.0",
      "25.0",
      "20.0",
      "15.0",
      "10.0",
      "5.0",
      "0.0"
    ],
    "annotated_answers": [
      "225.0"
    ],
    "solution": "distance = 45\nwhile distance > 0:\n    distance -= 5\n    print(distance)"
  },
  {
    "example_id": 305,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2500.0",
      "25.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "# Number of customers who buy a television that costs $1500\nn_1500 = 15\n# Cost of a television that costs $1500\nc_1500 = 1500\n# Cost of a television that costs $2500\nc_2500 = 2500\n# Daniel's theory\n# number of customers who buy a television that costs $2500\n# = number of customers who buy a television that costs $1500 / (cost of $1500 / cost of $2500)\n# = n_1500 / (c_1500 / c_2500)\n# = n_1500 / (1500 / 2500)\n# = n_1500 * 2500 / 1500\nn_2500 = n_1500 * c_2500 / c_1500\nprint(\"The number of customers who buy a television that costs $2500 is:\", n_2500)"
  },
  {
    "example_id": 306,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2450.0"
    ],
    "annotated_answers": [
      "2450.0"
    ],
    "solution": "# Define symbols\nbase_salary = 1200\ncommission = 0.05\nsales = 25000\n\n# Calculate total earnings\ntotal_earnings = base_salary + (sales * commission)\n\n# Print total earnings\nprint(total_earnings)"
  },
  {
    "example_id": 307,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "8.0",
      "3.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq1 = 3*x - 8*y\neq2 = 5*y - 15*z\neq1_sol = solve(eq1, x)\neq2_sol = solve(eq2, y)\nx_val = eq1_sol[0]\ny_val = eq2_sol[0]\nprint(x_val/z)"
  },
  {
    "example_id": 308,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "64.0",
      "64.0",
      "-4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\neq1 = (64)**(1/2) - x\neq2 = (64)**(1/3) - x\nsol1 = solve(eq1, x)\nsol2 = solve(eq2, x)\n\nprint('The difference between the positive square root of 64 and the cube root of 64 is:')\nprint(sol2[0] - sol1[0])"
  },
  {
    "example_id": 309,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "123422.0",
      "5.0",
      "1.0",
      "5.0",
      "5.0",
      "123422.0",
      "5.0",
      "1.0",
      "5.0",
      "4.0"
    ],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "# define the variable a and b\na = symbols('a')\nb = symbols('b')\n\n# define the equation\neq = a**5 + b**5 - 123422\n\n# solve the equation\nsolution = solve(eq, a, b)\n\n# extract the values of a and b\na_value = solution[0]\nb_value = solution[1]\n\n# print the values of a and b\nprint(a_value, b_value)\n\n# print the sum of a and b\nprint(a_value + b_value)"
  },
  {
    "example_id": 310,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.533333333333333"
    ],
    "annotated_answers": [
      "1.8"
    ],
    "solution": "x = 4.8 - (1+1+4.8)/3\nprint(x)"
  },
  {
    "example_id": 311,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "6.0",
      "1.0",
      "144.0"
    ],
    "annotated_answers": [
      "144.0"
    ],
    "solution": "x = symbols('x')\neq = 192*x**2 - 16\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)\nprint(x_value**4)"
  },
  {
    "example_id": 312,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a = -2\nb = 4\nc = 1\n\nprint(a+b+c)"
  },
  {
    "example_id": 313,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1001.0"
    ],
    "annotated_answers": [
      "2003.0"
    ],
    "solution": "sum_even = sum(range(0, 2003, 2))\nsum_odd = sum(range(1, 2003, 2))\nprint(sum_even - sum_odd)"
  },
  {
    "example_id": 314,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "5267013.0",
      "18.0",
      "255.0",
      "2.0",
      "1.0",
      "3.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "n = symbols('n')\nm = symbols('m')\neq = n*(n+1)*(n+2) - 255\nsolution = solve(eq, n)\nn_value = solution[0]\nm_value = n_value + 1\nprint(m_value)"
  },
  {
    "example_id": 315,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "13225.0"
    ],
    "annotated_answers": [
      "13225.0"
    ],
    "solution": "print(115**2)"
  },
  {
    "example_id": 316,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "23.0",
      "2.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "a, b = symbols('a, b')\neq = 2*a - 3*b + 23\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 317,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "26000.0"
    ],
    "annotated_answers": [
      "26000.0"
    ],
    "solution": "print(513**2 - 487**2)"
  },
  {
    "example_id": 318,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "-3.0",
      "2.0",
      "10.0",
      "1.0",
      "2.0",
      "5.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq1 = a**2 + b**2 + c**2 - 13\neq2 = a*b + b*c + c*a - 6\nsolution = solve([eq1, eq2], [a, b, c])\nprint(solution)"
  },
  {
    "example_id": 319,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-12.0"
    ],
    "annotated_answers": [
      "108.0"
    ],
    "solution": "# distance from center\nd1 = 64\n# distance from center\nd2 = 16\n# number of revolutions\nn1 = 27\n# number of revolutions\nn2 = 0\n# radius of merry-go-round\nr = 50\n\n# circumference of merry-go-round\nc1 = 2 * pi * r\n# circumference of merry-go-round\nc2 = 2 * pi * (r - d1)\n\n# distance from center to the end of the merry-go-round\nl1 = c1 - d1\n# distance from center to the end of the merry-go-round\nl2 = c2 - d2\n\n# solve for n2\nn2 = floor(l2 / l1 * n1)\nprint(n2)"
  },
  {
    "example_id": 320,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.177524267017032",
      "5.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "log5 = log(5, 125*sqrt(5))\nprint(log5)"
  },
  {
    "example_id": 321,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "x = symbols('x')\na = 15\nb = 3\neq = a + b*x - 3\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 322,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "190.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "A = 100\nB = 5\nC = 25\nD = 50\n\nsolution = (A - B) / C * D\nprint(solution)"
  },
  {
    "example_id": 323,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "80.0"
    ],
    "annotated_answers": [
      "45.0"
    ],
    "solution": "# define variables\nx = symbols('x')\n\n# define sequence\nseq = [3**2, x, 3**4]\n\n# find difference\ndiff = seq[1] - seq[0]\n\n# find common difference\ncdiff = diff/(seq[1] - seq[0])\n\n# find n\nn = seq[2] - seq[0]\n\n# find x\nx_value = seq[0] + (n - 1)*cdiff\n\n# round to nearest integer\nx_value = int(floor(x_value))\n\n# print result\nprint(x_value)"
  },
  {
    "example_id": 324,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "import math\ndef distance(p1, p2):\n    return math.sqrt( (p1[0] - p2[0]) ** 2 + (p1[1] - p2[1]) ** 2 )\n\ndist12 = distance((4,3), (6,1))\ndist13 = distance((4,3), (1,7))\nprint(max(dist12, dist13))"
  },
  {
    "example_id": 325,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "5.0"
    ],
    "solution": ""
  },
  {
    "example_id": 326,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "x = symbols('x')\neq = 20 * 0.5 * 0.8 * x\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 327,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "20.0",
      "19.0",
      "4.0",
      "-7.3",
      "4.0",
      "0.9090909090909091"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "# age of Amy\nA = 22\n# age of Ben\nB = 19\n# age of Chris\nC = 20\n\n# four years ago, Chris was the same age as Amy is now\nC_old = A\n\n# in four years, Ben's age will be 1/5 of Amy's age at that time\nB_new = A * 1/5\n\n# find the difference between Chris's age now and his age 4 years ago\ndiff = C - C_old\n\n# find the difference between Ben's age now and his age 4 years ago\ndiff_B = B - B_new\n\n# find the ratio of Ben's age now and his age 4 years ago\nratio_B = diff_B / diff\n\n# find the ratio of Chris's age now and his age 4 years ago\nratio_C = C / C_old\n\n# find the age of Chris now\nC_new = C_old + diff\n\n# find the age of Ben now\nB_new = B_new + diff_B\n\n# print the results\nprint(\"Chris's age now is:\", C_new)\nprint(\"Ben's age now is:\", B_new)\nprint(\"The ratio of Ben's age now and his age 4 years ago is:\", ratio_B)\nprint(\"The ratio of Chris's age now and his age 4 years ago is:\", ratio_C)"
  },
  {
    "example_id": 328,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "# Solve for the middle term of the arithmetic sequence.\n\n# Initialize variables.\nx1 = 3\nx2 = 5\nx3 = 6\nx4 = 7\nx5 = 9\n\n# Define the arithmetic sequence.\na1 = x1 + x2\na2 = x2 + x3\na3 = x3 + x4\na4 = x4 + x5\na5 = x5 + x1\n\n# Calculate the middle term.\nmiddle_term = (a1 + a2 + a3 + a4 + a5)/5\n\n# Print the middle term.\nprint(middle_term)"
  },
  {
    "example_id": 329,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "5.0",
      "-8.0"
    ],
    "annotated_answers": [
      "-120.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq1 = a + b - 8\neq2 = b + c + 3\neq3 = a + c + 5\nsolution = solve([eq1, eq2, eq3], [a, b, c])\nprint(solution)"
  },
  {
    "example_id": 330,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-8.0"
    ],
    "annotated_answers": [
      "-56.0"
    ],
    "solution": "x = symbols('x')\nf = 2*x**2 - 8*x + 15\nf_prime = f.diff(x)\ndiscriminant = f_prime.subs(x, 0)\nprint(discriminant)"
  },
  {
    "example_id": 331,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "36.0",
      "2.0",
      "36.0",
      "2.0",
      "73.0",
      "2.0",
      "73.0",
      "2.0"
    ],
    "annotated_answers": [
      "52.0"
    ],
    "solution": "# Define symbols\nx = symbols('x')\ny = symbols('y')\n\n# Define equations\neq1 = x**2 + y**2 - 6**2\neq2 = x**2 + y**2 - (8**2 + 3**2)\neq3 = x**2 + y**2 - 0**2\n\n# Solve equations\nsolution1 = solve(eq1, x)\nsolution2 = solve(eq2, x)\nsolution3 = solve(eq3, x)\n\n# Print solutions\nprint(solution1)\nprint(solution2)\nprint(solution3)"
  },
  {
    "example_id": 332,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "x = symbols('x')\nsol1 = solve((x + 3)**2 - 6, x)\nsol2 = solve((x + 3)**2 - 6, x)\nprint(abs(sol1[0] - sol2[0]))"
  },
  {
    "example_id": 333,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "A = 2\nB = 3\nAB = A*B\nprint(AB)"
  },
  {
    "example_id": 334,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "f = lambda x: 3*sqrt(2*x - 7) - 8\nprint(f(8))"
  },
  {
    "example_id": 335,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-3.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "# define variables\nx = symbols('x')\n\n# define equation\neq = (9 - 4*x) / (x + 6) - 7\n\n# solve for x\nsolution = solve(eq, x)\n\n# print result\nprint(solution)"
  },
  {
    "example_id": 336,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "15.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "red = 15\nyellow = 35 - 2\norange = 35/3\nwhite = 35 + 3\nprint(red)"
  },
  {
    "example_id": 337,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.0",
      "2.0",
      "12.0"
    ],
    "annotated_answers": [
      "364.0"
    ],
    "solution": "a, b = symbols('a b')\neq = a + b - 12\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)\nprint(b - a_value)"
  },
  {
    "example_id": 338,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "65.0"
    ],
    "annotated_answers": [
      "65.0"
    ],
    "solution": "# Define variables\nB = 30\nh = 6.5\n\n# Calculate volume\nV = (1/3)*B*h\n\n# Print volume\nprint(V)"
  },
  {
    "example_id": 339,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3969.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "x = symbols('x')\neq = (63 - (x**(1/2)))**2\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 340,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\neq = x/(2-x)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 341,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-65.0",
      "-5.0",
      "2.0",
      "105.0",
      "2.0",
      "2.0",
      "-5.0",
      "2.0",
      "105.0",
      "2.0",
      "2.0",
      "20.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "x, y = symbols('x, y')\n\neq1 = (x + y)**2 - 105\neq2 = x**2 + y**2 - 65\n\nsolution = solve([eq1, eq2], [x, y])\nx_value = solution[0][0]\ny_value = solution[0][1]\nxy_value = x_value * y_value\nprint(xy_value)"
  },
  {
    "example_id": 342,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": ""
  },
  {
    "example_id": 343,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "96.0"
    ],
    "annotated_answers": [
      "93.0"
    ],
    "solution": "a1 = 1\na2 = a1 + 1\na3 = a2 + 1\n#...\na98 = 137\n\na2_plus_a4_plus_a6_plus_a8 = 0\nfor i in range(2, 98, 2):\n    a2_plus_a4_plus_a6_plus_a8 += a2\n\nprint(a2_plus_a4_plus_a6_plus_a8)"
  },
  {
    "example_id": 344,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "194.0",
      "2.0"
    ],
    "annotated_answers": [
      "549.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq = x**2 + (x + 2)**2 - 99\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 345,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "def f(x):\n    return x + 2\n\ndef g(x):\n    return 1 / f(x)\n\nprint(g(f(-3)))"
  },
  {
    "example_id": 346,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "28.0",
      "2.0",
      "45.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "s = symbols('s')\ncs = 4*s\np = 28\nq = 45\nexpr = (cs + p)**2 + q\nprint(expr)"
  },
  {
    "example_id": 347,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "x, y = symbols('x y')\neq = y/(x*2) - 1\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 348,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "from sympy import Symbol, solve, pprint\n\nx = Symbol('x')\nf = (2*x)/(x**2 - 5*x - 14)\n\nsolutions = solve(f.as_numer_denom()[1], x)\na, b = solutions\n\nprint(a + b + f.as_numer_denom()[0])"
  },
  {
    "example_id": 349,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "13.0",
      "2.0",
      "73.0",
      "2.0",
      "2.0",
      "73.0",
      "2.0",
      "13.0",
      "2.0",
      "2.0",
      "0.5"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq1 = x + y - 13\neq2 = x*y - 24\nsolution = solve([eq1, eq2], [x, y])\nx_value = solution[0][0]\ny_value = solution[0][1]\ndistance = (x_value**2 + y_value**2)**0.5\nprint(distance)"
  },
  {
    "example_id": 350,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "3.0",
      "2.0",
      "2.0",
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "from sympy import symbols, integrate\n\nx = symbols('x')\nf = (x - 2)**2 - 9\nintegral = integrate(f, x)\nprint(integral)"
  },
  {
    "example_id": 351,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "1.0"
    ],
    "solution": ""
  },
  {
    "example_id": 352,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "# Symbols\nx = symbols('x')\nL = symbols('L')\n\n# Equations\neq = L/2 - x\n\n# Solution\nsolution = solve(eq, x)\n\n# Print Solution\nprint(solution)\n\n# Print Answer\nprint(solution[0])"
  },
  {
    "example_id": 353,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.326429487122303"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "import math\n\nx = math.log(642, 2)\nprint(x)"
  },
  {
    "example_id": 354,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "1.0",
      "3.0"
    ],
    "annotated_answers": [
      "-8192.0"
    ],
    "solution": "a = symbols('a')\neq = (a**2 - 2) * (a**3 - 16)\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 355,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = 2**(2*x) - 256**0.5\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 356,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "149.0",
      "4.0",
      "3.0",
      "2.0",
      "3.0",
      "3.0",
      "4.0",
      "3.0",
      "149.0",
      "2.0",
      "3.0",
      "3.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x, y = symbols('x y')\neq = 2*x**2*y**3 + 4*y**3 - 149 - 3*x**2\nsolution = solve(eq, x)\nx_value = solution[0]\ny_value = solution[1]\nprint(x_value + y_value)"
  },
  {
    "example_id": 357,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "total_cost = 12.75\nentry_fee = 2.25\nride_fee = 1.50\nrides = (total_cost - entry_fee) / ride_fee\nprint(rides)"
  },
  {
    "example_id": 358,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "2.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "-9.0"
    ],
    "solution": "x1, y1, x2, y2 = symbols('x1, y1, x2, y2')\nline_segment = (x1, y1), (x2, y2)\nmidpoint = ((x1 + x2)/2, (y1 + y2)/2)\nproduct = midpoint[0]*midpoint[1]\nprint(product)"
  },
  {
    "example_id": 359,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0",
      "5.0",
      "-7.0",
      "5.0",
      "-32.0",
      "5.0"
    ],
    "annotated_answers": [
      "-56.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq1 = 3*a + b + c + 3\neq2 = a + 3*b + c + 9\neq3 = a + b + 3*c + 19\nsol = solve([eq1, eq2, eq3], [a, b, c])\nprint(sol)"
  },
  {
    "example_id": 360,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "150.0",
      "0.6666666666666666",
      "225.0",
      "225.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "# Assign variables\nn_org = 12\nn_new = 3\nd_org = 10\nd_new = 0\n\n# Calculate number of days\nn = n_org + n_new\nd = d_org - d_new\ndays = d * n\n\n# Calculate number of shares per person\nshares = d / n\n\n# Calculate number of days per share\ndays_per_share = days / shares\n\n# Round number of days per share\ndays_per_share_rounded = ceil(days_per_share)\n\n# Print results\nprint(\"Number of days:\", days)\nprint(\"Number of shares per person:\", shares)\nprint(\"Number of days per share:\", days_per_share)\nprint(\"Number of days per share rounded:\", days_per_share_rounded)"
  },
  {
    "example_id": 361,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "24.0",
      "16.0"
    ],
    "annotated_answers": [
      "128.0"
    ],
    "solution": "y, k = symbols('y k')\neq = (y**2) + (24*y) + (16) + (k)\nsolution = solve(eq, k)\nk_value = solution[0]\nprint(k_value)"
  },
  {
    "example_id": 362,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "64.0"
    ],
    "solution": "a, b = symbols('a, b')\nexpr = a**2 + 2*a*b + b**2\n\na = 3\nb = 5\n\nprint(expr.subs([(a, 3), (b, 5)]))"
  },
  {
    "example_id": 363,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\neq = (x**2 + 4*x + 4)\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 364,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "0.0"
    ],
    "annotated_answers": [
      "54.0"
    ],
    "solution": "# define variables\nx = symbols('x')\n\n# define equation\neq = (2*x + 12*x + 12*x + 22*x) - 4*x\n\n# solve for x\nsolution = solve(eq, x)\n\n# print solution\nprint(solution)\n\n# print length of trail\nprint(solution[0])"
  },
  {
    "example_id": 365,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "n = -1\nwhile n*n - 5*n - 14 >= 0:\n    n += 1\nprint(n-1)"
  },
  {
    "example_id": 366,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "-48.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = 725*x + 727*y - 1500\neq2 = 729*x + 731*y - 1508\neq = eq1 - eq2\nsolution = solve(eq, x, y)\nx_value = solution[0][0]\ny_value = solution[0][1]\nprint(x_value - y_value)"
  },
  {
    "example_id": 367,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "13122.0",
      "2.0",
      "81.0",
      "2.0",
      "2.0",
      "13122.0",
      "2.0",
      "81.0",
      "2.0",
      "2.0",
      "13122.0",
      "2.0",
      "81.0",
      "2.0",
      "2.0",
      "13122.0",
      "2.0",
      "81.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "# Define variables\nx = symbols('x')\ny = symbols('y')\nz = symbols('z')\n\n# Define equations\neq1 = x**2 + y**2 - z**2\neq2 = x + y - 162\n\n# Solve for x and y\nsol = solve([eq1, eq2], [x, y])\n\n# Print solution\nprint(sol)"
  },
  {
    "example_id": 368,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x = (-1 - math.sqrt(13)) / 3\nprint(int(x))"
  },
  {
    "example_id": 369,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "7.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x = symbols('x')\na = 1\nb = -4\nc = -3\n\n# Quadratic equation\neq = a*x**2 + b*x + c\n\n# Solve for x\nsol = solve(eq)\n\n# m > n\nm = sol[0]\nn = sol[1]\n\nprint(m - n)"
  },
  {
    "example_id": 370,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "4.0",
      "2.0",
      "9.0",
      "14.0",
      "0.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "x = symbols('x')\nm = symbols('m')\nn = symbols('n')\n\neq1 = 16*x**2 + 36*x + 56\neq2 = (m*x + n)**2\n\ndiff = eq1 - eq2\n\nsolution = solve(diff, n)\n\nn_value = solution[0]\nprint(n_value)\n\nm_value = (diff.subs(n, n_value)).subs(x, 0)\nprint(m_value)"
  },
  {
    "example_id": 371,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "from sympy import symbols, diff\n\nx = symbols('x')\nf = x**2 + 2*x + 1\ng = 2*x + 1\n\ndiff_f = diff(f, x)\ndiff_g = diff(g, x)\n\nprint(diff_f)\nprint(diff_g)\n\nmax_diff = f - g\nprint(max_diff)"
  },
  {
    "example_id": 372,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "# Declare variables\nn_heads = 10\nn_legs = 30\n\n# Calculate number of horses\nn_horses = floor((n_legs - n_heads)/4)\n\n# Print solution\nprint(\"Number of horses:\", n_horses)"
  },
  {
    "example_id": 373,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "11.0",
      "2.0",
      "3.0",
      "2.0",
      "11.0",
      "2.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "from sympy import symbols, solve\nx = symbols('x')\nf = x**2 - 5*x + 9\na, b = solve(f, x)\nprint((a - 1)*(b - 1))"
  },
  {
    "example_id": 374,
    "selected_mode": "import",
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "d = symbols('d')\ne = symbols('e')\neq1 = 2*d - 17*e\neq2 = 2*e - d\nsolution = solve([eq1, eq2], [d, e])\nd_value = solution[0][0]\ne_value = solution[0][1]\nprint(d_value)\nprint(e_value)"
  },
  {
    "example_id": 375,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.5",
      "198.0"
    ],
    "annotated_answers": [
      "900.0"
    ],
    "solution": "x = symbols('x')\nc = symbols('c')\neq = (1/2)*x**2 + 99*x + c\nsolution = solve(eq, c)\nc_value = solution[0]\nprint(c_value)"
  },
  {
    "example_id": 376,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-5.0"
    ],
    "annotated_answers": [
      "-5.0"
    ],
    "solution": "b = symbols('b')\neq = b**2 + 2*b - 15\nsolution = solve(eq, b)\nb_value = solution[0]\nprint(b_value)"
  },
  {
    "example_id": 377,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "288.0"
    ],
    "annotated_answers": [
      "288.0"
    ],
    "solution": "expression = (2 * (-3))**5 / (-3)**3\nprint(expression)"
  },
  {
    "example_id": 378,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "26.0"
    ],
    "annotated_answers": [
      "26.0"
    ],
    "solution": "n = 26\nprint(n)"
  },
  {
    "example_id": 379,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "f = lambda x: (x-1)*(x-3)*(x-7)*(x-9)\nprint(f(6) - f(4))"
  },
  {
    "example_id": 380,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "11261.62419264",
      "13060.031454591659"
    ],
    "annotated_answers": [
      "10455.0"
    ],
    "solution": "# Investment in the first CD\nPV = 10000\ni = 0.04/2\nn = 6\nfV = PV * (1 + i)**n\nprint(fV)\n\n# Investment in the second CD\nPV = fV\ni = 0.05/2\nn = 6\nfV = PV * (1 + i)**n\nprint(fV)"
  },
  {
    "example_id": 381,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "60.0"
    ],
    "solution": "a = symbols('a')\neq = a**(3) * (12 * 20 * 15 * 60)\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 382,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "4.0",
      "7.0",
      "1.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x, y = symbols('x y')\nexpr = x**2 + y**2 + 2*x - 4*y + 8\nsolution = solve(expr, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 383,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "14400.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x = symbols('x')\neq = (120 - (x**0.5))**0.5\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 384,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.9"
    ],
    "annotated_answers": [
      "-23.5"
    ],
    "solution": "def line_1(x):\n    return 1/3*x + 7\ndef line_2(x):\n    return 2*x + 5\ndef x_intercept(line):\n    x = -line(0) / (line(1) - 1)\n    return x\ndef sum_x_coords(line_1, line_2):\n    return x_intercept(line_1) + x_intercept(line_2)\n\nprint(round(sum_x_coords(line_1, line_2), 1))"
  },
  {
    "example_id": 385,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "41.0",
      "5.0",
      "5.0",
      "3.0",
      "5.0",
      "38.0",
      "5.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "import sympy as sym\n\nx, y, z = sym.symbols('x, y, z')\n\neq1 = [3*x+y-17, 5*x+z-41]\neq2 = [5*y+z-14]\n\nsolution = sym.solve(eq1, [x, y, z])\n\nprint(solution)"
  },
  {
    "example_id": 386,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "90.0"
    ],
    "annotated_answers": [
      "5400.0"
    ],
    "solution": "# Approximate the line through point E and F\nslope = (90 - (-8)) / (60 - (-6.2))\nintercept = -8 - (-6.2) * slope\n\n# Find the distance traveled in one hour\ndistance = 60 * slope + intercept\nprint(distance)"
  },
  {
    "example_id": 387,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "16.000000000000004"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "from math import factorial\n\ndef product(numbers):\n    product = 1\n    for number in numbers:\n        product *= number\n    return product\n\nnumbers = [4/3, 6/4, 8/5, 10/6, 12/7, 14/8]\nprint(product(numbers))"
  },
  {
    "example_id": 388,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-5.0",
      "2.0"
    ],
    "annotated_answers": [
      "73.0"
    ],
    "solution": "A = symbols('A')\nB = symbols('B')\neq = 2*A + 5*B\nsolution = solve(eq, A)\nA_value = solution[0]\nprint(A_value)"
  },
  {
    "example_id": 389,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 - 2*x - 3\nsolution = solve(eq, x)\np = solution[0]\nq = solution[1]\nprint((p + 1)*(q + 1))"
  },
  {
    "example_id": 390,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.25"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "A = 3\nB = 5\nC = 8\nA_and_B = (A+B)/2\nA_and_C = (A+C)/2\nB_and_C = (B+C)/2\nA_and_B_and_C = (A_and_B + B_and_C)/2\nprint(A_and_B_and_C)"
  },
  {
    "example_id": 391,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "7.0"
    ],
    "annotated_answers": [
      "78.0"
    ],
    "solution": "x, y = symbols('x y')\neq = (1/x) + (1/y) - (1/7)\nsolution = solve(eq, x, y)\nsum = 0\nfor s in solution:\n    sum += s[0]\nprint(sum)"
  },
  {
    "example_id": 392,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "2.0"
    ],
    "solution": ""
  },
  {
    "example_id": 393,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq1 = 2*x - 9*y - 14\neq2 = 6*x - y - 42\nsolution = solve((eq1, eq2), (x, y))\nprint(solution)"
  },
  {
    "example_id": 394,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "3.0"
    ],
    "solution": ""
  },
  {
    "example_id": 395,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "numerator = 2**10 - 2**8\ndenominator = 2**7 - 2**6\nprint(numerator // denominator)"
  },
  {
    "example_id": 396,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-5.0"
    ],
    "annotated_answers": [
      "-5.0"
    ],
    "solution": "x = symbols('x')\neq = (x+2)/3 - (4/(x+1))\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 397,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "2.5"
    ],
    "solution": ""
  },
  {
    "example_id": 398,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "4.0",
      "2.0",
      "9.0",
      "20.0",
      "9.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "d = symbols('d')\nc = symbols('c')\neq1 = d - 6*c - 4\neq2 = 2*d - 9*c - 20\neq1_solution = solve(eq1, d)\neq2_solution = solve(eq2, c)\nd_value = eq1_solution[0]\nc_value = eq2_solution[0]\nprint(d_value/c_value)"
  },
  {
    "example_id": 399,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.00014138938637006315",
      "1.3327305718735334",
      "-8.0",
      "1.2196372670150306",
      "-14.0",
      "1.0836319148981435",
      "-22.0",
      "9.347504088301713",
      "-33.0",
      "7.82838751323878",
      "-45.0",
      "6.365195434520759",
      "-59.0",
      "5.024744054223591",
      "-75.0",
      "3.851047918901112",
      "-93.0",
      "0.014704509509804484"
    ],
    "annotated_answers": [
      "0.015"
    ],
    "solution": "term = 3/206\nnum_terms = 10\ntotal = term\nfor i in range(1, num_terms):\n    term *= 103**(-i)\n    total += term\n    print(f'{term=}')\nprint(f'{total=}')"
  },
  {
    "example_id": 400,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "560.0",
      "53.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x = symbols('x')\ny = -265*x + 2800\nmax_x = solve(y, x)\nmax_x = max_x[0]\nprint(max_x)"
  },
  {
    "example_id": 401,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-9.0",
      "6.0",
      "3.0"
    ],
    "annotated_answers": [
      "117.0"
    ],
    "solution": "x = symbols('x')\na, b = symbols('a, b', positive=True)\neq = x**2 + 18*x - 27\nsolution = solve(eq, x)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 402,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.5"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\nz = symbols('z')\nn = 15\nc = 2\nv = 2\np = 8\nl = 0\n\n# Find the number of lemon candies\nl = n - (c + v + p)\n\n# Find the number of peppermint candies\np = c + v + (l/2)\n\n# Find the number of lemon candies\nl = p - l\n\nprint(l)"
  },
  {
    "example_id": 403,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-2.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "x = symbols('x')\neq = x**3 + 25\nsolution = solve(eq, x)\nx_value = solution[0]\nx_value = x_value.evalf()\nprint(ceil(x_value))"
  },
  {
    "example_id": 404,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "h = lambda x: sqrt((x+3)/2)\nprint(h(-1))"
  },
  {
    "example_id": 405,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "2.0",
      "2.0",
      "14.0",
      "2.0"
    ],
    "annotated_answers": [
      "26.0"
    ],
    "solution": "# Let x be a positive number such that 2x^2 = 4x + 9\nx = symbols('x')\neq = 2*x**2 - 4*x + 9\n\n# Solve for x\nsolution = solve(eq, x)\nx_value = solution[0]\n\n# Check if x can be written in simplified form as a + sqrt(b)/c\na = symbols('a')\nb = symbols('b')\nc = symbols('c')\neq1 = a**2 + b/c\neq2 = eq1 - x_value\nsolution = solve(eq2, a, b, c)\n\n# Print a + b + c\nif solution:\n    a_value = solution[0][0]\n    b_value = solution[0][1]\n    c_value = solution[0][2]\n    print(a_value + b_value + c_value)\nelse:\n    print(\"No solution\")"
  },
  {
    "example_id": 406,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "3.0",
      "4.0",
      "5.0",
      "6.0",
      "8.0",
      "10.0",
      "12.0",
      "14.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "def f(x):\n    if x % 2 == 0:\n        return x/2\n    else:\n        return 3*x + 1\n\ndef get_domain(n):\n    return [x for x in range(1, n+1) if f(x) in range(1, n+1)]\n\ndef get_range(n):\n    return [f(x) for x in range(1, n+1)]\n\nn = 20\nprint(get_domain(n))\nprint(get_range(n))"
  },
  {
    "example_id": 407,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-117.0",
      "4.0",
      "180.0",
      "3.0",
      "39.0",
      "2.0",
      "17.0",
      "53.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "from sympy import simplify\nfrom sympy import Add, Mul, Pow, Symbol\nfrom sympy.abc import x\n\nexpr = (7+8*x)-3*(2+6*x+2*Pow(x,2))+9*(1+3*x+4*Pow(x,2)+12*Pow(x,3))-9*(7-Pow(x,2)-8*Pow(x,3)+13*Pow(x,4))\n\nprint(simplify(expr))"
  },
  {
    "example_id": 408,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = 1 + 7\nprint(x)"
  },
  {
    "example_id": 409,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-0.125"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "f = lambda x: (2/(x**2 + x - 6))\nf_derivative = lambda x: -2/(x**2 + x - 6)**2\nf_derivative_at_x = f_derivative(1)\nprint(f_derivative_at_x)"
  },
  {
    "example_id": 410,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "15.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "expression = ((3-4)**2 + 2*(3+4))\nprint(expression)"
  },
  {
    "example_id": 411,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x1 = symbols('x1')\nx2 = symbols('x2')\ny = x1**2 - 7*x1 + 7\neq = y - (-3)\nsolution = solve(eq, x1)\nx1_value = solution[0]\nx2_value = solution[1]\nx_sum = x1_value + x2_value\nprint(x_sum)"
  },
  {
    "example_id": 412,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "1.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "112.0"
    ],
    "solution": "x = (2/(1 + 2*sqrt(3))) + (3/(2 - sqrt(3)))\ny = x.expand()\nprint(y)"
  },
  {
    "example_id": 413,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "630.0"
    ],
    "annotated_answers": [
      "630.0"
    ],
    "solution": "sum_of_first_20_multiples_of_5 = sum(5*i for i in range(1, 21))\nsum_of_first_20_even_integers = sum(2*i for i in range(1, 21))\nprint(sum_of_first_20_multiples_of_5 - sum_of_first_20_even_integers)"
  },
  {
    "example_id": 414,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "59.0",
      "2.0",
      "-1.0",
      "2.0",
      "59.0",
      "2.0"
    ],
    "annotated_answers": [
      "16384.0"
    ],
    "solution": "k = symbols('k')\neq = k**2 + k + 15\nsolution = solve(eq)\nprint(solution)"
  },
  {
    "example_id": 415,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "13.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "import math\n\ndef distance(p1, p2):\n    return math.sqrt( (p2[0] - p1[0])**2 + (p2[1] - p1[1])**2 )\n\nprint(distance((-4, 1), (1, 13)))"
  },
  {
    "example_id": 416,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "55.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 - sum(range(1, 11))\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 417,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0",
      "2.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x = symbols('x')\n\nf = (12/x**2)*(x**4/14*35/3)\n\nprint(f)"
  },
  {
    "example_id": 418,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-6.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x = symbols('x')\na = symbols('a')\nb = symbols('b')\nl = 4*x - 7\nm = a*x + b\n\n# Solve for the point on the line m that has x-coordinate 6\npoint = solve(m.subs(x, 6), b)\n\n# Find the y-coordinate of the point\ny = point[0]\nprint(y)"
  },
  {
    "example_id": 419,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "41.0"
    ],
    "solution": "from sympy import symbols, solve, sqrt\n\nf = symbols('f', real=True)\n\n# find the largest negative integer and smallest positive integer\n# that can be used to solve for the functions g(x) and h(x)\n\n# g(x) = f(x) + ax\n# h(x) = f(x) + bx\n# g(x) and h(x) are invertible iff g(x) and h(x) are not both zero\n\na = symbols('a', negative=True)\nb = symbols('b', positive=True)\n\n# g(x) = f(x) + ax\n# h(x) = f(x) + bx\n# g(x) = f(x) + a(x - b)\n# h(x) = f(x) + b(x - a)\n# g(x) - h(x) = f(x) + (a - b)(x - b)\n\n# g(x) - h(x) = f(x) + (a - b)(x - b)\n# g(x) - h(x) = f(x) + (a - b)x - (a - b)b\n# g(x) - h(x) = f(x) + (a - b)x - b(a - b)\n# g(x) - h(x) = f(x) + (a - b)x - b(a - b)\n# g(x) - h(x) = f(x) + (a - b)x - b(a - b)\n# g(x) - h(x) = f(x) + (a - b)x - b(a - b)\n# g(x) - h(x) = f(x) + (a - b)x - b(a - b)\n# g(x) - h(x) = f(x) + (a - b)x - b(a - b)\n# g(x) - h(x) = f(x) + (a - b)x - b(a - b)\n# g(x) - h(x) = f(x) + ("
  },
  {
    "example_id": 420,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "4.0",
      "5.0",
      "3.0",
      "2.0",
      "6.0",
      "3.0",
      "2.0",
      "1.0",
      "1.0",
      "4.0",
      "5.0",
      "1.0",
      "2.0",
      "6.0",
      "1.0",
      "2.0",
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "# Define x1, x2, x3, x4 as x-coordinates of intersection points\nx1 = symbols('x1')\nx2 = symbols('x2')\nx3 = symbols('x3')\nx4 = symbols('x4')\n\n# Define y1, y2, y3, y4 as y-coordinates of intersection points\ny1 = x1**4\ny2 = x2**4\ny3 = x3**4\ny4 = x4**4\n\n# Define m and n\nm = (y1-5*x1**2+6)/(x1**2-1)\nn = (y3-5*x3**2+6)/(x3**2-1)\n\n# Calculate m-n\nresult = m-n\n\n# Print result\nprint(result)"
  },
  {
    "example_id": 421,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a = 3\nn = 3\nexpr = (a**n - a**(n-1))/(a**(n-1) - a**(n-2))\nprint(expr)"
  },
  {
    "example_id": 422,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\nf = (x-5)/(x**2 - 9)\nsolution = solve(f, x)\nprint(solution)"
  },
  {
    "example_id": 423,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "P = symbols('P')\nQ = symbols('Q')\n\ndef multiply(P, Q):\n    return (P + Q) / 2\n\nprint(multiply(3, multiply(6, 8)))"
  },
  {
    "example_id": 424,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "57.0",
      "2.0",
      "3.0",
      "2.0",
      "57.0",
      "2.0",
      "3.0",
      "2.0",
      "57.0",
      "2.0",
      "3.0",
      "2.0",
      "57.0",
      "2.0",
      "57.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "# Define variables\nx = symbols('x')\ny = symbols('y')\n\n# Define equations\neq1 = x + y - 3\neq2 = (x - 3)**2 + (y - 3)**2 - 33\n\n# Solve equations\nsolution = solve([eq1, eq2], [x, y])\n\n# Print result\nprint(solution)\n\n# Print absolute value of difference\nprint(Abs(solution[0][0] - solution[0][1]))"
  },
  {
    "example_id": 425,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-21.0",
      "2.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "z = symbols('z')\na, b = symbols('a b')\nexpr = 2*z**2 + 13*z + 21\nsol = solve(expr, z)\nz_sol = sol[0]\na_val = z_sol.subs(z, 0)\nb_val = z_sol.subs(z, 1)\nprint(2*a_val + b_val)"
  },
  {
    "example_id": 426,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "a = 9 - 2*3\nb = 9 - 2*a\nprint(a + b)"
  },
  {
    "example_id": 427,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-6.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "# The red parabola shown is the graph of the equation x = ay^2 + by + c.  Find a+b+c.\n\n# The function is given by:\n# y = a*x^2 + b*x + c\n# a = 1\n# b = -2\n# c = -3\n\n# a + b + c = 1 - 2 - 3 = -6\nprint(-6)"
  },
  {
    "example_id": 428,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0",
      "2.0",
      "1.0",
      "2.0",
      "1.0",
      "1.0",
      "2.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "32.0"
    ],
    "solution": "x1, y1 = symbols('x1, y1')\nx2, y2 = symbols('x2, y2')\nslope = (y2 - y1)/(x2 - x1)\ny_intercept = y1 - slope*x1\nsum = slope + y_intercept\nprint(sum)"
  },
  {
    "example_id": 429,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "14.0",
      "2.0",
      "120.0",
      "3.0",
      "120.0"
    ],
    "annotated_answers": [
      "22.0"
    ],
    "solution": "# Define variables\nx = symbols('x')\ny = symbols('y')\nz = symbols('z')\n\n# Define equations\neq1 = (x + y) - (y + z) - 14\neq2 = (x + y)/2 + (y + z)/2 + (z + x)/2 - 120\n\n# Define solutions\nsol1 = solve(eq1, x)\nsol2 = solve(eq2, y)\nsol3 = solve(eq2, z)\n\n# Print solutions\nprint('Solution 1:', sol1[0])\nprint('Solution 2:', sol2[0])\nprint('Solution 3:', sol3[0])"
  },
  {
    "example_id": 430,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "1.0",
      "1.0",
      "1.0",
      "2.0",
      "1.0",
      "3.0",
      "1.0",
      "4.0",
      "1.0"
    ],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "for n in range(0,21):\n    print(n, len(str(n)))"
  },
  {
    "example_id": 431,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "50.0"
    ],
    "annotated_answers": [
      "50.0"
    ],
    "solution": "x = symbols('x')\neq = (sqrt(12*x) + 12)*(sqrt(3*x) - 6) - (4*(x + 3) + x - 34)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 432,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 - 6*x + 13\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 433,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-44.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x = symbols('x')\ny = -2*x**2 - 12*x - 15\nm = y.subs(x, 0)\nn = y.subs(x, 1)\nprint(m + n)"
  },
  {
    "example_id": 434,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "10.0",
      "4.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x, y = symbols('x y')\neq = x**2 - 4*x + y**2 - 6*y - 36\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 435,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "f = lambda x: 2*x - 3\ng = lambda x: x + 1\nprint(g(f(5)-1))"
  },
  {
    "example_id": 436,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "107.0"
    ],
    "annotated_answers": [
      "107.0"
    ],
    "solution": "def largest_prime_factor(n):\n    if n == 2:\n        return 2\n    if n % 2 == 0:\n        return largest_prime_factor(n // 2)\n    for i in range(3, int(n ** 0.5) + 1, 2):\n        if n % i == 0:\n            return largest_prime_factor(n // i)\n    return n\nprint(largest_prime_factor(9951))"
  },
  {
    "example_id": 437,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-10.0",
      "3.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "x = symbols('x')\nexpr = 3*x**2 + 14*x + 8\nsolution = solve(expr, x)\na = solution[0]\nb = solution[1]\nprint(a - b)"
  },
  {
    "example_id": 438,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "228.3"
    ],
    "solution": "# Define variables\ndays = 14\n\n# Define equation\neq = (452**(1/days))*(1+5/100)**(days)\n\n# Define answer\na = floor(log(eq, 10))\n\n# Print answer\nprint(a)"
  },
  {
    "example_id": 439,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "3.0",
      "64.0",
      "1.0",
      "2.0",
      "64.0",
      "1.0",
      "64.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "from sympy import S, I, symbols, Eq, solve, expand_func, simplify\nx = symbols('x')\nf = lambda x: (1/(x-64)) + (1/(x**2-64)) + (1/(x**3-64))\nf_expanded = expand_func(f(x))\nf_simplified = simplify(f_expanded)\nprint(f_simplified)"
  },
  {
    "example_id": 440,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "25.0"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "n = symbols('n')\nfirst_five_odd_integers = [1, 3, 5, 7, 9]\nsum_of_first_five_odd_integers = sum(first_five_odd_integers)\nprint(sum_of_first_five_odd_integers)"
  },
  {
    "example_id": 441,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq = (y - x)**2 / (y - z) * (z - x) + (z - y)**2 / (z - x) * (x - y) + (x - z)**2 / (x - y) * (y - z)\nsolution = solve(eq, x, y, z)\nprint(solution)"
  },
  {
    "example_id": 442,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "from math import sqrt\n\nA = 9\nB = 2*sqrt(3)\nC = 3\n\nif gcd(A, C) == 1 and gcd(B, C) == 1:\n    print(A + B + C)"
  },
  {
    "example_id": 443,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "10.0",
      "7.0",
      "812.0",
      "3.0",
      "2.0",
      "10.0",
      "7.0",
      "35.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq = 6*x*y*z + 30*x*y + 21*x*z + 2*y*z + 105*x + 10*y + 7*z - 812\nsolution = solve(eq, [x, y, z])\nx_value = solution[0][0]\ny_value = solution[0][1]\nz_value = solution[0][2]\nx_plus_y_plus_z = x_value + y_value + z_value\nprint(x_plus_y_plus_z)"
  },
  {
    "example_id": 444,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "2.0",
      "45.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "217.0"
    ],
    "solution": "x, y = symbols('x, y')\neq1 = x+y - 7\neq2 = 3*x+y - 45\nsolution1 = solve(eq1, x)\nsolution2 = solve(eq2, y)\nx_value = solution1[0]\ny_value = solution2[0]\nprint(x_value**2 - y_value**2)"
  },
  {
    "example_id": 445,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "14.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "sum = 25\ndifference = 11\nlarger = sum - difference\nprint(larger)"
  },
  {
    "example_id": 446,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "21.0"
    ],
    "annotated_answers": [
      "29.0"
    ],
    "solution": "def count_lattice_points_in_region(xmin, xmax, ymin, ymax):\n    count = 0\n    for x in range(xmin, xmax + 1):\n        for y in range(ymin, ymax + 1):\n            if x == y or x == -y**2 + 35/4:\n                count += 1\n    return count\n\nprint(count_lattice_points_in_region(-10, 10, -10, 10))"
  },
  {
    "example_id": 447,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "15.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "a, b = symbols('a b')\nop = (a + b) * b\neq = op - (5 * 3)\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 448,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-1.0",
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "# x = symbols('x')\nx = symbols('x')\n\n# expr = 9*x**2 + 18*x + 7\nexpr = 9*x**2 + 18*x + 7\n\n# solve for x\nsolution = solve(expr, x)\n\n# print the minimum value of x\nprint(solution[0])"
  },
  {
    "example_id": 449,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "4.0",
      "4.0",
      "-25.0",
      "8.0",
      "40.0",
      "8.0",
      "39.0",
      "8.0",
      "9.0",
      "40.0",
      "8.0"
    ],
    "annotated_answers": [
      "28.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\nd = symbols('d')\ne = symbols('e')\nf = symbols('f')\ng = symbols('g')\n\neq1 = a + b + c + d - 3*e\neq2 = e + f + g - 4*a\neq3 = a + b + c - 2*d\neq4 = 8*a + 10*b + 6*c - 2*f/5\n\nsolution = solve([eq1, eq2, eq3, eq4], [a, b, c, d, e, f, g])\nprint(solution)"
  },
  {
    "example_id": 450,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "4.0",
      "0.0",
      "3.0",
      "9.0",
      "0.0"
    ],
    "annotated_answers": [
      "-7.0"
    ],
    "solution": "x = symbols('x')\nb, c = symbols('b c', real=True)\neq = x**2 + b*x + c > 0\nprint(eq.subs(x, -2))\nprint(eq.subs(x, 3))"
  },
  {
    "example_id": 451,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "15.999999999999996"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "def f(x):\n    if x >= 0:\n        return -x**(1/3)\n    else:\n        return x**2\n\ndef g(x):\n    return f(f(f(f(x))))\n\nprint(g(512))"
  },
  {
    "example_id": 452,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0"
    ],
    "annotated_answers": [
      "21.0"
    ],
    "solution": "A = -2\nB = 2\nC = 4\nr = 5\n\nprint(A+B+C+r)"
  },
  {
    "example_id": 453,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "15625.0"
    ],
    "annotated_answers": [
      "125.0"
    ],
    "solution": "print(5**5 * 5)"
  },
  {
    "example_id": 454,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-9.0",
      "-9.0"
    ],
    "annotated_answers": [
      "41.0"
    ],
    "solution": "john = 27\nfather = 93\nage_difference = father - john\nsum_john = sum(int(i) for i in str(john))\nsum_father = sum(int(i) for i in str(father))\nage_difference_years = age_difference // 100\nsum_father_years = sum_father // 100\nprint(age_difference_years - sum_john)\nprint(sum_father_years - sum_john)"
  },
  {
    "example_id": 455,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "def f(n):\n    if n % 2 == 0:\n        return n**2 - 3*n + 1\n    else:\n        return n**2 + 1\n\ndef solve(n):\n    return f(f(f(f(f(f(n))))))\n\nprint(solve(2))"
  },
  {
    "example_id": 456,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "14.0",
      "2.0",
      "3.0",
      "4.0",
      "7.0",
      "14.0",
      "1.0",
      "7.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "from sympy import sqrt\n\ndenominator = 1 / (sqrt(2) + sqrt(8) + sqrt(32))\nprint(denominator)\n\nnumerator = sqrt(denominator)\nprint(numerator)\n\nA = numerator.args[0]\nB = denominator.args[0]\n\nprint(A + B)"
  },
  {
    "example_id": 457,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "57.0",
      "4.0",
      "49.0",
      "3.0",
      "3.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "from sympy import sqrt, simplify\n\na = simplify(3/sqrt(16))\nb = simplify(1/sqrt(3))\n\nprint(a**2*sqrt(16) + 16*sqrt(3) + b**2*sqrt(3) + 3*sqrt(16))"
  },
  {
    "example_id": 458,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\neq = (3/4)**x - 81/256\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 459,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-20.0",
      "4.0",
      "4.0",
      "3.0",
      "9.0",
      "2.0",
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "from sympy import *\nx = symbols('x')\neq = (1+2*x)-2*(1+2*x+3*x**2)+3*(1+2*x+3*x**2+4*x**3)-4*(1+2*x+3*x**2+4*x**3+5*x**4)\nsolution = simplify(eq)\nprint(solution)"
  },
  {
    "example_id": 460,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "def f(x):\n    if x == 0:\n        return 0\n    elif x == 1:\n        return 0\n    elif x == 2:\n        return 1\n    elif x == 3:\n        return 3\n    elif x == 4:\n        return 6\n    else:\n        return None\n\ndef g(x):\n    return f(x) - x\n\ndistinct_numbers = set()\nfor x in range(5):\n    distinct_numbers.add(g(x))\nprint(len(distinct_numbers))"
  },
  {
    "example_id": 461,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "4.0",
      "5.0",
      "11.0"
    ],
    "annotated_answers": [
      "208.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\neq = (2*a+b) - (5*a - 4)*(b - 1)/3\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 462,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "n = 7\nprint(n)"
  },
  {
    "example_id": 463,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\nsolution = solve(Abs(2 - x) == 3, x)\nsum = 0\nfor i in solution:\n    sum += floor(i)\nprint(sum)"
  },
  {
    "example_id": 464,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-7.0"
    ],
    "annotated_answers": [
      "81.0"
    ],
    "solution": "x = symbols('x')\nmax_value = 4*(x+7)*(2-x)\nmax_value = solve(max_value, x)[0]\nprint(max_value)"
  },
  {
    "example_id": 465,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0"
    ],
    "annotated_answers": [
      "78.0"
    ],
    "solution": "# Define variables\nhours = symbols('hours')\n\n# Define the equation\neq = 2*hours + 1\n\n# Find the total number of chimes in 12 hours\nsolution = solve(eq, hours)\n\n# Print the answer\nprint(solution[0])"
  },
  {
    "example_id": 466,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "11.0",
      "2.0"
    ],
    "annotated_answers": [
      "81.0"
    ],
    "solution": "x = symbols('x')\nf = Function('f')\nf_inv = Function('f_inv')\n\nf_inv = Lambda(x, f(x) + 2)\nf_inv_value = f_inv(11)\nprint(f_inv_value)"
  },
  {
    "example_id": 467,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.3407807929942597",
      "154"
    ],
    "annotated_answers": [
      "45.0"
    ],
    "solution": "# Define the function\nf = lambda x: 2**x\n\n# Find the value of f(1)+f(2)+f(3)+...+f(8)+f(9)\nsum = 0\nfor i in range(1, 10):\n    sum += f(f(i))\nprint(sum)"
  },
  {
    "example_id": 468,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "print(8 * (6**2 - 3 * 11) / 8 + 3)"
  },
  {
    "example_id": 469,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = 3\nprint(x)"
  },
  {
    "example_id": 470,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "6.0"
    ],
    "solution": ""
  },
  {
    "example_id": 471,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.95438340951821"
    ],
    "annotated_answers": [
      "-6.0"
    ],
    "solution": "x = symbols('x')\neq = (2*((x+4)**(1/3))/(2*x-4)) - 2\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 472,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-7.0",
      "82.0"
    ],
    "annotated_answers": [
      "89.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 + 14*x - 33\nsol = solve(eq)\na = 0\nb = 0\nfor i in sol:\n    if i.is_real and i.is_positive:\n        a = i.args[0]\n        b = i.args[1]\n        break\nprint(a + b)"
  },
  {
    "example_id": 473,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "1.0",
      "3.0",
      "2.0",
      "3.0",
      "2.0",
      "1.0",
      "3.0",
      "2.0",
      "2.0",
      "1.0",
      "3.0",
      "2.0",
      "3.0",
      "2.0",
      "1.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\n\nexpr = sqrt(x**3 - 2**y)\n\nsolution = solve(expr, x, y)\n\nx_value = solution[0]\ny_value = solution[1]\n\nprint(x_value)\nprint(y_value)"
  },
  {
    "example_id": 474,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-7.0",
      "2.0",
      "57.0",
      "2.0",
      "2.0",
      "57.0",
      "2.0",
      "7.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "53.0"
    ],
    "solution": "x = symbols('x')\np = x**2 + 7*x - 2\nalpha, beta = solve(p, x)\nalpha_squared = alpha**2\nbeta_squared = beta**2\nprint(alpha_squared + beta_squared)"
  },
  {
    "example_id": 475,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "9.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "print(5*1+4)"
  },
  {
    "example_id": 476,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7272.0"
    ],
    "annotated_answers": [
      "15554.0"
    ],
    "solution": "# Initialize variables\nn = 6\nk = 7\n\n# Initialize previous term\nprev_term = 2222\n\n# Initialize sum\nsum = 0\n\n# Loop until k terms are calculated\nwhile k > 0:\n    # Calculate next term\n    next_term = prev_term + 1010\n\n    # Check if the next term is the nth term\n    if n == 1:\n        sum = prev_term\n        break\n\n    # Increment previous term\n    prev_term = next_term\n\n    # Decrement n\n    n -= 1\n\n    # Decrement k\n    k -= 1\n\nprint(sum)"
  },
  {
    "example_id": 477,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq = (4*x - 7*y + 11) - 3\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 478,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "60.0",
      "60.0",
      "3600.0",
      "3600.0"
    ],
    "annotated_answers": [
      "3600.0"
    ],
    "solution": "l = symbols('l')\nw = symbols('w')\narea = l * w\narea_new = area - 60 * 60\nnew_l = l + 60\nnew_w = w - 60\nnew_area = new_l * new_w\nchange = (new_area - area_new) / area_new\nprint(change)"
  },
  {
    "example_id": 479,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "# Symbols\nx = symbols('x')\ny = symbols('y')\n\n\n# Equations\neq1 = x**4 - y\neq2 = 7*x**2 - 10\n\n\n# Solve\nsol = solve([eq1, eq2], [x])\n\n\n# Extract x values\nx_values = []\nfor soln in sol:\n    x_values.append(soln[x])\n\n\n# Extract x values\nx_values = []\nfor soln in sol:\n    x_values.append(soln[x])\n\n\n# Sort\nx_values = sorted(x_values)\n\n\n# Extract x values\nx_values = []\nfor soln in sol:\n    x_values.append(soln[x])\n\n\n# Extract x values\nx_values = []\nfor soln in sol:\n    x_values.append(soln[x])\n\n\n# Extract x values\nx_values = []\nfor soln in sol:\n    x_values.append(soln[x])\n\n\n# Sort\nx_values = sorted(x_values)\n\n\n# Extract x values\nx_values = []\nfor soln in sol:\n    x_values.append(soln[x])\n\n\n# Extract x values\nx_values = []\nfor soln in sol:\n    x_values.append(soln[x])\n\n\n# Sort\nx_values = sorted(x_values)\n\n\n# Extract x values\nx_values = []\nfor soln in sol:\n    x_values.append(soln[x])\n\n\n# Extract x values\nx_values = []\nfor soln in sol:\n    x_values.append(soln[x])\n\n\n# Sort\nx_values = sorted(x_values)\n\n\n# Extract x values\nx_values = []\nfor soln in sol:\n    x_"
  },
  {
    "example_id": 480,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "200.0"
    ],
    "annotated_answers": [
      "200.0"
    ],
    "solution": "print((15 + 5) * (15 - 5))"
  },
  {
    "example_id": 481,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.6"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "x = symbols('x')\nf = (2/(x+1))\nf_inv = f**(-1)\nf_inv_value = f_inv.subs(x, 1/5)\nprint(f_inv_value)"
  },
  {
    "example_id": 482,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "9.0",
      "3.0",
      "1.0",
      "9.0",
      "3.0"
    ],
    "annotated_answers": [
      "-7.0"
    ],
    "solution": "from sympy import symbols, solve\n\nx, y = symbols('x y')\neq = x**2 + 6*x + y**2 + 8*y\nsolution = solve(eq, x, y)\nprint(solution)"
  },
  {
    "example_id": 483,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "4.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x, y = symbols('x y')\neq = 4*x - 3*y\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 484,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "21.0"
    ],
    "annotated_answers": [
      "-15.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq = (2**2) + (x**2) - (5**2)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 485,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "from math import floor\nx = floor(abs(-23/9))\nprint(x)"
  },
  {
    "example_id": 486,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "2.0",
      "2.0",
      "7.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq = (7*(1/x) + 14*(1/y)) - 4\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 487,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "from sympy import S, floor, ceiling\n\na = ceiling(S(0.25)**(0.5) + 15)\nb = floor(S(0.25)**(0.5) + 15)\n\nprint(b - a)"
  },
  {
    "example_id": 488,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\nf = 2*x - 1\ng = 2*f - x\nsolution = solve(g - f, x)\nx_value = solution[0]\nf_value = f.subs(x, x_value)\nprint(f_value)"
  },
  {
    "example_id": 489,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.125",
      "1.125"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "c = 9\nd = 8\n\n# Inversely proportional\nd_value = c/d\nprint(d_value)\n\n# Find d when c is 6\nc_value = 6\nd_value = c/d\nprint(d_value)"
  },
  {
    "example_id": 490,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "9.0",
      "2.0",
      "17.0",
      "2.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "n = symbols('n')\neq = (n - 2)*(n + 8) - (n)*(2*n - 3)\nsolution = solve(eq, n)\nn_value = solution[0]\nprint(n_value)"
  },
  {
    "example_id": 491,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.875"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "annual_cost = 10000 + 650\nrecuperation_cost = 1200\n\nyears_to_recuperate = annual_cost / recuperation_cost\nprint(years_to_recuperate)"
  },
  {
    "example_id": 492,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "1.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x1, y1 = 3, 1\nx2, y2 = 5, 1\nmidpoint_x = (x1 + x2) / 2\nmidpoint_y = (y1 + y2) / 2\nprint(midpoint_x, midpoint_y)"
  },
  {
    "example_id": 493,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "a = 1\nb = 1\nc = 1\n\nx = a + b/c\n\nprint(x)"
  },
  {
    "example_id": 494,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0",
      "5.0",
      "24.0",
      "2.0",
      "19.0",
      "35.0",
      "2.0"
    ],
    "annotated_answers": [
      "-9.0"
    ],
    "solution": "A, B, C, x = symbols('A B C x')\neq1 = 24*x**2 - 19*x - 35\neq2 = (A*x - 5)*(2*B*x + C)\nsolution = solve([eq1 - eq2], [A, B, C])\nA_value = solution[0][0]\nB_value = solution[0][1]\nC_value = solution[0][2]\nAB_value = A_value*B_value\nC_value = C_value\nAB_value_minus_C_value = AB_value - C_value\nprint(AB_value_minus_C_value)"
  },
  {
    "example_id": 495,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "46.0",
      "3.0",
      "32.0"
    ],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "import sympy as sym\n\nx, y, z = sym.symbols(\"x y z\")\n\n# First equation\neq1 = 3*x + 4*y - 12*z - 10\n\n# Second equation\neq2 = -2*x - 3*y + 9*z - 4\n\n# Solve the system\nsol = sym.solve([eq1, eq2], [x, y])\n\n# Print the solution\nprint(sol)"
  },
  {
    "example_id": 496,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "64.0",
      "2.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\nlog = log(64*x**2, x)\nprint(log)"
  },
  {
    "example_id": 497,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.6363636363636364",
      "0.6363636363636364",
      "-6.2727272727272725",
      "2.000000000000001",
      "8.881784197001252",
      "-16.0",
      "0.0",
      "-3.0",
      "-17.0",
      "-17.0"
    ],
    "annotated_answers": [
      "-13.5"
    ],
    "solution": "p = -14\nq = 2\nr = -17\n\n# solve for p + q\nx = 13\ny = q\n\nslope = (y - (-5)) / (x - 2)\nprint(slope)\n\n# slope-intercept form of a line\nm = (y - (-5)) / (x - 2)\nb = (-5) - m * 2\nprint(m, b)\n\n# line equation\nline = m * x + b\nprint(line)\n\n# calculate distance from point (13, 2) to line\ndistance = abs(line - 2)\nprint(distance)\n\n# round to the nearest tenth\nprint(round(distance, 1))\n\n# find the value of q\nq_value = r - p\nprint(q_value)\n\n# find the value of p + q\np_value = p + q_value\nprint(p_value)\n\n# find the value of p + q rounded to the nearest tenth\np_q_value = round(p_value, 1)\nprint(p_q_value)"
  },
  {
    "example_id": 498,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "9.0",
      "2.0",
      "9.0",
      "3.0",
      "9.0"
    ],
    "annotated_answers": [
      "48.0"
    ],
    "solution": "n = symbols('n')\nm = symbols('m')\nk = symbols('k')\nl = symbols('l')\n\na = 0\nb = 0\nc = 0\nd = 0\ne = 0\nf = 0\ng = 0\nh = 0\ni = 0\nj = 0\nk = 0\nl = 0\n\nfor k in range(1, 10):\n    a = a + 1\n    b = b + 1\n    c = c + 1\n    d = d + 1\n    e = e + 1\n    f = f + 1\n    g = g + 1\n    h = h + 1\n    i = i + 1\n    j = j + 1\n    k = k + 1\n    l = l + 1\n\nprint(f\"Figure 1 has {a} endpoints\")\nprint(f\"Figure 2 has {b} endpoints\")\nprint(f\"Figure 3 has {c} endpoints\")"
  },
  {
    "example_id": 499,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-75.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "a = -2\nd = -20\ne = -53\nprint(a+d+e)"
  },
  {
    "example_id": 500,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.8",
      "-13.0",
      "27.6512238232461",
      "10.0"
    ],
    "annotated_answers": [
      "-6.5"
    ],
    "solution": "red_wavelength = 7*10**(-7)\nred_energy = 1000/red_wavelength\n\nenergy_ratio = red_energy/2000\n\nwavelength_ratio = red_wavelength/energy_ratio\n\na = wavelength_ratio\n\nb = log(wavelength_ratio)/log(10)\n\nprint(a + b)"
  },
  {
    "example_id": 501,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1056.0"
    ],
    "solution": "# Initialize variables\nn1 = 1\nn2 = 1\n\n# Initialize product\np = 1\n\n# Initialize smallest product\nsmallest_product = 10000\n\n# Loop through consecutive integers\nwhile n2 < 10000:\n    p = n1 * n2\n\n    # Check if product is smallest\n    if p < smallest_product:\n        smallest_product = p\n\n    # Increment n2\n    n2 += 1\n\n    # Increment n1\n    n1 += 1\n\nprint(smallest_product)"
  },
  {
    "example_id": 502,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x = symbols('x')\neq = (x+1)/(x-1) - (x-2)/(x+2)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 503,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "0.0",
      "0.0"
    ],
    "annotated_answers": [
      "360.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq_1 = a*b*c\neq_2 = 30*a\neq_3 = 180*b\neq_4 = 24*c\nsolution = solve((eq_1, eq_2, eq_3, eq_4), (a, b, c))\na_value, b_value, c_value = solution[0]\nprint(a_value, b_value, c_value)"
  },
  {
    "example_id": 504,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "2.0",
      "15.0",
      "2.0"
    ],
    "annotated_answers": [
      "23.0"
    ],
    "solution": "b = 3\nx = symbols('x')\neq = x**2 + b*x + b + 3\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 505,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "# Define the number of people that can mow the lawn in 12 hours\nnum_people = 5\n\n# Define the number of hours the lawn needs to be mowed\nhours = 3\n\n# Calculate the number of people that are needed to mow the lawn in 3 hours\nnum_people_needed = math.ceil(hours/num_people)\n\n# Print the number of people that are needed to mow the lawn in 3 hours\nprint(num_people_needed)"
  },
  {
    "example_id": 506,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "def count_meals(num_friends):\n    # Calculate the number of meals needed for 18 people\n    num_meals_18 = 18 / num_friends\n\n    # Calculate the number of meals needed for 12 people\n    num_meals_12 = floor(num_meals_18)\n\n    # Calculate the number of meals needed for 12 people\n    num_meals_12 = ceil(num_meals_12)\n\n    return num_meals_12\n\n\n# Test your function\nprint(count_meals(12))"
  },
  {
    "example_id": 507,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "219.0",
      "286.0"
    ],
    "annotated_answers": [
      "3.2"
    ],
    "solution": "# function to be plotted\nf = lambda x: 2 * x**2 + 2 * x - 1\n\n# shifted and stretched function\ng = lambda x: 2 * f(x - 2)\n\n# value of f(10)\nprint(f(10))\n\n# value of g(10)\nprint(g(10))"
  },
  {
    "example_id": 508,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "49.0",
      "1.0"
    ],
    "annotated_answers": [
      "-18.0"
    ],
    "solution": "x, y = symbols('x y')\neq = (x**2 + y**2) - (14*x + 48*y)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 509,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1024.0"
    ],
    "solution": "f_inv = lambda x: x ** (1/3)\nf_inv_8 = f_inv(8)\nprint(f_inv_8 / f_inv(8))"
  },
  {
    "example_id": 510,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\nsolution = solve(x - (1/(2 + (1/(x-2)))), x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 511,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "25.0"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "print(ceil(sqrt(20))**2)"
  },
  {
    "example_id": 512,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "18.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "f = lambda x: 5*x**2 + 3*x + 4\nprint(f(-2))"
  },
  {
    "example_id": 513,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "# Positive difference between 120% of 30 and 130% of 20\n# 120% of 30 is 36\n# 130% of 20 is 26\n# 36 - 26 = 10\nprint(10)"
  },
  {
    "example_id": 514,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "144.0"
    ],
    "annotated_answers": [
      "144.0"
    ],
    "solution": "print((13+5)*(13-5))"
  },
  {
    "example_id": 515,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-5.0",
      "-19.0",
      "-4.0",
      "-84.0",
      "-3.0",
      "-99.0",
      "-2.0",
      "-100.0",
      "-1.0",
      "-99.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "for x in range(-10, 0):\n    y = (x+2)**4 - 100\n    if y < 0:\n        print('({}, {})'.format(x, y))"
  },
  {
    "example_id": 516,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "3.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "def rationalize_denominator(x):\n    return x.as_numer_denom()[0] / x.as_numer_denom()[1]\n\nx = 1 / (1 + sqrt(2) - sqrt(3))\nprint(rationalize_denominator(x))"
  },
  {
    "example_id": 517,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "from math import sqrt\n\ndef sum_of_solutions(x, y, z):\n    return x**2 + y**2 + z**2\n\ndef solutions(x, y, z):\n    for i in range(1, z+1):\n        if sum_of_solutions(x, y, i) == z**2:\n            yield i\n\ndef sum_of_solutions_to_equation(x, y, z):\n    return sum(solutions(x, y, z))\n\nx = 10\ny = 6\nz = 10\nprint(sum_of_solutions_to_equation(x, y, z))"
  },
  {
    "example_id": 518,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "2.0",
      "1.0",
      "6.0",
      "2.0",
      "7.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "b = symbols('b')\nx1 = symbols('x1')\nx2 = symbols('x2')\ny1 = x1**2 + 2*x1 + 7\ny2 = 6*x2 + b\neq = y1 - y2\nsolution = solve(eq, b)\nb_value = solution[0]\nprint(b_value)"
  },
  {
    "example_id": 519,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "y_intercept = -2 * 1 + 6 * 1\nprint(y_intercept)"
  },
  {
    "example_id": 520,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "20.0"
    ],
    "annotated_answers": [
      "4.5"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\n\neq1 = y >= abs(x)\neq2 = y <= -abs(x) + 3\n\narea = 0\n\nfor i in range(-10, 10):\n    x_val = i\n    y_val = floor(abs(x_val)) + 3\n    area += 1\n\nprint(area)"
  },
  {
    "example_id": 521,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-8.0",
      "6.0",
      "-6.0",
      "6.0"
    ],
    "annotated_answers": [
      "-15.0"
    ],
    "solution": "x = symbols('x')\neq = (Abs(x)+1) > 7\neq2 = Abs(x+1) <= 7\nsolution = solve([eq, eq2], x)\nprint(solution)"
  },
  {
    "example_id": 522,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0",
      "46.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 - 14*x + 3\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 523,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.571428571428571"
    ],
    "annotated_answers": [
      "2300.0"
    ],
    "solution": "feathers_cost = 932\ngold_cost = 1402\nfeathers_price = 4\ngold_price = 3\nfeathers_weight = 8\ngold_weight = 14\n\nfeathers_cost_per_pound = feathers_cost / feathers_weight\ngold_cost_per_pound = gold_cost / gold_weight\n\nfeathers_price_per_pound = feathers_price / feathers_weight\ngold_price_per_pound = gold_price / gold_weight\n\nfeathers_total_cost = feathers_price_per_pound * 5\ngold_total_cost = gold_price_per_pound * 5\n\ntotal_cost = feathers_total_cost + gold_total_cost\n\nprint(total_cost)"
  },
  {
    "example_id": 524,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "8.0",
      "5.0",
      "2.0",
      "8.0"
    ],
    "annotated_answers": [
      "-8.0"
    ],
    "solution": "x = symbols('x')\nk = (x**2 - 8*x + 5)/(2*(x - 4))\nprint(k)"
  },
  {
    "example_id": 525,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-173.0",
      "43.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "n = symbols('n')\n\n# Find the sum of the first 8 consecutive odd counting numbers\neq_1 = 8*n + 1 + 2*n + 3*n + 4*n + 5*n + 6*n + 7*n + 8*n\nsolution_1 = solve(eq_1, n)\nsum_8_odd = solution_1[0]\n\n# Find the sum of 5 consecutive even integers\neq_2 = 2*n + 4*n + 6*n + 8*n + 10*n\nsolution_2 = solve(eq_2, n)\nsum_5_even = solution_2[0]\n\n# Find the difference between the sums\ndiff = sum_8_odd - sum_5_even\n\n# Find the smallest even integer\nsmallest_even = diff - 4\nprint(smallest_even)"
  },
  {
    "example_id": 526,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x = 3\ny = 2\nprint((2*x**3 - 3*y**2)/6)"
  },
  {
    "example_id": 527,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "30.0",
      "2.0",
      "30.0",
      "7.0",
      "2.0"
    ],
    "annotated_answers": [
      "158.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = (x + y) / 2 - 7\neq2 = x*y - 19\nsolution = solve([eq1, eq2], [x, y])\nx_value, y_value = solution[0]\nx_value2 = x_value**2\ny_value2 = y_value**2\nprint(x_value2 + y_value2)"
  },
  {
    "example_id": 528,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "30.0"
    ],
    "solution": "x = 30\ny = 40\nz = 40\n\na = (z - y) / x\n\nprint(a)"
  },
  {
    "example_id": 529,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "16.0",
      "2.0",
      "1.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq1 = (a + 2*b)/2 - 7\neq2 = (a + 2*c)/2 - 8\nsolution = solve([eq1, eq2], [a, b, c])\nprint(solution)"
  },
  {
    "example_id": 530,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "a = -2\nb = 4\nc = 5\nh = -2\nk = c\nprint(k)"
  },
  {
    "example_id": 531,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.5555555555555554"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x1, y1 = 1, 2\nx2, y2 = 19, 4\na, b = (x2-x1)/2, (y2-y1)/2\n\nm = (b-a)/(x2-x1)\nc = y2-m*x2\n\nx3 = 20\ny3 = m*x3 + c\n\nprint(y3)"
  },
  {
    "example_id": 532,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.007843137254902"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "n = 512 / 255\nprint(n)"
  },
  {
    "example_id": 533,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "800000.0"
    ],
    "annotated_answers": [
      "800000.0"
    ],
    "solution": "print(1002**2 - 502**2 + 298**2 - 202**2)"
  },
  {
    "example_id": 534,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "1320.0"
    ],
    "solution": ""
  },
  {
    "example_id": 535,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "m = symbols('m')\neq = m - 7*m/7 - 7*m/7**2 - 7*m/7**3 - 7*m/7**4\nsolution = solve(eq, m)\nm_value = solution[0]\nprint(m_value)"
  },
  {
    "example_id": 536,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "21.0",
      "4.0",
      "3.0",
      "73.0",
      "4.0"
    ],
    "annotated_answers": [
      "84.0"
    ],
    "solution": "x = symbols('x')\neq = x*(2*x - 7) - 3\nsolution = solve(eq, x)\nx_value = solution[0]\nm = x_value.subs(x, 0)\nn = x_value.subs(x, 1)\np = x_value.subs(x, 2)\nprint(m + n + p)"
  },
  {
    "example_id": 537,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "a = symbols('a')\nb = 1.5 * a\nc = 2 * a\nd = 2 * b\ne = 10\neq = a + b + c + d + e - 100\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 538,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "40000.0"
    ],
    "annotated_answers": [
      "2500.0"
    ],
    "solution": "area = 200**2\nprint(area)"
  },
  {
    "example_id": 539,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-4.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "x = symbols('x')\ny = -sqrt(23)\nz = ceil(y)\nprint(z)"
  },
  {
    "example_id": 540,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "2.0",
      "0.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\nf = x**2 - 4\nsol = solve(f, x)\nsol1 = solve(f, f)\nprint(sol)\nprint(sol1)"
  },
  {
    "example_id": 541,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "34.0"
    ],
    "annotated_answers": [
      "1023.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq = (x**2 - (x + 2)**2) + (y**2 - (y + 2)**2) - 128\nsolution = solve(eq, x, y)\nx_value = solution[0][0]\ny_value = solution[0][1]\nprint(x_value*y_value)"
  },
  {
    "example_id": 542,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "n = symbols('n')\na = 1000\nd = 16/11\nb = a + d*(n-1)\neq = b - a\nsolution = solve(eq, n)\nn_value = solution[0]\nprint(n_value)"
  },
  {
    "example_id": 543,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "n = symbols('n')\neq = (9**(18*n)) - (27**(24))\nsolution = solve(eq, n)\nn_value = solution[0]\nprint(n_value)"
  },
  {
    "example_id": 544,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "20.0",
      "2.0",
      "30.0",
      "2.0",
      "3.0",
      "20.0",
      "2.0",
      "30.0",
      "2.0",
      "3.0",
      "20.0",
      "2.0",
      "30.0",
      "2.0",
      "3.0",
      "20.0",
      "2.0",
      "30.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq = (a + b + c) - 60\neq2 = (a**2 + b**2 + c**2) - (a*b + a*c + b*c)\nsolution = solve([eq, eq2], [a, b, c])\nprint(solution)"
  },
  {
    "example_id": 545,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "a, b = symbols('a b')\neq = a * b - 2 * a - 3 * b\nsolution = solve(eq, a, b)\nprint(solution)"
  },
  {
    "example_id": 546,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "15.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "coins = 11\ntotal_value = 75\ncoin_value = 5\n\nnickels = total_value / coin_value\nprint(nickels)"
  },
  {
    "example_id": 547,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "185.0"
    ],
    "annotated_answers": [
      "75.0"
    ],
    "solution": "# Initialize variables\nx1, x2, x3 = symbols('x1 x2 x3')\n\n# Set up the equation\neq = 185 - x1 - x2 - x3\n\n# Solve for the largest dog\nsolution = solve(eq, x3)\n\n# Print the result\nprint(solution)"
  },
  {
    "example_id": 548,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "def f(n):\n    if n % 2 == 0:\n        return n**2 - 4*n - 1\n    else:\n        return n**2\n\ndef g(n):\n    return f(f(f(f(n))))\n\nprint(g(4))"
  },
  {
    "example_id": 549,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "21.0"
    ],
    "annotated_answers": [
      "21.0"
    ],
    "solution": "# floor(11.1) + 2 * floor(0.5 * 11.1)\nprint(floor(11.1) + 2 * floor(0.5 * 11.1))"
  },
  {
    "example_id": 550,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = 1\nprint(x)"
  },
  {
    "example_id": 551,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "from math import sqrt\nt = 3 - sqrt(16)\nprint(t)"
  },
  {
    "example_id": 552,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\neq = (17**6 - 17**5) / 16 - 17**x\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 553,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4948.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "# Domain of the function\ndomain = [x for x in range(1, 100) if x**2-7!= 0 and x**3-8!= 0 and x**4-9!= 0]\n\n# Sum of all real numbers in the domain\nsum_domain = sum(x for x in domain)\n\nprint(sum_domain)"
  },
  {
    "example_id": 554,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "print(ceil(sqrt(10)) + floor(sqrt(10)))"
  },
  {
    "example_id": 555,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "250.0"
    ],
    "annotated_answers": [
      "4000.0"
    ],
    "solution": "a_drip = 1/4\na_liter = 1000\nprint(a_drip * a_liter)"
  },
  {
    "example_id": 556,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "14.0",
      "3.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "x = symbols('x')\n\npile1 = x - 5\npile2 = x + 4\npile3 = 3*x\npile4 = x\n\neq = pile1 + pile2 + pile3 + pile4 - 27\nsol = solve(eq, x)\nprint(sol[0])"
  },
  {
    "example_id": 557,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3677.0"
    ],
    "annotated_answers": [
      "368.0"
    ],
    "solution": "# Define the variables\nx = symbols('x')\n# Calculate the result\nresult = 500*1000/136\n# Round up\nprint(ceil(result))"
  },
  {
    "example_id": 558,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "5.0",
      "2.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "# Define symbols\ntriangle = symbols('triangle')\nsquare = symbols('square')\ndiamond = symbols('diamond')\nclubsuit = symbols('clubsuit')\n\n# Define equations\neq1 = triangle + square - clubsuit\neq2 = triangle + triangle - diamond - diamond - diamond - diamond - diamond\neq3 = triangle + triangle - clubsuit - diamond\n\n# Solve equations\nsol1 = solve(eq1, square)\nsol2 = solve(eq2, diamond)\nsol3 = solve(eq3, clubsuit)\n\n# Print solution\nprint(sol1)\nprint(sol2)\nprint(sol3)"
  },
  {
    "example_id": 559,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "210.0"
    ],
    "annotated_answers": [
      "210.0"
    ],
    "solution": "f = lambda x: x**2 - 1\ng = lambda x: x + 7\nprint(f(g(7)) + g(f(3)))"
  },
  {
    "example_id": 560,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "8.0",
      "5.0",
      "3.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\nineq = x*(3*x-4) <= (6*x**2 - 3*x + 5)/10\nsolution = solve(ineq, x)\nprint(solution)"
  },
  {
    "example_id": 561,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 - 8*x - 33\nsolution = solve(eq, x)\nbreak_even = solution[0]\nprint(break_even)"
  },
  {
    "example_id": 562,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.4"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "M = 13\nJ = 13 * 2\nMi = M * 4/5\n\nprint(Mi)"
  },
  {
    "example_id": 563,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "x = symbols('x')\ny = (7/4)**2\nz = ceil(y)\nprint(z)"
  },
  {
    "example_id": 564,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.140625"
    ],
    "annotated_answers": [
      "920.25"
    ],
    "solution": "# Deposit amount\np = 10000\n# Interest rate\nr = 0.045\n# Compounding period\nn = 2\n# Time period\nt = n*12\n# Interest earned\ni = p*((r/12)**n)\n# Print the result\nprint(i)"
  },
  {
    "example_id": 565,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "2.0",
      "15.0",
      "2.0"
    ],
    "annotated_answers": [
      "135.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq1 = (a + 7)*(c - b) + 30\neq2 = (a + 11)*(c - b) + 60\nsolution = solve((eq1, eq2), (a, c))\na_value = solution[0][0]\nc_value = solution[0][1]\nprint(a_value)\nprint(c_value)"
  },
  {
    "example_id": 566,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "4.0",
      "6.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\nf = x**3 + 2*x**2 - 3*x + 1\ng = x**5 + 2*x**4 - 3*x**2 + 1\nh = 2*f + 4*g\nprint(\"The degree of polynomial 2f(x) + 4g(x) is:\", floor(degree(h)) + 1)"
  },
  {
    "example_id": 567,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.3333333333333333"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "time_20_miles = 20 / 60\nprint(time_20_miles)"
  },
  {
    "example_id": 568,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "26.0"
    ],
    "annotated_answers": [
      "26.0"
    ],
    "solution": "a = 3\nb = 10\n\nab = a*b\n\na_times_b = 2*a + 5*b - ab\n\nprint(a_times_b)"
  },
  {
    "example_id": 569,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "27.0"
    ],
    "annotated_answers": [
      "720.0"
    ],
    "solution": "a = 9\nb = 10\nc = 11\n\nif a + b + c == 27:\n    print(a * b * c)\nelse:\n    print('The sum of the three consecutive integers is not 27.')"
  },
  {
    "example_id": 570,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-50.0",
      "39.0"
    ],
    "annotated_answers": [
      "50.0"
    ],
    "solution": "x = symbols('x')\neq = 5 + 500*x/100 - 110*x/100\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 571,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.5",
      "2.0",
      "0.5",
      "113.0",
      "5.0",
      "5.0"
    ],
    "annotated_answers": [
      "75.0"
    ],
    "solution": "from sympy import *\nx, y = symbols('x y')\nA = (0, 7)\nB = (1, 0)\nC = (12, -2)\nD = (7, 8)\nAB = sqrt((1 - 0)**2 + (7 - 0)**2)\nBC = sqrt((12 - 1)**2 + (-2 - 0)**2)\nCD = sqrt((7 - 12)**2 + (8 - (-2))**2)\nDA = sqrt((0 - 7)**2 + (0 - 8)**2)\nAD = sqrt((1 - 0)**2 + (7 - 0)**2)\nBD = sqrt((1 - 1)**2 + (0 - 0)**2)\nCD = sqrt((12 - 1)**2 + (-2 - 0)**2)\nD = sqrt((7 - 12)**2 + (8 - (-2))**2)\nkite_area = 0.5 * (AB + BC + CD + DA)\nprint(\"Area of the kite:\", kite_area)"
  },
  {
    "example_id": 572,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0",
      "7.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "m, n = symbols('m n')\neq1 = m*n - 7\neq2 = m + n - 8\nsol1 = solve(eq1, m)\nsol2 = solve(eq2, n)\nm_value = sol1[0]\nn_value = sol2[0]\nprint(Abs(m_value - n_value))"
  },
  {
    "example_id": 573,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "24.0",
      "32.0",
      "18.0"
    ],
    "annotated_answers": [
      "49.0"
    ],
    "solution": "x, y = symbols('x y')\neq = (x**2+y**2)-(14*x+48*y)\nsolution = solve(eq, y)\ny_value = solution[0]\nprint(y_value)"
  },
  {
    "example_id": 574,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.6"
    ],
    "annotated_answers": [
      "3.21"
    ],
    "solution": "x = symbols('x')\neq = (x**2) + (2.6*x) + 3.6\nsolution = solve(eq, x)\nb_value = solution[0]\nc_value = solution[1]\nprint(b_value + c_value)"
  },
  {
    "example_id": 575,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "8.0",
      "2.0",
      "24.0",
      "89.0",
      "4.0",
      "7.0",
      "4.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "d, e = symbols('d e')\neq = 2*d**2 + 3*d - 5 - e**2 + 3*e - 5\nsolution = solve(eq, d, e)\nd_value = solution[0][0]\ne_value = solution[0][1]\nprint((d_value - 1)*(e_value - 1))"
  },
  {
    "example_id": 576,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.031999999999999994"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\n\neq1 = (2**(1/4))**2/5\neq2 = (4**(3/8))**2/25\n\nsolution = eq1*eq2\n\nprint(solution)"
  },
  {
    "example_id": 577,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "454.0"
    ],
    "annotated_answers": [
      "33840.0"
    ],
    "solution": "product = 454\nlargest = 0\nfor i in range(1, 100):\n    for j in range(1, 100):\n        if product == i * j + i + j:\n            largest = product\n            break\n        elif product < i * j + i + j:\n            break\nprint(largest)"
  },
  {
    "example_id": 578,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-24.0"
    ],
    "annotated_answers": [
      "24.0"
    ],
    "solution": "print(2*6 + 4*3 - 8*(3 + 3))"
  },
  {
    "example_id": 579,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "-4.0",
      "2.0",
      "4.0",
      "25.0",
      "2.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = x - y - 1\neq2 = x**2 + y**2 - 7\neq3 = eq1**3 - eq2**3\nsolution = solve(eq3, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 580,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "114.0",
      "2.0",
      "5.0",
      "114.0",
      "2.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "a = symbols('a')\neq = (3*5**2 - 4*(5 - a)**2)/3 - 63\nsolution = solve(eq, a)\nprint(solution)"
  },
  {
    "example_id": 581,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "print((3*4-2)*(4*4+1)-(3*4-2)*4*4+1)"
  },
  {
    "example_id": 582,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "y = symbols('y')\neq = (19+3*y)**(1/2) - 7\nsolution = solve(eq, y)\ny_value = solution[0]\nprint(y_value)"
  },
  {
    "example_id": 583,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "6.0",
      "6.0",
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "from sympy import symbols, sqrt\nx, y = symbols('x y')\nradius = sqrt((x**2 + y**2 - 6) / (6*x + 2*y))\nprint(radius)"
  },
  {
    "example_id": 584,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "70.0"
    ],
    "annotated_answers": [
      "70.0"
    ],
    "solution": "# Define function f(x)\ndef f(x):\n    return x**2 - 4*sqrt(x) + 1\n\n# Compute f(f(4))\nresult = f(f(4))\n\nprint(result)"
  },
  {
    "example_id": 585,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5050.0"
    ],
    "annotated_answers": [
      "5050.0"
    ],
    "solution": "# The sum of the first 100 positive integers\nsum = 0\nfor i in range(1,101):\n    sum += i\nprint(sum)"
  },
  {
    "example_id": 586,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "f = symbols('f', cls=Poly)\ng = symbols('g', cls=Poly)\nf_degree = f.degree()\ng_degree = g.degree()\ndegree = f_degree - g_degree\nprint(degree)"
  },
  {
    "example_id": 587,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1600.0"
    ],
    "annotated_answers": [
      "1600.0"
    ],
    "solution": "x = 441 + 2*21*19 + 361\nprint(x)"
  },
  {
    "example_id": 588,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-15.0"
    ],
    "annotated_answers": [
      "-42.0"
    ],
    "solution": "# f(x) = x^3 - 6x^2 + 3x - 4\n# g(x) = x^3 + 5x^2 + 9x - 2\n\n# f(g(x)) = x^3 - 6x^2 + 3x - 4 - (x^3 + 5x^2 + 9x - 2)\n# f(g(x)) = -6x^2 - 15x + 7\n\n# constant term = -15\nprint(-15)"
  },
  {
    "example_id": 589,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "2.0",
      "30.0",
      "95.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq = (x - 5)**2 + (y - 15)**2 - 130\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 590,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-16.0"
    ],
    "annotated_answers": [
      "-8.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 + 24*x + 128\nsolution = solve(eq, x)\nlargest_value = solution[0]\nprint(largest_value)"
  },
  {
    "example_id": 591,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "g = lambda x: 3\nprint(g(2))"
  },
  {
    "example_id": 592,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "9.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "x = symbols('x')\nsolution = solve(2*x**2 + 13*x + 6, x)\nsquared_solution = [solution[0]**2, solution[1]**2]\nproduct = squared_solution[0]*squared_solution[1]\nprint(product)"
  },
  {
    "example_id": 593,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "k = 0\nwhile True:\n    k += 1\n    n = 1\n    while n < 2005:\n        n += k\n    if n == 2005:\n        print(k)\n        break"
  },
  {
    "example_id": 594,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "600.0"
    ],
    "annotated_answers": [
      "600.0"
    ],
    "solution": "print(31**2 - 19**2)"
  },
  {
    "example_id": 595,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "6.0"
    ],
    "solution": ""
  },
  {
    "example_id": 596,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "44.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "q1 = 20 - 3\nq2 = 20 + 2\nq3 = 20 + 2\nq4 = 2 * (20 + 2)\nprint(q4)"
  },
  {
    "example_id": 597,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "p, q = symbols('p q')\neq = (1/p) + (1/q) - 1\nsolution = solve(eq, [p, q])\nprint(solution)"
  },
  {
    "example_id": 598,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "16.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "f = lambda x: x**2\nf_inv = lambda x: x**(1/2)\nf_value = f(2)\nf_inv_value = f_inv(2)\nf_f_value = f(f_value)\nprint(f_f_value)"
  },
  {
    "example_id": 599,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "6.0",
      "7.0",
      "8.0",
      "9.0",
      "10.0",
      "11.0",
      "12.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "t = 1\nwhile t < 300:\n    if (t**0.5) > 2 and (t**0.5) < 3.5:\n        print(t)\n    t += 1"
  },
  {
    "example_id": 600,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "from sympy import solve\nx, y = symbols('x y')\neq1 = 2*x - 3*y\neq2 = 4*x + 3*y\nsolution = solve([eq1, eq2], [x, y])\nprint(solution[x]*solution[y])"
  },
  {
    "example_id": 601,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "162.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\neq = a*b*c*d - 162\nsolution = solve(eq, [a, b, c, d])\nprint(solution)"
  },
  {
    "example_id": 602,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "1.15470053837925",
      "1.53960071783899",
      "1.0",
      "0.86602540378444",
      "3.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq = (2)/(sqrt(3)*(x+y)) - 1\nsolution = solve(eq, x, y)\nx_value = solution[0][0]\ny_value = solution[0][1]\nA = x_value**3 + y_value**3\nB = x_value*y_value\nprint(\"The minimum possible value of A+B is\", A+B)"
  },
  {
    "example_id": 603,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3125.0"
    ],
    "annotated_answers": [
      "3125.0"
    ],
    "solution": "a = 5\nprint(a**3*a**2)"
  },
  {
    "example_id": 604,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "41.0"
    ],
    "solution": "a = 1\nb = 2009\nratio = b / a\nprint(a)"
  },
  {
    "example_id": 605,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "3.0",
      "2.0",
      "3.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "2693.0",
      "2.0"
    ],
    "annotated_answers": [
      "350.0"
    ],
    "solution": "a = symbols('a')\neq = (a**3) + (a**2) + a + 100\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 606,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\neq = (x-3)/(2*x**2 - 8*x + 7)\nsolution = solve(eq)\nprint(solution)"
  },
  {
    "example_id": 607,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "-9.0",
      "5.0"
    ],
    "annotated_answers": [
      "143.0"
    ],
    "solution": "n = 23\nsum_of_digits = sum(int(d) for d in str(n))\nreversed_n = int(str(n)[::-1])\ndifference = n - reversed_n\nsum_of_reversed = sum(int(d) for d in str(reversed_n))\nprint(sum_of_digits, difference, sum_of_reversed)"
  },
  {
    "example_id": 608,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "21.67365087711356"
    ],
    "annotated_answers": [
      "52.0"
    ],
    "solution": "p = symbols('p')\nx1, y1 = -4, 10\nx2, y2 = 1, -2\nside1 = symbols('side1')\nside2 = symbols('side2')\nside3 = symbols('side3')\nside4 = symbols('side4')\nside1 = sqrt((x2 - x1)**2 + (y2 - y1)**2)\nside2 = sqrt((x2 + x1)**2 + (y2 + y1)**2)\nside3 = sqrt((x2 - x1)**2 + (y2 + y1)**2)\nside4 = sqrt((x2 + x1)**2 + (y2 - y1)**2)\narea = (side1 + side2 + side3 + side4) / 2\nprint(area)"
  },
  {
    "example_id": 609,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-7.0"
    ],
    "annotated_answers": [
      "-16.0"
    ],
    "solution": "a = symbols('a')\neq = a**2 + 6*a - 7\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 610,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "15.6666666666667"
    ],
    "annotated_answers": [
      "-120.0"
    ],
    "solution": "k = symbols('k')\nA = (1/2) * (-2/3) * (2/3)\neq = A + (1/2) * k * (2/3) - 5\nsolution = solve(eq, k)\nk_value = solution[0]\nprint(k_value)"
  },
  {
    "example_id": 611,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "248.88888888888886"
    ],
    "annotated_answers": [
      "63.0"
    ],
    "solution": "ligs = 7\nlags = 4\nlugs = 9\n\nligs_to_lugs = lugs / lags\n\nligs_to_lugs_ratio = ligs_to_lugs / ligs\n\nligs_equivalent_to_80_lugs = 80 / ligs_to_lugs_ratio\n\nprint(ligs_equivalent_to_80_lugs)"
  },
  {
    "example_id": 612,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.9498743710662"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x, y = symbols('x y')\neq = x**2 + y**2 - 6*x + 8*y + 24\ndist = sqrt(eq.subs({x: -3, y: -12}))\nprint(dist)"
  },
  {
    "example_id": 613,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "x = symbols('x')\neq = (4*x + 2)**(10)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 614,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-0.7679491924311228"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a = (-5 + (2 * 3**0.5)) / 2\nprint(a)"
  },
  {
    "example_id": 615,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "1.0"
    ],
    "annotated_answers": [
      "23.0"
    ],
    "solution": "x = symbols('x')\na, b, c = symbols('a b c')\nexpr = 3*x**2 - 24*x + 72\na, b, c = expr.as_coefficients_dict()\na_plus_b_plus_c = a + b + c\nprint(a_plus_b_plus_c)"
  },
  {
    "example_id": 616,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "n = 12\nprint(n)"
  },
  {
    "example_id": 617,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "5.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "a, b = symbols('a b')\neq1 = Eq(a*b, 7)\neq2 = Eq(a+b, 5)\nsolution = solve([eq1, eq2], [a, b])\na_value = solution[0][0]\nb_value = solution[0][1]\nprint(a_value**2 + b_value**2)"
  },
  {
    "example_id": 618,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "241.56"
    ],
    "annotated_answers": [
      "221.0"
    ],
    "solution": "weight_end = 244 - (244 * 0.01)\nprint(weight_end)"
  },
  {
    "example_id": 619,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "800.0"
    ],
    "annotated_answers": [
      "800.0"
    ],
    "solution": "print(102**2 - 98**2)"
  },
  {
    "example_id": 620,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0",
      "5.0",
      "5.0",
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq = (x*y) - (5*(x+y))\nsolution = solve(eq, x)\nx_value = solution[0]\nsolution = solve(eq, y)\ny_value = solution[0]\nprint(x_value, y_value)"
  },
  {
    "example_id": 621,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "81.0",
      "0.333333333333333",
      "1.0",
      "4.0",
      "162.0",
      "0.333333333333333",
      "1.0",
      "2.0",
      "9.0"
    ],
    "annotated_answers": [
      "90.0"
    ],
    "solution": "# Janaina's solution\nx = symbols('x')\neq = x**2 + 18*x - 9\nc = eq.subs(x, (x + 3)**2)\nc_value = c.evalf()\nprint(c_value)"
  },
  {
    "example_id": 622,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-14.0",
      "8.0"
    ],
    "annotated_answers": [
      "-6.0"
    ],
    "solution": "x = symbols('x')\neq = (x+3)**2 - 121\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 623,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "68719476736.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "x = symbols('x')\neq = x**(1/3) - 4**5 - 4**5 - 4**5 - 4**5\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 624,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.5"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "print(3 * 0.5)"
  },
  {
    "example_id": 625,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-128.0"
    ],
    "solution": ""
  },
  {
    "example_id": 626,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "from sympy import solve\nfrom sympy.abc import x, y\n\nsolution = solve(x**2-y**2-17, x, y)\nprint(len(solution))"
  },
  {
    "example_id": 627,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10800000.0"
    ],
    "annotated_answers": [
      "350.0"
    ],
    "solution": "# Declare variables\nn = 500\np = 450\nx = 5\n\n# Calculate weekly revenue\nweekly_revenue = n * p\n\n# Calculate monthly revenue\nmonthly_revenue = weekly_revenue * 4\n\n# Calculate annual revenue\nannual_revenue = monthly_revenue * 12\n\n# Calculate new price\nnew_price = p - x\n\n# Calculate new weekly revenue\nnew_weekly_revenue = n * new_price\n\n# Calculate new monthly revenue\nnew_monthly_revenue = new_weekly_revenue * 4\n\n# Calculate new annual revenue\nnew_annual_revenue = new_monthly_revenue * 12\n\n# Calculate the maximum revenue\nmax_revenue = max(annual_revenue, new_annual_revenue)\n\n# Print the maximum revenue\nprint(\"The maximum revenue is:\", max_revenue)"
  },
  {
    "example_id": 628,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "5.0",
      "2.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "# declare variables\nx = symbols('x')\ny = symbols('y')\n\n# define equations\neq1 = 6/x - 4/y - 10\neq2 = 2/x - 1/y - 10\n\n# solve equations\nsol1 = solve(eq1, x)\nsol2 = solve(eq2, y)\n\n# calculate value of x\nx_value = sol1[0]\n\n# calculate value of y\ny_value = sol2[0]\n\n# calculate number of cupcakes\ncupcakes = 18/x_value\n\n# print result\nprint(cupcakes)"
  },
  {
    "example_id": 629,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "time_to_36_feet = 36 / 18\nprint(time_to_36_feet)"
  },
  {
    "example_id": 630,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "98.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "a = 1\nb = -1\nx = 3\nf = a * x ** 4 - b * x ** 2 + x + 5\nprint(f)"
  },
  {
    "example_id": 631,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "-19.0",
      "2.0"
    ],
    "annotated_answers": [
      "-5.0"
    ],
    "solution": "x = symbols('x')\nk = symbols('k')\ny = 2*x**2 + k*x + 6\nz = -x + 4\nsolution = solve([y, z], [x, k])\nprint(solution)"
  },
  {
    "example_id": 632,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "150.4"
    ],
    "annotated_answers": [
      "174.0"
    ],
    "solution": "A = 2/5\nB = 60/A\nprint(A + B)"
  },
  {
    "example_id": 633,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0"
    ],
    "annotated_answers": [
      "30.0"
    ],
    "solution": "def operation(a, b):\n    return a**b + b\n\nprint(operation(1, 2) * 3)"
  },
  {
    "example_id": 634,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "5.0",
      "1.0",
      "5.0",
      "-1.0",
      "5.0",
      "1.0"
    ],
    "annotated_answers": [
      "697.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\neq1 = (4**b) - (a**b)\neq2 = (b**c) - (c**5)\nsolution = solve([eq1, eq2], [a, b, c])\nprint(solution)"
  },
  {
    "example_id": 635,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "55.0"
    ],
    "annotated_answers": [
      "55.0"
    ],
    "solution": "def f(x):\n    return x - int(sqrt(x))**2\n\nprint(sum(f(101+i) for i in range(10)))"
  },
  {
    "example_id": 636,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "4.0",
      "4.0",
      "4.0",
      "4.0"
    ],
    "annotated_answers": [
      "363.0"
    ],
    "solution": "def get_number_of_people_who_heard_the_rumor(friends_list):\n    total = 0\n    for friend in friends_list:\n        if friend.heard_rumor:\n            total += 1\n    return total\n\ndef cycle(friends_list):\n    for i in range(5):\n        for friend in friends_list:\n            if not friend.heard_rumor:\n                friend.heard_rumor = True\n                friend.friends.append(friend)\n    return get_number_of_people_who_heard_the_rumor(friends_list)\n\nclass Friend:\n    def __init__(self, name):\n        self.name = name\n        self.heard_rumor = False\n        self.friends = []\n\nsam = Friend(\"Sam\")\nfriends_list = [sam, Friend(\"Alice\"), Friend(\"Bob\"), Friend(\"Charlie\")]\n\nfor i in range(5):\n    print(cycle(friends_list))"
  },
  {
    "example_id": 637,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "0.0"
    ],
    "annotated_answers": [
      "-128.0"
    ],
    "solution": "x = symbols('x')\nexp = (x-2)**2 * (x+2)**2\nsolution = solve(exp, x)\ncoeff = [0, 0]\nfor term in solution:\n    coeff[0] += term.coeff(x)\n    coeff[1] += term.coeff(x, 2)\nprint(coeff)"
  },
  {
    "example_id": 638,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "4.0",
      "3.0",
      "3.0",
      "3.0",
      "2.0",
      "8.0",
      "1.0",
      "8.0",
      "4.0",
      "2.0",
      "3.0",
      "7.0",
      "2.0",
      "3.0",
      "4.0"
    ],
    "annotated_answers": [
      "37.0"
    ],
    "solution": "x = symbols('x')\neq1 = 7*x**4 - 3*x**3 - 3*x**2 - 8*x + 1\neq2 = 8*x**4 + 2*x**3 - 7*x**2 + 3*x + 4\neq = eq1*eq2\nprint(eq)"
  },
  {
    "example_id": 639,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0",
      "15.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\nc = symbols('c')\nf = c*x**3 - 9*x + 3\nf_value = f.subs(x, 2)\nprint(f_value)"
  },
  {
    "example_id": 640,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.1428571428571428"
    ],
    "annotated_answers": [
      "72.0"
    ],
    "solution": "# The equation is written in the form of infinite nested radicals.\n# Solving it is possible by recognizing that the equation is equal to the\n# following infinite series:\n# 9 + 9^2 + 9^3 +... + 9^n +...\n#\n# The sum of this series can be expressed as:\n# 9(1-9^n)/(1-9)\n#\n# Substituting n=0, we get:\n# 9(1-9^0)/(1-9) = 9/8\n#\n# Substituting n=1, we get:\n# 9(1-9^1)/(1-9) = 9/7\n#\n# Solving for x, we get:\n# x = 8/7\n\nprint(8/7)"
  },
  {
    "example_id": 641,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "17.0",
      "8.0"
    ],
    "annotated_answers": [
      "-9.0"
    ],
    "solution": "x = symbols('x')\nf = 2*x - 3\ng = 5 - 4*f\ng_value = g.subs(f, 4)\nprint(g_value)"
  },
  {
    "example_id": 642,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-25.0"
    ],
    "annotated_answers": [
      "-25.0"
    ],
    "solution": "if -10 < -3:\n    print(3*(-10) + 5)\nelse:\n    print(7 - 4*(-10))"
  },
  {
    "example_id": 643,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "3.0"
    ],
    "annotated_answers": [
      "-13.0"
    ],
    "solution": "n = symbols('n')\ns = 3\na = 5\nb = -1\nd = b-a\n\nif n == 1:\n    x = a\nelse:\n    x = s*(n-1)\n\nprint(x)"
  },
  {
    "example_id": 644,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "b = -3"
  },
  {
    "example_id": 645,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.01",
      "1.0",
      "7.0",
      "2.0",
      "0.0",
      "3.0",
      "0.0",
      "4.0",
      "0.0",
      "9.430874640502116",
      "-7.0"
    ],
    "annotated_answers": [
      "567.0"
    ],
    "solution": "def geometric_sequence(first_term, nth_term):\n    ratio = (nth_term/first_term)**(1/n-1)\n    print(f'The ratio of the terms is {ratio:.2f}')\n\n    for i in range(1, n):\n        term = first_term * ratio**(i-1)\n        print(f'The {i}th term is {term:.0f}')\n\n    return term\n\nn = 5\nfirst_term = 7\nnth_term = 5103\nprint(geometric_sequence(first_term, nth_term))"
  },
  {
    "example_id": 646,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "3.0",
      "3.0",
      "6.0",
      "6.0",
      "3.0",
      "3.0",
      "3.0",
      "6.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\neq = (a*sqrt(2) + b*sqrt(3) + c*sqrt(6))**3 - (sqrt(2)+sqrt(3))**3\nsolution = solve(eq, a, b, c)\na_value = solution[0][0]\nb_value = solution[0][1]\nc_value = solution[0][2]\nprint(a_value + b_value + c_value)"
  },
  {
    "example_id": 647,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "16.48528137423857"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "from math import sqrt\n\na = 8\nb = 3 * sqrt(2)\nc = 3 * sqrt(2)\n\n# A and C have no common prime factors\nfor p in range(2, int(sqrt(a))):\n    if a % p == 0:\n        break\n    if c % p == 0:\n        break\n\n# B has no perfect-square factors other than 1\nfor i in range(2, int(sqrt(b))):\n    if b % i**2 == 0:\n        break\n\na_value = a + b + c\nprint(a_value)"
  },
  {
    "example_id": 648,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "import math\n\ndef length_of_longest_side(triangle):\n    return max(math.sqrt((triangle[0][0]-triangle[1][0])**2 + (triangle[0][1]-triangle[1][1])**2),\n               math.sqrt((triangle[1][0]-triangle[2][0])**2 + (triangle[1][1]-triangle[2][1])**2),\n               math.sqrt((triangle[2][0]-triangle[0][0])**2 + (triangle[2][1]-triangle[0][1])**2))\n\ntriangle = [(11,1), (2,3), (3,7)]\nprint(length_of_longest_side(triangle))"
  },
  {
    "example_id": 649,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "495.0"
    ],
    "annotated_answers": [
      "495.0"
    ],
    "solution": "sum = 0\nfor i in range(47, 65, 2):\n    sum += i\nprint(sum)"
  },
  {
    "example_id": 650,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0",
      "2.0",
      "-8.0",
      "-3.0",
      "7.0",
      "-3.0",
      "10.0",
      "3.0",
      "3.0",
      "10.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x = symbols('x')\neq = 3*(x**10 - x**7 + 2*x**3 - x + 7) + 4*(x**3 - 2*x**2 - 5)\nsolution = eq.expand().as_coefficients_dict()\nprint(solution)"
  },
  {
    "example_id": 651,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "from sympy import symbols, solve\nx = symbols('x')\nf = -x**2 + 4*x - 4\ny_intercepts = solve(f, x)\nprint(y_intercepts)"
  },
  {
    "example_id": 652,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "4.0",
      "5.0",
      "4.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\neq1 = 5*a - 4*b + 5\neq2 = 3*a - 2*b + 3\neq12 = eq1 * eq2\nsolution = solve(eq12, b)\nb_value = solution[0]\nprint(b_value)"
  },
  {
    "example_id": 653,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "19.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "t = lambda x: abs(-3 + 2*x)\nprint(t(t(-4)))"
  },
  {
    "example_id": 654,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = x + y - 12\neq2 = x * y - 35\nsolution = solve([eq1, eq2], [x, y])\nx_value = solution[0][0]\ny_value = solution[0][1]\nprint('Positive difference between the numbers is: ', abs(x_value - y_value))"
  },
  {
    "example_id": 655,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "150.0"
    ],
    "annotated_answers": [
      "1050.0"
    ],
    "solution": "# Kendra burns 150 calories in 30 minutes\ntotal_calories = 150\n# she shoots hoops every day for 7 days\ndays = 7\n# she shoots hoops for 30 minutes every day\nminutes_per_day = 30\n# she shoots hoops for 30 minutes every day for one week\ntotal_minutes = days*minutes_per_day\n# she shoots hoops for 30 minutes every day for one week\ntotal_calories = total_calories*total_minutes\n# she shoots hoops for 30 minutes every day for one week\ntotal_calories = total_calories/minutes_per_day\n# she shoots hoops for 30 minutes every day for one week\ntotal_calories = total_calories/days\nprint(total_calories)"
  },
  {
    "example_id": 656,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "1.0",
      "2.0",
      "1.0",
      "4.0",
      "-1.0",
      "2.0",
      "2.0",
      "-1.0",
      "2.0",
      "1.0",
      "3.0",
      "3.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = 4*y - 4*x**2 - 1\neq2 = 4*x - 4*y**2 - 1\nsolution = solve([eq1, eq2], [x, y])\nx_value = solution[0]\ny_value = solution[1]\nprint(x_value)\nprint(y_value)\n\nx_3 = x**3\ny_3 = y**3\nprint(1/(x_3 + y_3))"
  },
  {
    "example_id": 657,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-17.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "j, k, l = symbols('j k l')\neq1 = j*k - 24\neq2 = j*l - 48\neq3 = k*l - 18\nsolution = solve([eq1, eq2, eq3], [j, k, l])\nj_value, k_value, l_value = solution[0]\nprint(j_value + k_value + l_value)"
  },
  {
    "example_id": 658,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "86.0"
    ],
    "annotated_answers": [
      "79.0"
    ],
    "solution": "from sympy import floor, ceiling, sqrt, Symbol, Rational, pi\n\nx = Symbol('x')\n\ndef f(x):\n    if x.is_rational:\n        return abs(floor(x))\n    else:\n        return ceiling(x)**2\n\nprint(f(sqrt(8)) + f(-pi) + f(sqrt(50)) + f(Rational(9, 2)))"
  },
  {
    "example_id": 659,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\na = -4\nb = 8\neq = 2*(x - 1)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 660,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "26.0"
    ],
    "annotated_answers": [
      "26.0"
    ],
    "solution": "x_range = range(4, 100)\nx_values = [x for x in x_range if (3/x) > 1/3 and (3/x) < 3/4]\nprint(sum(x_values))"
  },
  {
    "example_id": 661,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "220.0"
    ],
    "annotated_answers": [
      "220.0"
    ],
    "solution": "# estimate\nestimate = 11 / 24 * 480\nprint(estimate)"
  },
  {
    "example_id": 662,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "258.0",
      "257.0",
      "256.0",
      "255.0",
      "254.0",
      "253.0",
      "252.0",
      "251.0",
      "250.0",
      "249.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "i = symbols('i')\nsummation = 0\nfor j in range(259):\n    summation += i**j\nprint(summation)"
  },
  {
    "example_id": 663,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.5",
      "5.5",
      "1.0",
      "37.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "f = lambda x: 2*x - 1\nf_inv = lambda x: (x + 1)/2\nh = lambda x: f_inv(x)\nprint(h(2))\nprint(h(10))\nprint(h(1))\nprint(f(f(10)))"
  },
  {
    "example_id": 664,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\nf = x**2 - 3\nt = 9 + 2*f\nt_of_f_of_minus_2 = t.subs(x, -2)\nprint(t_of_f_of_minus_2)"
  },
  {
    "example_id": 665,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-62.0"
    ],
    "annotated_answers": [
      "66.0"
    ],
    "solution": "x = symbols('x')\neq = (x**2 - 4*x + 4)**(1/3) - 16\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 666,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0",
      "2.0",
      "2.0",
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\nz = symbols('z')\n\np = x**2 + y**2 - 4*x*y\nq = x - 5\nr = y + 2\n\nm = p*q*r\n\nprint(m)"
  },
  {
    "example_id": 667,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.5"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x_mid = (3 + (-6)) / 2\nx_diff = abs(x_mid - (-10))\nprint(x_diff)"
  },
  {
    "example_id": 668,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\ny = x**2 - 6*x + 13\nsolution = solve(y, x)\nprint(solution)"
  },
  {
    "example_id": 669,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "400.0"
    ],
    "annotated_answers": [
      "400.0"
    ],
    "solution": "print(19**2 + 2*19 + 1)"
  },
  {
    "example_id": 670,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "11.0",
      "3.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "n = symbols('n')\nm = symbols('m')\neq1 = 3*n+m-14\neq2 = n+m-1\nsolution1 = solve(eq1, n)\nsolution2 = solve(eq2, m)\nn_value = solution1[0]\nm_value = solution2[0]\nprint(n_value - m_value)"
  },
  {
    "example_id": 671,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0",
      "2.0",
      "4.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x, y = symbols('x y')\neq = x**2 + 8*x + y**2 - 6*y\nrad = solve(eq, x)[0]\nprint(rad)"
  },
  {
    "example_id": 672,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "324.0"
    ],
    "solution": "# find the difference between two consecutive perfect squares\ndef perfect_square_difference(x):\n    # find the perfect square greater than x\n    perfect_square = math.ceil(math.sqrt(x))**2\n    # find the perfect square less than x\n    less_perfect_square = perfect_square - 1\n    # return the difference\n    return perfect_square - less_perfect_square\n\n# test the function\nx = 35\nprint(perfect_square_difference(x))"
  },
  {
    "example_id": 673,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-7.0"
    ],
    "annotated_answers": [
      "-7.0"
    ],
    "solution": "p = lambda x: 2 - x**2\nq = lambda x: 6 / x\nprint(p(q(2)))"
  },
  {
    "example_id": 674,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "from math import log10\n\ndef largest_possible_value_of_k(a, r):\n    k = 0\n    while True:\n        if log10(r**k) - log10(a) >= 0:\n            k += 1\n        else:\n            break\n    return k\n\nprint(largest_possible_value_of_k(3, 2))"
  },
  {
    "example_id": 675,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x1 = symbols('x1')\nx2 = symbols('x2')\ny1 = x1**2 + 4*x1 + 6\ny2 = 0.5*x2**2 + x2 + 6\n\neq1 = y1 - y2\neq2 = x1 - x2\n\nsol = solve([eq1, eq2], [x1, x2])\n\na = sol[0][0]\nb = sol[0][1]\nc = sol[1][0]\nd = sol[1][1]\n\nprint(c - a)"
  },
  {
    "example_id": 676,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "# Given that $f(x)$ is a function such that $f(1)=2$, $f(4)=3$, $f(7)=4$, and $f^{-1}(x)$ is the inverse of $f(x)$, what is $f^{-1}(f^{-1}(3))$?\n\n# define the function f\nf = lambda x: 2 * x**2 + 3 * x + 1\n\n# define the inverse function f^-1\nf_inv = lambda y: (y - 1) / 2\n\n# solve for f_inv(f_inv(3))\nsolution = f_inv(f_inv(3))\n\nprint(solution)"
  },
  {
    "example_id": 677,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "50.0"
    ],
    "annotated_answers": [
      "50.0"
    ],
    "solution": "sum = 0\nfor i in range(1, 20):\n    sum += floor(sqrt(i))\nprint(sum)"
  },
  {
    "example_id": 678,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "21.0"
    ],
    "solution": "from math import sqrt\na = 1\nb = 1\nwhile True:\n    dist = sqrt(a)/b\n    if dist == int(dist):\n        break\n    a += 1\n    b += 1\nprint(a+b)"
  },
  {
    "example_id": 679,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "56.0"
    ],
    "solution": "# Define variables\nN = 100\nS = 80\nS_correct = 5\nS_incorrect = -2\nS_not_answered = 0\n\n# Define equations\n# Correct answers\ncorrect = S_correct * N\n\n# Incorrect answers\nincorrect = S_incorrect * (N - S)\n\n# Not answered\nnot_answered = S_not_answered * (N - S)\n\n# Total score\ntotal_score = correct + incorrect + not_answered\n\n# Score per question\nscore_per_question = total_score / N\n\n# Print the number of questions\nprint(floor(score_per_question))"
  },
  {
    "example_id": 680,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "20.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "a, b = 5 - 1, 1 - 5\nh_6 = a * 6 + b\nprint(h_6)"
  },
  {
    "example_id": 681,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = x + y - 3\neq2 = x - y - 4\nsolution1 = solve(eq1, x)\nsolution2 = solve(eq2, y)\nx_value = solution1[0]\ny_value = solution2[0]\nprint(2*x_value**2 + 2*y_value**2)"
  },
  {
    "example_id": 682,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0",
      "250.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "# Declare variables\ntrack_length = 250\nlaps_400m = 10\ntrack_length_250m = 250\n\n# Calculate number of laps needed\nlaps_250m = floor(laps_400m * (track_length / track_length_250m))\n\n# Print answer\nprint(\"You will need to run\", laps_250m, \"laps to get the same workout at a 250 meter track.\")"
  },
  {
    "example_id": 683,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "3.0",
      "17.0",
      "1.0",
      "3.0",
      "2.0",
      "3.0",
      "3.0",
      "3.0",
      "17.0",
      "1.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "51.0"
    ],
    "solution": "from sympy import symbols, solve\n\na, b, c = symbols('a b c')\neq = 0 - a - b - c\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)\n\neq = 17 - a**3 - b**3 - c**3\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 684,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "15.0",
      "4.0",
      "2.0",
      "15.0"
    ],
    "annotated_answers": [
      "-22.0"
    ],
    "solution": "a, b = symbols('a b')\neq = 2*a**2 - 10*a + 5 - 0\nsolution = solve(eq, a)\na_value = solution[0]\nb_value = solution[1]\nprint((2*a_value - 3)*(4*b_value - 6))"
  },
  {
    "example_id": 685,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "f = lambda x: sqrt(3*x) + 2\nf_value_at_0 = f(0)\nf_value_at_3 = f(3)\nprint(f_value_at_0 + f_value_at_3)"
  },
  {
    "example_id": 686,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "125.0"
    ],
    "solution": "x = symbols('x')\neq = (x**1*x**2*x**3*x**4*x**5*x**6*x**7*x**8*x**9)/(x**2*x**4*x**6*x**8*x**10*x**12)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 687,
    "selected_mode": "import",
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-5.0"
    ],
    "solution": "x = symbols('x')\nf = 2*x + 1\ng = -3\nf_g = f(g(x))\nprint(f_g)"
  },
  {
    "example_id": 688,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "8.0",
      "3.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "1.0",
      "3.0",
      "8.0"
    ],
    "annotated_answers": [
      "98.0"
    ],
    "solution": "a, b, c = symbols('a, b, c')\neq = 8*a**3 - 3*a**2 - 3*a - 1\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 689,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "600.0"
    ],
    "annotated_answers": [
      "600.0"
    ],
    "solution": "x = 25\nz = 24\ny = symbols('y')\neq = (1/x) + (1/y) - (1/z)\nsolution = solve(eq, y)\ny_value = solution[0]\nprint(y_value)"
  },
  {
    "example_id": 690,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "115.0",
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "x, y = symbols('x y')\neq = 3*x + 2*y + x*y - 115\nsolution = solve(eq, x, y)\nx_value = solution[0][0]\ny_value = solution[0][1]\nprint(x_value + y_value)"
  },
  {
    "example_id": 691,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "268.0"
    ],
    "annotated_answers": [
      "4624.0"
    ],
    "solution": "# compute the sum of the first two consecutive perfect squares\nsum_sq1 = 1 + 4\nsum_sq2 = 9 + 16\n\n# find the difference between the two sums\ndiff = sum_sq2 - sum_sq1\n\n# check if the difference is equal to 268\nif diff == 268:\n    print(sum_sq1)\n    print(sum_sq2)\nelse:\n    print(\"No two consecutive even perfect squares have a positive difference of 268.\")"
  },
  {
    "example_id": 692,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a = symbols('a')\nb = 8\nc = a + (b - a)\nprint(c)"
  },
  {
    "example_id": 693,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "40.0"
    ],
    "annotated_answers": [
      "40.0"
    ],
    "solution": "# Define the points\nA = ( -6, 6 )\nB = ( 9, 6 )\nC = ( 9, -2 )\n\n# Find the perimeter of the polygon\nperimeter = sqrt( ( A[0] - B[0] )**2 + ( A[1] - B[1] )**2 ) + sqrt( ( B[0] - C[0] )**2 + ( B[1] - C[1] )**2 ) + sqrt( ( C[0] - A[0] )**2 + ( C[1] - A[1] )**2 )\n\n# Print the answer\nprint( perimeter )"
  },
  {
    "example_id": 694,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "13.0",
      "2.0",
      "3.0",
      "2.0",
      "13.0",
      "2.0",
      "3.0",
      "2.0",
      "13.0",
      "2.0",
      "3.0",
      "2.0",
      "13.0",
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "78.0"
    ],
    "solution": "x = symbols('x')\neq = x*(x-3) - 1\nsolution = solve(eq, x)\nx_values = solution\na = symbols('a')\nb = symbols('b')\nc = symbols('c')\na_values = []\nb_values = []\nc_values = []\nfor x_value in x_values:\n    a_value = x_value.subs(x, 1/x_value)\n    b_value = x_value.subs(x, (x_value**2 - 1)/(x_value*2))\n    c_value = x_value.subs(x, (x_value**2 - 1)/(x_value**2))\n    a_values.append(a_value)\n    b_values.append(b_value)\n    c_values.append(c_value)\na_value = a_values[0]\nb_value = b_values[0]\nc_value = c_values[0]\nprint(a_value)\nprint(b_value)\nprint(c_value)\nprint(a_value*b_value*c_value)"
  },
  {
    "example_id": 695,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0",
      "2.0",
      "277.0",
      "2.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "x = symbols('x')\na = 1\nb = -8\nc = -49\neq = (x**2) - (a*x) + (b*x) + c\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 696,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-17.0",
      "6.0",
      "2.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "# Part 1\na = symbols('a')\nb = symbols('b')\nc = symbols('c')\nd = symbols('d')\neq = (6*a**2 - a - 51)\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)\n\n# Part 2\nac = symbols('ac')\nbc = symbols('bc')\nprint(ac**2 - bc)"
  },
  {
    "example_id": 697,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "print(max(6, 5, 2))"
  },
  {
    "example_id": 698,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1275.0"
    ],
    "annotated_answers": [
      "255.0"
    ],
    "solution": "# Define variables\nn = 50\ni = 0\ncounting_number = 1\ncolumn_sum = 0\n\n# Define a loop to iterate through the counting numbers\nwhile i < n:\n    # Calculate the sum of the counting numbers in column E\n    column_sum = column_sum + counting_number\n    # Increment the counting number and the loop counter\n    counting_number = counting_number + 1\n    i = i + 1\n\n# Print the sum of the counting numbers in column E\nprint(column_sum)"
  },
  {
    "example_id": 699,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "# square root of 27 is 5\n# square root of 26 is 5.999999999999999\n# floor of 5.999999999999999 is 5\n# ceil of 5.999999999999999 is 6\n# 6 - 5 = 1\nprint(1)"
  },
  {
    "example_id": 700,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-36.0",
      "6.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "a, b, c = symbols('a b c')\nx, y = symbols('x y')\n\neq = y - (a*x**2 + b*x + c)\neq.subs({x: 4, y: 4})\n\neq1 = eq.subs({x: 6})\n\nprint(eq1)"
  },
  {
    "example_id": 701,
    "selected_mode": "import",
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-6.0"
    ],
    "solution": "x = symbols('x')\nf = (x**2 + 2*x + 3)/x\ng = x**3 + 2\nresult = g(f(x))\nresult_value = result.subs(x, -3)\nprint(result_value)"
  },
  {
    "example_id": 702,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.1"
    ],
    "annotated_answers": [
      "96.8"
    ],
    "solution": "feet_per_second = 66/60\nprint(feet_per_second)"
  },
  {
    "example_id": 703,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "108.0"
    ],
    "annotated_answers": [
      "108.0"
    ],
    "solution": "distance = (9 * 12)\nprint(distance)"
  },
  {
    "example_id": 704,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "21.0"
    ],
    "annotated_answers": [
      "21.0"
    ],
    "solution": "x = symbols('x')\ny = 2*x - 13\neq = 3*x + y - 92\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 705,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "3.0",
      "2010.0",
      "1.0",
      "3.0",
      "3.0",
      "-1.0",
      "2010.0",
      "1.0",
      "3.0",
      "2.0",
      "-1.0",
      "2010.0",
      "1.0",
      "3.0",
      "3.0"
    ],
    "annotated_answers": [
      "2010.0"
    ],
    "solution": "x = symbols('x')\nf = x**3 + 3*x**2 + 3*x + 1\nf_inv = solve(f - 2010, x)\nf_inv_value = f_inv[0]\nf_of_f_inv = f.subs(x, f_inv_value)\nprint(f_of_f_inv)"
  },
  {
    "example_id": 706,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "# volume of the first container\nV1 = 3.67\n# pressure of the first container\nP1 = 4\n# volume of the second container\nV2 = 1.835\n# pressure of the second container\nP2 = 0\n\n# solve for P2\nP2 = P1 * V2 / V1\n\nprint(P2)"
  },
  {
    "example_id": 707,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-65.0",
      "7.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x, y, K = symbols('x y K')\neq = 3*x - 7*y - 65\neq1 = eq.subs([(x, 7), (y, 4)])\neq2 = eq.subs([(x, 0), (y, K)])\nsolution = solve(eq2, K)\nk_value = solution[0]\nprint(k_value)"
  },
  {
    "example_id": 708,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-7.0"
    ],
    "annotated_answers": [
      "-7.0"
    ],
    "solution": "x = symbols('x')\neq = (2*x-1)/(2*x+2) - (x-3)/(x-1)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 709,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "12.0",
      "30.0",
      "4.0",
      "3.0"
    ],
    "annotated_answers": [
      "-40.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\na = symbols('a')\neq1 = 2*x + 5*y + (-8)\neq2 = 6*x + (16 + a - 15*y)\nsolution = solve([eq1, eq2], [x, y])\nprint(solution)"
  },
  {
    "example_id": 710,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "15.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "hour = 360 / 24\nprint(hour)"
  },
  {
    "example_id": 711,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "28.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "n = 7\nsum_of_consecutive = (n * (n + 1)) // 2\nprint(sum_of_consecutive)"
  },
  {
    "example_id": 712,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "15.999999999999998"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "print((2 ** 3) ** (4/3))"
  },
  {
    "example_id": 713,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\neq = 6**x + 6**x + 6**x + 6**x + 6**x + 6**x - 6**6\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 714,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "a = symbols('a')\neq = a - 1 - 2*a**(-1)\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 715,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0",
      "270.0"
    ],
    "annotated_answers": [
      "28.0"
    ],
    "solution": "# Number of tours per day\nn = 20\n\n# Time between tours\nt = 1\n\n# Time for the first tour\nf = 9\n\n# Time for the last tour\nl = 18\n\n# Number of tours in a day\nnt = (l - f) / t\n\n# Number of days in April\nnd = 30\n\n# Number of tours in April\nnt_total = nt * nd\n\n# Print the result\nprint(\"Number of tours per day: \", nt)\nprint(\"Number of tours in April: \", nt_total)"
  },
  {
    "example_id": 716,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-19.0",
      "9.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "a = symbols('a')\nx = a\neq1 = a + (x + 2) + (x + 3) + (x + 4) + (x + 5) + (x + 6) + (x + 7) + (x + 8) + (x + 9)\neq2 = 25\nsolution = solve(eq1 - eq2, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 717,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6885.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "# x = 81\nx = 81\n# y = 243\ny = 243\n# k = 3\nk = 3\n\n# xy = 21,507\nxy = x*y\n# xk = 27\nxk = x*k\n# yk = 81\nyk = y*k\n\n# xy + xk + yk = 21,507 + 27 + 81 = 24,533\nxy_plus_xk_plus_yk = xy + xk + yk\n\n# x + y = 24,533 / 3 = 8,144\nx_plus_y = xy_plus_xk_plus_yk / k\n\nprint(x_plus_y)"
  },
  {
    "example_id": 718,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25.0",
      "36.0"
    ],
    "annotated_answers": [
      "104.0"
    ],
    "solution": "x1 = symbols('x1')\nx2 = symbols('x2')\ny1 = 3*x1**2 - 5*x1 - 3\ny2 = 3*x2**2 - 5*x2 - 3\neq = y1 - y2\nsolution = solve(eq, x1)\nmidpoint_x = (solution[0] + solution[1])/2\nlength_square = (midpoint_x)**2\nprint(length_square)"
  },
  {
    "example_id": 719,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.5",
      "96.0",
      "96.0",
      "104.0",
      "13.0"
    ],
    "annotated_answers": [
      "48.0"
    ],
    "solution": "flicks = 12\nflocks = flicks / 8\nprint(flocks)\n\nflecks = flicks * 8\nprint(flecks)\n\nflecks = 12 * 8\nprint(flecks)\n\nflecks = 104\nprint(flecks)\n\nflocks = flecks / 8\nprint(flocks)"
  },
  {
    "example_id": 720,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0",
      "9.0",
      "10.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = log(x-1, 3**2)**2 - 1\nsolution = solve(eq, x)\nx_values = solution\nprint(x_values)"
  },
  {
    "example_id": 721,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "1.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "a = symbols('a')\nx = symbols('x')\neq1 = x**2 + a\neq2 = a*x\n\nresult = solve(eq1-eq2, a)\n\nfor a_val in result:\n    print(a_val)"
  },
  {
    "example_id": 722,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "A = 10\nB = 1/2\n\nab = A*B\nprint(ab)"
  },
  {
    "example_id": 723,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "y = 12 - 6\nprint(y)"
  },
  {
    "example_id": 724,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "30.5"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "from math import floor\n\ndef floor_sum(r):\n    return floor(r) + r\n\nprint(floor_sum(15.5))"
  },
  {
    "example_id": 725,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "(x, y) = (9 * 1/3, 6 * 1/3)\nprint(x + y)"
  },
  {
    "example_id": 726,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "print(int(36/7))"
  },
  {
    "example_id": 727,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\nr = solve((6*x**2 - 19*x - 7)/(2*x - 7) - 4*x + 3, x)[0]\nprint(r)"
  },
  {
    "example_id": 728,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "19.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "a = 10 - 5\nb = 19 - 10\nc = 5\n\nprint(a+b+c)"
  },
  {
    "example_id": 729,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "from sympy import symbols, solve\nx, y, D, E, F = symbols('x y D E F')\neq = (x**2 + y**2 + D*x + E*y + F)\nsolution = solve(eq, [D, E, F])\nprint(solution)"
  },
  {
    "example_id": 730,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "f = lambda x: x + 1\ng = lambda x: 2*x\nf_inv = lambda x: x - 1\ng_inv = lambda x: x / 2\neq = f(g_inv(f_inv(f_inv(g(f(5))))))\nprint(eq)"
  },
  {
    "example_id": 731,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "f = lambda x: x**3 - 8\nf_inv = lambda x: (x + 8)**(1/3)\nprint(f_inv(f(f_inv(19))))"
  },
  {
    "example_id": 732,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "2.0",
      "2.0",
      "2.0",
      "6.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "n = symbols('n')\ns = n**2 - 2**n + 1\nt = 2*s - s**2\neq = t - 2**3\nsolution = solve(eq, s)\ns_value = solution[0]\nprint(s_value)"
  },
  {
    "example_id": 733,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.761904761904762"
    ],
    "annotated_answers": [
      "24.0"
    ],
    "solution": "k = symbols('k')\nj = symbols('j')\neq = j/k - 16/21\nsolution = solve(eq, j)\nj_value = solution[0]\nprint(j_value)"
  },
  {
    "example_id": 734,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "19.0",
      "2.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x = symbols('x')\nf = x**2 + 9\nf2 = 3*x - 8\neq = f - f2 - 10\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 735,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "90.0",
      "90.0",
      "90.0",
      "89.0",
      "90.0",
      "180.0",
      "-1.0",
      "-1.0",
      "90.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "# 1.\nn = symbols('n')\na = 1\nb = 91\nc = a + (n - 1) * (b - a)\nd = c * (c - a) / (c - b)\ne = d * (d - a) / (d - b)\nf = e * (e - a) / (e - b)\ng = f * (f - a) / (f - b)\nh = g * (g - a) / (g - b)\ni = h * (h - a) / (h - b)\nj = i * (i - a) / (i - b)\nk = j * (j - a) / (j - b)\nl = k * (k - a) / (k - b)\nm = l * (l - a) / (l - b)\nn_value = floor(m)\nprint(n_value)\n\n\n# 2.\nn = symbols('n')\na = 1\nb = 91\nc = a + (n - 1) * (b - a)\nd = c * (c - a) / (c - b)\ne = d * (d - a) / (d - b)\nf = e * (e - a) / (e - b)\ng = f * (f - a) / (f - b)\nh = g * (g - a) / (g - b)\ni = h * (h - a) / (h - b)\nj = i * (i - a) / (i - b)\nk = j * (j - a) / (j - b)\nl = k * (k - a) / (k - b)\nm = l * (l - a) / (l - b)\nn_value = ceil(m)\nprint(n_value)\n\n\n# 3.\nn = symbols('n')\na = 1\nb = 91\nc = a + (n - 1) * (b - a)\nd = c * (c - a) / (c - b)\ne = d * (d - a) /"
  },
  {
    "example_id": 736,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "36.0"
    ],
    "annotated_answers": [
      "27.0"
    ],
    "solution": "g = 15\nb = symbols('b')\nx = b/2\neq = 51 - g - x\nsol = solve(eq, x)\nx_value = sol[0]\nprint(x_value)"
  },
  {
    "example_id": 737,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "89.0"
    ],
    "solution": "# Slope of the line is m\nm = symbols('m')\n# Slope of the line is m\nx0 = 4\ny0 = 365\n# The y-intercept of the line is on or between 1 and 9\ny_intercept = symbols('y_intercept')\ny_intercept_min = 1\ny_intercept_max = 9\n# Minimum possible slope of the line\nm_min = symbols('m_min')\nm_min = (y_intercept - y0)/(x0 - 0)\n# Slope of the line\nm = symbols('m')\n# Slope of the line\nm = (y_intercept - y0)/(x0 - 0)\n# Slope of the line\nm = solve(m, m)[0]\nprint(m)"
  },
  {
    "example_id": 738,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0",
      "1.0",
      "3.0",
      "1.0",
      "5.0",
      "1.0",
      "7.0",
      "1.0",
      "9.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "for m in range(1, 29):\n    for n in range(1, 29):\n        if (m + n) % 2 == 0:\n            if (n - 28) % m == 0:\n                print(m, n)"
  },
  {
    "example_id": 739,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "8.0",
      "1.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x, y = symbols('x y')\nf = Function('f')\nf_expression = 3*f(2*x) + 1\nf_expression_y = f_expression.subs(x, 4)\n\nprint(f_expression_y)"
  },
  {
    "example_id": 740,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0"
    ],
    "annotated_answers": [
      "-7.0"
    ],
    "solution": "x = symbols('x')\ny = x**2 - 7\ny_min = floor(solve(y, x)[0])\nprint(y_min)"
  },
  {
    "example_id": 741,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "f = lambda x: 5*x+3\ng = lambda x: x**2 - 2\nprint(g(f(-1)))"
  },
  {
    "example_id": 742,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0",
      "10.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "def find_fair_representatives(total, grade1, grade2):\n    grade1_reps = floor(total * grade1 / (grade1 + grade2))\n    grade2_reps = total - grade1_reps\n    return grade1_reps, grade2_reps\n\ntotal_reps = 18\ngrade1_enrollment = 520\ngrade2_enrollment = 650\n\ngrade1_reps, grade2_reps = find_fair_representatives(total_reps, grade1_enrollment, grade2_enrollment)\nprint(grade1_reps, grade2_reps)"
  },
  {
    "example_id": 743,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-6.4377516497364",
      "5.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "log_5_1_625 = log(1/625, 5)\nprint(log_5_1_625)"
  },
  {
    "example_id": 744,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "n = symbols('n')\nf = (n*(n+1))/2\nf_prime = (n+1)\nsolution = solve(f - f_prime, n)\nn_value = solution[0]\nprint(n_value)"
  },
  {
    "example_id": 745,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "expr = ((7+8+9)/(2+3+4)) * ((6+9+12)/(9+8+7))\nprint(expr)"
  },
  {
    "example_id": 746,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "crackers = 10\ncalories_per_cracker = 12\ncookies = crackers * calories_per_cracker / 20\nprint(cookies)"
  },
  {
    "example_id": 747,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "2.0",
      "113.0",
      "2.0"
    ],
    "annotated_answers": [
      "24.0"
    ],
    "solution": "a = symbols('a')\neq = (a**2 + 3*a) * 2 - 52\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 748,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "3.0"
    ],
    "annotated_answers": [
      "-9.0"
    ],
    "solution": "for i in range(-100, 100):\n    if isprime(abs(i**2 - 16)):\n        print(i)"
  },
  {
    "example_id": 749,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "3.0",
      "3.0",
      "3.0",
      "3.0"
    ],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "A, B, C = symbols('A B C')\n\n# calculate the arithmetic mean\nmean = (A + B + C)/3\n\n# calculate the value of B\nB_value = mean - A\n\n# calculate the value of C\nC_value = B_value + 3\n\nprint(C_value)"
  },
  {
    "example_id": 750,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = 3**(x+8) - 9**(x+3)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 751,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "140.0"
    ],
    "annotated_answers": [
      "140.0"
    ],
    "solution": "print(((7+5)**2) - ((7-5)**2))"
  },
  {
    "example_id": 752,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "47.0"
    ],
    "solution": "a = 5\nb = 1\nc = a*b\nprint(c)"
  },
  {
    "example_id": 753,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-8.0"
    ],
    "solution": ""
  },
  {
    "example_id": 754,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "13.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "import numpy as np\n\ndef f(x):\n    return x**2 - 8*x + 15\n\ndef vertex_distance(f, x0, y0):\n    return np.sqrt((x0-0)**2 + (y0-f(x0))**2)\n\nprint(vertex_distance(f, 0, 2))"
  },
  {
    "example_id": 755,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1000.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "900.0"
    ],
    "solution": "from sympy import sqrt\nfrom sympy.abc import x\n\nprint(sqrt(1000000) - sqrt(x)**3)"
  },
  {
    "example_id": 756,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "9.0"
    ],
    "annotated_answers": [
      "600.0"
    ],
    "solution": "x, y = symbols('x y')\neq = y/sqrt(x) - 3\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 757,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "6.0",
      "385.0",
      "6.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "p = symbols('p')\neq = 128-4*p - 12*p**2\nsolution = solve(eq, p)\np_value = solution[0]\nprint(p_value)"
  },
  {
    "example_id": 758,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-123.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "# Define the function\nf = lambda x: 3-x if x <= 3 else -x**3 + 2*x**2 + 3*x\n# Calculate the values\nf_0 = f(0)\nf_6 = f(6)\n# Calculate the sum\nf_0_6 = f_0 + f_6\nprint(f_0_6)"
  },
  {
    "example_id": 759,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "22.0"
    ],
    "annotated_answers": [
      "22.0"
    ],
    "solution": "f = lambda x: 2*x + 1\ng = lambda x: f(2*x) - 3\nprint(g(g(2)))"
  },
  {
    "example_id": 760,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "2.0",
      "4.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = x**2 + y - 4\neq2 = x**4 + y**2 - 10\nx_value = solve(eq1, x)[0]\ny_value = solve(eq1, y)[0]\nx_y_value = x_value * y_value\nprint(x_y_value)"
  },
  {
    "example_id": 761,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "18.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "x = symbols('x')\neq = (3-x)*(6+2*x)\nsolution = simplify(eq)\nprint(solution)"
  },
  {
    "example_id": 762,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-6.0"
    ],
    "annotated_answers": [
      "-6.0"
    ],
    "solution": "x = symbols('x')\nsolutions = solve(x**2 - x - 6, x)\nsolution_product = solutions[0] * solutions[1]\nprint(solution_product)"
  },
  {
    "example_id": 763,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "115.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x = symbols('x')\nf = 3*x**2 + 2*x - 5\nf_max = max(f.subs(x, i) for i in range(1, 7))\nf_max_value = f.subs(x, f_max)\nprint(f_max)"
  },
  {
    "example_id": 764,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "camille_age = 0\n\n# Alex's age\na = 12\n\n# Bob's age\nb = 10\n\n# Danielle's age\nd = 14\n\n# Alex and Bob's ages\nab = a + b\n\n# Camille's age\nc = floor( (d - ab) / 2 )\n\n# Alex, Bob, Camille and Danielle's ages\nabc = a + b + c + d\n\n# The sum of Alex, Bob, and Danielle's ages is fourteen times Camille's age\nabc = 14 * c\n\n# The sum of Alex and Bob's ages is six times Camille's age\nab = 6 * c\n\n# Bob's age is two years less than the difference in ages of Danielle and Alex\nb = d - a - 2\n\nprint(c)"
  },
  {
    "example_id": 765,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0",
      "1.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "A, B = symbols('A B')\neq = (A/(x-1) + B/(x+1) - (x+2)/(x**2-1))\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 766,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "49.0"
    ],
    "annotated_answers": [
      "49.0"
    ],
    "solution": "m = 7\nn = 30\np = 10\nq = 21\n\ndef fraction_multiply(m, n, p, q):\n    return (m * p) * (q / n)\n\nprint(fraction_multiply(m, n, p, q))"
  },
  {
    "example_id": 767,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9997.0"
    ],
    "annotated_answers": [
      "99940009.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 - 9997\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 768,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2107.0"
    ],
    "annotated_answers": [
      "2107.0"
    ],
    "solution": "total = 0\nfor i in range(100, 200):\n    if i % 7 == 0:\n        total += i\nprint(total)"
  },
  {
    "example_id": 769,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "35.0"
    ],
    "solution": "a, b = symbols('a b')\neq = (a**2 - 12*a + b)\nsolution = solve(eq, b)\nk_value = solution[0]\nprint(k_value)"
  },
  {
    "example_id": 770,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1522.5",
      "-210.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "n = 15\na = 7\nd = -210\ns = (n * (a + d)) / 2\nprint(\"The sum of the series is:\", s)\nprint(\"The common difference is:\", d)"
  },
  {
    "example_id": 771,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "7.0",
      "3.0",
      "1.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "106.0"
    ],
    "solution": "x = symbols('x')\nf = x**7 - 3*x**3 + 2\ng = f.subs(x, x + 1)\nprint(g)"
  },
  {
    "example_id": 772,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "256.0"
    ],
    "annotated_answers": [
      "256.0"
    ],
    "solution": "f = lambda x: 2**x\nprint(sqrt(f(f(f(f(1))))))"
  },
  {
    "example_id": 773,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "18.0",
      "3.0",
      "25.0",
      "2.0",
      "269.0",
      "1225.0",
      "0.0"
    ],
    "annotated_answers": [
      "49.0"
    ],
    "solution": "x = symbols('x')\neq = x * x * sqrt(x) - 5 * x - 9 * sqrt(x) - 35\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 774,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "def star(k, l):\n    return (k+l)*(k-l)\n\nprint(star(6, 5))"
  },
  {
    "example_id": 775,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "print(ceiling(-7/4))"
  },
  {
    "example_id": 776,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "25.0",
      "154.0",
      "5.0",
      "8.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq1 = 6*x + 5*y - 2*z - 4\neq2 = 4*x + 5*y + 12*z - 54\nsol = solve([eq1, eq2], [x, y, z])\nprint(sol)"
  },
  {
    "example_id": 777,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "1736.0"
    ],
    "solution": "x1, y1 = symbols('x1 y1')\nx2, y2 = symbols('x2 y2')\nsolutions = solve([y1 - x1**2 + 8, y2**2 - 5*x2 + 44], [x1, y1, x2, y2])\ny_coordinates = []\nfor solution in solutions:\n    x1, y1, x2, y2 = solution\n    if x1!= x2:\n        y_coordinates.append(y1)\n        y_coordinates.append(y2)\nfor y_coordinate in y_coordinates:\n    if y_coordinate!= 0:\n        print(y_coordinate)"
  },
  {
    "example_id": 778,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x = symbols('x')\neq = (9*x)/13 + (13)/(9*x) - (250)/(117*x)\nsolution = solve(eq)\nprint(sum(solution))"
  },
  {
    "example_id": 779,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "import math\nmath.floor(5.6/2) + 1"
  },
  {
    "example_id": 780,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "n = symbols('n')\neq = n**2 - 3*n + 2\nsolution = solve(eq, n)\nprint(solution)"
  },
  {
    "example_id": 781,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "181.0"
    ],
    "annotated_answers": [
      "181.0"
    ],
    "solution": "f = 3 * 7 ** 2 + 5 * 7 - 1\nprint(f)"
  },
  {
    "example_id": 782,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "y = symbols('y')\nx = y**2 - 4*y - 1\nsolution = solve(x, y)\ny_intercepts = len(solution)\nprint(y_intercepts)"
  },
  {
    "example_id": 783,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "144.0",
      "2.0"
    ],
    "annotated_answers": [
      "-5.0"
    ],
    "solution": "b = symbols('b')\nx = symbols('x')\neq = x**2 + b*x - 36\nsolution = solve(eq, x)\nb_value = solution[0]\nprint(b_value)"
  },
  {
    "example_id": 784,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "9901.0"
    ],
    "annotated_answers": [
      "9901.0"
    ],
    "solution": "print(99**2 + 99 + 1)"
  },
  {
    "example_id": 785,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "1.0",
      "2.0",
      "3.0",
      "2.0",
      "1.0",
      "3.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = x - (1 + x/(1 + x/(1 + x/(1 + x))))\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 786,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "969.0",
      "2.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "N = symbols('N')\nsum_of_first_n_positive_odd_numbers = 121\nsum_of_first_n_positive_odd_numbers_formula = (N*(N+1))/2\nsolution = solve(sum_of_first_n_positive_odd_numbers_formula - sum_of_first_n_positive_odd_numbers, N)\nN_value = solution[0]\nprint(N_value)"
  },
  {
    "example_id": 787,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "24.0",
      "2.0",
      "3.0",
      "2.0",
      "6.0",
      "3.0"
    ],
    "annotated_answers": [
      "108.0"
    ],
    "solution": "x, y = symbols('x y')\n\neq1 = x - y - 6\neq2 = x**2 + y**2 - 24\n\neq1 = solve(eq1, x)\neq2 = solve(eq2, y)\n\nx_value = eq1[0]\ny_value = eq2[0]\n\nx_value_3 = x_value**3\ny_value_3 = y_value**3\n\nprint(x_value_3 - y_value_3)"
  },
  {
    "example_id": 788,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "169.0"
    ],
    "solution": "x = symbols('x')\neq = (x**(1/3))**6\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 789,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "13.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "A = 19 - 2 - 4\nprint(A)"
  },
  {
    "example_id": 790,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "2.0",
      "2.0",
      "38.0",
      "2.0",
      "20.0",
      "2.0",
      "20.0",
      "2.0",
      "20.0"
    ],
    "annotated_answers": [
      "600.0"
    ],
    "solution": "# Set of consecutive integers\nx = symbols('x')\ny = symbols('y')\nz = symbols('z')\nw = symbols('w')\n\n# Sum of the set of integers\nS = 22\n\n# Each integer increased by 2 and multiplied by 20\nx_new = 2*x + 20\ny_new = 2*y + 20\nz_new = 2*z + 20\nw_new = 2*w + 20\n\n# Sum of the new set of integers\nS_new = x_new + y_new + z_new + w_new\n\n# Solution\nsolution = solve(S_new - S, x_new, y_new, z_new, w_new)\n\n# Print the solution\nprint(solution)"
  },
  {
    "example_id": 791,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nx = symbols('x')\neq = (3*x + 2) - 2*a**(-1)*(x + b)\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 792,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "1.0",
      "6.0"
    ],
    "annotated_answers": [
      "22.0"
    ],
    "solution": "# Create symbols\na, b = symbols('a b')\n\n# Create equation\neq = a*b - 6*a + 6*b - 1\n\n# Solve for b\nsolution = solve(eq, b)\n\n# Extract solution\nb_value = solution[0]\n\n# Print solution\nprint(b_value)"
  },
  {
    "example_id": 793,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x = 3\ny = 5\nx1 = 4\ny1 = 7\n\nz_x = x1 - x\nz_y = y1 - y\nz_sum = z_x + z_y\n\nprint(z_sum)"
  },
  {
    "example_id": 794,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "4.0",
      "2.0",
      "8.0",
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\neq = (a**2 + 4*a + b**2 - 4*a*c)/(b**2 - 4*a*c)\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 795,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "187.0"
    ],
    "annotated_answers": [
      "369.0"
    ],
    "solution": "# length of the diagonal of a rectangular patio\nL = floor(sqrt(180**2 + 54**2))\nprint(L)"
  },
  {
    "example_id": 796,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "60.0"
    ],
    "annotated_answers": [
      "69.0"
    ],
    "solution": "t = 60\ncost = 70 * t - 10 * (t - 60)\nprint(t)"
  },
  {
    "example_id": 797,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "8.0",
      "15.0",
      "24.0",
      "35.0",
      "41.0",
      "41.0",
      "41.0",
      "41.0",
      "41.0",
      "41.0",
      "41.0",
      "41.0",
      "41.0",
      "41.0"
    ],
    "annotated_answers": [
      "105.0"
    ],
    "solution": "# Initialize variables\nsubset_sum = 0\nsubset_sums = []\n\n# Set the elements of the set\nelements = [1, 2, 3, 4, 5, 6]\n\n# Set the number of subsets\nnum_subsets = 15\n\n# Loop over each subset\nfor i in range(num_subsets):\n\n    # Set the current subset\n    subset = elements[i:i+2]\n\n    # Add the sum of the elements of the subset to the total sum\n    subset_sum += sum(subset)\n\n    # Add the sum of the elements of the subset to the list of sums\n    subset_sums.append(subset_sum)\n\n# Print the total sum of the sums\nprint(subset_sums)"
  },
  {
    "example_id": 798,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.3304121311619"
    ],
    "annotated_answers": [
      "49.0"
    ],
    "solution": "x = symbols('x')\neq = (x**(1/3))*x**(1/2) - 7\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 799,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "9.0",
      "2.0",
      "9.0",
      "128.0",
      "27.0",
      "2.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x, y = symbols('x y')\nf = y/(x**2) + 3*x - 4\nf_sol = solve(f, x)\nf_sol_x = f_sol[0]\nf_sol_y = f_sol[1]\nprint(f_sol_x)\nprint(f_sol_y)\nprint(f_sol_x + f_sol_y)"
  },
  {
    "example_id": 800,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "f = lambda x: x**2-2*x+1\ng = lambda x: math.sqrt(2*x+1)\nprint(f(g(4)) - g(f(3)))"
  },
  {
    "example_id": 801,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "n = symbols('n')\neq = (n+5)/(n-3) - 2\nsolution = solve(eq, n)\nn_value = solution[0]\nprint(n_value)"
  },
  {
    "example_id": 802,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-0.25"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\neq = a - b\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 803,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0",
      "0.0",
      "0.0",
      "1.0"
    ],
    "annotated_answers": [
      "54.0"
    ],
    "solution": "x, y = symbols('x, y')\nx_ = x + 4\ny_ = y - 1\n\neq = (x * y) * (x_ * y_)\nsolution = solve(eq, x, y)\n\nprint(solution)"
  },
  {
    "example_id": 804,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x1, y1 = symbols('x1, y1')\nx2, y2 = symbols('x2, y2')\n\n# Define the equations\neq1 = (x1 - 7)**2 + (y1 - 9)**2 - 1\neq2 = (x2 - 10)**2 + (y2 - 2)**2 - 1\n\n# Solve the equations\nsolution = solve([eq1, eq2], [x1, y1, x2, y2])\n\n# Get the values of the variables\nx1_value = solution[0][0]\ny1_value = solution[0][1]\nx2_value = solution[0][2]\ny2_value = solution[0][3]\n\n# Calculate the sum of the other two vertices\nsum_of_y_coordinates = y1_value + y2_value\n\nprint('Sum of the y-coordinates of the other two vertices:', sum_of_y_coordinates)"
  },
  {
    "example_id": 805,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.25"
    ],
    "annotated_answers": [
      "47.0"
    ],
    "solution": "h = 16\nfor i in range(6):\n    h = h / 2\nprint(h)"
  },
  {
    "example_id": 806,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "20.0",
      "3.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "b = symbols('b')\neq = 3*b - 20\nsolution = solve(eq, b)\nb_value = solution[0]\nprint(b_value)"
  },
  {
    "example_id": 807,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-11.6189500386223",
      "1.0",
      "3.0",
      "15.0",
      "1.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "a, b = symbols('a, b')\neq1 = a*b**2 - 27/5\neq2 = a**2*b - 135\nsol1 = solve(eq1, b)\nsol2 = solve(eq2, a)\nb_value = sol1[0]\na_value = sol2[0]\nprint(a_value + 5*b_value)"
  },
  {
    "example_id": 808,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "x = 5 ** 2\nprint(x)"
  },
  {
    "example_id": 809,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-44.0",
      "3.0",
      "3.0",
      "4.0",
      "4.0",
      "3.0",
      "3.0",
      "4.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a, b = symbols('a, b')\neq1 = (4*a + 3*b) / (a - 2*b)\neq2 = 5\nsol1 = solve(eq1, a)\nsol2 = solve(eq1, b)\na_value = sol1[0]\nb_value = sol2[0]\nprint((a_value + 11*b_value) / (a_value - b_value))"
  },
  {
    "example_id": 810,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0",
      "2.0",
      "2.0",
      "1.0",
      "1.0",
      "2.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "-9.0"
    ],
    "solution": "# Define variables\nx1, y1, x2, y2 = symbols('x1 y1 x2 y2')\n\n# Define equations\neq1 = (x2-x1)*(x2-x1) + (y2-y1)*(y2-y1)\neq2 = (x2-x1)*(x1-(-2)) + (y2-y1)*(y1-1)\n\n# Solve for x2, y2\nsolution = solve([eq1, eq2], [x2, y2])\n\n# Print the coordinates of B\nprint(\"The sum of the coordinates of point B is:\")\nprint(solution[0][0] + solution[0][1])"
  },
  {
    "example_id": 811,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "64.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "x = symbols('x')\nm = symbols('m')\nb = symbols('b')\n\n# quadratic form\nq1 = x**2 + b*x + 1\n\n# complete the square\nq2 = (x + m)**2 - 63\n\n# solve for b\nb_value = solve(q1 - q2, b)[0]\n\nprint(b_value)"
  },
  {
    "example_id": 812,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "49.0",
      "12.0",
      "6.0",
      "7.0",
      "6.0",
      "49.0",
      "12.0",
      "6.0",
      "7.0",
      "6.0"
    ],
    "annotated_answers": [
      "24.0"
    ],
    "solution": "from sympy import symbols, solve\nfrom sympy.abc import x, c\n\nroots = solve(3*x**2 + 7*x + c, x)\nprint(roots)"
  },
  {
    "example_id": 813,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "6.0"
    ],
    "annotated_answers": [
      "-6.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\n\np1 = (3,9)\np2 = (x,y)\n\nmidpoint = ((p1[0] + p2[0])/2, (p1[1] + p2[1])/2)\n\nsum_of_coordinates = midpoint[0] + midpoint[1]\nprint(sum_of_coordinates)"
  },
  {
    "example_id": 814,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1600.0",
      "1444.0",
      "3044.0",
      "1600.0",
      "0.0"
    ],
    "annotated_answers": [
      "156.0"
    ],
    "solution": "# Calculate 40^2\nx = 40**2\nprint(x)\n\n# Calculate 38^2\ny = 38**2\nprint(y)\n\n# Calculate 42^2\nz = x + y\nprint(z)\n\n# Calculate 42^2 - 38^2\nw = z - y\nprint(w)\n\n# Calculate 42^2 - 38^2 - 40^2\nv = w - x\nprint(v)"
  },
  {
    "example_id": 815,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-2.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "b = symbols('b')\nf = 3*x**4 - 7*x**3 + 2*x**2 - b*x + 1\neq = f.subs(x, 1) - 1\nsolution = solve(eq, b)\nb_value = solution[0]\nprint(b_value)"
  },
  {
    "example_id": 816,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "8.0",
      "6.0",
      "8.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x, y = symbols('x y')\neq = (x+8)**2 + (y-6)**2\nsolution = solve(eq, x, y)\nprint(solution)"
  },
  {
    "example_id": 817,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "x = symbols('x')\na = 2\nb = 4\nc = 5\neq = a * (x - b)**2 + c\nh = eq.args[1].args[0]\nprint(h)"
  },
  {
    "example_id": 818,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "a = symbols('a')\neq = 4 + (12/a) + (36/a**2)\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 819,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "for x in range(1, 10):\n    if x*x + 4*x + 4 < 20:\n        print(x)"
  },
  {
    "example_id": 820,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "120.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "product = 1 * 2 * 3 * 4 * 5\nprint(product)"
  },
  {
    "example_id": 821,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "448.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "x = 56\ny = 8\nz = x * y\nprint(z)"
  },
  {
    "example_id": 822,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "72.0",
      "2.0",
      "2.0",
      "2.0",
      "72.0",
      "2.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "b = symbols('b')\nx1, x2 = solve(x**2 + b*x + 18, x)\nratio = x2/x1\nprint(ratio)"
  },
  {
    "example_id": 823,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "227.0"
    ],
    "annotated_answers": [
      "40.0"
    ],
    "solution": "a = 12\nb = 25\nc = 38\n\nN = a + b + c\n\na_new = a - 5\nb_new = b + 5\nc_new = c * 5\n\nN_new = a_new + b_new + c_new\n\nprint(N_new)"
  },
  {
    "example_id": 824,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "x, y = symbols('x y')\nf = y - (x*2)\nsol = solve(f, y)\nprint(sol)\ny_value = sol[0]\nprint(y_value)"
  },
  {
    "example_id": 825,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "10.0",
      "5.0",
      "10.0",
      "5.0",
      "2.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "from sympy import symbols, solve\nfrom sympy.abc import x\neq = 18 + 5*x**2 - 20*x\nsolution = solve(eq, x)\nx_value = solution[0]\nx_value_1 = solution[1]\nprint(x_value)\nprint(x_value_1)"
  },
  {
    "example_id": 826,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "36.0"
    ],
    "annotated_answers": [
      "-36.0"
    ],
    "solution": "y = 36 / (-2 * -1/2)\nprint(y)"
  },
  {
    "example_id": 827,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0",
      "2.0",
      "3.0",
      "5.0",
      "2.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 + 1 - 7*x\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 828,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "x = symbols('x')\ny = floor(6.7) + floor(-6.7)\nprint(y)"
  },
  {
    "example_id": 829,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "72.0",
      "5.0",
      "2.0",
      "72.0",
      "5.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "x = symbols('x')\ny = 144/x\na = (y // 10)\nb = (y % 10)\nprint(a)\nprint(b)"
  },
  {
    "example_id": 830,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "print(math.log(64,2))"
  },
  {
    "example_id": 831,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "20.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "def f(n):\n    return n**2 + n + 17\n\nprint(f(10) - f(9))"
  },
  {
    "example_id": 832,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "print(2**3 + 4)"
  },
  {
    "example_id": 833,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "3.0"
    ],
    "solution": ""
  },
  {
    "example_id": 834,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "# solve equation 6^(x+1) - 6^x = 1080\nx = symbols('x')\nsolution = solve(6**(x+1) - 6**x - 1080, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 835,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "p = symbols('p', cls=Poly)\nq = symbols('q', cls=Poly)\nr = p*q\nprint(r.degree())"
  },
  {
    "example_id": 836,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "10.0",
      "7.0",
      "10.0",
      "-2.0",
      "10.0",
      "7.0",
      "10.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "import sympy\nx, y = sympy.symbols('x, y')\nslope = 2\nintercept = -10\na, b = sympy.symbols('a, b')\nline1 = a*x + b*y + slope*x + intercept\nline2 = (y-8)*x + (x-7)*y\nsolution = sympy.solve([line1-line2, a+b], [a, b])\nprint(solution)"
  },
  {
    "example_id": 837,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "672.0"
    ],
    "annotated_answers": [
      "672.0"
    ],
    "solution": "def compound_interest(principal, interest, years):\n    return principal * ((1 + interest)**years)\n\nprincipal = 500\ninterest = 0.03\nyears = 10\n\nresult = compound_interest(principal, interest, years)\nprint(round(result))"
  },
  {
    "example_id": 838,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "78.0"
    ],
    "annotated_answers": [
      "78.0"
    ],
    "solution": "total_cars = 0\nfor i in range(1, 13):\n    total_cars += i\nprint(total_cars)"
  },
  {
    "example_id": 839,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-39.0"
    ],
    "annotated_answers": [
      "-39.0"
    ],
    "solution": "a = -1\nb = 5\nprint(-a-b**2+3*a*b)"
  },
  {
    "example_id": 840,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "13.0",
      "2.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "m, n = symbols('m n')\neq1 = 3*m + 4*n - 47\neq2 = m + n - 15\nsol = solve((eq1, eq2), (m, n))\nprint(sol)"
  },
  {
    "example_id": 841,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "6.0",
      "12.0",
      "6.0",
      "6.0",
      "12.0",
      "6.0",
      "1.0",
      "2.0",
      "4.0"
    ],
    "annotated_answers": [
      "-150.0"
    ],
    "solution": "k = symbols('k')\nx = symbols('x')\na = 6\nb = 12\nc = 8\neq = k - a*x**2 - b*x - c\nsolution = solve(eq, x)\nx_value = solution[0]\nk_value = a*x_value**2 + b*x_value + c\nprint(k_value)"
  },
  {
    "example_id": 842,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "16.5"
    ],
    "annotated_answers": [
      "33.0"
    ],
    "solution": "a = symbols('a')\neq = (3*a)*(2**3+sqrt(9))/2\nsolution = simplify(eq)\nprint(solution)"
  },
  {
    "example_id": 843,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25.0"
    ],
    "annotated_answers": [
      "31.0"
    ],
    "solution": "new_cans = 125 / 5\nprint(new_cans)"
  },
  {
    "example_id": 844,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "22.799999999999997"
    ],
    "annotated_answers": [
      "22.8"
    ],
    "solution": "red_weight = 15.2\nblue_weight = 3 * red_weight / 2\nprint(blue_weight)"
  },
  {
    "example_id": 845,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "18.0",
      "63.0"
    ],
    "annotated_answers": [
      "21.0"
    ],
    "solution": "x = symbols('x')\na, b = symbols('a b', positive=True)\nf = x**2 + 18*x - 63\ng = x - a\nh = x + b\neq = f - (g*h)\nsolution = solve(eq, b)\nb_value = solution[0]\nprint(b_value)"
  },
  {
    "example_id": 846,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "5.0",
      "5.0",
      "2.0"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 + 2*x*(5-x) + (5-x)**2\nprint(eq)"
  },
  {
    "example_id": 847,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "# Initialize variables\nc = symbols('c')\nn = symbols('n')\nm = symbols('m')\nk = symbols('k')\nl = symbols('l')\n\n# Define the function f(c)\nf = (3/(2*c-3))\n\n# Define the function f(c)\nf = (3/(2*c-3))\n\n# Calculate the value of the fraction\nfrac = (f**(-1)*c*f)\n\n# Simplify the fraction\nfrac = simplify(frac)\n\n# Find the numerator and denominator\nnumerator = frac.as_numer_denom()[0]\ndenominator = frac.as_numer_denom()[1]\n\n# Print the solution\nprint(f\"{numerator}/{denominator}\")"
  },
  {
    "example_id": 848,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "2.0",
      "5.0",
      "2.0"
    ],
    "annotated_answers": [
      "47.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 + 1/x**2 - 7\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 849,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "27.0"
    ],
    "annotated_answers": [
      "27.0"
    ],
    "solution": "criminals_per_hour = 6\nhours = 4.5\ncriminals_captured = criminals_per_hour * hours\nprint(criminals_captured)"
  },
  {
    "example_id": 850,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "19.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "x = 4\ny = 3\nprint(24-(2*x-y))"
  },
  {
    "example_id": 851,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "23.0",
      "5.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq1 = 2**(x+1) - 4**(x-7)\neq2 = 8**(3*y) - 16**(y-13)\nx_value = solve(eq1, x)\ny_value = solve(eq2, y)\nx_y_value = x_value[0] + y_value[0]\nprint(x_y_value)"
  },
  {
    "example_id": 852,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "50.0"
    ],
    "solution": "# Define variables\nl = symbols('l')\n\n# Define equation\neq = 3*l - 2*l*math.sqrt(2)\n\n# Solve for l\nsol = solve(eq, l)\n\n# Print smallest possible length\nprint(sol[0])"
  },
  {
    "example_id": 853,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0",
      "8.0",
      "3.0",
      "9.0",
      "2.0",
      "1040.0",
      "9464.0",
      "0.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "a = symbols('a')\neq = (a**2 - 1053)/(a - 1) - (a**8 - 13)/(a - 9)\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 854,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.12310562561766",
      "1.0",
      "-4.12310562561766",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "x = symbols('x')\ny = (1/2)*x**2 - 9\neq = x**2 + y**2\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)\na = x_value\nprint(a**2)"
  },
  {
    "example_id": 855,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3125.0",
      "125000.0",
      "2500.0",
      "1.0"
    ],
    "annotated_answers": [
      "2000.0"
    ],
    "solution": "# Set daily caloric requirement\ndaily_caloric_requirement = 2500\n\n# Set peaches calories per tin\ncalories_per_tin = 40\n\n# Set peaches percentage of daily caloric requirement\npercentage_of_daily_caloric_requirement = 0.02\n\n# Calculate number of tins of peaches needed\nnum_tins = floor(daily_caloric_requirement / (calories_per_tin * percentage_of_daily_caloric_requirement))\n\n# Calculate total calories of peaches\ntotal_calories = num_tins * calories_per_tin\n\n# Calculate total calories per day\ntotal_calories_per_day = total_calories * percentage_of_daily_caloric_requirement\n\n# Calculate number of days needed to meet daily caloric requirement\nnum_days = ceil(daily_caloric_requirement / total_calories_per_day)\n\n# Print results\nprint(f\"Number of tins of peaches needed: {num_tins}\")\nprint(f\"Total calories of peaches: {total_calories}\")\nprint(f\"Total calories per day: {total_calories_per_day}\")\nprint(f\"Number of days needed to meet daily caloric requirement: {num_days}\")"
  },
  {
    "example_id": 856,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "3.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "# Define sequence 1\na1 = 0\nb1 = 0\nc1 = 0\n\n# Define sequence 2\na2 = 0\nb2 = 3\nc2 = 0\n\n# Find the difference between the first terms of the two sequences\nd = a2 - a1\n\n# Find the common difference of the two sequences\ne = c2 - c1\n\n# Find the fifth term of sequence 1\nf = d * 5 + b1\n\n# Find the fifth term of sequence 2\ng = e * 5 + b2\n\n# Print the fifth term of sequence 1\nprint(f)\n\n# Print the fifth term of sequence 2\nprint(g)"
  },
  {
    "example_id": 857,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25.0",
      "2.0",
      "589.0",
      "2.0",
      "589.0",
      "2.0",
      "25.0",
      "2.0"
    ],
    "annotated_answers": [
      "136.0"
    ],
    "solution": "a, b = symbols('a, b')\neq = a + b - 25\neq2 = a*b - 9\nsolution = solve([eq, eq2], [a, b])\na_value = solution[0][0]\nb_value = solution[0][1]\nprint(f'The solution is {a_value}, {b_value}')"
  },
  {
    "example_id": 858,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "0.0"
    ],
    "solution": ""
  },
  {
    "example_id": 859,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "0.0",
      "8.0",
      "0.0",
      "81.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x1 = 3**(-2)\nx2 = 9**(-2)\nx3 = 27**(2/3)\nx4 = 9*81**(-1)\nx5 = 243**(4/5)\n\nprint(floor(x1))\nprint(floor(x2))\nprint(floor(x3))\nprint(floor(x4))\nprint(floor(x5))"
  },
  {
    "example_id": 860,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "14.5"
    ],
    "annotated_answers": [
      "7.5"
    ],
    "solution": "y = 15.5 - 1\nprint(y)"
  },
  {
    "example_id": 861,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "m = -1\nn = -m-m\nprint(n)"
  },
  {
    "example_id": 862,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "print(int(math.ceil((7/4)**2)))"
  },
  {
    "example_id": 863,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1000.0",
      "1000.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x_ints = list(range(0, 1000))\ny_ints = list(map(lambda x: -2*x + 18, x_ints))\nprint(len(x_ints))\nprint(len(y_ints))"
  },
  {
    "example_id": 864,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "susan_ticket_cost = 4 * 20\nsusan_discount = 0.25\nsusan_price = susan_ticket_cost - (susan_ticket_cost * susan_discount)\n\npam_ticket_cost = 5 * 20\npam_discount = 0.30\npam_price = pam_ticket_cost - (pam_ticket_cost * pam_discount)\n\npam_pay = pam_price - susan_price\nprint(pam_pay)"
  },
  {
    "example_id": 865,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25.0",
      "2.0",
      "5.0",
      "25.0",
      "2.0",
      "5.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\nk = symbols('k', integer=True)\neq = k*x**2 + 10*x + k\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 866,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "f = lambda x: x**2\ndomain = range(10)\nprint(len(domain))"
  },
  {
    "example_id": 867,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "36.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "perimeter = 12\nwidth = perimeter / 2\narea = width * width\nprint(area)"
  },
  {
    "example_id": 868,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0",
      "32.0",
      "5.333333333333333",
      "32.0",
      "64.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "# number of regular packs\nn = 32\n# number of batteries in each regular pack\nm = 4\n# number of batteries in each super pack\ns = 6\n# total number of batteries\nt = 166\n\n# number of regular packs\nr = n/m\n# number of super packs\np = n/s\n# total number of batteries in regular packs\nb = r*m\n# total number of batteries in super packs\nc = p*s\n# total number of batteries\nz = r*m + p*s\n\nprint('number of regular packs: ', r)\nprint('number of batteries in regular packs: ', b)\nprint('number of super packs: ', p)\nprint('number of batteries in super packs: ', c)\nprint('total number of batteries: ', z)"
  },
  {
    "example_id": 869,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "17.97056274847714"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "h = lambda x: (x**3+72)**0.5+1\nprint(h(6))"
  },
  {
    "example_id": 870,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1009.0"
    ],
    "annotated_answers": [
      "1160.0"
    ],
    "solution": "# Define variables\nr = 0.075/4\nt = 0.25\nn = 2\n\n# Calculate the interest\nA = 1000\nB = A * pow((1 + r), n * t)\n\n# Round to nearest dollar\nprint(round(B))"
  },
  {
    "example_id": 871,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0",
      "-6.0",
      "-6.0",
      "18.0"
    ],
    "annotated_answers": [
      "120.0"
    ],
    "solution": "import numpy as np\n\na = np.array([\n    [-3, 3],\n    [1, 3],\n    [0, 0]\n])\n\na = a.T\n\nprint(a.dot(a.T))"
  },
  {
    "example_id": 872,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "2.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "78.0"
    ],
    "solution": "x = symbols('x')\ng = 4*x**2 - 3*x + 2\ng_value = g.subs(2*x + 5, -3)\nprint(g_value)"
  },
  {
    "example_id": 873,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "18.0",
      "2.0",
      "1296.0",
      "18.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "n = symbols('n')\neq = (9*x**2) + (n*x) + 36\nsolution = solve(eq, x)\nn_value = solution[0]\nprint(n_value)"
  },
  {
    "example_id": 874,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "x = symbols('x')\nsol = solve(x**2 + 4*x - 9, x)\nprint(len(sol))"
  },
  {
    "example_id": 875,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "100.0"
    ],
    "solution": "from math import factorial\n\ndef power(a, b):\n    return a ** b + b ** a\n\ndef is_true_for_all_positive_integers(a, b):\n    return power(a, b) == power(a, b)\n\ndef main():\n    if is_true_for_all_positive_integers(2, 6):\n        return 2 * 6\n    else:\n        return None\n\nprint(main())"
  },
  {
    "example_id": 876,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "366.6666666666667"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "# Solve for pencil cost in cents\npencil_cost = 100 * 11 / 3\nprint(pencil_cost)"
  },
  {
    "example_id": 877,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1000.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "print(50*200*10/100)"
  },
  {
    "example_id": 878,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.5"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "b = -3/2\nprint(b)"
  },
  {
    "example_id": 879,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "60000.0"
    ],
    "annotated_answers": [
      "60000.0"
    ],
    "solution": "sum = 0\nfor i in range(501, 701, 2):\n    sum += i\nprint(sum)"
  },
  {
    "example_id": 880,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "620.0"
    ],
    "annotated_answers": [
      "128.0"
    ],
    "solution": "novel_length = 248\nnumber_of_days = 5\ndays = range(1, number_of_days + 1)\nhalf_pages = [pow(2, -1) * novel_length for _ in days]\nfirst_day_pages = sum(half_pages)\nprint(first_day_pages)"
  }
]