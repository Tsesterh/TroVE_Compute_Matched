[
  {
    "example_id": 0,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "2013.0",
      "18.0",
      "5.0",
      "2.0",
      "1.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "n = 4\nx = symbols('x')\neq = (x * (x + 2)) * (x + 1) - 5\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 1,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-2.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "a = symbols('a')\neq = (8**(-1))/(4**(-1)) - a**(-1) - 1\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 2,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1071.0"
    ],
    "annotated_answers": [
      "268.0"
    ],
    "solution": "diameter = 16\narea = 0\nfor i in range(100):\n    area += 3.14 * diameter**2\n    diameter /= 2\nprint(int(area))"
  },
  {
    "example_id": 3,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7945.0"
    ],
    "annotated_answers": [
      "7945.0"
    ],
    "solution": "rent = 5000\nelectricity = 1.45\ntotal_cost = 16520.25\nelectricity_cost = total_cost - rent\nelectricity_used = electricity_cost / electricity\nprint(electricity_used)"
  },
  {
    "example_id": 4,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "7.5"
    ],
    "solution": "x = symbols('x')\nflour = 1.5\nweight = 5\ncake = x*weight\ncake_flour = flour*x\neq = cake_flour - flour\nsolution = solve(eq, x)\ncake_flour = solution[0]\nprint(cake_flour)"
  },
  {
    "example_id": 5,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "164.0"
    ],
    "solution": "# Declare the variables\nx = symbols('x')\n\n# Define the equation\neq = (x/4) + (3/4) - 0.503\n\n# Solve for x\nsolution = solve(eq, x)\n\n# Get the largest value\nlargest_x = solution[0]\n\n# Print the largest value\nprint(largest_x)"
  },
  {
    "example_id": 6,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "60.0"
    ],
    "annotated_answers": [
      "30.0"
    ],
    "solution": "a, b = symbols('a b')\neq = (a**2) - (b**2) - 60\nsolution = solve(eq, a, b)\na_value = solution[0][0]\nb_value = solution[0][1]\nprint(a_value + b_value)"
  },
  {
    "example_id": 7,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "8.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq1 = x/y - 2\neq2 = z/x - 4\nsolution = solve([eq1, eq2], [x, y, z])\nprint(solution)"
  },
  {
    "example_id": 8,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x = (12 + 8) / 2\ny = (12 - 8) / 2\nprint(2 * x - x * y)"
  },
  {
    "example_id": 9,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.5"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "K = 7 - 6*7/4\nprint(K)"
  },
  {
    "example_id": 10,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.05",
      "0.05",
      "0.05"
    ],
    "annotated_answers": [
      "1545.0"
    ],
    "solution": "height = 405\ndistance = height * 2 / 3\nprint(distance)"
  },
  {
    "example_id": 11,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "81.0"
    ],
    "solution": "x = symbols('x')\neq = (x - 1/x)**4\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 12,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "80.0"
    ],
    "annotated_answers": [
      "125.0"
    ],
    "solution": ""
  },
  {
    "example_id": 13,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "0.0"
    ],
    "annotated_answers": [
      "3702.0"
    ],
    "solution": "N = 1/3\nprint(floor(10*N) + floor(100*N) + floor(1000*N) + floor(10000*N))"
  },
  {
    "example_id": 14,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25.0",
      "2.0",
      "25.0",
      "2.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\nn = solve((x**2 + y**2 - 25)**2, x)\nprint(n)"
  },
  {
    "example_id": 15,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "25.0",
      "25.0",
      "5.0"
    ],
    "annotated_answers": [
      "33.0"
    ],
    "solution": "x, y, c = symbols('x y c')\neq = x**2 - 10*x + y**2 + 6*y + c\nsolution = solve(eq.subs(y, 0), x)\nprint(solution)"
  },
  {
    "example_id": 16,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\nA = symbols('A')\nB = symbols('B')\nC = symbols('C')\nD = symbols('D')\n\neq = (x**2 + A*y**2 + B*x + C*y + D)\n\n# Find A+B+C+D\nsolution = solve(eq, [A, B, C, D])\nA_value = solution[0][0]\nB_value = solution[0][1]\nC_value = solution[0][2]\nD_value = solution[0][3]\n\nprint(floor(A_value) + floor(B_value) + floor(C_value) + floor(D_value))"
  },
  {
    "example_id": 17,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "n = symbols('n')\neq = n + (n+2) + (n+4)\nsolution = solve(eq, n)\nn_value = solution[0]\nprint(n_value)"
  },
  {
    "example_id": 18,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "14.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x = 25 - 11\nprint(x)"
  },
  {
    "example_id": 19,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = x**(12) - 8**4\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 20,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "444.0"
    ],
    "annotated_answers": [
      "445.0"
    ],
    "solution": "# declare variables\nn = symbols('n')\n\n# define the equation\ne = 1000 + 0.5 * n - 2.75 * n\n\n# solve for n\nsolution = solve(e, n)\n\n# print the solution\nprint(floor(solution[0]))"
  },
  {
    "example_id": 21,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "a = symbols('a')\neq = 50*a*36/3/2\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 22,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "2.0",
      "3.0",
      "5.0",
      "2.0"
    ],
    "annotated_answers": [
      "48.0"
    ],
    "solution": "x = symbols('x')\neq = x + (1/x) - 7\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 23,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x = symbols('x')\nf = x**7 + x**6 + x**5 + x**4 + x**3 + x**2 + x + 1\ng = x**7 - x**6 - x**5 - x**4 - x**3 - x**2 - x - 1\nh = f + g\n\ndef degree(poly):\n    return len(poly.args) - 1\n\ndef min_max_degree(poly):\n    return floor(degree(poly)/2)\n\nprint(min_max_degree(h))"
  },
  {
    "example_id": 24,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "512.0"
    ],
    "solution": "x = symbols('x')\neq = x**((x+1)**x)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 25,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "100.0"
    ],
    "annotated_answers": [
      "64.0"
    ],
    "solution": "# Define variables\nn = symbols('n')\n\n# Define the equation\neq = (2**n)/(2**(n+3)) - 1\n\n# Find the solution\nsolution = solve(eq, n)\n\n# Print the solution\nprint(floor(solution[0]))"
  },
  {
    "example_id": 26,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-9.0"
    ],
    "annotated_answers": [
      "-9.0"
    ],
    "solution": "# Solve for y\ny = symbols('y')\neq = y**2 - 81\nsolution = solve(eq, y)\ny_value = solution[0]\nprint(y_value)"
  },
  {
    "example_id": 27,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-27.0"
    ],
    "annotated_answers": [
      "1120.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq = x**2 - 27**2\nans = solve(eq, x)\ny_value = ans[0]\nprint(floor(y_value))"
  },
  {
    "example_id": 28,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "print(math.log(27, 3))"
  },
  {
    "example_id": 29,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "154.44444444444446"
    ],
    "annotated_answers": [
      "194.0"
    ],
    "solution": "n = symbols('n')\na1 = 2\na9 = 30\nr = (a9-a1)/9\na50 = a1 + 49*r\nprint(a50)"
  },
  {
    "example_id": 30,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "208.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "from sympy import diag\nfrom sympy.abc import a, b, c, d\nfrom sympy.geometry import Point, Polygon\nfrom sympy.plotting import plot\n\ntriangles = [\n    Polygon(Point(0, 0), Point(2, 0), Point(1, 1)),\n    Polygon(Point(2, 0), Point(4, 0), Point(3, 1)),\n    Polygon(Point(4, 0), Point(6, 0), Point(5, 1)),\n    Polygon(Point(6, 0), Point(8, 0), Point(7, 1)),\n    Polygon(Point(0, 2), Point(2, 2), Point(1, 3)),\n    Polygon(Point(2, 2), Point(4, 2), Point(3, 3)),\n    Polygon(Point(4, 2), Point(6, 2), Point(5, 3)),\n    Polygon(Point(6, 2), Point(8, 2), Point(7, 3)),\n]\n\nsquares = [\n    Polygon(Point(0, 0), Point(2, 0), Point(2, 2), Point(0, 2)),\n    Polygon(Point(2, 0), Point(4, 0), Point(4, 2), Point(2, 2)),\n    Polygon(Point(4, 0), Point(6, 0), Point(6, 2), Point(4, 2)),\n    Polygon(Point(6, 0), Point(8, 0), Point(8, 2), Point(6, 2)),\n]\n\nsum = 0\nfor triangle in triangles:\n    for point in triangle.vertices:\n        sum += point[0] + point[1]\n\nfor square in squares:\n    for point in square.vertices:\n        sum += point[0] + point[1]\n\nprint(sum)"
  },
  {
    "example_id": 31,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-312.50000000000017",
      "-541.2658773652738"
    ],
    "annotated_answers": [
      "625.0"
    ],
    "solution": "# Evaluate (-125)^(4/3)\nprint((-125)**(4/3))"
  },
  {
    "example_id": 32,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "24.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "x = symbols('x')\nf = (1/(abs(x**2+3*x-4)+abs(x**2+9*x+20)))\nprint(f.subs(x, 0))"
  },
  {
    "example_id": 33,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "-5.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "p1 = Point(7, -6)\np2 = Point(-3, -4)\nc = (p1 + p2)/2\nprint(c)"
  },
  {
    "example_id": 34,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "a = symbols('a')\nf = 1/(1-a)\nf_inv = a*(1-a)\nprint(f_inv*a*f)"
  },
  {
    "example_id": 35,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "2.0",
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\nsolution = solve((x+1)*(x+2) - x-3, x)\nprint(solution)"
  },
  {
    "example_id": 36,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "33.0",
      "4.0",
      "7.0",
      "4.0",
      "1.0",
      "7.0",
      "4.0",
      "33.0",
      "4.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "# find roots of the quadratic equation\nroots = solve(2*a**2 - 7*a + 2)\n\n# find the sum\nsum = 1/((roots[0] - 1) + 1) + 1/((roots[1] - 1) + 1)\n\n# print the sum\nprint(sum)"
  },
  {
    "example_id": 37,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\np1 = Point(a, b)\np2 = Point(c, d)\nprint(p1 - p2)"
  },
  {
    "example_id": 38,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-70.0",
      "13.0",
      "137.0",
      "13.0"
    ],
    "annotated_answers": [
      "-55.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\neq = (a*(-1)**2+b*(-1)+c) + (a*0**2+b*0+c) + (a*5**2+b*5+c)\nsolution = solve(eq, [a, b, c])\na_value = solution[0][0]\nb_value = solution[0][1]\nc_value = solution[0][2]\nprint(100*a_value+10*b_value+c_value)"
  },
  {
    "example_id": 39,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "839808.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq = 12**2*18**3 - 2**x*3**y\nsolution = solve(eq, [x, y])\nprint(solution)"
  },
  {
    "example_id": 40,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "119.0"
    ],
    "annotated_answers": [
      "103.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\n\nangle1 = 129\n\n# angles in degrees\nangles = [angle1, angle1 - 10, angle1 - 20, angle1 - 30]\n\n# coordinates of the vertices of a quadrilateral\ncoordinates = [(0, 0), (1, 0), (1, 1), (0, 1)]\n\n# angles of the quadrilateral\nangles_quadrilateral = [129, 119, 109, 99]\n\n# angles in degrees\nangles_in_degrees = [129, 119, 109, 99]\n\n# find the measure of the second largest angle\nsecond_largest_angle = angles_quadrilateral[1]\nprint(second_largest_angle)"
  },
  {
    "example_id": 41,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.0",
      "12.0",
      "12.0",
      "12.0",
      "12.0",
      "12.0",
      "12.0",
      "12.0",
      "12.0",
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "from sympy import sqrt\n\ndef find_value(n):\n    if n == 1:\n        return sqrt(12)\n    else:\n        return sqrt(12 - find_value(n-1))\n\nprint(find_value(10))"
  },
  {
    "example_id": 42,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0"
    ],
    "annotated_answers": [
      "575.0"
    ],
    "solution": "a, b, c, d = symbols('a, b, c, d')\nn = (a*c*d)/(b*c*d)\nf = diag(a,b,c,d)\np = f.subs(n, 1001)\nprint(p)"
  },
  {
    "example_id": 43,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = 1024\ny = 0.125\nz = 2**12\nresult = (x/y)/z\nprint(result)"
  },
  {
    "example_id": 44,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "# Initial ratio of blue to yellow marbles\nr = 4/3\n\n# Number of blue marbles in the bag\nb_marbles = 5\n\n# Number of yellow marbles in the bag\ny_marbles = 3\n\n# Total number of marbles\ntotal = b_marbles + y_marbles\n\n# Number of blue marbles in the bag before adding more\nblue = floor(total*r)\n\n# Number of blue marbles after adding more\nnew_blue = b_marbles + blue\n\n# Number of yellow marbles after removing some\nnew_yellow = y_marbles - 3\n\n# New ratio of blue to yellow marbles\nnew_r = new_blue/new_yellow\n\n# Number of blue marbles in the bag after adding more\nprint('Number of blue marbles in the bag after adding more:', new_blue)\n\n# Number of yellow marbles in the bag after removing some\nprint('Number of yellow marbles in the bag after removing some:', new_yellow)\n\n# New ratio of blue to yellow marbles\nprint('New ratio of blue to yellow marbles:', new_r)"
  },
  {
    "example_id": 45,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-5.0",
      "2.0",
      "42.0",
      "2.0",
      "336.0",
      "924.0",
      "12.0",
      "23.0",
      "2.0",
      "-5.0",
      "2.0",
      "42.0",
      "2.0",
      "336.0",
      "924.0",
      "12.0",
      "23.0",
      "2.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "from sympy import sqrt, symbols, solve\n\nx, y = symbols('x y')\n\n# define the endpoints of the segment\np1 = (1, 2)\np2 = (-4, -10)\n\n# define the distance formula\nd = sqrt((x - p1[0])**2 + (y - p1[1])**2) + sqrt((x - p2[0])**2 + (y - p2[1])**2)\n\n# solve for x and y\nsolution = solve([d - 1], [x, y])\n\n# print the solution\nprint(solution)"
  },
  {
    "example_id": 46,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "16.0"
    ],
    "annotated_answers": [
      "-10.0"
    ],
    "solution": "x = 6 + 1\ny = 8 + 1\nprint(x + y)"
  },
  {
    "example_id": 47,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\neq = 4*x**2 + 2*x - 1\na, b, c = eq.as_poly().coeffs()\nprint(a+b+c)"
  },
  {
    "example_id": 48,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1996.0"
    ],
    "annotated_answers": [
      "286.0"
    ],
    "solution": "n = 2008 - 13 + 1\nprint(n)"
  },
  {
    "example_id": 49,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "28.0"
    ],
    "solution": "print(14 - 15)"
  },
  {
    "example_id": 50,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2881.0",
      "405.0",
      "100828.0",
      "10935.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "5.0",
      "13269.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\nb = symbols('b')\neq1 = 3/x + x/3 - b\neq2 = x**2 + 3*x + 3 - b\nsolution = solve([eq1, eq2], [x, b])\nx_value = solution[0][0]\nb_value = solution[0][1]\nprint(x_value)\nprint(b_value)"
  },
  {
    "example_id": 51,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5000.0"
    ],
    "annotated_answers": [
      "5000.0"
    ],
    "solution": "print(255**2 - 245**2)"
  },
  {
    "example_id": 52,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x1, y1 = 2, 3\nx2, y2 = 4, 3\nb = (y2 - y1)/(x2 - x1)\nc = y1 - b*x1\nprint(c)"
  },
  {
    "example_id": 53,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x = symbols('x')\neq = 7**(log(49, x)) - 49\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 54,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "b = symbols('b')\nc = symbols('c')\neq1 = 125**b - 5\neq2 = 27**b - c\nsolution = solve([eq1, eq2], [b, c])\nb_value, c_value = solution[0]\nprint(c_value)"
  },
  {
    "example_id": 55,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-6.0",
      "2.0",
      "48.0",
      "108.0",
      "2.0",
      "2.0",
      "-6.0",
      "2.0",
      "48.0",
      "108.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x, y = symbols('x y')\nexpr = 2*x**2 + 3*y**2 + 8*x - 24*y + 62\nsolution = solve(expr, x)\nprint(solution)"
  },
  {
    "example_id": 56,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "28.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "# define variables\nFebruary = 28\nfour = 4\nthree = 3\nmiles = 4\n\n# define equation\nmiles = four/three\n\n# define fewest number of miles\nfewest_miles = miles * floor(February/miles)\n\nprint(fewest_miles)"
  },
  {
    "example_id": 57,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "from sympy import symbols, solve, Eq\nfrom sympy.abc import x\n\ns = symbols('s')\na, b = solve(Eq(x**2 + s*x - 0.5, 0), x)\n\nsum = 0\nfor i in range(1, 10000):\n    if a.is_integer and b.is_integer:\n        sum += s\n    s += 1\nprint(sum)"
  },
  {
    "example_id": 58,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq1 = a - 7*b + 8*c - 4\neq2 = 8*a + 4*b - c - 7\nsolve([eq1, eq2], [a, b, c])\na2_b2_c2 = a**2 - b**2 + c**2\nprint(a2_b2_c2)"
  },
  {
    "example_id": 59,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "15.0",
      "6.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\neq1 = a*b - 3*5\neq2 = b*c - 15*6\neq3 = c*d - 6\nsolution = solve([eq1, eq2, eq3], [a, b, c, d])\nprint(solution)"
  },
  {
    "example_id": 60,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "216.0"
    ],
    "solution": "r1 = 3 * 3\nh1 = 24\nr2 = 3\nh2 = 0\nV1 = pi * r1**2 * h1 / 3\nV2 = pi * r2**2 * h2 / 3\nprint(h2)"
  },
  {
    "example_id": 61,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "x, y = symbols('x, y')\neq = y**2 - 3*x*y + 8\nprint(eq.subs([(x, 3), (y, 9)]))"
  },
  {
    "example_id": 62,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "299.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": ""
  },
  {
    "example_id": 63,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "165.0"
    ],
    "annotated_answers": [
      "165.0"
    ],
    "solution": "three_multiples = [3, 6, 9, 12, 15, 18, 21, 24, 27, 30]\nprint(sum(three_multiples))"
  },
  {
    "example_id": 64,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4005.0"
    ],
    "annotated_answers": [
      "4005.0"
    ],
    "solution": "n = 2003\nprint(n*2-1)"
  },
  {
    "example_id": 65,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "# Define the function\nf = 4*x**7 + x**5 + 3*x**2 - 2*x + c\n\n# Find the value of c that makes the function equal to zero\nc = solve(f.subs(x, -1), c)\n\n# Print the value of c\nprint(c)"
  },
  {
    "example_id": 66,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.5"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "pints_per_mile = 1.5\nmiles = 3\npints = pints_per_mile * miles\n\nmore_miles = 10\nmore_pints = pints_per_mile * more_miles\n\nprint(more_pints - pints)"
  },
  {
    "example_id": 67,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a, b = symbols('a b')\neq = a*b - a + b\nsolution = solve(eq, a, b)\na_value = solution[0][0]\nb_value = solution[0][1]\nprint(a_value)\nprint(b_value)"
  },
  {
    "example_id": 68,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-15.0",
      "8.0"
    ],
    "annotated_answers": [
      "3.5"
    ],
    "solution": "t = symbols('t')\neq = -16*t**2 + 26*t + 105\nsolution = solve(eq, t)\nt_value = solution[0]\nprint(t_value)"
  },
  {
    "example_id": 69,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "-1.0",
      "4006.0",
      "8011.0",
      "4006.0",
      "1.0",
      "-1.0",
      "4006.0",
      "8011.0",
      "4006.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "x = symbols('x')\neq = (2003*x + 1 + 1/x)\nroots = solve(eq, x)\nsum_reciprocals = sum([1/root for root in roots])\nprint(sum_reciprocals)"
  },
  {
    "example_id": 70,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "5.4"
    ],
    "solution": "x = 3"
  },
  {
    "example_id": 71,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "28.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "n = (55 + 1)/2\nprint(int(n))"
  },
  {
    "example_id": 72,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "4.0",
      "233.0",
      "4.0"
    ],
    "annotated_answers": [
      "0.5"
    ],
    "solution": "x = symbols('x')\neq = (2*x + 5)*(x - 3) - 14\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 73,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-5.0",
      "3.0",
      "15.0",
      "2.0",
      "62.0",
      "56.0",
      "2.0",
      "3.0",
      "4.0"
    ],
    "annotated_answers": [
      "-5.0"
    ],
    "solution": "x = symbols('x')\na = symbols('a')\neq = (x**2 - 3*x + 4)*(2*x**2 + a*x + 7) - 2*x**4 + 11*x**3 - 30*x**2 - 41*x + 28\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 74,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "6.0",
      "2.0",
      "2.0",
      "6.0",
      "2.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "# Define the equation\neq = 2*x**2 + 4*x - 1\n\n# Find the solutions\nsolutions = solve(eq)\n\n# Find the sum of the squares\nsum_of_squares = 0\nfor solution in solutions:\n    sum_of_squares += solution**2\nprint(sum_of_squares)"
  },
  {
    "example_id": 75,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "13.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "from math import sqrt\n\ndef distance(p1, p2):\n    x1, y1 = p1\n    x2, y2 = p2\n    return sqrt((x2-x1)**2 + (y2-y1)**2)\n\ndef line_length(p1, p2):\n    return distance(p1, p2)\n\nprint(line_length((-3, 7), (2, -5)))"
  },
  {
    "example_id": 76,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.24761904761904763",
      "0.09523809523809523",
      "0.09523809523809523"
    ],
    "annotated_answers": [
      "40.0"
    ],
    "solution": "vino_cost = 26 / 105\nwells_cost = 10 / 105\nted_cost = 10 / 105\nprint(vino_cost)\nprint(wells_cost)\nprint(ted_cost)"
  },
  {
    "example_id": 77,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0",
      "10.0"
    ],
    "annotated_answers": [
      "73.5"
    ],
    "solution": "j = symbols('j')\nk = symbols('k')\n\n# solve for the value of j when k is 56\nsolution_1 = solve(j - k, k)\nj_value_1 = solution_1[0]\n\n# solve for the value of k when j is 42\nsolution_2 = solve(j - 42, j)\nk_value_2 = solution_2[0]\n\n# solve for the value of j when k is 32\nsolution_3 = solve(j - k, k)\nj_value_3 = solution_3[0]\n\n# round to nearest tenth\nj_value_3_round = floor(j_value_3 * 10) / 10\n\nprint(j_value_3_round)"
  },
  {
    "example_id": 78,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "43.0"
    ],
    "annotated_answers": [
      "43.0"
    ],
    "solution": "x = 5**(2) + 18\nprint(x)"
  },
  {
    "example_id": 79,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2011.0"
    ],
    "annotated_answers": [
      "2015.0"
    ],
    "solution": "b = symbols('b')\n\n# Find the first solution\nx = (b**2+b+1)/2\n\n# Find the second solution\ny = (b**2-b+1)/2\n\n# Find the third solution\nz = (b**2-2*b+1)/2\n\n# Find the fourth solution\nw = (b**2-3*b+1)/2\n\n# Check if the solutions are positive integers\nif (floor(x) == x) and (floor(y) == y) and (floor(z) == z) and (floor(w) == w):\n    print(\"The smallest integer b>2011 is\", b)\nelse:\n    print(\"No integer b>2011 satisfies the equation.\")"
  },
  {
    "example_id": 80,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "350.0"
    ],
    "annotated_answers": [
      "350.0"
    ],
    "solution": "print(113+276-13-26)"
  },
  {
    "example_id": 81,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "625.0"
    ],
    "annotated_answers": [
      "400.0"
    ],
    "solution": "width = 100 / 4\narea = width * width\nprint(area)"
  },
  {
    "example_id": 82,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = (2**x - 2)*(5*2**x + 10) - 3*4**x + 12\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 83,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0",
      "1024.0",
      "4.0",
      "5.0",
      "2.0",
      "1024.0",
      "2.0",
      "5.0",
      "2.0",
      "1024.0",
      "2.0",
      "5.0",
      "2.0",
      "1024.0",
      "4.0",
      "5.0",
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "# Define variables\nx = symbols('x')\n\n# Define equation\neq = (2**(x+1))**3 * 4**x - 8192\n\n# Solve for x\nsolution = solve(eq, x)\n\n# Print solution\nprint(solution)"
  },
  {
    "example_id": 84,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "81.0",
      "2.0",
      "81.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "a, b = symbols('a, b')\nx = symbols('x')\neq1 = a**2 + 2*a*b + b**2 - 2*x\neq2 = 2*x - 81\nsol1 = solve(eq1, a)\nsol2 = solve(eq2, x)\nsol = [sol1, sol2]\nprint(sol)\n\nsum_x = 0\nfor i in sol:\n    for j in i:\n        sum_x += j\nprint(sum_x)"
  },
  {
    "example_id": 85,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": ""
  },
  {
    "example_id": 86,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "68.0"
    ],
    "annotated_answers": [
      "-15.0"
    ],
    "solution": "x = symbols('x')\neq1 = x + 7 - x\neq2 = x - 7\neq = eq1 & eq2\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 87,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "import math\nf = lambda n: math.floor(n) if n >= 4 else math.ceil(n)\nprint(f(math.pi/3) + f(math.sqrt(45)) + f(8**(2/3)))"
  },
  {
    "example_id": 88,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "42.0",
      "48.0",
      "5.0",
      "28.0",
      "5.0"
    ],
    "annotated_answers": [
      "38.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = 5*x - 2*y - 7\neq2 = 3*x + y - 2\nsolution1 = solve(eq1, x)\nsolution2 = solve(eq2, y)\nx_value = solution1[0]\ny_value = solution2[0]\nprint(24*x_value - 14*y_value)"
  },
  {
    "example_id": 89,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\ny = (x-3)/(x**2+7*x-30)\nvert_asymptotes = solve(y.as_leading_term(x), x)\nvert_asymptotes_count = len(vert_asymptotes)\nprint(vert_asymptotes_count)"
  },
  {
    "example_id": 90,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "75.0"
    ],
    "annotated_answers": [
      "75.0"
    ],
    "solution": "# Calculate the volume of water needed to hold the number of fish.\nwater_needed = 600 / 8\nprint(water_needed)"
  },
  {
    "example_id": 91,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "print(531**2 - 2*531*530 + 530**2)"
  },
  {
    "example_id": 92,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "0.0",
      "1.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x = symbols('x')\nsolution = solve(x**(-1) > x, x)\nprint(solution)"
  },
  {
    "example_id": 93,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "11.0",
      "2.0",
      "1.0",
      "-7.0",
      "2.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "# Define the variables\nx = symbols('x')\ny = symbols('y')\nz = symbols('z')\n\n# Define the equations\neq1 = x + y + z - 3\neq2 = x + y - z - 10\neq3 = x - y + z - 1\n\n# Find the solution\nsolution = solve([eq1, eq2, eq3], [x, y, z])\n\n# Print the solution\nprint(solution)"
  },
  {
    "example_id": 94,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.6"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "# Find the ratio of the two numbers\nratio_1 = 3 / 5\nratio_2 = 2 / 7\n\n# Find the lesser and greater of the two numbers\nlesser = min(ratio_1, ratio_2)\ngreater = max(ratio_1, ratio_2)\n\n# Subtract 4 from the lesser number\nlesser_minus_4 = lesser - 4\n\n# Add 8 to the greater number\ngreater_plus_8 = greater + 8\n\n# Find the new ratio\nnew_ratio = greater_plus_8 / lesser_minus_4\n\n# Print the greater number before 8 is added to it\nprint(greater)"
  },
  {
    "example_id": 95,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "25.0",
      "2.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "from sympy import symbols, sqrt\n\nx = symbols('x')\nh = sqrt(25-x**2) + sqrt(-(x-2))\nprint(h)"
  },
  {
    "example_id": 96,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0",
      "2.0",
      "4.0",
      "4.0",
      "2.0",
      "4.0",
      "1.0",
      "2.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "187.5"
    ],
    "solution": "# Declare variables\nx = symbols('x')\ny = symbols('y')\nz = symbols('z')\n\n# Define the problem\nproblem = (125 * x**2) + (125 * x) + (125 * y**2) + (125 * y) + (125 * z**2) + (125 * z)\n\n# Solve for a\nsolution = solve(problem, x)\n\n# Extract the answer\nanswer = solution[0]\n\n# Print the answer\nprint(answer)"
  },
  {
    "example_id": 97,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "k = symbols('k')\neq = (3**k)**6 - 3**6\nsolution = solve(eq, k)\nk_value = solution[0]\nprint(k_value)"
  },
  {
    "example_id": 98,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "print(2 * (-2)**2 + 3 * (-2) + 4)"
  },
  {
    "example_id": 99,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "125.0",
      "5.0",
      "5.0"
    ],
    "annotated_answers": [
      "243.0"
    ],
    "solution": "# 2^a = 32\neq1 = 2**a - 32\n\n# a^b = 125\neq2 = a**b - 125\n\n# solve for b\nb = solve(eq2, b)[0]\n\n# solve for a\na = solve(eq1, a)[0]\n\n# solve for b^a\nb_a = b**a\n\nprint(b_a)"
  },
  {
    "example_id": 100,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0",
      "2.0",
      "9.0",
      "2.0",
      "9.0",
      "2.0",
      "2.0",
      "9.0",
      "7.0",
      "-7.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "import math\n\ndef revenue(p):\n    return 120 - 3*p\n\ndef derivative(p):\n    return -3\n\np_star = math.optimize(revenue, derivative, 0, 40)\nprint(p_star)"
  },
  {
    "example_id": 101,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\na = symbols('a')\neq = a*x**2 + 8*x + 4\nsolution = solve(eq, x)\nprint(solution[0])"
  },
  {
    "example_id": 102,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-300.0",
      "30.0",
      "3310.0",
      "1.0",
      "3.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "r = symbols('r')\nA = 20000\nn = 3\nS = 66200\n\ndeposit = A * (1 + r/n)**n\n\neq = deposit - S\n\nsolution = solve(eq, r)\n\nr_value = solution[0]\n\nprint(r_value*100)"
  },
  {
    "example_id": 103,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "80.0"
    ],
    "annotated_answers": [
      "80.0"
    ],
    "solution": "# 34 - 10 = 24\n# 20 - 9 = 11\n# 55 - 10 = 45\nprint(24 + 11 + 45)"
  },
  {
    "example_id": 104,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "700.0"
    ],
    "annotated_answers": [
      "700.0"
    ],
    "solution": "print(32**2 - 18**2)"
  },
  {
    "example_id": 105,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.25",
      "4.0",
      "4.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x = (3/2)**2\nprint(x)\ny = floor(x)**2\nprint(y)\nz = floor(x)**2\nprint(z)"
  },
  {
    "example_id": 106,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "16.0",
      "15.0",
      "15.0",
      "16.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "for i in range(1, 20):\n    for j in range(1, 20):\n        if i * j - (i + j) == 39:\n            print(i + j)"
  },
  {
    "example_id": 107,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a = 6\nb = symbols('b')\nc = 4\nd = 3\neq = a**b + c*d - 48\nsolution = solve(eq, b)\nb_value = solution[0]\nprint(b_value)"
  },
  {
    "example_id": 108,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.0",
      "0.0",
      "0.0",
      "0.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "n = symbols('n')\nf = diag(n**3 + 2*n - 1, n - 1)\nf_sum = f.subs(n, 0) + f.subs(n, 1) + f.subs(n, 2)\nprint(f_sum)"
  },
  {
    "example_id": 109,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "# define f(x)\nf = lambda x: -x**2 - 1 if x < 0 else 2 if 0 <= x < 4 else sqrt(x)\n\n# evaluate f(pi)\nprint(f(pi))"
  },
  {
    "example_id": 110,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "x1, x2, x3 = symbols('x1 x2 x3')\np1 = Point((x1, 0))\np2 = Point((x2, 0))\np3 = Point((x3, 0))\npolygon = Polygon(p1, p2, p3)\nmidpoints = [polygon.midpoint]\nx_midpoints = [p.x for p in midpoints]\nx_midpoints.sort()\nx_sum = sum(x_midpoints)\nprint(x_sum)\n\n\nx_midpoints.sort()\nx_sum = sum(x_midpoints)\nS = x_sum\nS2 = S**2\nprint(S2)"
  },
  {
    "example_id": 111,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-33.0"
    ],
    "annotated_answers": [
      "27.0"
    ],
    "solution": "# x = symbols('x')\nx = symbols('x')\n# eq = x**2 - 6*x + 2 - 29\neq = x**2 - 6*x + 2 - 29\nsolution = solve(eq)\na, b = solution\nprint(2*a - 3*b)"
  },
  {
    "example_id": 112,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "4.0",
      "6.0",
      "8.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "for a in range(1, 10):\n    if (a * 5) % 2 == 0:\n        print(a)"
  },
  {
    "example_id": 113,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-3.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "x = symbols('x')\neq = (5 + x)/(8 + x) - 0.4\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 114,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "-6.0"
    ],
    "solution": "x, y = symbols('x y')\ng = y**2 + 2*y + 1\ng_solution = solve(g, y)\ng_value = g_solution[0]\ng_g_solution = g.subs(y, g_value)\ng_g_value = g_g_solution.subs(y, g_value)\nprint(g_g_value)"
  },
  {
    "example_id": 115,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "7.0",
      "4.0",
      "2.0",
      "27.0",
      "165.0",
      "7.0",
      "5.0",
      "7.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "c = symbols('c')\nf = (2*x**2 + x + 5)/(x**2 + 4*x + c)\ndomain = solve(f.diff(x), x)\nmin_value = floor(domain[0])\nprint(min_value)"
  },
  {
    "example_id": 116,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "c = -1"
  },
  {
    "example_id": 117,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\neq = (5*x)**(1/2)*(10*x)**(1/2)*(18*x)**(1/2) - 30\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 118,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "# Define function\nf = lambda x: x**2 + 12\n\n# Define value of m\nm = 3\n\n# Check if f(3m) = 3(f(m))\nif f(3*m) == 3*f(m):\n    print('The value of m is', m)\nelse:\n    print('The value of m is not', m)"
  },
  {
    "example_id": 119,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "from sympy import solve, Symbol\n\nx = Symbol('x')\neq = 2*x*(x-10) + 50\nsolution = solve(eq)\nprint(solution)"
  },
  {
    "example_id": 120,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\neq = 2**8 - 4**x\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 121,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "34.0"
    ],
    "annotated_answers": [
      "34.0"
    ],
    "solution": "y = 8 - 5 * (-2) + 4 * (-2) ** 2\nprint(y)"
  },
  {
    "example_id": 122,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "20.0"
    ],
    "solution": ""
  },
  {
    "example_id": 123,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "A = (9, 1)\nB = (19, k)\nC = (7, 0)\n\n# Line goes through A and B\nAB = (B[0] - A[0], B[1] - A[1])\n\n# Line goes through A and C\nAC = (C[0] - A[0], C[1] - A[1])\n\n# Line goes through B and C\nBC = (C[0] - B[0], C[1] - B[1])\n\n# Dot product of AB and AC\ndot_product_AB_AC = AB[0]*AC[0] + AB[1]*AC[1]\n\n# Dot product of AB and BC\ndot_product_AB_BC = AB[0]*BC[0] + AB[1]*BC[1]\n\n# Dot product of AC and BC\ndot_product_AC_BC = AC[0]*BC[0] + AC[1]*BC[1]\n\n# Cross product of AB and AC\ncross_product_AB_AC = AB[0]*AC[1] - AB[1]*AC[0]\n\n# Cross product of AB and BC\ncross_product_AB_BC = AB[0]*BC[1] - AB[1]*BC[0]\n\n# Cross product of AC and BC\ncross_product_AC_BC = AC[0]*BC[1] - AC[1]*BC[0]\n\n# Area of triangle ABC\narea_ABC = (cross_product_AB_AC * cross_product_AB_BC) / 2\n\n# Area of triangle BCA\narea_BCA = (cross_product_AB_AC * cross_product_AC_BC) / 2\n\n# Area of triangle CBA\narea_CBA = (cross_product_AB_BC * cross_product_AC_BC) / 2\n\n# Value of k\nk = area_ABC / area_BCA\n\nprint(k)"
  },
  {
    "example_id": 124,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "133822.55776"
    ],
    "annotated_answers": [
      "74726.0"
    ],
    "solution": "a = symbols('a')\neq = a - 100000 * (1+0.06)**5\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 125,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "# from sympy import symbols\nx = symbols('x')\n# from sympy import solve\nsolution = solve(x**2 - 5*x - 36, x)\n# from sympy import floor\nprint(floor(solution[0]))"
  },
  {
    "example_id": 126,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "print(math.log(1, 2))"
  },
  {
    "example_id": 127,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "24.0"
    ],
    "annotated_answers": [
      "24.0"
    ],
    "solution": "N = symbols('N')\neq = (2**3)**(2**3) - 2**N\nsolution = solve(eq, N)\nN_value = solution[0]\nprint(N_value)"
  },
  {
    "example_id": 128,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.21213203435596426",
      "169.7056274847714",
      "800.0",
      "834.2842712474619"
    ],
    "annotated_answers": [
      "93.0"
    ],
    "solution": "from math import sqrt\nA = 6\nB = 245 + 3*125 + 4*45\nC = sqrt(B)\nprint(A/C)\nprint(A*C)\nprint(B)\nprint(A+B+C)"
  },
  {
    "example_id": 129,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "14.0"
    ],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "u = symbols('u')\neq = (u + 4)*(u - 1) - (u - 3)*(u + 6)\nprint(eq.simplify())"
  },
  {
    "example_id": 130,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "13.5"
    ],
    "annotated_answers": [
      "13.5"
    ],
    "solution": "a = 18*0.25\nb = 18*-0.5\nprint(abs(a-b))"
  },
  {
    "example_id": 131,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-3.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "from math import sin, cos, sqrt\n\ndef f(x):\n    return (4 - x) / 2\n\ndef g(x):\n    return 2 * x - 4\n\nprint(f(g(1)) * g(f(1)))"
  },
  {
    "example_id": 132,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "64.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "a = 20\nb = 44\nsum_ab = a + b\nprint(sum_ab)"
  },
  {
    "example_id": 133,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "2.0",
      "1.0",
      "3.0",
      "-2.0",
      "2.0",
      "1.0",
      "3.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "import math\n\na = 2\nb = 3\nc = 4\nd = 5\n\nm = (a + c) / 2\nn = (b + d) / 2\n\nm_prime = (m + c) / 2\nn_prime = (n + d) / 2\n\ndistance = math.sqrt( (m_prime - m)**2 + (n_prime - n)**2 )\n\nprint(distance)"
  },
  {
    "example_id": 134,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "# solve for n\nn = symbols('n')\n\n# solve for m\nm = 2*n\n\n# solve for equation\neq = 70 + m + n - 20 - 80\nsolution = solve(eq, n)\nn_value = solution[0]\nprint(n_value)"
  },
  {
    "example_id": 135,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.2510360479593796",
      "78.0"
    ],
    "annotated_answers": [
      "125.0"
    ],
    "solution": "x = (4/(sqrt(5)+1)*(sqrt(5)+1)*(sqrt(5)+1)*(sqrt(5)+1))\neq = (x+1)**48\nprint(eq)"
  },
  {
    "example_id": 136,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "f = lambda x: x + 1\ng = lambda x: x**2 + 3\nprint(f(g(2)))"
  },
  {
    "example_id": 137,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-3.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "print(ceil(3.6**2) - ceil(3.6)**2)"
  },
  {
    "example_id": 138,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "121.0"
    ],
    "annotated_answers": [
      "121.0"
    ],
    "solution": "n = symbols('n')\neq = (400)**0.5 - (81)**0.5 - n**0.5\nsolution = solve(eq, n)\nn_value = solution[0]\nprint(n_value)"
  },
  {
    "example_id": 139,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "49.0",
      "2.0",
      "14.0",
      "19.0",
      "7.0",
      "19.0",
      "7.0",
      "2.0"
    ],
    "annotated_answers": [
      "361.0"
    ],
    "solution": "x = symbols('x')\neq = 49*x**2 + 14*x*(19-7*x) + (19-7*x)**2\nprint(eq)"
  },
  {
    "example_id": 140,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "5.0",
      "2.0",
      "-5.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\neq1 = 5*a + 2*b - 0\neq2 = a*b - 10\nsol = solve([eq1, eq2], [a, b])\nprint(sol)"
  },
  {
    "example_id": 141,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "4.0",
      "2.0",
      "2.0",
      "2.0",
      "4.0",
      "25.0",
      "2.0",
      "4.0",
      "2.0",
      "2.0",
      "2.0",
      "4.0",
      "25.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "# Define variables\na, b, c, d = symbols('a b c d')\n\n# Define equation\neq = (a**2 + b**2)**2 + (c**2 + d**2)**2 - 25\n\n# Solve for a, b, c, d\nsolution = solve([eq], [a, b, c, d])\n\n# Extract solutions\na_value = solution[0][0]\nb_value = solution[0][1]\nc_value = solution[0][2]\nd_value = solution[0][3]\n\n# Print solutions\nprint(f'a = {a_value}')\nprint(f'b = {b_value}')\nprint(f'c = {c_value}')\nprint(f'd = {d_value}')\n\n# Print total days\nprint(floor(a_value + b_value + c_value + d_value))"
  },
  {
    "example_id": 142,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "5.0",
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 - x - 1\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 143,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.464088397790055"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "a = 6 + 1/(2 + 1/(6 + 1/(2 + 1/6)))\nb = 1\nc = 1\nprint(a+b+c)"
  },
  {
    "example_id": 144,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "3.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "3.0",
      "387200.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "180.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\nd = symbols('d')\n\neq = (a + b) * (b + c) * (c + d) * (d + a) - 160 * 180 - 180 * 200 - 200 * 160\nsolution = solve(eq, a, b, c, d)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 145,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "11.0",
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = 3*y - x\neq2 = 2*x + 5*y - 11\nsol = solve([eq1, eq2], [x, y])\nA = Point(sol[0][x], sol[0][y])\nprint(A.x + A.y)"
  },
  {
    "example_id": 146,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "120.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "from sympy import sqrt\n\nA = 1 + sqrt(2)\nB = 2 + sqrt(3)\n\na = A/B\nprint(a)"
  },
  {
    "example_id": 147,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "a, b = symbols('a b')\np = x**2+a*x+b\neq1 = p.subs(x, 2*a)\neq2 = p.subs(x, b)\nsolution = solve([eq1, eq2], [a, b])\na_value, b_value = solution[0]\nprint(a_value + b_value)"
  },
  {
    "example_id": 148,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.29411764705882354"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": ""
  },
  {
    "example_id": 149,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "1.0",
      "1.0",
      "-1.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "from sympy import I, S\nz = symbols('z')\nf = z**2 if not z.is_real else z + 2\nf_values = [f.subs(z, I), f.subs(z, S(1)), f.subs(z, -S(1)), f.subs(z, -I)]\nprint(f_values)"
  },
  {
    "example_id": 150,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-114.0"
    ],
    "annotated_answers": [
      "-114.0"
    ],
    "solution": "sum = 0\nfor x in range(-30, 27):\n    sum += x\nprint(sum)"
  },
  {
    "example_id": 151,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "3.0",
      "8.0",
      "8.0",
      "8.0",
      "27.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "from sympy import symbols, solve\n\na, b, c, d, e = symbols('a b c d e')\n\neq = (8*a + 2*b + 3*c + d + e) - 216\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 152,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "1.0",
      "3.0",
      "2.0",
      "2.0",
      "225.0",
      "2.0"
    ],
    "annotated_answers": [
      "64.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = (2*x + 3*y)**2 - 4\neq2 = x*y + 5\nsol1 = solve(eq1, x)\nsol2 = solve(eq2, y)\nprint(4*sol1[0]**2 + 9*sol2[0]**2)"
  },
  {
    "example_id": 153,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x = symbols('x')\nexpr = (x-3)/(x**2-10*x+16)\nsolution = solve(expr, x)\nprint(solution)"
  },
  {
    "example_id": 154,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\neq = (x+1)/(x**2-2*x+1)\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 155,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "36.0"
    ],
    "annotated_answers": [
      "26.0"
    ],
    "solution": "x = symbols('x')\nh = x*(x-2.5)*(x-6.5)*(x-7.5)/16 + x\n\nsolution = solve(h - x, x)\n\nsum = 0\nfor i in range(1, floor(8) + 1):\n    sum += i\nprint(sum)"
  },
  {
    "example_id": 156,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "1.0",
      "-1.0",
      "2.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "x1 = 8\ny1 = 8\nx2 = x1/2\ny2 = y1/4\n\np1 = Point(x1, y1)\np2 = Point(x2, y2)\n\nf = lambda x: 1/4*x\n\np3 = Point(f(x2), f(y2))\n\np3 = p3.scale(1, -1)\n\nprint(p3)"
  },
  {
    "example_id": 157,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "f = lambda x: 5*x+2\ng = lambda x: 3*x**2-4*x\nprint(f(f(1))-g(g(2)))"
  },
  {
    "example_id": 158,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0",
      "3.0",
      "3.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq1 = (x + (-16) + 6)/3\neq2 = y**3\neq3 = eq1 + eq2\nsolution = solve(eq3, x, y)\nprint(solution)"
  },
  {
    "example_id": 159,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-11.0"
    ],
    "annotated_answers": [
      "-11.0"
    ],
    "solution": "x = symbols('x')\neq = (x-9)/(x+1) - 2\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 160,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3363.0"
    ],
    "annotated_answers": [
      "1710.0"
    ],
    "solution": "n = symbols('n')\nfirst = 28\nlast = 86\nsum = (last - first + 1) * (first + last) / 2\nprint(sum)"
  },
  {
    "example_id": 161,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a = symbols('a')\nf = a*x**2 + 2*a*x + 2*a\nsolution = solve(f, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 162,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "2.0"
    ],
    "solution": ""
  },
  {
    "example_id": 163,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "3.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\nm = (3*x**2 - 4*x + 1)/(x - 1)\nsolution = solve(m, x)\nprint(solution)"
  },
  {
    "example_id": 164,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "4.0",
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "from sympy import symbols, Poly\n\nx = symbols('x')\np = Poly(3*(x - 4) + 2*(x**2 - x + 7) - 5*(x - 1), x)\nprint(p)"
  },
  {
    "example_id": 165,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "64.0"
    ],
    "annotated_answers": [
      "64.0"
    ],
    "solution": "y = 3\nprint((1+y)**y)"
  },
  {
    "example_id": 166,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "R = 20\nV = 40\nI = V/R\nprint(I)"
  },
  {
    "example_id": 167,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-4.0",
      "-4.0",
      "3.0215734278848",
      "-4.0",
      "3.0215734278848"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "x = symbols('x')\neq = 2**12 - (1/8)**x\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 168,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25.0",
      "64.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "# log(5^2, 5^4) = log(25, 64)\nprint(log(25, 64))"
  },
  {
    "example_id": 169,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0",
      "-1.0",
      "3.0",
      "-1.0",
      "3.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\nf = 4*x**3 + 1\nf_inverse = solve(f-33, x)\nprint(f_inverse)"
  },
  {
    "example_id": 170,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25.0",
      "12.0",
      "6.0",
      "5.0",
      "6.0",
      "25.0",
      "12.0",
      "6.0",
      "5.0",
      "6.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "k = symbols('k')\nx = symbols('x')\neq = 3*x**2 + 5*x + k\nsolution = solve(eq, x)\nx_values = solution\nprint(x_values)"
  },
  {
    "example_id": 171,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "5.0",
      "5.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "z1 = 2-2*I\nz2 = 5+5*I\nprint(z1*z2)"
  },
  {
    "example_id": 172,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "# Define the number of seats in each row\nn_seats = 450\n\n# Define the number of extra rows\nn_extra_rows = 5\n\n# Define the number of seats per row\nn_seats_per_row = n_seats // (n_extra_rows + 1)\n\n# Print the number of rows\nprint(n_seats // n_seats_per_row)"
  },
  {
    "example_id": 173,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "23.0"
    ],
    "solution": "x = symbols('x')\ny = 2*x + 1\nf = lambda x: y\nf_inv = lambda y: (y-1)/2\nf_inv_17 = f_inv(17)\nprint(f_inv_17)"
  },
  {
    "example_id": 174,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0",
      "5.0",
      "16.0",
      "2.0",
      "2.0",
      "5.0",
      "16.0",
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\nA = symbols('A')\nB = symbols('B')\neq = (5*x - 16)/(x**2 - 7*x + 10) - (A/(x - 2) + B/(x - 5))\nsolution = solve(eq, A)\nA_value = solution[0]\nsolution = solve(eq, B)\nB_value = solution[0]\nprint(A_value + B_value)"
  },
  {
    "example_id": 175,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\neq = 2**(x + 2) - 32\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 176,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0",
      "6.0",
      "5.0",
      "3.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "7.0",
      "16.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "P = 4*a**3 - 2*a**2 + 7*a - 1\nQ = P**2\ny = solve(Q, a)\ny_value = y[0]\nprint(y_value)"
  },
  {
    "example_id": 177,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "55.0"
    ],
    "annotated_answers": [
      "23.0"
    ],
    "solution": "n = 10\nsum_of_arithmetic_sequence = (n * (n + 1)) // 2\nprint(sum_of_arithmetic_sequence)"
  },
  {
    "example_id": 178,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "17.0",
      "0.0",
      "0.0",
      "0.0",
      "17.0",
      "0.0",
      "0.0",
      "0.0"
    ],
    "annotated_answers": [
      "79.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\n\nz = floor(52/3)\n\na = solve(x*y - z, x)\nb = solve(x*y - z, y)\nc = solve(x*y - z, z)\n\nd = diag(a, b, c)\n\nprint(d)"
  },
  {
    "example_id": 179,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "x = 5\nprint(x)"
  },
  {
    "example_id": 180,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x, y = symbols('x y')\n\n# The parabola is rotated 180 degrees about its vertex.\n# The parabola is shifted 1 unit to the right, then shifted 5 units down.\n# The parabola is shifted 1 unit to the right, then shifted 5 units down.\n# The parabola is shifted 1 unit to the right, then shifted 5 units down.\n# The parabola is shifted 1 unit to the right, then shifted 5 units down.\n\np1 = Point(1, 1)\np2 = Point(2, 0)\np3 = Point(4, 5)\np4 = Point(6, 10)\n\n# The resulting parabola has zeros at x=a and x=b, where b>=a.\n# Solve for a and b\na, b = symbols('a b')\neq1 = (y - (x + 1)**2 + 1) - (y - (a + 1)**2 + 1)\neq2 = (y - (x + 1)**2 + 1) - (y - (b + 1)**2 + 1)\neq3 = (y - (a + 1)**2 + 1) - (y - (b + 1)**2 + 1)\nsol = solve([eq1, eq2, eq3], [a, b])\na, b = sol[0]\nprint(b - a)"
  },
  {
    "example_id": 181,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "1.0",
      "3.0",
      "3.0",
      "1.0",
      "2.0",
      "2.0",
      "1.0",
      "3.0",
      "3.0",
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "a, b, S, T = symbols('a b S T')\neq1 = (a + b*S + c*S**2 + d*S**3)\neq2 = (b + a*T + c*T**2 + d*T**3)\nsolution = solve([eq1, eq2], [a, b, c, d])\nfor k, v in solution.items():\n    print(f'{k} = {v}')"
  },
  {
    "example_id": 182,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.8"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a1 = 1\na2 = a1 + 2\na3 = a2 + 2\na4 = a3 + 2\na5 = a4 + 2\n\nprint(a5 / a3)"
  },
  {
    "example_id": 183,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "419904.0"
    ],
    "annotated_answers": [
      "978121.0"
    ],
    "solution": "# Create a list of 989\nnums = [9,8,9]\n# Square each number\nsquares = [x**2 for x in nums]\n# Multiply each number by itself\nresult = 1\nfor i in squares:\n    result *= i\nprint(result)"
  },
  {
    "example_id": 184,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "9.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "x = symbols('x')\nc = symbols('c')\nexpr = x**2 + c*x + 9*c\nsolution = solve(expr**2, c)\nc_value = solution[0]\nprint(c_value)"
  },
  {
    "example_id": 185,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "-10.0"
    ],
    "solution": "m = (4 - 0) / (5 - 0)\nb = 10 - m * 5\ny_axis_intercept = -m * 0 + b\nprint(y_axis_intercept)"
  },
  {
    "example_id": 186,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "8.0",
      "2.0",
      "4.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x, y, c = symbols('x y c')\neq = x**2 + 8*x + y**2 + 4*y + c\nsolution = solve(eq, c)\nc_value = solution[0]\nprint(c_value)"
  },
  {
    "example_id": 187,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2938.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "a, b = symbols('a b')\nlog_2938 = log(2938, 8)\n\neq = (b - a) * (log_2938 - log(a, 8))\nsolution = solve(eq, a, b)\na_value = solution[0]\nb_value = solution[1]\nprint(a_value + b_value)"
  },
  {
    "example_id": 188,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "water = 2 / 0.25\nprint(water)"
  },
  {
    "example_id": 189,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "f = lambda x: 2*x - 4\ng = lambda x: x**2 + 3\nprint(f(g(2)))"
  },
  {
    "example_id": 190,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "116.938"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "k = symbols('k')\nroot_1 = (-7 + (8*sqrt(15))) / 8\nroot_2 = (-7 - (8*sqrt(15))) / 8\n\n# Find the discriminant\ndiscriminant = root_2 - root_1\n\n# Find k\nk = (discriminant**2) - (4*(root_1*root_2))\n\n# Round k to 3 decimal places\nk = round(k, 3)\n\n# Print the value of k\nprint(k)"
  },
  {
    "example_id": 191,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "-2.0",
      "8.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "# Calculate the vertex of the parabola\n# Given the equation of the parabola\n# y = 2x^2 - 4x + 4\n# Calculate the x-value of the vertex\n# y = 0\n# x = (0 - 4) / 2\n# x = -2\n# Calculate the y-value of the vertex\n# y = 0\n# y = 2(-2)^2 - 4(-2) + 4\n# y = 8 - 8 + 4\n# y = 8\n# Vertex is (-2, 8)\nx = -2\ny = 8\nvertex = Point(x, y)\nprint(vertex)"
  },
  {
    "example_id": 192,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.8571428571428571"
    ],
    "annotated_answers": [
      "28.0"
    ],
    "solution": "Lynn_shoe_size = 42\nAdina_shoe_size = 6\n\n# Adina's shoe size is 42 - 6 = 36\nAdina_shoe_size = Lynn_shoe_size - Adina_shoe_size\n\n# Adina's shoe size is 36 / 42 = 0.85\nAdina_shoe_size = Adina_shoe_size / Lynn_shoe_size\n\nprint(Adina_shoe_size)"
  },
  {
    "example_id": 193,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-680.6153846153848"
    ],
    "annotated_answers": [
      "28.0"
    ],
    "solution": "a = -60 / 13\nb = 3120 / a\nprint(a + b)"
  },
  {
    "example_id": 194,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "print(math.log(81, 3))"
  },
  {
    "example_id": 195,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.14285714285714"
    ],
    "annotated_answers": [
      "0.43"
    ],
    "solution": "t = symbols('t')\ny = -4.9*t**2 - 3.5*t + 2.4\nsolution = solve(y, t)\nt_value = solution[0]\nprint(t_value)"
  },
  {
    "example_id": 196,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "44.0"
    ],
    "annotated_answers": [
      "44.0"
    ],
    "solution": "print(4**3 + 2**3 - 3**3 - 1**3)"
  },
  {
    "example_id": 197,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-8.0",
      "-3.0",
      "-3.0",
      "-8.0",
      "3.0",
      "8.0",
      "8.0",
      "3.0"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "# Define variables\na = symbols('a')\nb = symbols('b')\n\n# Define equations\neq1 = a*b - 24\neq2 = a**2 + b**2 - 73\n\n# Solve equations\nsolution = solve([eq1, eq2], [a, b])\n\n# Print solution\nprint(solution)"
  },
  {
    "example_id": 198,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "d = (2*4*6)/(2+4+6)\nprint(d)"
  },
  {
    "example_id": 199,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "28.0",
      "0.0",
      "0.0",
      "0.0",
      "40.0",
      "0.0",
      "0.0",
      "0.0",
      "54.0"
    ],
    "annotated_answers": [
      "8000.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\nz = symbols('z')\n\nA = diag(4, 5, 6)\nB = diag(7, 8, 9)\n\nprint((A*B).subs([(x, 2), (y, 3), (z, 4)]))"
  },
  {
    "example_id": 200,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "153.0"
    ],
    "annotated_answers": [
      "27.0"
    ],
    "solution": "x, y = symbols('x, y')\neq = x + y - 153\nsolution = solve(eq, y)\ny_value = solution[0]\nx_value = eq.subs(y, y_value)\nprint(y_value - x_value)"
  },
  {
    "example_id": 201,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0",
      "2.0",
      "5.0",
      "3.0",
      "25.0",
      "2.0",
      "2.0",
      "5.0",
      "3.0",
      "25.0",
      "10.0",
      "2.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "x, y = symbols('x y')\neq = (x*y)/((1/x) + (1/y)) - 20\nsolution = solve(eq, [x, y])\nprint(solution)"
  },
  {
    "example_id": 202,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "0.0",
      "0.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "import numpy as np\n\nA = np.array([[1, 2, 1],\n            [3, 0, 1],\n            [9, 0, 1]])\n\nb = np.array([0, 0, 0])\n\nsol = np.linalg.solve(A, b)\n\nprint(sol)"
  },
  {
    "example_id": 203,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "3.0",
      "1.0",
      "3.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\nf = (4*x + 1)/3\nf_inv = 3/(4*x - 1)\nprint(f_inv**(-1))"
  },
  {
    "example_id": 204,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "17.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "p = symbols('p')\nq = symbols('q')\neq = (q+4)*(p+3) - (q+2)*(p+1) - 44\nsolution = solve(eq, p, q)\nprint(solution)"
  },
  {
    "example_id": 205,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "125.5"
    ],
    "annotated_answers": [
      "125.5"
    ],
    "solution": "# Define a function to calculate the mean of the first n whole numbers\ndef mean(n):\n    return sum(range(1, n+1)) / n\n\n# Calculate the mean of the first 250 whole numbers\nprint(mean(250))"
  },
  {
    "example_id": 206,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "2.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "# find the roots of the equation\nx = symbols('x')\neq = x**2 - 4*x - 14\nroots = solve(eq, x)\n\n# find the positive difference between the roots\ndiff = abs(roots[0] - roots[1])\nprint(diff)"
  },
  {
    "example_id": 207,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "# Define the equation\neq = 3 + 1/a - 7/a\n\n# Find the value of a\nsolution = solve(eq)\na_value = solution[0]\n\n# Print the solution\nprint(a_value)"
  },
  {
    "example_id": 208,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-0.6749999999999999"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "f = lambda x: (1 + x) / (1 - x)\ng = lambda x: -2 / (x + 1)\n\nf_sol = f(g(f(g(f(g(f(g(f(g(f(g(12))))))))))))\nprint(f_sol)"
  },
  {
    "example_id": 209,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-3.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "x = symbols('x')\nexpr = (x+3)*(x-1) - x*(x+2)\nprint(expr.expand())"
  },
  {
    "example_id": 210,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.4971912448973232"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\nz = symbols('z')\nexpr = (4**(1/2))/(24**(1/2)) + (3456**(1/2))/(9*24**(1/2)) + (6**(1/2))/24**(1/2)\nresult = expr**(1/2)\nprint(result)"
  },
  {
    "example_id": 211,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\neq = (x**2 + x - 6)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 212,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "15.999999999999998"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "eq = 4**5 + 4**5 + 4**5 + 4**5\nsolution = eq**(1/3)\nprint(solution)"
  },
  {
    "example_id": 213,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "A = -2\nB = 4\nC = 3\nA_plus_B_plus_C = A + B + C\nprint(A_plus_B_plus_C)"
  },
  {
    "example_id": 214,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0",
      "0.0",
      "2.0",
      "2.0",
      "1.0",
      "5.0",
      "0.0",
      "6.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "# Define points\np1 = Point(0, 0)\np2 = Point(2, 2)\np3 = Point(5, 0)\np4 = Point(6, 2)\n\n# Define midpoints\nmid_p12 = Point((p1.x + p2.x) / 2, (p1.y + p2.y) / 2)\nmid_p34 = Point((p3.x + p4.x) / 2, (p3.y + p4.y) / 2)\n\n# Define slopes\nslope_p12 = (p2.y - p1.y) / (p2.x - p1.x)\nslope_p34 = (p4.y - p3.y) / (p4.x - p3.x)\n\n# Find slopes of midpoints\nslope_mid_p12 = (mid_p12.y - mid_p12.y) / (mid_p12.x - mid_p12.x)\nslope_mid_p34 = (mid_p34.y - mid_p34.y) / (mid_p34.x - mid_p34.x)\n\n# Print slopes\nprint(\"Slope of line containing midpoint of segment (0, 0) and (2, 2):\", slope_p12)\nprint(\"Slope of line containing midpoint of segment (5, 0) and (6, 2):\", slope_p34)\nprint(\"Slope of line containing midpoint of segment (0, 0) and (2, 2) and midpoint of segment (5, 0) and (6, 2):\", slope_mid_p12)\nprint(\"Slope of line containing midpoint of segment (0, 0) and (2, 2) and midpoint of segment (5, 0) and (6, 2):\", slope_mid_p34)"
  },
  {
    "example_id": 215,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "1.0"
    ],
    "solution": ""
  },
  {
    "example_id": 216,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\neq = log(10-2*x, x-1) - 2\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 217,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "4.0",
      "5.0",
      "2.0",
      "4.0",
      "4.0",
      "5.0",
      "2.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\nd = symbols('d')\n\neq1 = a - b - 2*(c+d)\neq2 = b - a + 2\neq3 = d - c - 5\n\nsolution = solve([eq1, eq2, eq3], [c, d])\n\nprint(solution)"
  },
  {
    "example_id": 218,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "288.0"
    ],
    "solution": "# Create symbols\na, b = symbols('a, b')\n\n# Calculate 8a^2b^2\neight_a_squared_b_squared = 8 * a ** 2 * b ** 2\n\n# Print result\nprint(eight_a_squared_b_squared)"
  },
  {
    "example_id": 219,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.079368399158984"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "a = 8\nprint(float(16**(1/3)*a**(2/3)))"
  },
  {
    "example_id": 220,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "7.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "midpoint_x = (1 + 1) / 2\nmidpoint_y = (4 + 10) / 2\nprint(midpoint_x, midpoint_y)"
  },
  {
    "example_id": 221,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "20.0",
      "12.0",
      "12.0",
      "20.0",
      "24.0",
      "2.0"
    ],
    "annotated_answers": [
      "32.0"
    ],
    "solution": "from sympy import symbols, Eq, solve, sqrt\nx, y = symbols('x y')\neq1 = Eq(x**2 - 24*x + y**2 - 32*y + 384, 0)\neq2 = Eq(x**2 + 24*x + y**2 + 32*y + 384, 0)\nsolution1 = solve(eq1, (x, y))\nsolution2 = solve(eq2, (x, y))\nprint(sqrt(abs((solution1[0][0] - solution2[0][0])**2 + (solution1[0][1] - solution2[0][1])**2)))"
  },
  {
    "example_id": 222,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x = symbols('x')\neq = (66 - 2**x)/(2**x + 3) - (4 - 2**x)/(2**(x + 1) + 6)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 223,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.06"
    ],
    "annotated_answers": [
      "29.0"
    ],
    "solution": "# Define the cost of three pencils and a jumbo eraser\ncost_3_pencils = 1.24\ncost_jumbo_eraser = 0.82\ncost_5_pencils = 1.82\n\n# Define the cost of a pencil\ncost_pencil = cost_3_pencils + cost_jumbo_eraser\n\n# Print the cost of a pencil\nprint(\"Cost of a pencil:\", cost_pencil)"
  },
  {
    "example_id": 224,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "12.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\nm = (c*d - b*d)/(a*d - b*c)\nA = diag(a, b, c, d)\nB = diag(4, 12, m, 1)\nprint(A*B)"
  },
  {
    "example_id": 225,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "22.0",
      "2.0",
      "2.0",
      "49.0",
      "0.0",
      "0.0",
      "2.0",
      "22.0",
      "2.0",
      "2.0",
      "49.0"
    ],
    "annotated_answers": [
      "22.0"
    ],
    "solution": "x = symbols('x')\ny = 2*x**2 + 8*x + 4\n\n# Find the coordinates of the endpoints of the side of the square\nx1 = solve(y - 7, x)[0]\ny1 = 7\nx2 = solve(y - 7, x)[1]\ny2 = 7\n\n# Find the area of the square\narea = abs(diag(Point(x1, y1), Point(x2, y2)))\nprint(area)"
  },
  {
    "example_id": 226,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "# p and q\np, q = symbols('p q')\n\n# solve for p when q=49\neq = p/q - 28/7\nsolution = solve(eq, p)\np_value = solution[0]\nprint(p_value)"
  },
  {
    "example_id": 227,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "7.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x = symbols('x')\neq = (x-4)**2 - 9\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 228,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "n = symbols('n')\neq = (9**n*3**(2*n+1))/81 - 243\nsolution = solve(eq, n)\nn_value = solution[0]\nprint(n_value)"
  },
  {
    "example_id": 229,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "# Solve for a\neq = (4+sqrt(16+16*a))**(1/2) + (1+sqrt(1+a))**(1/2) - 6\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 230,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0",
      "2.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x1, y1, x2, y2 = symbols('x1, y1, x2, y2')\nmidpoint1 = ((x1 + x2)/2, (y1 + y2)/2)\nmidpoint2 = ((x1 + x2)/2, (y1 + y2)/2)\nslope = (y2 - y1)/(x2 - x1)\nprint(slope)"
  },
  {
    "example_id": 231,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\nexpr = (x**2 - 5*x + 7) - (x - 3)*(x - 2)\nprint(expr.expand().simplify())"
  },
  {
    "example_id": 232,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "1.0",
      "2.0",
      "1.0",
      "2.0",
      "3.0",
      "2.0",
      "1.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "m = 2\nn = 3\nk = 5\nt = 7\n\nfrom sympy import symbols, solve\nfrom sympy.abc import x\n\ndef f(x):\n    return x**2 - m*x + n\n\nsol = solve(f(x), x)\n\nsolution = (sol[0]**n + n**sol[0]) + (sol[1]**m + m**sol[1])\n\nprint(solution)"
  },
  {
    "example_id": 233,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "15.0",
      "2.0",
      "1.0",
      "2.0",
      "1.0",
      "2.0",
      "1.0",
      "2.0",
      "1.0",
      "2.0",
      "1.0",
      "2.0",
      "1.0",
      "2.0",
      "1.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\na = 5*x\nb = 30 - a\nc = 3*y\nd = b + c\ne = a + d\nf = x + y\ng = e - f\nh = g/2\ni = floor(h)\nj = i**2\nk = j - 1\nl = k**2\nm = l + 1\nn = m**2\no = n - 1\np = o**2\nq = p + 1\nr = q**2\ns = r - 1\nt = s**2\nu = t + 1\nv = u**2\nw = v - 1\nx_value = floor(w)\nprint(x_value)"
  },
  {
    "example_id": 234,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4950.0"
    ],
    "annotated_answers": [
      "4950.0"
    ],
    "solution": "n = 3\nsum = 0\nfor i in range(100, 200):\n    if i % n == 0:\n        sum += i\nprint(sum)"
  },
  {
    "example_id": 235,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "33.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "# Create a function to compute the interest rate\ndef get_interest_rate(a, b, c, d):\n    return (1/d - 1/b) * (a/b)\n\n# Assign initial values to the variables\na = 1000\nb = 1000\nc = 1225\nd = 3\n\n# Use the function to compute the interest rate\ninterest_rate = get_interest_rate(a, b, c, d)\n\n# Round the interest rate to the nearest integer\ninterest_rate = floor(interest_rate * 100)\n\n# Print the interest rate\nprint(interest_rate)"
  },
  {
    "example_id": 236,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.02040816326530612"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "# Define f(x)\nf = lambda x: x**2 + 2*x + 1\n\n# Find f^-1(f^-1(6))\nf_inv = lambda x: f(x)**(-1)\nf_inv_of_6 = f_inv(6)\nprint(f_inv_of_6)"
  },
  {
    "example_id": 237,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "8281.0"
    ],
    "annotated_answers": [
      "8281.0"
    ],
    "solution": "# compute 91**2\nprint(91**2)"
  },
  {
    "example_id": 238,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "12.0",
      "2.0",
      "12.0",
      "2.0",
      "3.0",
      "2.0",
      "9.0"
    ],
    "annotated_answers": [
      "-27.0"
    ],
    "solution": "g = symbols('g')\neq = g**4 + 12*g**2 + 9\nc = 12\np = 3\nq = eq - c*(g**2 + p)**2\nprint(q)"
  },
  {
    "example_id": 239,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "38.0",
      "3.0",
      "1.0",
      "4.0",
      "1.0",
      "3.0",
      "25.0",
      "1.0",
      "2.0",
      "55.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "f = 3*x**4 + x**3 - 25*x**2 + 38*x - 17\nf = f.subs(x, x-1)\nprint(f)\n\n\nfrom sympy import symbols, solve\nx = symbols('x')\nprint(f.degree())"
  },
  {
    "example_id": 240,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "43.0",
      "6.0"
    ],
    "annotated_answers": [
      "3.5"
    ],
    "solution": "# Define the variables\nt = symbols('t')\n\n# Define the equation\neq = -6*t**2 + 43*t\n\n# Find the solution\nsol = solve(eq)\n\n# Print the solution\nprint(sol)"
  },
  {
    "example_id": 241,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "144.0",
      "7.0",
      "108.0",
      "6.0",
      "114.0",
      "5.0",
      "84.0",
      "4.0",
      "15.0",
      "3.0",
      "20.0",
      "2.0",
      "43.0",
      "20.0"
    ],
    "annotated_answers": [
      "-15.0"
    ],
    "solution": "from sympy import symbols, expand_mul\nx = symbols('x')\neq1 = expand_mul((24*x**4 + 6*x**3 + 4*x**2 - 7*x - 5)*(6*x**3 + 3*x**2 + 3*x + 4))\nprint(eq1)"
  },
  {
    "example_id": 242,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "96.0"
    ],
    "solution": "# Define a function to test whether a point is inside a polygon\ndef is_inside_polygon(polygon, point):\n    return polygon.contains(point)\n\n# Define a function to return the number of ordered triples (a,b,c)\n# that satisfy the equation\ndef get_number_of_triples(a, b, c):\n    n = 0\n    for i in range(0, 5):\n        for j in range(0, 5):\n            for k in range(0, 5):\n                if a**2*b + b**2*c + c**2*a - a*b**2 - b*c**2 - c*a**2 == 0:\n                    n = n + 1\n    return n\n\n# Print the result\nprint(get_number_of_triples(a, b, c))"
  },
  {
    "example_id": 243,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.9999999999999996"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "x = symbols('x')\neq = abs(-x+3) - 7\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 244,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x = symbols('x')\neq = (2/3) - (4/(x-5))\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 245,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0",
      "2.0",
      "2.0",
      "1.0"
    ],
    "annotated_answers": [
      "2.2"
    ],
    "solution": "# Define the variables\na, b, c, d, n = symbols('a, b, c, d, n')\n\n# Define the points\np1 = Point(-1, 3)\np2 = Point(2, -2)\n\n# Define the parabola\np = Polygon(p1, p2, Point(1, 0))\n\n# Define the equation\neq = a*x**2 + b*x + c\n\n# Find the two roots of the equation\nroots = solve(eq, x)\n\n# Find the greater root\nroot = roots[1]\n\n# Find the value of n\nn = floor(root) + 1\n\n# Print the value of n\nprint(n)"
  },
  {
    "example_id": 246,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\nf = (sqrt(x-1))/(x-2)\nsolution = solve(f, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 247,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "126.0"
    ],
    "annotated_answers": [
      "129.0"
    ],
    "solution": "def get_n_term(n):\n    i = 1\n    a = 0\n    while a <= 125:\n        if n % i == 0:\n            a = a + i\n        else:\n            a = a * i\n        i += 1\n    return a\n\nprint(get_n_term(126))"
  },
  {
    "example_id": 248,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "120.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "def climb_time(start, end):\n    if start == end:\n        return 0\n    elif start > end:\n        raise ValueError('Start must be less than end')\n    else:\n        return 1 + climb_time(start + 100, end)\n\nprint(climb_time(0, 12000))"
  },
  {
    "example_id": 249,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "1.0",
      "5.0",
      "6.0",
      "5.0",
      "3.0",
      "4.0",
      "3.0",
      "25.0",
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\nf = x**2 - 1\nf = f*(5*x**6 - x**5 + 3*x**4 + x**3 - 25*x**2 + 38*x - 17)\nf = solve(f, x)\nprint(f)"
  },
  {
    "example_id": 250,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "54.0"
    ],
    "solution": "# Define the quadratic\nq = x**2 - 6*x + 66\n\n# Solve for b and c\nb, c = solve(q, x)\n\n# Calculate b+c\nbc = b + c\n\n# Print the answer\nprint(bc)"
  },
  {
    "example_id": 251,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-9.0",
      "2.0"
    ],
    "annotated_answers": [
      "0.75"
    ],
    "solution": "t = symbols('t')\neq = (-16*t**2 - 60*t + 54)\nsolution = solve(eq, t)\nt_value = solution[0]\nprint(t_value)"
  },
  {
    "example_id": 252,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "12.0",
      "3.0",
      "6.0",
      "4.0",
      "6.0",
      "6.0",
      "12.0",
      "6.0"
    ],
    "annotated_answers": [
      "30.0"
    ],
    "solution": "# Define the number of days and houses to paint\nn_days = 6\nn_houses = 4\n\n# Define the number of workers and houses to paint\nm_workers = 5\nm_houses = 12\n\n# Define the number of days to paint 12 houses in 3 days\ndays_to_paint_12_houses_in_3_days = 3\n\n# Define the number of workers needed to paint 12 houses in 3 days\nworkers_needed_to_paint_12_houses_in_3_days = m_workers // m_houses * days_to_paint_12_houses_in_3_days\n\n# Define the number of workers needed to paint 4 houses in 6 days\nworkers_needed_to_paint_4_houses_in_6_days = m_workers // n_houses * n_days\n\n# Define the number of workers needed to paint 12 houses in 6 days\nworkers_needed_to_paint_12_houses_in_6_days = m_workers // n_houses * n_days\n\nprint(f'{workers_needed_to_paint_12_houses_in_3_days} workers needed to paint 12 houses in 3 days.')\nprint(f'{workers_needed_to_paint_4_houses_in_6_days} workers needed to paint 4 houses in 6 days.')\nprint(f'{workers_needed_to_paint_12_houses_in_6_days} workers needed to paint 12 houses in 6 days.')"
  },
  {
    "example_id": 253,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "15.0",
      "0.00444444444444444",
      "1.0",
      "2.0",
      "2.0",
      "0.0666666666666667",
      "2.0",
      "4.0",
      "2.0",
      "10.0",
      "0.288675134594813",
      "-0.0533333333333333",
      "1.0",
      "2.0",
      "0.533333333333333",
      "1.0",
      "1.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "7.5"
    ],
    "solution": "# Find the center of the first circle\nx1, y1 = symbols('x1, y1')\neq1 = (x1-9)**2 + (y1-5)**2 - 6.25\nsol1 = solve(eq1, (x1, y1))\nx1_center = sol1[0][0]\ny1_center = sol1[0][1]\n\n# Find the center of the second circle\nx2, y2 = symbols('x2, y2')\neq2 = (x2+6)**2 + (y2+3)**2 - 49\nsol2 = solve(eq2, (x2, y2))\nx2_center = sol2[0][0]\ny2_center = sol2[0][1]\n\n# Find the distance between the centers\ndistance = sqrt((x1_center-x2_center)**2 + (y1_center-y2_center)**2)\nprint(distance)"
  },
  {
    "example_id": 254,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = (1/(x-1)) + (2*x)/(x-1) - 5\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 255,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "6.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "midpoint_x = (5+(-9))/2\nmidpoint_y = (4+8)/2\nprint(midpoint_x, midpoint_y)"
  },
  {
    "example_id": 256,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0",
      "2.0",
      "3.0",
      "4.0",
      "7.0",
      "4.0",
      "7.0",
      "4.0",
      "4.0",
      "7.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\nz = symbols('z')\nt = symbols('t')\n\neq = (x + 2)*(y - 3) - ((x + 1)*(y + 1))\nprint(eq)\nsol = solve(eq, x)\nsol = solve(eq, y)\nprint(sol)\n\n# solve for x and y\nx = solve(eq, x)\ny = solve(eq, y)\n\n# solve for x\nprint(x)\n\n# solve for y\nprint(y)\n\n# solve for z\nz = solve(eq, z)\nprint(z)"
  },
  {
    "example_id": 257,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "4.0",
      "5.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = 2*x - y - 3\neq2 = x + y - 1\n\n# solve equations\nsol1 = solve(eq1, x)\nsol2 = solve(eq2, y)\n\n# get values\nx_value = sol1[0]\ny_value = sol2[0]\n\n# compute\nresult = 8*x_value - 7*y_value\nprint(result)"
  },
  {
    "example_id": 258,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "print(8.8+(-8.8))"
  },
  {
    "example_id": 259,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "a = 1\nb = 1\nwhile a % (b**2)!= 0:\n    a += 1\n    b += 1\nprint(a + b)"
  },
  {
    "example_id": 260,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "5.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\ny = (x-2)/(x**2-7*x+10)\nprint(y.simplify())"
  },
  {
    "example_id": 261,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = 3\nprint(x)"
  },
  {
    "example_id": 262,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "0.0",
      "2.0",
      "0.0",
      "3.0",
      "0.0",
      "4.0",
      "1.0",
      "5.0",
      "0.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "import math\n\ndef prime_factors(n):\n    i = 2\n    factors = []\n    while i * i <= n:\n        if n % i:\n            i += 1\n        else:\n            n //= i\n            factors.append(i)\n    if n > 1:\n        factors.append(n)\n    return factors\n\nfor m in range(1, 20):\n    n = 0\n    for i in range(1, m):\n        if prime_factors(m - i) == [i]:\n            n += 1\n    print(f\"For m = {m}, there are {n} possible values of n.\")"
  },
  {
    "example_id": 263,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "15.222222222222221"
    ],
    "annotated_answers": [
      "27.0"
    ],
    "solution": "n = 2/9\ngames_won = 15\ngames_lost = 15\ngames_played = n + games_lost\nprint(games_played)"
  },
  {
    "example_id": 264,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "6.0",
      "2.0",
      "4.0",
      "5.0",
      "4.0",
      "5.0",
      "0.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "x, y = symbols('x y')\nf = x**2 + 2*x - 6\np = Point(4, 5)\ng = Polygon(p, Point(0, 0), Point(1, 1))\nv = g.vertices[0]\nprint(f'The vertex of the graph of the equation y = x**2 + 2x - 6 is {v}')\nprint(f'The distance between the vertex and the point (4, 5) is {v.distance(p)}')"
  },
  {
    "example_id": 265,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "402.0"
    ],
    "annotated_answers": [
      "402.0"
    ],
    "solution": "n = 100\na = 6\nd = 4\nt = a + (n-1)*d\nprint(t)"
  },
  {
    "example_id": 266,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "794.0",
      "219.0",
      "-6.0",
      "119.0",
      "594.0",
      "594.0",
      "-10.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "import math\n\na = 7\nb = -10\n\nx = -10\ny = a * x ** 2 + b * x - 6\nprint(y)\n\nx = -5\ny = a * x ** 2 + b * x - 6\nprint(y)\n\nx = 0\ny = a * x ** 2 + b * x - 6\nprint(y)\n\nx = 5\ny = a * x ** 2 + b * x - 6\nprint(y)\n\nx = 10\ny = a * x ** 2 + b * x - 6\nprint(y)\n\n# find the max value of y\nmax_y = max(y, -y)\nprint(max_y)\n\n# find the largest value of b\nfor b in range(-100, 100):\n    y = a * x ** 2 + b * x - 6\n    if y == max_y:\n        print(b)\n        break"
  },
  {
    "example_id": 267,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\nD = 16\nN = 12\nD_new = 4*x + D\nN_new = N\neq = (D_new*N_new)/(D*N) - (D_new + x*N_new)/(D + x*N)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 268,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "2.0",
      "5.0",
      "2.0"
    ],
    "annotated_answers": [
      "22.0"
    ],
    "solution": "from sympy import sqrt, simplify, gcd, powsimp\n\na = sqrt(5) + sqrt(2)\nb = sqrt(5) - sqrt(2)\nr = a/b\nr = simplify(r)\nprint(powsimp(r))"
  },
  {
    "example_id": 269,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0",
      "2.0",
      "7.0",
      "-2.0",
      "7.0",
      "4.0"
    ],
    "annotated_answers": [
      "28.0"
    ],
    "solution": "x = symbols('x')\nmax_value = -x**2 - 8*x + 12\nsolution = solve(max_value, x)\nprint(solution)"
  },
  {
    "example_id": 270,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "5.0",
      "29.0"
    ],
    "annotated_answers": [
      "26.0"
    ],
    "solution": "t = symbols('t')\nh = 2*t**2 - 5*t + 29\nh_min = floor(h)\nprint(h_min)"
  },
  {
    "example_id": 271,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "# initial number of free throws made at the first practice\nx = symbols('x')\n\n# total number of free throws made at the fifth practice\ny = 48\n\n# number of free throws made at the fifth practice\nz = y/2\n\n# number of free throws made at the previous practice\nw = z/2\n\n# number of free throws made at the first practice\na = w/2\n\n# number of free throws made at the second practice\nb = w - a\n\n# number of free throws made at the third practice\nc = b - a\n\n# number of free throws made at the fourth practice\nd = c - a\n\n# total number of free throws made at all practices\ne = d + c + b + a\n\n# print out the value of a\nprint(a)"
  },
  {
    "example_id": 272,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x, y = symbols('x y')\neq = 3*x + 2*y - 12\na = 4\nb = eq.subs({x: a})\nprint(b)"
  },
  {
    "example_id": 273,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "510.0"
    ],
    "annotated_answers": [
      "150.0"
    ],
    "solution": "bricks_per_hour = 30\nhours_worked = 3\nbricks_placed = 600\n\nbricks_placed_by_alan = bricks_per_hour * hours_worked\nbricks_placed_by_david = bricks_placed - bricks_placed_by_alan\nprint(bricks_placed_by_david)"
  },
  {
    "example_id": 274,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "6.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "B = Point(7, -1)\nC = Point(-1, 7)\nm = (C.y - B.y)/(C.x - B.x)\nb = B.y - m * B.x\nprint(m, b)"
  },
  {
    "example_id": 275,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "22.0"
    ],
    "annotated_answers": [
      "42.0"
    ],
    "solution": "dad_age = 53 - 31\nprint(dad_age)"
  },
  {
    "example_id": 276,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "9.0"
    ],
    "annotated_answers": [
      "-8.0"
    ],
    "solution": "x, y = symbols('x y')\n\n# Find the product of x and y\nproduct = (x + y)*(x - y)\n\n# Find the value of x + y\nsum_value = x + y - 7\n\n# Find the value of x - y\ndifference_value = x - y - 9\n\n# Find the value of x\nx_value = sum_value / product\n\n# Find the value of y\ny_value = difference_value / product\n\n# Print the values of x and y\nprint('x =', x_value)\nprint('y =', y_value)"
  },
  {
    "example_id": 277,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0",
      "3.0",
      "1.0",
      "15.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\na, b, c, d = symbols('a, b, c, d')\neq = (sqrt(x*sqrt(x*sqrt(x*sqrt(x))))) - 3\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 278,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\nf = floor((-5/8)**x)\nf_range = range(f.subs(x, 0), f.subs(x, 10) + 1)\nf_range_set = set(f_range)\nprint(len(f_range_set))"
  },
  {
    "example_id": 279,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-0.0"
    ],
    "annotated_answers": [
      "-120.0"
    ],
    "solution": "# Coordinates of center\nCx = 2\nCy = 3\n\n# Coordinates of point on circle\nx1 = -1\ny1 = 6\n\n# Distance from center to point\nr = sqrt((x1 - Cx)**2 + (y1 - Cy)**2)\n\n# Center of circle\nA = 0\nB = 0\nC = -r**2\n\nprint(A*B*C)"
  },
  {
    "example_id": 280,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\neq = (3*x-5)**(1/2) - 2\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 281,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "a, b, c, d = symbols('a, b, c, d')\nF = a**b + c**d\neq = F.subs({a: 4, b: b, c: 2, d: 3}) - 12\nsolution = solve(eq, b)\nb_value = solution[0]\nprint(b_value)"
  },
  {
    "example_id": 282,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-15.0",
      "776.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "112185.0",
      "3.0",
      "3479703.0",
      "1.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "x = symbols('x')\nf = x**3 + 45*x**2 - 101*x + 45\nsol = solve(f, x)\nsol = sol[0]\nprint(sol)"
  },
  {
    "example_id": 283,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "123.0"
    ],
    "annotated_answers": [
      "123.0"
    ],
    "solution": "# 123123 divided by 1001\nprint(123123/1001)"
  },
  {
    "example_id": 284,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "4.0",
      "5.0"
    ],
    "annotated_answers": [
      "-10.0"
    ],
    "solution": "A = symbols('A')\nB = symbols('B')\nC = symbols('C')\n\nexpr = A*(B-C)\n\nexpr_map = {4: B, 5: C, 6: A}\n\nresult = 0\nfor key, value in expr_map.items():\n    result += key*value\n\nprint(result)"
  },
  {
    "example_id": 285,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-5.0",
      "2.0"
    ],
    "annotated_answers": [
      "2500.0"
    ],
    "solution": "x = symbols('x')\neq = 3*x**2 - 2*(x**2 + 4) - 42\nx_value = solve(eq, x)[0]\nprint(x_value)"
  },
  {
    "example_id": 286,
    "selected_mode": "import",
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "f = x**3 + 2*x + 1\ng = x - 1\nf_g = f(g(1))\nprint(f_g)"
  },
  {
    "example_id": 287,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1200.0",
      "-3600.0",
      "-1200.0",
      "0.0",
      "0.0"
    ],
    "annotated_answers": [
      "4800.0"
    ],
    "solution": "N = 600\nt = 4\ndt = 4\nt_midnight = 12\nt_noon = 12\nt_later = 12 + t_midnight\nt_midnight_later = t_midnight + t_later\n\ndef f(t):\n    return N * (2**(t/t_midnight))\n\ndef g(t):\n    return f(t) - N * (2**(t_midnight_later/t_midnight))\n\ndef h(t):\n    return f(t) - N * (2**(t_later/t_midnight))\n\ndef k(t):\n    return f(t) - N * (2**(t_midnight/t_midnight))\n\ndef j(t):\n    return f(t) - N * (2**(t_noon/t_midnight))\n\nprint(f(t_midnight))\nprint(g(t_midnight))\nprint(h(t_midnight))\nprint(k(t_midnight))\nprint(j(t_midnight))"
  },
  {
    "example_id": 288,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4950.0"
    ],
    "annotated_answers": [
      "-102.0"
    ],
    "solution": "S = set()\nfor alpha in range(1, 100):\n    try:\n        solve(alpha**2 + 5*alpha + alpha - 44, alpha**2 + 7*alpha - 44)\n        S.add(alpha)\n    except:\n        pass\n\nsum_of_elements = sum(S)\nprint(sum_of_elements)"
  },
  {
    "example_id": 289,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "166.0",
      "15.0",
      "2.0",
      "5.0",
      "7.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x, y = symbols('x y')\neq = 10*x*y + 14*x + 15*y - 166\nsolution = solve(eq, (x, y))\nx_value, y_value = solution[0]\nprint(x_value + y_value)"
  },
  {
    "example_id": 290,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "16.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x = symbols('x')\nexpr = (x*x**3)**4\nprint(expr.expand())"
  },
  {
    "example_id": 291,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "from sympy import symbols, solve\n\nx, y = symbols('x y')\n\nc1 = (x - 4)**2 + y**2 - 1\nc2 = (x + 4)**2 + y**2 - 1\nc3 = x**2 + (y - 5)**2 - 1\n\nsolution = solve([c1, c2, c3], [x, y])\n\nprint(len(solution))"
  },
  {
    "example_id": 292,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "t = symbols('t')\n\n# find the coefficient of t^2\ncoeff1 = (3*t**2 + 5*t + a)*(4*t**2 + b*t - 2)\ncoeff2 = coeff1.coeff(t, 2)\nprint(coeff2)\n\n# find the coefficient of t^3\ncoeff3 = coeff1.coeff(t, 3)\nprint(coeff3)\n\n# find the coefficient of t^4\ncoeff4 = coeff1.coeff(t, 4)\nprint(coeff4)\n\n# find the coefficient of t^5\ncoeff5 = coeff1.coeff(t, 5)\nprint(coeff5)\n\n# find the coefficient of t^6\ncoeff6 = coeff1.coeff(t, 6)\nprint(coeff6)\n\n# find the coefficient of t^7\ncoeff7 = coeff1.coeff(t, 7)\nprint(coeff7)\n\n# find the coefficient of t^8\ncoeff8 = coeff1.coeff(t, 8)\nprint(coeff8)\n\n# find the coefficient of t^9\ncoeff9 = coeff1.coeff(t, 9)\nprint(coeff9)\n\n# find the coefficient of t^10\ncoeff10 = coeff1.coeff(t, 10)\nprint(coeff10)\n\n# find the coefficient of t^11\ncoeff11 = coeff1.coeff(t, 11)\nprint(coeff11)\n\n# find the coefficient of t^12\ncoeff12 = coeff1.coeff(t, 12)\nprint(coeff12)\n\n# find the coefficient of t^13\ncoeff13 = coeff1.coeff(t, 13)\nprint(coeff13)\n\n# find the coefficient of t^14\ncoeff14 = coeff1.coeff(t, 14)\nprint(coeff14)\n\n# find the coefficient of t"
  },
  {
    "example_id": 293,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-0.5",
      "0.5",
      "0.612372435695793",
      "1.10668191970032",
      "0.204124145231932",
      "2.0",
      "0.408248290463864",
      "0.5",
      "0.816496580927728",
      "0.204124145231932",
      "2.0",
      "0.5",
      "0.306186217847897",
      "2.0"
    ],
    "annotated_answers": [
      "23.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\nexpr = (a*sqrt(2) + b*sqrt(3))/(c*sqrt(2) + d*sqrt(3))\nsolution = solve(expr - (a+b+c), c)\nc_value = solution[0]\nprint(c_value)"
  },
  {
    "example_id": 294,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3074.0",
      "2.0",
      "3074.0",
      "2.0",
      "2.0",
      "3074.0",
      "4.0",
      "8.0"
    ],
    "annotated_answers": [
      "32736.0"
    ],
    "solution": "from sympy import symbols, solve\nfrom math import sqrt\n\na, b, c = symbols('a b c')\n\n# a = 2, b = 4, c = 6\n# a^2 = 4, b^2 = 16, c^2 = 36\n# (a + b + c)^2 = 12296\n\neq = (a + b + c)**2 - 12296\nsolution = solve(eq, a)\n\na_value = solution[0]\nb_value = a_value + 2\nc_value = a_value + 4\n\n# (a * b * c) / 8 = 12296 / 8 = 1564\nprint(a_value * b_value * c_value / 8)"
  },
  {
    "example_id": 295,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "for i in range(10, 100):\n    if i % 10 == 5 and i // 10 == 2:\n        print(i)\n        break"
  },
  {
    "example_id": 296,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-4.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "g = 3 * 0 - 4\nprint(g)"
  },
  {
    "example_id": 297,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "60.0",
      "60.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "81.0"
    ],
    "solution": "# a, b, c, d = symbols('a b c d')\na, b, c, d = symbols('a b c d')\n\n# eq = (a + b + c + d)**2 - 3600\neq = (a + b + c + d)**2 - 3600\n\n# solution = solve(eq, [a, b, c, d])\nsolution = solve(eq, [a, b, c, d])\n\n# print(solution)\nprint(solution)\n\n# point1 = Point(a, b)\npoint1 = Point(a, b)\n\n# point2 = Point(c, d)\npoint2 = Point(c, d)\n\n# polygon = Polygon(point1, point2)\npolygon = Polygon(point1, point2)\n\n# print(polygon.midpoint)\nprint(polygon.midpoint)"
  },
  {
    "example_id": 298,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "81.0"
    ],
    "annotated_answers": [
      "81.0"
    ],
    "solution": "import math\n\ndef get_lattice_points(radius, center):\n    x_min, x_max = center[0] - radius, center[0] + radius\n    y_min, y_max = center[1] - radius, center[1] + radius\n    lattice_points = []\n    for x in range(int(x_min), int(x_max) + 1):\n        for y in range(int(y_min), int(y_max) + 1):\n            if math.sqrt((x-center[0])**2 + (y-center[1])**2) <= radius:\n                lattice_points.append((x, y))\n    return lattice_points\n\nlattice_points = get_lattice_points(5, (0, 0))\nprint(len(lattice_points))"
  },
  {
    "example_id": 299,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-31.0",
      "-1.0",
      "5.0",
      "17.0",
      "-63.0",
      "-3.0",
      "9.0",
      "33.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "f = lambda x: 2*x - 1\ng = lambda x: f(f(x))\ng_values = [g(-15), g(0), g(3), g(9)]\nf_values = [f(-15), f(0), f(3), f(9)]\nprint(f_values)\nprint(g_values)"
  },
  {
    "example_id": 300,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "81.0"
    ],
    "annotated_answers": [
      "81.0"
    ],
    "solution": "x = 4\nx += 5\nx_squared = x ** 2\nprint(x_squared)"
  },
  {
    "example_id": 301,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-2.0",
      "1.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "x = symbols('x')\neq = (3*x + 6)**(1/2) - (x + 2)\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 302,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "expression = 4 * (3 ** 2) / (9 * (2 ** 2))\nprint(expression)"
  },
  {
    "example_id": 303,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\np = x + 2\nq = x + 1\np_val = p.subs(x, 2)\nq_val = q.subs(x, q)\nprint(q_val)"
  },
  {
    "example_id": 304,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0"
    ],
    "annotated_answers": [
      "225.0"
    ],
    "solution": "t = 0\ndistance = 45\nwhile distance > 0:\n    distance -= 5\n    t += 1\nprint(t)"
  },
  {
    "example_id": 305,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "# number of customers buying a $1500 TV\nn1500 = 15\n# cost of $1500 TV\nc1500 = 1500\n# cost of $2500 TV\nc2500 = 2500\n\n# proportion of customers buying $2500 TV\np = (n1500 * c2500) / (c1500 * n1500)\n\n# number of customers buying $2500 TV\nn2500 = floor(p)\nprint(n2500)"
  },
  {
    "example_id": 306,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2450.0"
    ],
    "annotated_answers": [
      "2450.0"
    ],
    "solution": "# Define the variables\nbase_salary = 1200\ncommission_rate = 0.05\nsales_amount = 25000\n\n# Calculate the total earnings\ntotal_earnings = base_salary + (sales_amount * commission_rate)\n\n# Print the total earnings\nprint(total_earnings)"
  },
  {
    "example_id": 307,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.17777777777777776"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "x = 8 / 3\nz = 15\nx_over_z = x / z\nprint(x_over_z)"
  },
  {
    "example_id": 308,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "print(64**(1/2) - 64**(1/3))"
  },
  {
    "example_id": 309,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0",
      "10000.0",
      "12.0",
      "10000.0",
      "10.0",
      "100.0",
      "1000.0",
      "61711.0",
      "5000.0"
    ],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "AMC10 = symbols('AMC10')\nAMC12 = symbols('AMC12')\na = symbols('a')\nb = symbols('b')\nc = symbols('c')\nd = symbols('d')\n\nsum = AMC10 + AMC12\n\neq1 = a*10**4 + b*10**3 + c*10**2 + d*10 + sum - 123422\neq2 = a*10**4 + b*10**3 + c*10**2 + d*10 + sum - 123422\n\nsolution = solve((eq1, eq2), (a, b, c, d))\n\nprint(solution)"
  },
  {
    "example_id": 310,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.8"
    ],
    "annotated_answers": [
      "1.8"
    ],
    "solution": "x = 4.8 - (2*4) - 4.8\nx = -4.8\nprint(x)"
  },
  {
    "example_id": 311,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "144.0"
    ],
    "annotated_answers": [
      "144.0"
    ],
    "solution": "x = symbols('x')\neq = 192*x**2 - 16\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(1/x_value**4)"
  },
  {
    "example_id": 312,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq = a*x**2 + b*x + c\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 313,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1001.0"
    ],
    "annotated_answers": [
      "2003.0"
    ],
    "solution": "sum_of_even = 0\nsum_of_odd = 0\n\nfor i in range(1, 2003):\n    if i % 2 == 0:\n        sum_of_even += i\n    else:\n        sum_of_odd += i\n\nprint(sum_of_even - sum_of_odd)"
  },
  {
    "example_id": 314,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "15.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "a = 1\nb = 3\nwhile b < 255:\n    if a * b == 255:\n        break\n    a += 2\n    b += 2\nprint(a)"
  },
  {
    "example_id": 315,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "13225.0"
    ],
    "annotated_answers": [
      "13225.0"
    ],
    "solution": "# compute 115^2\nprint(115**2)"
  },
  {
    "example_id": 316,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "23.0",
      "2.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "a, b = symbols('a b')\neq = 2*a - 3*b - 23\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 317,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "26000.0"
    ],
    "annotated_answers": [
      "26000.0"
    ],
    "solution": "print(513**2 - 487**2)"
  },
  {
    "example_id": 318,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "-3.0",
      "2.0",
      "10.0",
      "1.0",
      "2.0",
      "5.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq1 = a**2 + b**2 + c**2 - 13\neq2 = a*b + b*c + c*a - 6\nsolution = solve([eq1, eq2], [a, b, c])\nprint(solution)"
  },
  {
    "example_id": 319,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "20.0"
    ],
    "annotated_answers": [
      "108.0"
    ],
    "solution": "# Define variables\na = 64\nb = 16\n\n# Define revolutions\nc = 27\n\n# Define distance\nd = a - b\n\n# Find revolutions\ne = floor(c * d / a)\n\n# Print result\nprint(e)"
  },
  {
    "example_id": 320,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "125.0",
      "5.0",
      "5.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "from sympy import log, sqrt\nlog_sqrt_5 = log(125*sqrt(5), sqrt(5))\nprint(log_sqrt_5)"
  },
  {
    "example_id": 321,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "a = 15 - 3*5\nb = (15 - a)/5\nprint(a + b)"
  },
  {
    "example_id": 322,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-25.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "t = symbols('t')\nS_Alice = 50\nS_Beatrice = 100\nT_Beatrice = 25\nT_Alice = t\n\n# Solve for t\nsolution = solve(T_Beatrice - T_Alice - S_Beatrice + S_Alice, t)\nt_value = solution[0]\nprint(t_value)"
  },
  {
    "example_id": 323,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-0.0138888888888889",
      "0.125",
      "0.625",
      "5.625"
    ],
    "annotated_answers": [
      "45.0"
    ],
    "solution": "# Define the sequence\nseq = [3**2, x, 3**4]\n\n# Find the midpoint of the sequence\nmid = (seq[0] + seq[2]) / 2\n\n# Find the slope of the line\nslope = (seq[2] - seq[0]) / (seq[1] - seq[0])\n\n# Find the equation of the line\nline = slope*a + b\n\n# Find the point of intersection\npoint = solve(line - mid, a)\n\n# Find the integer value of x\nx = floor(point[0])\n\n# Print the value of x\nprint(x)"
  },
  {
    "example_id": 324,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "dist_lucy = sqrt((6-4)**2 + (1-3)**2)\ndist_liz = sqrt((1-4)**2 + (7-3)**2)\nprint(max(dist_lucy, dist_liz))"
  },
  {
    "example_id": 325,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "1.0",
      "3.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "f = a*x**2 + b*x + c\ng = a*x**3 + b*x**2 + c*x + d\n\ndegree_f = 2\ndegree_g = 3\n\ndegree_max = max(degree_f, degree_g)\nprint('The maximum degree of the polynomial'+\n      '(f(x))^3 - (g(x))^2 + f(x) - 1 is'+ str(degree_max))"
  },
  {
    "example_id": 326,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "# 20% of 50% of 80\nprint(0.2 * 0.5 * 80)"
  },
  {
    "example_id": 327,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.8"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "A = 6\nB = 3/5\nC = 4\nD = 4\n\nAmy = A - C\nBen = B * Amy\nChris = Amy - Ben\n\nprint(f\"Chris is {Chris} years old.\")"
  },
  {
    "example_id": 328,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "36242.0",
      "10.0",
      "19.0",
      "14.0",
      "185.0",
      "5.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "# Define the points\nA, B, C, D, E = symbols('A B C D E')\n\n# Define the points in the plane\nA = Point(0, 10)\nB = Point(5.9, -8.1)\nC = Point(-9.5, 3.1)\nD = Point(9.5, 3.1)\nE = Point(-5.9, -8.1)\n\n# Define the polygon\npolygon = Polygon(A, B, C, D, E)\n\n# Define the side lengths\nsides = [A.distance(B),\n         B.distance(C),\n         C.distance(D),\n         D.distance(E),\n         E.distance(A)]\n\n# Define the arithmetic sequence\nsequence = [sides[0], sides[1] - sides[0], sides[2] - sides[1], sides[3] - sides[2], sides[4] - sides[3]]\n\n# Find the middle term\nmiddle = sequence[1] + sequence[3]\n\n# Print the middle term\nprint(middle)"
  },
  {
    "example_id": 329,
    "selected_mode": "import",
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-120.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\neq1 = a + b - 8\neq2 = b + c - 3\neq3 = a + c - 5\nsol = solve([eq1, eq2, eq3], [a, b, c])\nprint(sol)\nabc = sol[0][0] * sol[0][1] * sol[0][2]\nprint(abc)"
  },
  {
    "example_id": 330,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-56.0"
    ],
    "annotated_answers": [
      "-56.0"
    ],
    "solution": "def discriminant(a, b, c):\n    return (b**2 - 4*a*c)\n\nprint(discriminant(2, -8, 15))"
  },
  {
    "example_id": 331,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "109.0",
      "16.0",
      "3.0",
      "8.0"
    ],
    "annotated_answers": [
      "52.0"
    ],
    "solution": "x, y = symbols('x y')\n\n# point is 6 units from x-axis\nx_dist = -6\n\n# point is 15 units from (8,3)\n(x_diff, y_diff) = (8, 3)\nx_diff = x - x_diff\ny_diff = y - y_diff\n\n# point is sqrt(n) from origin\norigin = Point(0, 0)\npoint = Point(x, y)\ndist = point.distance(origin)\n\n# solve for n\nn = dist**2 - x_diff**2 - y_diff**2 - x_dist**2\n\nsolution = solve(n, x)\nx_solution = solution[0]\n\nprint(x_solution)"
  },
  {
    "example_id": 332,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "x = -3\nprint(x + 3)"
  },
  {
    "example_id": 333,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-5.0",
      "2.0",
      "0.0",
      "0.0",
      "-1.0",
      "3.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "# from sympy import symbols\nx = symbols('x')\n# from sympy import solve\neq = 6*x**2 + 17*x + 5\nsolution = solve(eq)\n# from sympy import floor\na = solution[0]\nb = solution[1]\n# from sympy import diag\nAB = diag(a, b)\nprint(AB)"
  },
  {
    "example_id": 334,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = 8\nf = 3*sqrt(2*x - 7) - 8\nf_value = f.subs(x, x)\nprint(f_value)"
  },
  {
    "example_id": 335,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-3.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "x = symbols('x')\neq = (9 - 4*x)/(x + 6) - 7\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 336,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "33.0",
      "11.0",
      "3.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "# number of red marbles = half of total number of marbles\n# = half of (red + yellow + orange + white)\n# = half of (35)\n# = 7\nr = 7\n\n# number of yellow marbles = 2 less than number of red marbles\n# = 35 - 2\n# = 33\ny = 33\n\n# number of orange marbles = a third of total number of marbles\n# = 35 / 3\n# = 11\no = 11\n\n# number of white marbles = a third of 3 more than number of red marbles\n# = (7 + 3) / 3\n# = 10 / 3\n# = 3\nw = 3\n\nprint(f\"Number of red marbles: {r}\")\nprint(f\"Number of yellow marbles: {y}\")\nprint(f\"Number of orange marbles: {o}\")\nprint(f\"Number of white marbles: {w}\")"
  },
  {
    "example_id": 337,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "26.0",
      "14.0"
    ],
    "annotated_answers": [
      "364.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = x + y - 40\neq2 = x - y - 12\nsol = solve([eq1, eq2], [x, y])\nprint(sol)"
  },
  {
    "example_id": 338,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "65.0"
    ],
    "annotated_answers": [
      "65.0"
    ],
    "solution": "V = (30*6.5)/3\nprint(V)"
  },
  {
    "example_id": 339,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3969.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "x = symbols('x')\neq = (63 - (x**0.5))**0.5\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 340,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "def f(x):\n    return x / (2 - x)\n\ndef iterative_solver(f, initial_guess, tolerance):\n    x = initial_guess\n    while abs(x - f(x)) > tolerance:\n        x = f(x)\n    return x\n\nx = iterative_solver(f, 1, 0.0000001)\nprint(x)"
  },
  {
    "example_id": 341,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-65.0",
      "-5.0",
      "2.0",
      "105.0",
      "2.0",
      "2.0",
      "-5.0",
      "2.0",
      "105.0",
      "2.0",
      "2.0",
      "20.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = (x + y)**2 - 105\neq2 = x**2 + y**2 - 65\nsolution = solve([eq1, eq2], [x, y])\nxy = solution[0][0] * solution[0][1]\nprint(xy)"
  },
  {
    "example_id": 342,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-9.0",
      "3.0",
      "1.0",
      "4.0",
      "5.0",
      "1.0",
      "2.0",
      "7.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "f = 3*x**4 + 5*x**2 - 9*x - 2\ng = f.subs(x, x-1)\nprint(g)"
  },
  {
    "example_id": 343,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "49.0"
    ],
    "annotated_answers": [
      "93.0"
    ],
    "solution": "a = symbols('a')\na_value = (a**2+a**4+a**6+a**8+a**10+a**12+a**14+a**16+a**18+a**20+a**22+a**24+a**26+a**28+a**30+a**32+a**34+a**36+a**38+a**40+a**42+a**44+a**46+a**48+a**50+a**52+a**54+a**56+a**58+a**60+a**62+a**64+a**66+a**68+a**70+a**72+a**74+a**76+a**78+a**80+a**82+a**84+a**86+a**88+a**90+a**92+a**94+a**96+a**98)\na_sum = a_value.subs({a:1})\nprint(a_sum)"
  },
  {
    "example_id": 344,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "11.0"
    ],
    "annotated_answers": [
      "549.0"
    ],
    "solution": "# Define the variables\na = symbols('a')\nb = symbols('b')\nc = symbols('c')\nd = symbols('d')\n\n# Define the expressions\nexp1 = a**2 - 99\nexp2 = b**2 - a**2\nexp3 = c**2 - b**2\nexp4 = d**2 - c**2\n\n# Define the equations\neq1 = solve(exp1, a)\neq2 = solve(exp2, b)\neq3 = solve(exp3, c)\neq4 = solve(exp4, d)\n\n# Calculate the sum of the perfect squares\nsum_sq = eq1[0] + eq2[0] + eq3[0] + eq4[0]\n\n# Print the result\nprint(sum_sq)"
  },
  {
    "example_id": 345,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "f = lambda x: x + 2\ng = lambda x: 1/f(x)\nprint(g(f(-3)))"
  },
  {
    "example_id": 346,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "28.0",
      "2.0",
      "45.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "s = symbols('s')\ncs = 4 * s\np = 28\nq = 45\nexpression = (cs + p)**2 + q\nprint(expression)"
  },
  {
    "example_id": 347,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.5"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "x, y = symbols('x y')\neq = x/y - 1/2\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 348,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "5.0",
      "14.0",
      "2.0",
      "2.0",
      "5.0",
      "14.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "a, b, c = symbols('a b c')\nf = (2*x)/(x**2-5*x-14)\nf_prime = f.diff(x)\n\nv_asymptotes = [f.subs(x,a), f.subs(x,b)]\nh_asymptote = f.subs(x,oo)\n\nprint(v_asymptotes)\nprint(h_asymptote)\n\nprint(v_asymptotes[0]+v_asymptotes[1]+h_asymptote)"
  },
  {
    "example_id": 349,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "13.0",
      "2.0",
      "73.0",
      "2.0",
      "2.0",
      "73.0",
      "2.0",
      "13.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = x + y - 13\neq2 = x*y - 24\nsolution = solve([eq1, eq2], [x, y])\nx_value = solution[0][0]\ny_value = solution[0][1]\nd = sqrt((x_value - 0)**2 + (y_value - 0)**2)\nprint(d)"
  },
  {
    "example_id": 350,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-92.0",
      "3.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "from sympy import symbols, integrate\nx = symbols('x')\nf = (x-2)**2 - 9\narea = integrate(f, (x, 0, 4))\nprint(area)"
  },
  {
    "example_id": 351,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "0.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 + x\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 352,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "18.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "# Larry has two-fifths of Lenny's amount\n# Larry has 2/5 of Lenny's amount\n# Larry has 35 * 2/5 = 17 dollars\n# Lenny has 35 - 17 = 18 dollars more than Larry\nprint(18)"
  },
  {
    "example_id": 353,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "import math\n\nx = int(math.log(642, 5))\nprint(x)"
  },
  {
    "example_id": 354,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "-8192.0"
    ],
    "solution": "# Define the geometric sequence\na, b, c, d = symbols('a b c d')\nseq = a/(b*(c-d))\n\n# Find the fifth term\nseq_5 = seq.subs({a: 1, b: 2, c: 4, d: 3})\nprint(seq_5)\n\n# Find the fourteenth term\nseq_14 = seq_5.subs({a: 1, b: 2, c: 4, d: 3})\nprint(seq_14)"
  },
  {
    "example_id": 355,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = 2**(2*x) - 256**(1/2)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 356,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "149.0",
      "4.0",
      "3.0",
      "2.0",
      "3.0",
      "3.0",
      "4.0",
      "3.0",
      "149.0",
      "2.0",
      "3.0",
      "3.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq = (2*x**2*y**3) + (4*y**3) - (149 + 3*x**2)\nsolution = solve(eq, x, y)\nprint(solution)"
  },
  {
    "example_id": 357,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "entry_fee = 2.25\nride_fee = 1.50\ntotal_cost = 12.75\nrides = int(total_cost / ride_fee)\nprint(rides)"
  },
  {
    "example_id": 358,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-9.0"
    ],
    "annotated_answers": [
      "-9.0"
    ],
    "solution": "mid_x = (1 + (-7)) / 2\nmid_y = (1 + 5) / 2\nproduct = mid_x * mid_y\nprint(product)"
  },
  {
    "example_id": 359,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0",
      "5.0",
      "-7.0",
      "5.0",
      "-32.0",
      "5.0"
    ],
    "annotated_answers": [
      "-56.0"
    ],
    "solution": "a, b, c, d = symbols('a, b, c, d')\n\neq1 = 3*a + b + c + 3\neq2 = a + 3*b + c + 9\neq3 = a + b + 3*c + 19\n\nsol = solve([eq1, eq2, eq3], [a, b, c, d])\nprint(sol)"
  },
  {
    "example_id": 360,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "# define variables\nn = 12\nm = 3\n\n# define daily shares\nd = 1/n\n\n# define total daily shares\ntotal_d = d * (n + m)\n\n# calculate days\ndays = floor(1/total_d)\n\n# print days\nprint(days)"
  },
  {
    "example_id": 361,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "128.0",
      "12.0",
      "128.0",
      "12.0"
    ],
    "annotated_answers": [
      "128.0"
    ],
    "solution": "from sympy import symbols, solve\nfrom sympy.abc import y\n\nk = symbols('k')\neq = y**2 + 24*y + 16 + k\nsolution = solve(eq, y)\nprint(solution)"
  },
  {
    "example_id": 362,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "64.0"
    ],
    "annotated_answers": [
      "64.0"
    ],
    "solution": "a = 3\nb = 5\nx = a**2 + 2*a*b + b**2\nprint(x)"
  },
  {
    "example_id": 363,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "4.0",
      "5.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "for x in range(1, 51):\n    if x**2 + 4*x + 4 > 10 and x**2 + 4*x + 4 < 50:\n        print(x)"
  },
  {
    "example_id": 364,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-22.0",
      "-158.0",
      "-86.0",
      "-40.0"
    ],
    "annotated_answers": [
      "54.0"
    ],
    "solution": "# Define variables\nx = symbols('x')\ny = symbols('y')\nz = symbols('z')\nt = symbols('t')\n\n# Define equations\neq1 = 26 + 12*2 + 12*3 + 28 + 22 + 22 + x\neq2 = 12 + 12*2 + 28 + 22 + y\neq3 = 12 + 28 + z\neq4 = 22 + t\n\n# Solve equations\nsolution = solve([eq1, eq2, eq3, eq4], [x, y, z, t])\n\n# Print solution\nprint(solution)"
  },
  {
    "example_id": 365,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "n = symbols('n')\neq = n**2 - 5*n - 14\nsolution = solve(eq, n)\nn_value = solution[0]\nprint(n_value)"
  },
  {
    "example_id": 366,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-23.0",
      "25.0"
    ],
    "annotated_answers": [
      "-48.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq1 = 725*x + 727*y - 1500\neq2 = 729*x + 731*y - 1508\nsolution = solve([eq1, eq2], [x, y])\nprint(solution)"
  },
  {
    "example_id": 367,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "649.0",
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "a = symbols('a')\neq = a**2 + a - 162\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 368,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x = symbols('x')\neq = 6*x**2 + x - 2\nsolution = solve(eq, x)\na_value = floor(solution[0])\nprint(a_value)"
  },
  {
    "example_id": 369,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0",
      "2.0",
      "2.0",
      "-4.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "m, n = solve(a*x**2 + b*x + c, x)\nprint(m - n)"
  },
  {
    "example_id": 370,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-6.0",
      "7.0",
      "2.0",
      "61.0",
      "7.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "x = symbols('x')\nm = 3\nn = 4\neq1 = 16*x**2 + 36*x + 56\neq2 = (m*x + n)**2\nsolution = solve(eq1 - eq2, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 371,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "607.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "f = lambda x: (2*x - 10)**2 - 4*x + 3\ng = lambda x: 2*x - 10\nf_g = f(x) - g(x)\nmax_f_g = floor(f(x).subs(x, 18))\nprint(max_f_g)"
  },
  {
    "example_id": 372,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-20.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "# number of clowns\nn_clowns = 30\n\n# number of heads\nn_heads = 10\n\n# number of horses\nn_horses = n_heads - n_clowns\n\nprint(f\"I saw {n_horses} horses in the parade.\")"
  },
  {
    "example_id": 373,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "11.0",
      "2.0",
      "3.0",
      "2.0",
      "11.0",
      "2.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "a, b = symbols('a b')\neq = a**2 - 5*a + 9\nsolution = solve(eq)\na_value = solution[0]\nb_value = solution[1]\nprint((a_value - 1)*(b_value - 1))"
  },
  {
    "example_id": 374,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "0.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "d = symbols('d')\ne = symbols('e')\neq1 = 2*d - 17*e\neq2 = 2*e - d\nsol = solve([eq1, eq2], [e, d])\nprint(sol)"
  },
  {
    "example_id": 375,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9801.0",
      "1.0",
      "0.000204060810121416",
      "4900.5",
      "1.0",
      "0.000204060810121416",
      "1.0",
      "2.0",
      "9801.0"
    ],
    "annotated_answers": [
      "900.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\n\n# quadratic equation\neq = (1/2)*x**2 + 99*x + c\n\n# roots of the equation\nx1, x2 = solve(eq, x)\n\n# value of c\nc_value = eq.subs([(x, x1), (x, x2)])\nprint(c_value)"
  },
  {
    "example_id": 376,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-5.0"
    ],
    "annotated_answers": [
      "-5.0"
    ],
    "solution": "b = symbols('b')\neq = b**2 + 2*b - 15\nsolution = solve(eq, b)\nb_value = solution[0]\nprint(b_value)"
  },
  {
    "example_id": 377,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "288.0"
    ],
    "annotated_answers": [
      "288.0"
    ],
    "solution": "print(((2*(-3))**5)/(-3)**3)"
  },
  {
    "example_id": 378,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25.0",
      "25.0",
      "2.0",
      "26.0"
    ],
    "annotated_answers": [
      "26.0"
    ],
    "solution": "n = symbols('n')\nsum_of_integers = (n - 25)*(n + 25)//2\nprint(floor(sum_of_integers/26))"
  },
  {
    "example_id": 379,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "f_6 = (6-1)*(6-3)*(6-7)*(6-9)\nf_4 = (4-1)*(4-3)*(4-7)*(4-9)\nprint(f_6 - f_4)"
  },
  {
    "example_id": 380,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "17056.442159492355"
    ],
    "annotated_answers": [
      "10455.0"
    ],
    "solution": "# initial investment\nI = 10000\n\n# annual interest rates\nr1 = 0.04\nr2 = 0.05\n\n# time periods\nt1 = 6\nt2 = 6\n\n# total time periods\nT = t1 + t2\n\n# semi-annual compounding\ndef semi_annual_compound(I, r, t):\n    return I * (1 + r/2)**(2*t)\n\n# semi-annual compounding with interest rate r1\nS1 = semi_annual_compound(I, r1, t1)\n\n# semi-annual compounding with interest rate r2\nS2 = semi_annual_compound(S1, r2, t2)\n\nprint(S2)"
  },
  {
    "example_id": 381,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "30.0",
      "2.0",
      "15.0",
      "2.0",
      "10.0",
      "6.0",
      "210.0"
    ],
    "annotated_answers": [
      "60.0"
    ],
    "solution": "a, b, c, d = symbols('a, b, c, d')\np1 = Point(a, b)\np2 = Point(c, d)\np3 = Point(12, 20)\np4 = Point(15, 60)\ns1 = Polygon(p1, p2, p3, p4)\nprint(s1.area)"
  },
  {
    "example_id": 382,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "4.0",
      "8.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "from sympy import Min\n\nx, y = symbols('x y')\n\nexpr = x**2 + y**2 + 2*x - 4*y + 8\n\nprint(Min(expr))"
  },
  {
    "example_id": 383,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "14400.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x = symbols('x')\neq = (120 - sqrt(x))**(1/2)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 384,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "85.0"
    ],
    "annotated_answers": [
      "-23.5"
    ],
    "solution": "# Create a list of the lines\nlines = [((1/3)*x + 7, 2*x + 5) for x in range(0, 10)]\n\n# Find the x-intercepts of each line\nx_intercepts = [line[0] for line in lines]\n\n# Add the x-intercepts together\nx_intercepts_sum = sum(x_intercepts)\n\n# Round the sum to the nearest tenth\nprint(round(x_intercepts_sum, 1))"
  },
  {
    "example_id": 385,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "17.0",
      "3.0",
      "3.0",
      "14.0",
      "5.0",
      "5.0",
      "41.0",
      "5.0",
      "3.0",
      "5.0",
      "-3.0",
      "5.0",
      "3.0",
      "5.0",
      "50.0",
      "3.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq1 = 3*x + y - 17\neq2 = 5*y + z - 14\neq3 = 3*x + 5*z - 41\n\nsolution1 = solve(eq1, x)\nsolution2 = solve(eq2, y)\nsolution3 = solve(eq3, z)\n\nx_value = solution1[0]\ny_value = solution2[0]\nz_value = solution3[0]\n\nprint(x_value)\nprint(y_value)\nprint(z_value)\n\nsum = x_value + y_value + z_value\nprint(sum)"
  },
  {
    "example_id": 386,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "90.0"
    ],
    "annotated_answers": [
      "5400.0"
    ],
    "solution": "m = 1.5\nx = 60\ny = m * x\nprint(y)"
  },
  {
    "example_id": 387,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "16.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "print(4/3*6/4*8/5*10/6*12/7*14/8)"
  },
  {
    "example_id": 388,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "18.0",
      "45.0",
      "2.0",
      "5.0",
      "6.0",
      "15.0"
    ],
    "annotated_answers": [
      "73.0"
    ],
    "solution": "A, B = symbols('A B')\nC = 2*A + 5*B\nD = 9*C + 3*C*C\nprint(D)"
  },
  {
    "example_id": 389,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "7.0",
      "2.0",
      "2.0",
      "2.0",
      "7.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "p = symbols('p')\nq = symbols('q')\neq = (p**2 - 2*p - 3) + (q**2 - 2*q - 3)\nsolution = solve(eq, p)\np_value = solution[0]\nsolution = solve(eq, q)\nq_value = solution[0]\nprint((p_value + 1)*(q_value + 1))"
  },
  {
    "example_id": 390,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "4.0",
      "4.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "A = symbols('A')\nB = symbols('B')\nC = (A + B)/2\nD = (C + 8)/2\nprint(D)"
  },
  {
    "example_id": 391,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "7.0"
    ],
    "annotated_answers": [
      "78.0"
    ],
    "solution": "x, y = symbols('x y')\neq = (1/x) + (1/y) - (1/7)\nsolution = solve(eq, x, y)\nsum = 0\nfor i in solution:\n    sum += i[0]\nprint(sum)"
  },
  {
    "example_id": 392,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "2.0"
    ],
    "solution": ""
  },
  {
    "example_id": 393,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = 2*x - 9*y - 14\neq2 = 6*x - y - 42\nsol = solve([eq1, eq2], [x, y])\nprint(sol)"
  },
  {
    "example_id": 394,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "3.0",
      "1.0",
      "2.0",
      "17.0",
      "1.0",
      "2.0",
      "3.0",
      "4.0",
      "2.0",
      "2.0",
      "5.0",
      "2.0",
      "15.0",
      "2.0",
      "2.0",
      "4.0",
      "2.0",
      "5.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "# Find the constant c\nx1 = symbols('x1')\nx2 = symbols('x2')\neq1 = (x1**2 - 4*x1 + 3)*(x1 + 5)\neq2 = (x2**2 + 4*x2 - 5)*(x2 - c)\neq = eq1 - eq2\nsolution = solve(eq, c)\nc_value = solution[0]\nprint(c_value)"
  },
  {
    "example_id": 395,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "simplest_form = (2**10 - 2**8) / (2**7 - 2**6)\nprint(simplest_form)"
  },
  {
    "example_id": 396,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-5.0"
    ],
    "annotated_answers": [
      "-5.0"
    ],
    "solution": "x = symbols('x')\neq = (x+2)/3 - (4/(x+1))\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 397,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0",
      "-4.0",
      "2.0",
      "2.0",
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "2.5"
    ],
    "solution": "# Solve for a, b, and c in y = ax^2 + bx + c\na, b, c = symbols('a, b, c')\n\n# Find the two roots of the equation\nroots = solve((a*x**2 + b*x + c).expand(), x)\n\n# Find the greater root\ngreater_root = roots[1]\n\n# Find the value of n\nn = greater_root**2 - 4\n\n# Print the value of n\nprint(n)"
  },
  {
    "example_id": 398,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "28.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "d, c = symbols('d c')\neq1 = d - 6*c - 4\neq2 = 2*d - 9*c - 20\nd_over_c = solve((eq1, eq2), (d, c))\nprint(d_over_c)"
  },
  {
    "example_id": 399,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.000282805429864"
    ],
    "annotated_answers": [
      "0.015"
    ],
    "solution": "n = 3\nsum = 0\ni = 0\nwhile(True):\n    term = (3/(103**(2*i)))\n    sum = sum + term\n    if (term < 10**(-10)):\n        break\n    i = i + 1\nprint(sum)"
  },
  {
    "example_id": 400,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "import numpy as np\nx = np.arange(0, 100)\ny = -265*x+2800\nmax_workers = np.where(y<0, x[0], x[1])\nprint(max_workers)"
  },
  {
    "example_id": 401,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-9.0",
      "6.0",
      "3.0"
    ],
    "annotated_answers": [
      "117.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 + 18*x - 27\nsolution = solve(eq, x)\npositive_solution = solution[0]\nprint(positive_solution)"
  },
  {
    "example_id": 402,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0",
      "7.0",
      "8.0",
      "8.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "candies = ['chocolate', 'vanilla', 'peppermint', 'lemon']\nn = 15\n\n# number of peppermint and lemon candies together\npeppermint_lemon = n // 2\n\n# number of chocolate and vanilla candies together\nchocolate_vanilla = n - peppermint_lemon\n\n# number of lemon candies\nlemon = n - peppermint_lemon\n\n# number of peppermint candies\npeppermint = peppermint_lemon\n\nprint(f\"{candies[3]} candies: {lemon}\")\nprint(f\"{candies[2]} candies: {peppermint}\")\nprint(f\"{candies[0]} candies: {chocolate_vanilla}\")\nprint(f\"{candies[1]} candies: {chocolate_vanilla}\")"
  },
  {
    "example_id": 403,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "3.0",
      "25.0",
      "1.0",
      "3.0",
      "2.0",
      "3.0",
      "3.0",
      "3.0",
      "25.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\nz = symbols('z')\n\neq = (x**3) + (y**3) + (z**3) - 25\nsolution = solve(eq, x, y, z)\nx_value = solution[0]\ny_value = solution[1]\nz_value = solution[2]\nprint(x_value)\nprint(y_value)\nprint(z_value)"
  },
  {
    "example_id": 404,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "h = lambda x: sqrt((x+3)/2)\nprint(h(-1))"
  },
  {
    "example_id": 405,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "14.0",
      "2.0"
    ],
    "annotated_answers": [
      "26.0"
    ],
    "solution": "x = symbols('x')\neq = (2*x**2) - (4*x) + 9\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 406,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "def f(x):\n    if x % 2 == 0:\n        return x/2\n    else:\n        return 3*x + 1\n\na = 14\nb = f(a)\nprint(b)"
  },
  {
    "example_id": 407,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-117.0",
      "4.0",
      "180.0",
      "3.0",
      "39.0",
      "2.0",
      "17.0",
      "53.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "x = symbols('x')\neq = (7+8*x)-3*(2+6*x+2*x**2)+9*(1+3*x+4*x**2+12*x**3)-9*(7-x**2-8*x**3+13*x**4)\neq = eq.simplify()\nprint(eq)"
  },
  {
    "example_id": 408,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-6.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "for x in range(-8, 8):\n    if abs(x-1) == 7:\n        print(x)"
  },
  {
    "example_id": 409,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0",
      "2.0",
      "6.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "from sympy import symbols, solve\nx = symbols('x')\nf = (2)/(x**2+x-6)\nprint(f.as_numer_denom())"
  },
  {
    "example_id": 410,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "15.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "a = 2\nb = 3\nc = 4\nexpr = (b-c)**2 + a*(b+c)\nprint(expr)"
  },
  {
    "example_id": 411,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "from sympy import symbols, solve\nx = symbols('x')\ny = x**2 - 7*x + 7\neq = y - (-3)\nsolution = solve(eq, x)\nx1, x2 = solution[0], solution[1]\nprint(x1 + x2)"
  },
  {
    "example_id": 412,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "3.0"
    ],
    "annotated_answers": [
      "112.0"
    ],
    "solution": "A = 2\nB = 3\nC = 1\n\nexpression = (A + B*sqrt(3))/(C)\n\nprint(expression)"
  },
  {
    "example_id": 413,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "3.0",
      "3.0",
      "3.0",
      "7.0",
      "7.0",
      "7.0",
      "7.0"
    ],
    "annotated_answers": [
      "630.0"
    ],
    "solution": "# Create symbols\na = symbols('a')\nb = symbols('b')\nc = symbols('c')\nd = symbols('d')\n\n# Create expressions\nx = 5*a + 5*b + 5*c + 5*d\ny = 2*a + 2*b + 2*c + 2*d\n\n# Calculate the difference\ndiff = x - y\n\n# Calculate the sum\nsum = x + y\n\n# Print the result\nprint('The positive difference is:', diff)\nprint('The sum is:', sum)"
  },
  {
    "example_id": 414,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "0.0",
      "7.0",
      "7.0",
      "9.0",
      "9.0",
      "10.0",
      "10.0",
      "11.0",
      "11.0",
      "12.0",
      "12.0",
      "13.0",
      "13.0",
      "14.0",
      "14.0",
      "15.0",
      "15.0"
    ],
    "annotated_answers": [
      "16384.0"
    ],
    "solution": "k_1 = -15\nk_2 = -1\nk_3 = 3\nk_4 = 5\nk_5 = 7\nk_6 = 9\nk_7 = 11\nk_8 = 13\nk_9 = 15\n\nfor k in [k_1, k_2, k_3, k_4, k_5, k_6, k_7, k_8, k_9]:\n    if (k + 15) % 2 == 0:\n        a = (k + 15) // 2\n        b = a\n        print(a, b)"
  },
  {
    "example_id": 415,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "13.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "import math\n\nsegment_length = math.hypot(1 - (-4), 13 - 1)\nprint(segment_length)"
  },
  {
    "example_id": 416,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "1.0",
      "2.0",
      "3.0",
      "4.0",
      "5.0",
      "6.0",
      "7.0",
      "8.0",
      "9.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "for i in range(10):\n    if (i**2) - i!= 100:\n        print(i)"
  },
  {
    "example_id": 417,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0",
      "2.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x = symbols('x')\nf = (12/(x**2))*(x**4)/(14*x)*(35/3*x)\nprint(f)"
  },
  {
    "example_id": 418,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-8.5"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "# Find slope of line l\nm = 4\nb = -7\n\n# Find slope of line m\na = -1 / m\n\n# Find y-coordinate of point on m with x-coordinate 6\ny = a * 6 + b\nprint(y)"
  },
  {
    "example_id": 419,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "26.0",
      "26.0",
      "1.0",
      "1.0"
    ],
    "annotated_answers": [
      "41.0"
    ],
    "solution": "# define function\ndef f(x):\n    return x**2 + 1\n\n# define domain\ndomain = [-5, 5]\n\n# define range\nrange = [f(domain[0]), f(domain[1])]\n\n# define x\nx = symbols('x')\n\n# define y\ny = symbols('y')\n\n# define a\na = symbols('a')\n\n# define b\nb = symbols('b')\n\n# define c\nc = symbols('c')\n\n# define d\nd = symbols('d')\n\n# solve for a\na_solution = solve(range[0] - a, a)\n\n# solve for b\nb_solution = solve(range[1] - b, b)\n\n# solve for c\nc_solution = solve(f(x) - c, x)\n\n# solve for d\nd_solution = solve(f(y) - d, y)\n\n# print solutions\nprint(\"a = {}\".format(a_solution[0]))\nprint(\"b = {}\".format(b_solution[0]))\nprint(\"c = {}\".format(c_solution[0]))\nprint(\"d = {}\".format(d_solution[0]))"
  },
  {
    "example_id": 420,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "3.0",
      "2.0",
      "4.0",
      "4.0",
      "2.0",
      "4.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x1 = symbols('x1')\nx2 = symbols('x2')\nx3 = symbols('x3')\nx4 = symbols('x4')\n\nm = (x1**2 + x2**2 + x3**2 + x4**2)/4\nn = (x1**2 + 5*x2**2 - 6)/4\n\nprint(m - n)"
  },
  {
    "example_id": 421,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\nx = (3**4 - 3**3) / (3**3 - 3**2)\nprint(x)"
  },
  {
    "example_id": 422,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\nexpr = (x-5)/(x**2-9)\nsolution = solve(expr, x)\nprint(solution)"
  },
  {
    "example_id": 423,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "6.0",
      "8.0",
      "144.0",
      "3.0",
      "3.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "P = symbols('P')\nQ = symbols('Q')\n\n# Calculate P*Q\npq = (P + Q)/2\n\n# Calculate 3*pq\nthree_pq = 3 * pq\n\n# Calculate 3*(6*8)\nthree_six_eight = 3 * (6 * 8)\n\nprint(\"3*(6*8) = \", three_six_eight)\nprint(\"3*pq = \", three_pq)\nprint(\"pq = \", pq)"
  },
  {
    "example_id": 424,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "33.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "a, b = symbols('a b')\neq1 = a + b - 3\neq2 = (a - b)**2 - 33\nsolution = solve([eq1, eq2], [a, b])\na_value = solution[0][0]\nb_value = solution[0][1]\nprint(abs(a_value - b_value))"
  },
  {
    "example_id": 425,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-7.0",
      "2.0",
      "-3.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "z = symbols('z')\na, b, c, d = symbols('a b c d')\neq1 = 2*z**2 + 13*z + 21\neq2 = (z + a)*(2*z + b)\nsol1 = solve(eq1, z)\nsol2 = solve(eq2, z)\nprint(sol1)\nprint(sol2)\nprint(2*a + b)"
  },
  {
    "example_id": 426,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "1.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "# Define the function f\nf = lambda x: 9 - 2*x if x <= 3 else a*x + b\n\n# Define the function g\ng = lambda x: f(f(x))\n\n# Find the value of a + b\nprint(g(1) - 1)"
  },
  {
    "example_id": 427,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "import math\na = -3\nb = 2\nc = -1\nans = a + b + c\nprint(ans)"
  },
  {
    "example_id": 428,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0",
      "36.0"
    ],
    "annotated_answers": [
      "32.0"
    ],
    "solution": "slope = (8 - 0) / (7 - 9)\ny_intercept = 8 - (slope * 7)\nprint(slope, y_intercept)"
  },
  {
    "example_id": 429,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "113.0",
      "2.0",
      "127.0",
      "2.0"
    ],
    "annotated_answers": [
      "22.0"
    ],
    "solution": "a, b, c = symbols('a b c')\n\ndiff = b - a\n\nsum = (a + b + c) / 2\n\neq1 = diff - 14\n\neq2 = sum - 120\n\nsol = solve([eq1, eq2], [a, b, c])\n\nprint(sol)"
  },
  {
    "example_id": 430,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "3.0",
      "4.0",
      "5.0",
      "6.0",
      "7.0",
      "8.0",
      "9.0",
      "10.0",
      "11.0",
      "12.0",
      "13.0",
      "14.0",
      "15.0",
      "16.0",
      "17.0",
      "18.0",
      "19.0",
      "20.0"
    ],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "def letter_count(n):\n    if 0 <= n <= 20:\n        return len(str(n))\n    else:\n        return None\n\ndomain = set(range(21))\nrange_ = set(letter_count(n) for n in domain)\nprint(domain - range_)"
  },
  {
    "example_id": 431,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "50.0"
    ],
    "annotated_answers": [
      "50.0"
    ],
    "solution": "x = symbols('x')\neq = ((sqrt(12*x)+12)*(sqrt(3*x)-6) - (4*(x+3)+x-34))\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 432,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\nexpr = x**2 - 6*x + 13\nsolution = solve(expr, x)\nprint(solution)"
  },
  {
    "example_id": 433,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "-2.0",
      "2.0",
      "12.0",
      "15.0",
      "-2.0",
      "2.0",
      "12.0",
      "15.0",
      "-2.0",
      "2.0",
      "11.0",
      "15.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x = symbols('x')\ny = -2*x**2 - 12*x - 15\np = Point(x, y)\nprint(p)\nprint(p.x, p.y)\nprint(p.x + p.y)"
  },
  {
    "example_id": 434,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "10.0",
      "4.0",
      "10.0",
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x, y = symbols('x y')\neq = x**2 - 4*x + y**2 - 6*y - 36\nsolution = solve(eq, [x, y])\nprint(solution)"
  },
  {
    "example_id": 435,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "f = lambda x: 2*x-3\ng = lambda x: x+1\nprint(g(f(5)-1))"
  },
  {
    "example_id": 436,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "3317.0",
      "3317.0"
    ],
    "annotated_answers": [
      "107.0"
    ],
    "solution": "n = 9951\np = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nfor i in range(len(p)):\n    if n % p[i] == 0:\n        while n % p[i] == 0:\n            n = n // p[i]\n        print(p[i], n)\n        break\nif n > 1:\n    print(n)"
  },
  {
    "example_id": 437,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-10.0",
      "3.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "x = symbols('x')\neq = 3*x**2 + 14*x + 8\nsolution = solve(eq, x)\nA = solution[0]\nB = solution[1]\nprint(A-B)"
  },
  {
    "example_id": 438,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0"
    ],
    "annotated_answers": [
      "228.3"
    ],
    "solution": "height = symbols('height')\ngrowth_rate = symbols('growth_rate')\n\n# Solve for height\nsolution = solve(height + growth_rate * 2, height)\n\n# Print the height\nprint(solution)"
  },
  {
    "example_id": 439,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\nf = (1/(x-64)) + (1/(x**2-64)) + (1/(x**3-64))\nsolution = solve(f, x)\nprint(len(solution))"
  },
  {
    "example_id": 440,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "n = 5\nsum_of_first_n_positive_odd_integers = 0\nfor i in range(1, n + 1):\n    if i % 2!= 0:\n        sum_of_first_n_positive_odd_integers += i\nprint(sum_of_first_n_positive_odd_integers)"
  },
  {
    "example_id": 441,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0",
      "2.0",
      "3.0",
      "6.0",
      "2.0",
      "18.0",
      "3.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq = ((y - x)**2)/(y - z)*(z - x) + ((z - y)**2)/(z - x)*(x - y) + ((x - z)**2)/(x - y)*(y - z)\nsolution = solve(eq, y)\nprint(solution)"
  },
  {
    "example_id": 442,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "3.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "A, B, C = symbols('A B C')\neq = (A*sqrt(B))/(C) - 9/(2*sqrt(3))\nsolution = solve(eq, [A, B, C])\nA_value = solution[0][0]\nB_value = solution[0][1]\nC_value = solution[0][2]\nprint(A_value)\nprint(B_value)\nprint(C_value)\nprint(A_value + B_value + C_value)"
  },
  {
    "example_id": 443,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "10.0",
      "7.0",
      "812.0",
      "3.0",
      "2.0",
      "10.0",
      "7.0",
      "35.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq = 6*x*y*z + 30*x*y + 21*x*z + 2*y*z + 105*x + 10*y + 7*z - 812\nsolution = solve(eq, [x, y, z])\nx_value, y_value, z_value = solution[0]\nx_value = floor(x_value)\ny_value = floor(y_value)\nz_value = floor(z_value)\nprint(x_value + y_value + z_value)"
  },
  {
    "example_id": 444,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "2.0",
      "45.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "217.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = x + y - 7\neq2 = 3*x + y - 45\nx_value = solve(eq1, x)[0]\ny_value = solve(eq2, y)[0]\nx_sq = x_value**2\ny_sq = y_value**2\nresult = x_sq - y_sq\nprint(result)"
  },
  {
    "example_id": 445,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "14.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "if 25 - 11 > 11:\n    print(25 - 11)\nelse:\n    print(11)"
  },
  {
    "example_id": 446,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "-1.0",
      "-1.0",
      "2.0",
      "1.0",
      "-1.0",
      "2.0",
      "2.0",
      "-1.0"
    ],
    "annotated_answers": [
      "29.0"
    ],
    "solution": "x, y = symbols('x y')\nboundary = Polygon(Point(-1, -1), Point(1, -1), Point(1, 1), Point(-1, 1))\nregion = Polygon(Point(-1, -1), Point(1, -1), Point(1, 1), Point(-1, 1))\nregion_inside = region.intersection(boundary)\nprint(region_inside)"
  },
  {
    "example_id": 447,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "print((3*5) - (5*3))"
  },
  {
    "example_id": 448,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-1.0",
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "# Define a function for the objective function\ndef f(x):\n    return 9*x**2 + 18*x + 7\n\n# Find the minimum value of the function\nx = symbols('x')\nsolution = solve(f(x), x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 449,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-35.0",
      "2.0",
      "80.0",
      "62.0",
      "45.0",
      "2.0",
      "72.0",
      "27.0",
      "2.0",
      "3.0",
      "5.0",
      "3.0"
    ],
    "annotated_answers": [
      "28.0"
    ],
    "solution": "a, b, c, d = symbols('a, b, c, d')\n\n# Anna's time\nA = 8*a + 10*b + 6*c\n\n# Bertram's time\nB = 3*(a + b + c)\n\n# Carli's time\nC = 4*(a + b + c)\n\n# David's time\nD = 2*b\n\n# Sum of the time periods\nS = a + b + c + d\n\n# Condition\nE = A/S + B/C + D/C\n\n# Solve\nsol = solve(E, a, b, c, d)\n\n# Print the result\nprint(sol)"
  },
  {
    "example_id": 450,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "-7.0"
    ],
    "solution": "b = 1\nc = 1\nx_range = range(-3, 4)\n\nfor x in x_range:\n    if x**2 + b*x + c > 0:\n        b_c = b + c\n        break\n    else:\n        b_c = -1\n\nprint(b_c)"
  },
  {
    "example_id": 451,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "512.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "f = lambda x: x if x >= 0 else x**2\nf_512 = f(f(f(f(512))))\nprint(f_512)"
  },
  {
    "example_id": 452,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "21.0"
    ],
    "solution": "A = 1\nB = 2\nC = 2\nr = 5\n\nprint(A+B+C+r)"
  },
  {
    "example_id": 453,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "5.0"
    ],
    "annotated_answers": [
      "125.0"
    ],
    "solution": "from sympy import symbols, sqrt\n\nx = symbols('x')\neq = x**5 + x**5 + x**5 + x**5 + x**5\nsolution = sqrt(eq)\nprint(solution)"
  },
  {
    "example_id": 454,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "41.0"
    ],
    "solution": "john = 27\nfather = 27\n\n# reverse digits in John's age\ndef reverse_digits(age):\n    age = str(age)\n    age = age[::-1]\n    age = int(age)\n    return age\n\n# sum of digits in each age\ndef sum_digits(age):\n    age = str(age)\n    age = [int(x) for x in age]\n    age = sum(age)\n    return age\n\n# calculate father's age\nfather = reverse_digits(john)\n\n# positive difference between ages\ndifference = john - father\n\n# calculate sum of digits in father's age\nfather = sum_digits(father)\n\n# calculate sum of digits in father's age\njohn = sum_digits(john)\n\n# calculate number of years in father's age\nyears = father - john\n\n# print results\nprint('Number of years in father\\'s age:', years)"
  },
  {
    "example_id": 455,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "def f(n):\n    if n % 2 == 0:\n        return n**2 - 3*n + 1\n    else:\n        return n**2 + 1\n\ndef solve_f(n):\n    return f(f(f(f(f(f(n))))))\n\nprint(solve_f(2))"
  },
  {
    "example_id": 456,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "14.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "from sympy import sqrt, simplify\n\ndef rationalize(expr):\n    a = simplify(expr).as_numer_denom()\n    return a\n\nexpr = 1/(sqrt(2)+sqrt(8)+sqrt(32))\n\na = rationalize(expr)\nprint(a)"
  },
  {
    "example_id": 457,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "3.0",
      "3.0",
      "4.0",
      "2.0",
      "3.0",
      "3.0",
      "3.0",
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "from sympy import simplify, numer, denom, sqrt\na, b = symbols('a b')\neq = (3/sqrt(16)) + (1/sqrt(3))\neq_rationalized = simplify(eq)\na_value = numer(eq_rationalized)**2*b + denom(eq_rationalized)*b\nb_value = numer(eq_rationalized)*numer(eq_rationalized)\nprint(a_value)\nprint(b_value)"
  },
  {
    "example_id": 458,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = log(81/256, 3/4)\nprint(x)"
  },
  {
    "example_id": 459,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-20.0",
      "4.0",
      "4.0",
      "3.0",
      "9.0",
      "2.0",
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "x = symbols('x')\na = 1 + 2*x\nb = 2*(1 + 2*x + 3*x**2)\nc = 3*(1 + 2*x + 3*x**2 + 4*x**3)\nd = 4*(1 + 2*x + 3*x**2 + 4*x**3 + 5*x**4)\n\n# simplify\nsimplify = a - b + c - d\nprint(simplify)"
  },
  {
    "example_id": 460,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "f = {0: 0, 1: 0, 2: 1, 3: 3, 4: 6}\ng = {x: f[x] - x for x in f}\nprint(len(set(g.values())))"
  },
  {
    "example_id": 461,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "4.0",
      "5.0",
      "11.0"
    ],
    "annotated_answers": [
      "208.0"
    ],
    "solution": "a, b = symbols('a, b')\neq = 2*a + b - (5*a - 4)*(b - 1)/3\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 462,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "n = 7\nprint(n)"
  },
  {
    "example_id": 463,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "solutions = []\nfor i in range(5):\n    if abs(2 - i) == 3:\n        solutions.append(i)\nprint(sum(solutions))"
  },
  {
    "example_id": 464,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-7.0",
      "2.0"
    ],
    "annotated_answers": [
      "81.0"
    ],
    "solution": "x = symbols('x')\nmax_value = solve(4*(x+7)*(2-x), x, max=True)\nprint(max_value)"
  },
  {
    "example_id": 465,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "4.0",
      "4.0",
      "5.0",
      "5.0",
      "6.0",
      "6.0"
    ],
    "annotated_answers": [
      "78.0"
    ],
    "solution": "n = symbols('n')\ntotal_chimes = 0\nfor i in range(12):\n    total_chimes = total_chimes + floor(n**(i+1)/(i+1))\nprint(total_chimes)"
  },
  {
    "example_id": 466,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "81.0"
    ],
    "solution": "f = lambda x: floor(x**2) + 2\nf_inv = lambda y: sqrt(y - 2)\nf_inv_11 = f_inv(11)\nprint(f_inv_11)"
  },
  {
    "example_id": 467,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "45.0"
    ],
    "annotated_answers": [
      "45.0"
    ],
    "solution": "def f(x):\n    if x == 1:\n        return 7\n    elif x == 2:\n        return 4\n    elif x == 3:\n        return 1\n    elif x == 4:\n        return 8\n    elif x == 5:\n        return 5\n    elif x == 6:\n        return 2\n    elif x == 7:\n        return 9\n    elif x == 8:\n        return 6\n    elif x == 9:\n        return 3\n\ntotal = 0\nfor i in range(1, 10):\n    total += f(i)\nprint(total)"
  },
  {
    "example_id": 468,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "34.875"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "# find the value of\nx = 8*6**2 - 3*11\nx = x/8 + 3\nprint(x)"
  },
  {
    "example_id": 469,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = 3\nprint(x)"
  },
  {
    "example_id": 470,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x = 3\nprint(x)"
  },
  {
    "example_id": 471,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.0",
      "5.0",
      "4.0",
      "2.0",
      "1.0",
      "3.0",
      "5.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "8.0",
      "2.0",
      "2.0",
      "3.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "5.0"
    ],
    "annotated_answers": [
      "-6.0"
    ],
    "solution": "x = symbols('x')\neq = (2*(x+4)**(3))/(2*(2*x-4)**(3)) - 2\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 472,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-7.0",
      "82.0",
      "82.0",
      "7.0"
    ],
    "annotated_answers": [
      "89.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 + 14*x - 33\nsolution = solve(eq, x)\na_value = solution[0]\nb_value = solution[1]\nprint(a_value)\nprint(b_value)"
  },
  {
    "example_id": 473,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "1.0",
      "3.0",
      "2.0",
      "3.0",
      "2.0",
      "1.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\nexpr = sqrt(x**3 - 2**y)\nsol = solve(expr, x)\nx_value = sol[0]\nprint(x_value)"
  },
  {
    "example_id": 474,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "53.0"
    ],
    "solution": "# roots of the polynomial\nalpha = symbols('alpha')\nbeta = symbols('beta')\n\n# value of alpha squared plus beta squared\nprint(alpha**2 + beta**2)"
  },
  {
    "example_id": 475,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "9.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "# Define function\ndef f(x):\n    return 5*x + 4\n\n# Find value of f(1)\nprint(f(1))"
  },
  {
    "example_id": 476,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "17574.0"
    ],
    "annotated_answers": [
      "15554.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\nd = symbols('d')\n\nn = 6\nm = 7\n\n# Succeeding term\nT_n = 2222 + 1010*n\nT_m = 2222 + 1010*m\n\n# Sum of sixth and seventh terms\nsum = T_n + T_m\nprint(sum)"
  },
  {
    "example_id": 477,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "13.0",
      "2.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "p1 = Point(7, 4)\np2 = Point(6, 3)\np3 = p1.midpoint(p2)\nprint(p3.x)"
  },
  {
    "example_id": 478,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3600.0"
    ],
    "annotated_answers": [
      "3600.0"
    ],
    "solution": "area_before = 3491 * 3491\narea_after = area_before - 60 * 60\nprint(area_after - area_before)"
  },
  {
    "example_id": 479,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "4.0",
      "4.0",
      "16.0",
      "16.0",
      "-60.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\n\n# y = x^4\nf1 = x**4\n\n# y = 7x^2 - 10\nf2 = 7*x**2 - 10\n\n# m > n\nn = -10\nm = 7*n\n\n# find intersection points\np1 = solve((f1 - f2).subs(x, x), x)\np2 = solve((f1 - f2).subs(x, -x), x)\np3 = solve((f1 - f2).subs(x, x**(1/2)), x)\np4 = solve((f1 - f2).subs(x, -x**(1/2)), x)\n\n# find intersection x-coordinates\nx1 = p1[0]\nx2 = p2[0]\nx3 = p3[0]\nx4 = p4[0]\n\n# find intersection y-coordinates\ny1 = f1.subs(x, x1)\ny2 = f1.subs(x, x2)\ny3 = f1.subs(x, x3)\ny4 = f1.subs(x, x4)\n\n# print the x-coordinates\nprint(\"x-coordinates:\")\nprint(\"{0}, {1}, {2}, {3}\".format(x1, x2, x3, x4))\n\n# print the y-coordinates\nprint(\"y-coordinates:\")\nprint(\"{0}, {1}, {2}, {3}\".format(y1, y2, y3, y4))\n\n# print the difference between m and n\nprint(\"m - n:\")\nprint(m - n)"
  },
  {
    "example_id": 480,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "200.0"
    ],
    "annotated_answers": [
      "200.0"
    ],
    "solution": "print((15 + 5) * (15 - 5))"
  },
  {
    "example_id": 481,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.6"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "x = symbols('x')\nf = (2/(x + 1))\nf_inv = 1/(f)\nf_inv_value = f_inv.subs(x, 1/5)\nprint(f_inv_value)"
  },
  {
    "example_id": 482,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "9.0",
      "3.0"
    ],
    "annotated_answers": [
      "-7.0"
    ],
    "solution": "x, y = symbols('x y')\neq = x**2 + 6*x + y**2 + 8*y\ncenter = solve(eq, (x, y))[0]\nprint(center)"
  },
  {
    "example_id": 483,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "4.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq1 = 4*x - 3*y\neq2 = 2*x + y - 3*x + 2*y\nsolution1 = solve(eq1, x)\nsolution2 = solve(eq2, y)\nx_value = solution1[0]\ny_value = solution2[0]\nprint(eq2.subs({x: x_value, y: y_value}))"
  },
  {
    "example_id": 484,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0",
      "3.0"
    ],
    "annotated_answers": [
      "-15.0"
    ],
    "solution": "n = symbols('n')\neq = (2 - (-1)) * (n - 1) - 5\nsolution = solve(eq, n)\nn_value = solution[0]\nprint(n_value)"
  },
  {
    "example_id": 485,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "print(floor(abs(-23/9)))"
  },
  {
    "example_id": 486,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1652.0",
      "28.0",
      "3473.0",
      "413.0",
      "7.0",
      "3473.0",
      "56.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x, y = symbols('x y')\neq = (x*y - 56)\neq1 = (x/y - 1)/7 + (y/x - 1)/14 - 4\nsolution = solve([eq, eq1], [x, y])\nx_value = solution[0][0]\nprint(x_value)"
  },
  {
    "example_id": 487,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "a = 3\nb = 5\nprint(b - a)"
  },
  {
    "example_id": 488,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "f = lambda x: g(g(x)) - g(x)\ng = lambda x: 2*x - 1\nf_value = f(3)\nprint(f_value)"
  },
  {
    "example_id": 489,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.33333333333333"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "c = 6\nd = solve(c/d - 9/8, d)\nprint(d)"
  },
  {
    "example_id": 490,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "n_list = []\nfor n in range(2, 100):\n    if n * (2 * n - 3) >= 4 * (n - 2) * (n + 8):\n        n_list.append(n)\nprint(sum(n_list))"
  },
  {
    "example_id": 491,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "13.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "# Annual energy saving\ne = 1200\n# Annual cost of maintenance\nm = 650\n# One time installation cost\ni = 10000\n# Total cost\nc = i + (m * 10)\n# Number of years it takes to recuperate the costs\nn = floor(c/e)\nprint(n)"
  },
  {
    "example_id": 492,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "1.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x_mid = (3 + 5) / 2\ny_mid = (1 + 1) / 2\nprint(x_mid, y_mid)"
  },
  {
    "example_id": 493,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "5.0",
      "2.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "x = symbols('x')\nsqrt_x_plus_1 = sqrt(x+1)\nsolution = solve(sqrt_x_plus_1 - x, x)\nsolution = solution[0]\nprint(solution)"
  },
  {
    "example_id": 494,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "24.0",
      "2.0",
      "24.0",
      "2.0",
      "19.0",
      "35.0",
      "2.0",
      "2.0",
      "12.0",
      "3.0"
    ],
    "annotated_answers": [
      "-9.0"
    ],
    "solution": "x = symbols('x')\neq = 24*x**2 - 19*x - 35\nfactors = factor(eq)\na = symbols('a')\nb = symbols('b')\nc = symbols('c')\neq2 = a*x**2 + b*x + c\nsolution = solve([eq2-factors, a*b-3*c], [a, b, c])\na_value = solution[0][0]\nb_value = solution[0][1]\nc_value = solution[0][2]\nprint(a_value, b_value, c_value)\nprint(a_value*b_value - 3*c_value)"
  },
  {
    "example_id": 495,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "14.0"
    ],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "from sympy import solve\n\nx, y, z = symbols('x y z')\neq1 = 3*x + 4*y - 12*z - 10\neq2 = -2*x - 3*y + 9*z + 4\n\nsolution = solve([eq1, eq2], [x, y])\nx_value = solution[x]\nprint(x_value)"
  },
  {
    "example_id": 496,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "64.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\neq = log(64*x,8)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 497,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-31.0"
    ],
    "annotated_answers": [
      "-13.5"
    ],
    "solution": "p = -14\nq = -17\nprint(p + q)"
  },
  {
    "example_id": 498,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "2.0",
      "10.0",
      "4.0"
    ],
    "annotated_answers": [
      "48.0"
    ],
    "solution": "from sympy import symbols, solve\n\nn = 0\nwhile True:\n    n += 1\n    x = 5*n\n    y = 2**n\n    if x > 10:\n        break\n    print(f'{x} {y}')"
  },
  {
    "example_id": 499,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-75.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "a = -2\nd = -20\ne = -53\n\nprint(a + d + e)"
  },
  {
    "example_id": 500,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "-6.5"
    ],
    "solution": "E1 = 2000 * 7 * 10**(-7)\nE2 = 7 * 10**(-7)\na_value = (E1/E2)**(-1)\na_decimal = round(a_value, 1)\nprint(a_decimal)"
  },
  {
    "example_id": 501,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "1056.0"
    ],
    "solution": "n = symbols('n')\neq = n*(n+1)\nsolution = solve(eq, n)\nn_value = solution[0]\nprint(n_value)"
  },
  {
    "example_id": 502,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x = symbols('x')\neq = (x+1)/(x-1) - (x-2)/(x+2)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 503,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "30.0"
    ],
    "annotated_answers": [
      "360.0"
    ],
    "solution": "# Volume of a rectangular prism\ndef volume_rectangular_prism(length, width, height):\n    return length * width * height\n\n# Area of a square\ndef area_square(side):\n    return side * side\n\n# Area of a rectangle\ndef area_rectangle(length, width):\n    return length * width\n\n# Edge lengths\nlength = 5\nwidth = 3\nheight = 2\n\n# Areas\narea_30 = area_square(3)\narea_180 = area_rectangle(5, 3)\narea_24 = area_square(2)\n\n# Volume\nvolume = volume_rectangular_prism(length, width, height)\n\n# Print\nprint('The volume of the right rectangular prism is:', volume, 'cubic centimeters.')"
  },
  {
    "example_id": 504,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "6.0",
      "4.0",
      "6.0",
      "2.0",
      "3.0",
      "48.0",
      "6.0",
      "1.0",
      "3.0"
    ],
    "annotated_answers": [
      "23.0"
    ],
    "solution": "m, n = symbols('m n', integer = True)\nb = symbols('b', positive = True)\na = (m + n) / 2\nb = (m - n) / 2\nc = 3\n\n# Solve for m and n\neq = [\n    (a**2 + b*a + b + c) - (b**2 - 4*a*c),\n    (a**2 + b*a + b + c) - (-b**2 + 4*a*c)\n]\nsolution = solve(eq, [m, n])\n\n# Print m + n\nprint(solution[0][0] + solution[1][0])"
  },
  {
    "example_id": 505,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.25"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "n = 5\nh = 12\nnew_h = 3\nn_new = n * (new_h / h)\nprint(n_new)"
  },
  {
    "example_id": 506,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-5.0",
      "2.0",
      "3.0",
      "7.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "-5.0",
      "3.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "# Define variables\nx, y, z, t, u, v = symbols('x y z t u v')\n\n# Define the equation\neq = 12*x + 18*y + 24*z + 30*t + 36*u + 42*v\n\n# Solve for x\nsolution = solve(eq, x)\nx_value = solution[0]\n\n# Solve for y\nsolution = solve(eq, y)\ny_value = solution[0]\n\n# Solve for z\nsolution = solve(eq, z)\nz_value = solution[0]\n\n# Solve for t\nsolution = solve(eq, t)\nt_value = solution[0]\n\n# Solve for u\nsolution = solve(eq, u)\nu_value = solution[0]\n\n# Solve for v\nsolution = solve(eq, v)\nv_value = solution[0]\n\n# Print the results\nprint(\"x:\", x_value)\nprint(\"y:\", y_value)\nprint(\"z:\", z_value)\nprint(\"t:\", t_value)\nprint(\"u:\", u_value)\nprint(\"v:\", v_value)"
  },
  {
    "example_id": 507,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "3.2"
    ],
    "solution": "def f(x):\n    return 2 * 0.1 * x\n\nprint(f(10))"
  },
  {
    "example_id": 508,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "-18.0"
    ],
    "solution": "x = 14/2\nprint(x)"
  },
  {
    "example_id": 509,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1024.0"
    ],
    "solution": "f = lambda x: x**3\nf_inv = lambda x: x**(-3)\nx = 8\nf_inv_x = f_inv(x)\nf_x = f(x)\nprint(f_inv_x/f_x**(-1))"
  },
  {
    "example_id": 510,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\neq = x - (1/(2 + (1/(x - 2))))\nsolution = solve(eq, x)\npositive_solution = solution[0]\nprint(positive_solution)"
  },
  {
    "example_id": 511,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "0.25"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "# Define a, b, c, d\na, b, c, d = symbols('a b c d')\n\n# Evaluate the expression\nexpr = (a**2 + b**2 + c**2 + d**2)**(1/2)**2\n\n# Print the result\nprint(expr)"
  },
  {
    "example_id": 512,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "18.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "f = lambda x: 5*x**2 + 3*x + 4\nprint(f(-2))"
  },
  {
    "example_id": 513,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "a = 30\nb = 20\nc = 120\nd = 130\ne = (c*a)/100 - (d*b)/100\nprint(e)"
  },
  {
    "example_id": 514,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "144.0"
    ],
    "annotated_answers": [
      "144.0"
    ],
    "solution": "# 13 + 5 = 18\n# 13 - 5 = 8\n# (18)(8) = 144\nprint(144)"
  },
  {
    "example_id": 515,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-5.0",
      "-19.0",
      "-4.0",
      "-84.0",
      "-3.0",
      "-99.0",
      "-2.0",
      "-100.0",
      "-1.0",
      "-99.0",
      "0.0",
      "-84.0",
      "1.0",
      "-19.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "def f(x):\n    return (x+2)**4 - 100\n\ndef find_negative_integer_points(f):\n    negative_integer_points = []\n    for x in range(-10, 10):\n        if f(x) < 0 and x % 1 == 0:\n            negative_integer_points.append((x, f(x)))\n    return negative_integer_points\n\nnegative_integer_points = find_negative_integer_points(f)\nprint(negative_integer_points)"
  },
  {
    "example_id": 516,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "3.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "6.0",
      "3.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "rational = 1/(1 + sqrt(2) - sqrt(3))\nprint(rational)\na, b, c = symbols('a b c')\nsolution = solve(rational - (sqrt(2) + a + sqrt(b))/c, a, b, c)\nprint(solution)\na_value, b_value, c_value = solution[0]\nprint(a_value, b_value, c_value)\nprint(a_value + b_value + c_value)"
  },
  {
    "example_id": 517,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "# define symbols\nx = symbols('x')\na = 6\nb = 10\n\n# find the solutions\nsolutions = solve(x**2 + a**2 - b**2, x)\n\n# find the sum of the solutions\nsum = 0\nfor i in solutions:\n    sum += i\nprint(sum)"
  },
  {
    "example_id": 518,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "4.0",
      "7.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\ny1 = x**2 + 2*x + 7\ny2 = 6*x + b\nsolution = solve([y1-y2], b)\nprint(solution)"
  },
  {
    "example_id": 519,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "17.0"
    ],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "p1 = Point(-2, 6)\np2 = Point(-4, -2)\np1p2 = p1.distance(p2)\nprint(p1p2)"
  },
  {
    "example_id": 520,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "100.0",
      "-200.0",
      "200.0",
      "200.0",
      "200.0"
    ],
    "annotated_answers": [
      "4.5"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\n\n# find the area of the region satisfying the inequalities\narea = (floor(y) - floor(x)) * (floor(-y) - floor(-x))\n\n# find the perimeter of the region satisfying the inequalities\nperimeter = 2 * (floor(y) - floor(x)) + 2 * (floor(-y) - floor(-x))\n\n# convert the area and perimeter from square units to square centimeters\narea_centimeters = area * 100\nperimeter_centimeters = perimeter * 100\n\n# print the results\nprint(\"The area of the region satisfying the inequalities is\", area_centimeters, \"square centimeters.\")\nprint(\"The perimeter of the region satisfying the inequalities is\", perimeter_centimeters, \"square centimeters.\")"
  },
  {
    "example_id": 521,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-8.0",
      "6.0",
      "-6.0",
      "6.0"
    ],
    "annotated_answers": [
      "-15.0"
    ],
    "solution": "x = symbols('x')\neq1 = abs(x) + 1 > 7\neq2 = abs(x + 1) <= 7\nsolution = solve((eq1, eq2), x)\nprint(solution)"
  },
  {
    "example_id": 522,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0",
      "46.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 - 14*x + 3\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 523,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "2300.0"
    ],
    "solution": "# Define the variables\nfeathers, gold, cost, x, y, z = symbols('feathers gold cost x y z')\n\n# Define the equations\neq1 = 8*feathers + 2*gold - cost\neq2 = 14*feathers + 3*gold - cost\n\n# Solve for the cost\nsolution = solve([eq1, eq2], [feathers, gold])\n\n# Print the solution\nprint(solution)"
  },
  {
    "example_id": 524,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "8.0",
      "5.0"
    ],
    "annotated_answers": [
      "-8.0"
    ],
    "solution": "x, y = symbols('x y')\nk = solve(y - x**2 + 8*x - 5, y)\nprint(k)"
  },
  {
    "example_id": 525,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "4.0",
      "2.0",
      "5.0",
      "2.0",
      "-3.0",
      "3.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "# Define the variables\nn1, n2, n3, n4, n5 = symbols('n1:6')\n\n# Define the equations\neq1 = (n1 + n2 + n3 + n4 + n5) - (1 + 3 + 5 + 7 + 9)\neq2 = (n1**2 + n2**2 + n3**2 + n4**2 + n5**2) - (1**2 + 3**2 + 5**2 + 7**2 + 9**2)\n\n# Solve the equations\nsolution = solve([eq1, eq2], [n1, n2, n3, n4, n5])\n\n# Find the smallest even number\nsmallest_even_number = solution[0][0]\n\nprint(smallest_even_number)"
  },
  {
    "example_id": 526,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "3.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x, y = symbols('x, y')\nexpr = 2*x**3 - 3*y**2\nexpr = expr/6\nprint(expr)"
  },
  {
    "example_id": 527,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "158.0"
    ],
    "solution": "x, y = symbols('x y')\nmean = (7, 7)\ngeomean = sqrt(19)\nprint(x**2 + y**2)"
  },
  {
    "example_id": 528,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "160.0"
    ],
    "annotated_answers": [
      "30.0"
    ],
    "solution": "# price of 40 oranges at $3x$ cents each\nx = 3\ny = 40\ntotal_price = x * y\n\n# price rose to $4x$ cents per orange\nx = 4\n\n# how many oranges could she buy?\nnew_total_price = x * y\n\nprint(new_total_price)"
  },
  {
    "example_id": 529,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "a, b, c, d = symbols('a, b, c, d')\nx = (a + b) / 2\ny = (a + c) / 2\nz = (x + d) / 2\n\nprint(z)"
  },
  {
    "example_id": 530,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "a = symbols('a')\nx = symbols('x')\nh = symbols('h')\nk = symbols('k')\neq = a * (x - h)**2 + k\nsolution = solve(eq, k)\nk_value = solution[0]\nprint(k_value)"
  },
  {
    "example_id": 531,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "20.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "import numpy as np\n\n# Midpoint of (1,2) and (19,4)\nmid_point = np.array([10, 20])\n\n# Line passing through (0,7) and (4,-3)\nslope = (4 - 7) / (4 - 0)\nintercept = 7 - slope * 4\n\n# Line passing through midpoint of (1,2) and (19,4)\nslope_l = (mid_point[1] - mid_point[0]) / (mid_point[1] - mid_point[0])\nintercept_l = mid_point[0] - slope_l * mid_point[0]\n\n# Perpendicular line\nslope_perpendicular = -1 / slope\nintercept_perpendicular = -slope_perpendicular * intercept\n\n# Point on l whose x-coordinate is 20\nx_coordinate = 20\ny_coordinate = slope_l * x_coordinate + intercept_l\n\nprint(y_coordinate)"
  },
  {
    "example_id": 532,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "n = 512 / 255\nprint(int(n))"
  },
  {
    "example_id": 533,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "0.0"
    ],
    "annotated_answers": [
      "800000.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\n\na1 = (1002**2 - 502**2) + (298**2 - 202**2)\na2 = (1002**2 - 502**2) - (298**2 - 202**2)\n\nb1 = (1002**2 - 502**2) + (298**2 - 202**2)\nb2 = (1002**2 - 502**2) - (298**2 - 202**2)\n\nc1 = (1002**2 - 502**2) + (298**2 - 202**2)\nc2 = (1002**2 - 502**2) - (298**2 - 202**2)\n\nd1 = (1002**2 - 502**2) + (298**2 - 202**2)\nd2 = (1002**2 - 502**2) - (298**2 - 202**2)\n\nprint(a1 - b1 + c1 - d1)\nprint(a2 - b2 + c2 - d2)"
  },
  {
    "example_id": 534,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "13.0",
      "19.0",
      "24.0"
    ],
    "annotated_answers": [
      "1320.0"
    ],
    "solution": "x, y, z = symbols('x, y, z')\neq1 = x + y - z - 8\neq2 = x - y + z - 18\neq3 = -x + y + z - 30\n\nsolutions = solve([eq1, eq2, eq3], [x, y, z])\nprint(solutions)"
  },
  {
    "example_id": 535,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "# Find the number of integer values for m\nm = symbols('m')\nn = floor(1/7)\nsol = solve(m/7 == n, m)\nprint(sol)"
  },
  {
    "example_id": 536,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "14.0"
    ],
    "annotated_answers": [
      "84.0"
    ],
    "solution": "x = symbols('x')\neq = x*(2*x-7) - 3\nsolution = solve(eq)\nm_n_p = []\nfor sol in solution:\n    m_n_p.append(sol.as_numer_denom()[0].subs(x, 2))\nmnp = sum(m_n_p)\nprint(mnp)"
  },
  {
    "example_id": 537,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "39.0",
      "91.0",
      "13.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "# find the length of Runner A's portion\na_length = 100/5\n\n# find the length of Runner B's portion\nb_length = 1.5*a_length\n\n# find the length of Runners C and D's portion\nc_d_length = 2*a_length + b_length\n\n# find the length of Runner E's portion\ne_length = 10\n\n# find the combined length\ncombined_length = a_length + b_length + c_d_length + e_length\n\n# find the ratio of the combined length to the race length\nratio = combined_length/100\n\n# find the length of Runner B\nb_value = floor(ratio*b_length)\n\n# find the length of Runners C and D\nc_d_value = floor(ratio*c_d_length)\n\n# find the length of Runner E\ne_value = floor(ratio*e_length)\n\n# print the results\nprint('The length of Runner B is', b_value,'miles.')\nprint('The length of Runners C and D is', c_d_value,'miles.')\nprint('The length of Runner E is', e_value,'miles.')"
  },
  {
    "example_id": 538,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "2500.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\nfence_length = 200\n\n# create a point object for each corner of the playground\npoint_a = Point(0, 0)\npoint_b = Point(a, 0)\npoint_c = Point(a, b)\npoint_d = Point(0, b)\n\n# create a polygon object\npolygon = Polygon(point_a, point_b, point_c, point_d)\n\n# find the perimeter of the playground\nperimeter = polygon.perimeter\n\n# find the area of the playground\narea = polygon.area\n\n# print the results\nprint(f'The maximum area of the playground is {area} square feet.')\nprint(f'The perimeter of the playground is {perimeter} feet.')"
  },
  {
    "example_id": 539,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "# x = symbols('x')\nx = symbols('x')\n\n\n# y = symbols('y')\ny = symbols('y')\n\n\n# z = symbols('z')\nz = symbols('z')\n\n\n# w = symbols('w')\nw = symbols('w')\n\n\n# p = Point(1, 2)\np = Point(1, 2)\n\n\n# q = Point(3, 4)\nq = Point(3, 4)\n\n\n# r = Point(5, 6)\nr = Point(5, 6)\n\n\n# s = Point(7, 8)\ns = Point(7, 8)\n\n\n# t = Point(9, 10)\nt = Point(9, 10)\n\n\n# u = Point(11, 12)\nu = Point(11, 12)\n\n\n# v = Point(13, 14)\nv = Point(13, 14)\n\n\n# w = Point(15, 16)\nw = Point(15, 16)\n\n\n# x = Point(17, 18)\nx = Point(17, 18)\n\n\n# y = Point(19, 20)\ny = Point(19, 20)\n\n\n# z = Point(21, 22)\nz = Point(21, 22)\n\n\n# a = diag(p, q, r, s, t, u, v, w, x, y, z)\na = diag(p, q, r, s, t, u, v, w, x, y, z)\n\n\n# b = diag(p, q, r, s, t, u, v, w, x, y, z)\nb = diag(p, q, r, s, t, u, v, w, x, y, z)"
  },
  {
    "example_id": 540,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "4.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "def f(x):\n    if x >= 3:\n        return 2*x - 5\n    else:\n        return -x + 5\n\nx_values = []\nfor x in range(6):\n    y = f(x)\n    if y == 3:\n        x_values.append(x)\nprint(x_values)"
  },
  {
    "example_id": 541,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1023.0"
    ],
    "annotated_answers": [
      "1023.0"
    ],
    "solution": "difference = 128\nfor i in range(1, 1000000, 2):\n    j = i + 2\n    if (i ** 2 + 128) == j ** 2:\n        print(i * j)\n        break"
  },
  {
    "example_id": 542,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1990.0",
      "2971.0",
      "3942.0",
      "4903.0",
      "5854.0",
      "6796.0",
      "7729.0",
      "8652.0",
      "9566.0",
      "10471.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "# find the least positive integer in the sequence\nn = 1000\nfor i in range(500):\n    n = n + 1000 - floor(n * 0.01)\n    print(n)"
  },
  {
    "example_id": 543,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "n = symbols('n')\neq = 9**(18*n) - 27**(24)\nsolution = solve(eq, n)\nn_value = solution[0]\nprint(n_value)"
  },
  {
    "example_id": 544,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\nd = symbols('d')\n\ntri = Polygon((0,0), (a,0), (a+b,c), (a+b+c, d))\nprint(tri.area)"
  },
  {
    "example_id": 545,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "a, b, c, d = symbols('a, b, c, d')\neq = a * b - 2 * a - 3 * b\nsolution = solve(eq, a, b)\nprint(solution)"
  },
  {
    "example_id": 546,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "n = symbols('n')\neq = (n*0.10)+(n*0.05) - 0.75\nsolution = solve(eq, n)\nn_value = solution[0]\nprint(n_value)"
  },
  {
    "example_id": 547,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "185.0",
      "185.0",
      "-2.0",
      "185.0",
      "185.0",
      "2.0",
      "185.0",
      "3.0"
    ],
    "annotated_answers": [
      "75.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq = x + y + z - 185\nsolution = solve(eq, [x, y, z])\nx_value = solution[0][0]\ny_value = solution[0][1]\nz_value = solution[0][2]\nprint(f\"x = {x_value}\")\nprint(f\"y = {y_value}\")\nprint(f\"z = {z_value}\")\nprint(f\"x + y + z = {x_value + y_value + z_value}\")\nprint(f\"x - y = {x_value - y_value}\")\nprint(f\"z - y = {z_value - y_value}\")\nprint(f\"z - y + x = {z_value - y_value + x_value}\")\nprint(f\"z - y + x - y = {z_value - y_value + x_value - y_value}\")"
  },
  {
    "example_id": 548,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "def f(n):\n    if n % 2 == 0:\n        return n ** 2 - 4 * n - 1\n    else:\n        return n ** 2\n\ndef g(n):\n    return f(f(f(f(n))))\n\nprint(g(4))"
  },
  {
    "example_id": 549,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "21.0"
    ],
    "annotated_answers": [
      "21.0"
    ],
    "solution": "print(int(11.1) + 2 * int(0.5 * 11.1))"
  },
  {
    "example_id": 550,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\neq = log(4**x, 64**(1/3)) - 1\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 551,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "t = lambda x: 3-g(x)\ng = lambda x: x**0.5\nprint(t(g(16)))"
  },
  {
    "example_id": 552,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\neq = (17**6 - 17**5)/16 - 17**x\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 553,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "6.0",
      "5.0",
      "15.0",
      "4.0",
      "16.0",
      "3.0",
      "17.0",
      "2.0",
      "191.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\nf = (1/(x**2 - 7)) + (1/(x**3 - 8)) + (1/(x**4 - 9))\nsolution = solve(f, x)\nprint(solution)"
  },
  {
    "example_id": 554,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "2.0",
      "2.0",
      "10.0",
      "3.0",
      "2.0",
      "2.0",
      "2.0",
      "10.0",
      "3.0",
      "2.0",
      "2.0",
      "2.0",
      "10.0",
      "3.0",
      "2.0",
      "2.0",
      "2.0",
      "10.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\nz = symbols('z')\nw = symbols('w')\n\na = solve(x**2 + y**2 + z**2 + w**2 - 10, x)\nb = solve(x**2 + y**2 + z**2 + w**2 - 10, y)\nc = solve(x**2 + y**2 + z**2 + w**2 - 10, z)\nd = solve(x**2 + y**2 + z**2 + w**2 - 10, w)\n\nx_value = a[0]\ny_value = b[0]\nz_value = c[0]\nw_value = d[0]\n\nprint(x_value + floor(sqrt(10)))\nprint(y_value + floor(sqrt(10)))\nprint(z_value + floor(sqrt(10)))\nprint(w_value + floor(sqrt(10)))"
  },
  {
    "example_id": 555,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4000.0"
    ],
    "annotated_answers": [
      "4000.0"
    ],
    "solution": "print(4 * 1000)"
  },
  {
    "example_id": 556,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "pile_1 = 5\npile_2 = 4\npile_3 = 4\npile_4 = 3 * pile_2\ntotal = pile_1 + pile_2 + pile_3 + pile_4\nprint(total)"
  },
  {
    "example_id": 557,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "680.0"
    ],
    "annotated_answers": [
      "368.0"
    ],
    "solution": "# 1 horsepower is equivalent to 1.36 kilowatts\n\n# Convert horsepower to kilowatts\nhp = 500\nkw = hp * 1.36\n\n# Round to the nearest kilowatt\nprint(round(kw))"
  },
  {
    "example_id": 558,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "triangle = 3\nsquare = 7\nclubsuit = 5\ndiamond = 9\n\n# solve for square\nsquare = clubsuit - triangle\n\n# solve for diamond\ndiamond = diamond + diamond + diamond + diamond + diamond\n\n# solve for clubsuit\nclubsuit = diamond + triangle\n\nprint(square)"
  },
  {
    "example_id": 559,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "210.0"
    ],
    "annotated_answers": [
      "210.0"
    ],
    "solution": "f = lambda x: x**2 - 1\ng = lambda x: x + 7\nf_g_7 = f(g(7))\ng_f_3 = g(f(3))\nprint(f_g_7 + g_f_3)"
  },
  {
    "example_id": 560,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\nf = x*(3*x-4) - (6*x**2 - 3*x + 5)/10\nsolution = solve(f, x)\nprint(len(solution))"
  },
  {
    "example_id": 561,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "11.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 - 8*x - 33\nsolution = solve(eq)\nprint(solution)"
  },
  {
    "example_id": 562,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "17.0",
      "2.0",
      "9.0",
      "2.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "# Define symbols\nx = symbols('x')\ny = symbols('y')\n\n# Define equations\neq1 = x + y - 13\neq2 = (x - y)/4 - 1\n\n# Solve system of equations\nsolution = solve([eq1, eq2], [x, y])\n\n# Print solution\nprint(solution)"
  },
  {
    "example_id": 563,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\nd = symbols('d')\n\neq1 = (a**2 + b**2)**2\neq2 = (c**2 + d**2)**2\n\neq3 = floor(eq1) - floor(eq2)\nprint(eq3)"
  },
  {
    "example_id": 564,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "900.0"
    ],
    "annotated_answers": [
      "920.25"
    ],
    "solution": "dollars = 10000\nannual_interest_rate = 0.045\nyears = 2\n\ndef calculate_interest(dollars, annual_interest_rate, years):\n    interest = dollars * annual_interest_rate * years\n    return round(interest)\n\nprint(calculate_interest(dollars, annual_interest_rate, years))"
  },
  {
    "example_id": 565,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "450.0"
    ],
    "annotated_answers": [
      "135.0"
    ],
    "solution": "a = 30\nb = 60\nn = 21\n\nprint(a + (n - 7) * (b - a))"
  },
  {
    "example_id": 566,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "5.0"
    ],
    "solution": ""
  },
  {
    "example_id": 567,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.3333333333333333"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "time = (20 / 60)\nprint(time)"
  },
  {
    "example_id": 568,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "26.0"
    ],
    "annotated_answers": [
      "26.0"
    ],
    "solution": "# Write your code here\na = 3\nb = 10\n\nresult = 2*a + 5*b - a*b\nprint(result)"
  },
  {
    "example_id": 569,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "27.0"
    ],
    "annotated_answers": [
      "720.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\n\n# sum of three consecutive integers is 27\neq = a + b + c - 27\n\n# product of the integers\nsolution = solve(eq, a, b, c)\n\n# print the product of the integers\nprint(solution[0][0]*solution[0][1]*solution[0][2])"
  },
  {
    "example_id": 570,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-50.0",
      "39.0"
    ],
    "annotated_answers": [
      "50.0"
    ],
    "solution": "# define variables\nx = symbols('x')\n\n# define equation\neq = 5 + 500*x/100 - 110*x/100\n\n# solve equation\nsolution = solve(eq, x)\n\n# print solution\nprint(solution)"
  },
  {
    "example_id": 571,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "2.0",
      "5.0",
      "5.0"
    ],
    "annotated_answers": [
      "75.0"
    ],
    "solution": "from sympy import sqrt, symbols\nx = symbols('x')\ny = symbols('y')\nA = (0, 7)\nB = (1, 0)\nC = (12, -2)\nD = (7, 8)\nAB = sqrt((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2)\nBC = sqrt((B[0] - C[0]) ** 2 + (B[1] - C[1]) ** 2)\nCD = sqrt((C[0] - D[0]) ** 2 + (C[1] - D[1]) ** 2)\nDA = sqrt((D[0] - A[0]) ** 2 + (D[1] - A[1]) ** 2)\narea = (AB + BC + CD + DA) / 2\nprint(area)"
  },
  {
    "example_id": 572,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0",
      "7.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "m, n = symbols('m n')\neq1 = m*n - 7\neq2 = m + n - 8\nsol1 = solve(eq1, n)\nsol2 = solve(eq2, m)\nprint(abs(sol2[0] - sol1[0]))"
  },
  {
    "example_id": 573,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "24.0",
      "32.0",
      "18.0"
    ],
    "annotated_answers": [
      "49.0"
    ],
    "solution": "x, y = symbols('x y')\neq = x**2 + y**2 - 14*x - 48*y\nsolution = solve(eq, y)\ny_value = solution[0]\nprint(y_value)"
  },
  {
    "example_id": 574,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.6",
      "4.6"
    ],
    "annotated_answers": [
      "3.21"
    ],
    "solution": "x = symbols('x')\na = (x**2 + (2.6*x) + 3.6)\nb, c = a.as_numer_denom()\nprint(b + c)"
  },
  {
    "example_id": 575,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "from sympy import symbols, solve\nx = symbols('x')\neq = 2*x**2 + 3*x - 5\nd, e = solve(eq)\nprint((d-1)*(e-1))"
  },
  {
    "example_id": 576,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.11728713807222"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "# evaluate the expression\nexpression = (2**(1/4))**(2/5) * (4**(3/8))**(2/25)\nprint(expression)"
  },
  {
    "example_id": 577,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "6.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "6.0"
    ],
    "annotated_answers": [
      "33840.0"
    ],
    "solution": "a, b, c, d = symbols('a, b, c, d')\neq = a*b + c*d\neq1 = a+b+c+d\nsolution = solve([eq, eq1], [a, b, c, d])\nprint(solution)"
  },
  {
    "example_id": 578,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-24.0"
    ],
    "annotated_answers": [
      "24.0"
    ],
    "solution": "print(2*6 + 4*3 - 8*(3+3))"
  },
  {
    "example_id": 579,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = x - y - 1\neq2 = x**2 + y**2 - 7\neq3 = x**3 - y**3\nsol1 = solve(eq1, x)\nsol2 = solve(eq2, y)\nsol3 = solve(eq3, x, y)\nprint(sol3)"
  },
  {
    "example_id": 580,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "114.0",
      "2.0",
      "5.0",
      "114.0",
      "2.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "a, b, c, d = symbols('a,b,c,d')\neq = (3*5**2 - 4*(5-a)**2)/3 - 63\nsolution = solve(eq, a)\nprint(solution)"
  },
  {
    "example_id": 581,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "3.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x = symbols('x')\neq = (3*x-2)*(4*x+1) - (3*x-2)*4*x+1\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 582,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "y = (7**2 - 19) / 3\nprint(y)"
  },
  {
    "example_id": 583,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "import math\nradius = math.sqrt((6-6)**2 + (2-0)**2)\nprint(radius)"
  },
  {
    "example_id": 584,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "70.0"
    ],
    "annotated_answers": [
      "70.0"
    ],
    "solution": "f = lambda x: x**2 - 4*x**0.5 + 1\nprint(f(f(4)))"
  },
  {
    "example_id": 585,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5050.0"
    ],
    "annotated_answers": [
      "5050.0"
    ],
    "solution": "total = 0\nfor i in range(1, 101):\n    total += i\nprint(total)"
  },
  {
    "example_id": 586,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "4.0"
    ],
    "solution": ""
  },
  {
    "example_id": 587,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1600.0"
    ],
    "annotated_answers": [
      "1600.0"
    ],
    "solution": "x = 441 + 2 * 21 * 19 + 361\nprint(x)"
  },
  {
    "example_id": 588,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-42.0"
    ],
    "solution": ""
  },
  {
    "example_id": 589,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "22.80350850198276"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "x_max = sqrt(130)*2\nprint(x_max)"
  },
  {
    "example_id": 590,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-16.0",
      "-8.0"
    ],
    "annotated_answers": [
      "-8.0"
    ],
    "solution": "from sympy import symbols, solve\nx = symbols('x')\neq = x**2 + 24*x + 128\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 591,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "print(3)"
  },
  {
    "example_id": 592,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "9.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "x = symbols('x')\nf = 2*x**2 + 13*x + 6\nsolution = solve(f, x)\nsolution_squares = [solution[i]**2 for i in range(len(solution))]\nproduct = 1\nfor i in range(len(solution)):\n    product *= solution_squares[i]\nprint(product)"
  },
  {
    "example_id": 593,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "for k in range(1, 2006):\n    if 2005 in S_k(k):\n        print(k)"
  },
  {
    "example_id": 594,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "600.0"
    ],
    "annotated_answers": [
      "600.0"
    ],
    "solution": "print(31**2 - 19**2)"
  },
  {
    "example_id": 595,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "6.0"
    ],
    "solution": ""
  },
  {
    "example_id": 596,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "5.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "A = symbols('A')\nB = symbols('B')\nC = symbols('C')\nD = symbols('D')\n\n# Define the equation\neq = A + 3 - B + 2 - C - D + 2*B - 2*C + 2*D\n\n# Solve for D\nsolution = solve(eq, D)\nD = solution[0]\n\n# Print the solution\nprint(D)"
  },
  {
    "example_id": 597,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "p = symbols('p')\nq = symbols('q')\neq = (1/p) + (1/q) - 1\nsolution = solve(eq, [p, q])\nprint(solution)"
  },
  {
    "example_id": 598,
    "selected_mode": "import",
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "f = symbols('f')\nf_inv = f**(-1)\n\neq = f(2) - f_inv(2)\neq = eq.subs(f, 4)\n\nprint(eq)"
  },
  {
    "example_id": 599,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "6.0",
      "7.0",
      "8.0",
      "9.0",
      "10.0",
      "11.0",
      "12.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "import math\n\nfor t in range(1, 100):\n    if math.sqrt(t) > 2 and math.sqrt(t) < 3.5:\n        print(t)"
  },
  {
    "example_id": 600,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0",
      "3.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "4.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = 2*x - 3*y - 8\neq2 = 4*x + 3*y + 2\nsolution1 = solve(eq1, x)\nsolution2 = solve(eq2, y)\nx_value = solution1[0]\ny_value = solution2[0]\nprint(x_value*y_value)"
  },
  {
    "example_id": 601,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "243.0",
      "2.0",
      "3.0",
      "4.0",
      "2.0",
      "3.0",
      "4.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "coins = [symbols(f\"coin{i}\") for i in range(1, 5)]\neq = (coins[0] * 3 * coins[1] / 3 * coins[2] * 2 / 3 * coins[3]) - 162\nsolution = solve(eq, coins)\nprint(solution)"
  },
  {
    "example_id": 602,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "import sympy\n\ndef rationalize(expr):\n    return expr.expand().cancel()\n\nexpr = sympy.sqrt(4) + sympy.sqrt(32)\nprint(rationalize(1 / expr))"
  },
  {
    "example_id": 603,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3125.0"
    ],
    "annotated_answers": [
      "3125.0"
    ],
    "solution": "a = 5\nprint(a**3*a**2)"
  },
  {
    "example_id": 604,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0",
      "4.0",
      "7.0",
      "2.0",
      "2.0",
      "4.0",
      "4.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "41.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\nd = symbols('d')\neq = (a**2 + b**2) * (c**2 + d**2) - a*b*c*d\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 605,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-5.0",
      "25.0",
      "4.0",
      "50.0"
    ],
    "annotated_answers": [
      "350.0"
    ],
    "solution": "# create the arithmetic sequence\na, b, c, d = symbols('a b c d')\n\n# the eighth term is 500\neighth_term = 500\n\n# the fourth term is 200\nfourth_term = 200\n\n# find the sixth term\nsixth_term = a + 5*(b - a)\n\n# find the equation\neq = sixth_term - fourth_term + 400\n\n# solve for a\nsolution = solve(eq, a)\n\n# extract the solution\na_value = solution[0]\n\n# find the sixth term\nsixth_term_value = a_value + 5*(b - a)\n\n# check the solution\nprint(sixth_term_value)"
  },
  {
    "example_id": 606,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "-2.0",
      "2.0",
      "8.0",
      "7.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "def find_undefined_values(x):\n    num = x - 3\n    den = 2*x**2 - 8*x + 7\n    if den == 0:\n        return [num]\n    else:\n        return [num, -den]\n\ndef main():\n    x = symbols('x')\n    for num in find_undefined_values(x):\n        print(\"The expression is undefined when x =\", num)\n\nmain()"
  },
  {
    "example_id": 607,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "11.0",
      "111.0",
      "2222.0"
    ],
    "annotated_answers": [
      "143.0"
    ],
    "solution": "# a = symbols('a')\na = symbols('a')\n# b = symbols('b')\nb = symbols('b')\n# c = symbols('c')\nc = symbols('c')\n# d = symbols('d')\nd = symbols('d')\n\n# eq = (8**(-1))/(4**(-1)) - a**(-1) - 1\neq = (8**(-1))/(4**(-1)) - a**(-1) - 1\n\n# solution = solve(eq, a)\nsolution = solve(eq, a)\n\n# a_value = solution[0]\na_value = solution[0]\n\n# b_value = (a_value*10) + d\nb_value = (a_value*10) + d\n\n# c_value = (b_value*10) + c\nc_value = (b_value*10) + c\n\n# d_value = (c_value*10) + b\nd_value = (c_value*10) + b\n\n# print(a_value)\n# print(b_value)\n# print(c_value)\n# print(d_value)\n\n# print(a_value + b_value)\n# print(a_value + c_value)\n# print(a_value + d_value)\n\nprint(a_value + b_value + c_value + d_value)"
  },
  {
    "example_id": 608,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "4.0",
      "2.0",
      "10.0",
      "2.0",
      "13.0"
    ],
    "annotated_answers": [
      "52.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\np1 = Point(1, -2)\np2 = Point(-4, 10)\np3 = Point(c, d)\np4 = Point(a, b)\nsquare = Polygon(p1, p2, p3, p4)\nperimeter = square.perimeter\nprint(perimeter)"
  },
  {
    "example_id": 609,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-7.0",
      "1.0"
    ],
    "annotated_answers": [
      "-16.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\neq = a**2 + 6*a - 7\nsolution = solve(eq, a)\nprint(solution)"
  },
  {
    "example_id": 610,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0"
    ],
    "annotated_answers": [
      "-120.0"
    ],
    "solution": "k = symbols('k')\neq = ((2/3)*k + 5)**2 - k**2\nsolution = solve(eq, k)\nk_value = solution[0]\nprint(k_value)"
  },
  {
    "example_id": 611,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "311.1111111111111"
    ],
    "annotated_answers": [
      "63.0"
    ],
    "solution": "# Equation 1\n# 7 ligs = 4 lags\na = 7/4\n\n# Equation 2\n# 9 lags = 20 lugs\nb = 9/20\n\n# Equation 3\n# 80 lugs = x ligs\nc = 80\n\n# Solving for x\nd = (c*a)/b\nprint(d)"
  },
  {
    "example_id": 612,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "17.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x, y = symbols('x, y')\neq = x**2 + y**2 - 6*x + 8*y - 24\np = Point(-3, -12)\ndist = p.distance(Point(0, 0))\nprint(dist)"
  },
  {
    "example_id": 613,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.5"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "x = -10/4\nprint(x)"
  },
  {
    "example_id": 614,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.0",
      "25.0",
      "5.0",
      "2.0",
      "12.0",
      "25.0",
      "5.0",
      "2.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a = symbols('a')\nx = symbols('x')\neq = a*x**2 + 5*x - 3\nsolution = solve(eq, x)\nx1 = solution[0]\nx2 = solution[1]\nabsolute_value = abs(x1 - x2)\nprint(absolute_value)\nprint(absolute_value == 0.5*sqrt(61))"
  },
  {
    "example_id": 615,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "51.0"
    ],
    "annotated_answers": [
      "23.0"
    ],
    "solution": "x = symbols('x')\na = 3\nb = -24\nc = 72\n\neq = a*(x+b)**2 + c\n\nsolution = solve(eq, x)\nx_value = solution[0]\n\na_plus_b_plus_c = a + b + c\n\nprint(a_plus_b_plus_c)"
  },
  {
    "example_id": 616,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "n = symbols('n')\neq = (2**3)**4 - 2**n\nsolution = solve(eq, n)\nprint(solution)"
  },
  {
    "example_id": 617,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "5.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "a, b = symbols('a b')\neq1 = a*b - 7\neq2 = a+b - 5\nsolution = solve([eq1, eq2], [a, b])\na_value = solution[0][0]\nb_value = solution[0][1]\nprint(a_value**2 + b_value**2)"
  },
  {
    "example_id": 618,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "241.56"
    ],
    "annotated_answers": [
      "221.0"
    ],
    "solution": "# The doctor has told Cal O'Ree that during his ten weeks of working out at the gym, he can expect each week's weight loss to be 1% of his weight at the end of the previous week. His weight at the beginning of the workouts is 244 pounds. How many pounds does he expect to weigh at the end of the ten weeks? Express your answer to the nearest whole number.\n\n# Define the variables\nstarting_weight = 244\npercent_loss = 0.01\n\n# Define the function\ndef calc_end_weight(starting_weight, percent_loss):\n    return starting_weight - (starting_weight * percent_loss)\n\n# Calculate the end weight\nend_weight = calc_end_weight(starting_weight, percent_loss)\n\n# Print the end weight\nprint(end_weight)"
  },
  {
    "example_id": 619,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "800.0"
    ],
    "annotated_answers": [
      "800.0"
    ],
    "solution": "# Evaluate: 102^2 - 98^2\nprint(102**2 - 98**2)"
  },
  {
    "example_id": 620,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.0",
      "70.0",
      "1.0",
      "1.0",
      "5.0",
      "840.0",
      "168.0",
      "4.0",
      "12.0",
      "75.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "# Create a list of all the possible integer values for the sides\n# of the rectangle\nrect_sides = [i for i in range(1, 100)]\n\n# Define the area and perimeter of the rectangle\narea = 0\nperimeter = 0\n\n# Iterate through all possible combinations of integer values for the sides\n# of the rectangle and calculate the area and perimeter of each rectangle\nfor a in rect_sides:\n    for b in rect_sides:\n        for c in rect_sides:\n            for d in rect_sides:\n                # Calculate the area and perimeter of the current rectangle\n                area = a * b\n                perimeter = 2 * (a + b + c + d)\n\n                # Check if the current rectangle has an area equal to 5 times the\n                # perimeter\n                if area == 5 * perimeter:\n                    print(f\"The area of the rectangle with sides {a}, {b}, {c}, and {d} is equal to 5 times the perimeter\")\n                    print(f\"The area of the rectangle is {area} and the perimeter is {perimeter}\")\n\n                    # The number of distinct rectangles with integer side lengths\n                    # such that the numerical value of area of the rectangle in square\n                    # units is equal to 5 times the numerical value of the perimeter in units\n                    # is 4.\n                    print(f\"The number of distinct rectangles is 4\")"
  },
  {
    "example_id": 621,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-9.0",
      "3.0",
      "10.0"
    ],
    "annotated_answers": [
      "90.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 + 18*x - 9\nsolution = solve(eq, x)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 622,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0",
      "8.0"
    ],
    "annotated_answers": [
      "-6.0"
    ],
    "solution": "x = 0\nwhile (x+3)**2!= 121:\n    x += 1\n    if (x+3)**2 == 121:\n        print(x)\n        break\nprint(x)"
  },
  {
    "example_id": 623,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "3.0",
      "3.0",
      "4096.0",
      "1.0",
      "3.0",
      "2.0",
      "3.0",
      "3.0",
      "3.0",
      "3.0",
      "4096.0",
      "1.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\nz = symbols('z')\na = symbols('a')\nb = symbols('b')\nc = symbols('c')\nd = symbols('d')\n\neq = (4**5) + (4**5) + (4**5) + (4**5) - (a**3 + b**3 + c**3 + d**3)\nsolution = solve(eq, [a, b, c, d])\na_value = solution[0][0]\nb_value = solution[0][1]\nc_value = solution[0][2]\nd_value = solution[0][3]\n\nprint(a_value)\nprint(b_value)\nprint(c_value)\nprint(d_value)"
  },
  {
    "example_id": 624,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = 1.5\nprint(abs(x - 1) + abs(x - 1.5) + abs(x - 2))"
  },
  {
    "example_id": 625,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-16.0"
    ],
    "annotated_answers": [
      "-128.0"
    ],
    "solution": "x_values = [-4, 4]\nproduct = 1\nfor x in x_values:\n    product *= x\nprint(product)"
  },
  {
    "example_id": 626,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\n\np = Point(x, y)\np.is_integer\n\neq = x**2 - y**2 - 17\nsolution = solve(eq, [x, y])\n\nprint(len(solution))"
  },
  {
    "example_id": 627,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "457050.0"
    ],
    "annotated_answers": [
      "350.0"
    ],
    "solution": "# Number of smartphones sold per week\nN = 500\n\n# Price of smartphone\nP = 450\n\n# Cost of smartphone\nC = P * N\n\n# Increase in price\n\u0394P = 5\n\n# Number of smartphones sold per week after price increase\nN_after_increase = N + 10\n\n# Price of smartphone after price increase\nP_after_increase = P + \u0394P\n\n# Cost of smartphone after price increase\nC_after_increase = P_after_increase * N_after_increase\n\n# Maximum revenue\nrevenue = C + C_after_increase\n\n# Print maximum revenue\nprint(revenue)"
  },
  {
    "example_id": 628,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "18.0",
      "1.8",
      "18.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "# The cost of a cookie\ncookie_cost = 1\n\n# The cost of a brownie\nbrownie_cost = 2\n\n# The cost of a cupcake\ncupcake_cost = 10\n\n# The number of cookies Bob wants to buy\nnum_cookies = 18\n\n# The number of cookies Bob can buy\nnum_brownies = num_cookies / cookie_cost\nnum_cupcakes = num_cookies / cupcake_cost\n\nprint(f'Bob can buy {num_brownies} brownies and {num_cupcakes} cupcakes for the price of {num_cookies} cookies.')"
  },
  {
    "example_id": 629,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "# Calculate the number of years\nyears = 36/18\nprint(years)"
  },
  {
    "example_id": 630,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "81.0",
      "9.0",
      "2.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "x = symbols('x')\nf = a*x**4 - b*x**2 + x + 5\nf_value = f.subs({x: -3})\nprint(f_value)"
  },
  {
    "example_id": 631,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-5.0"
    ],
    "solution": "k = symbols('k')\nsolutions = solve([(2*a**2 + k*a + 6) - (a - 4), (a - 4) - (a**2 + k*a + 6)], [a])"
  },
  {
    "example_id": 632,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "420.0"
    ],
    "annotated_answers": [
      "174.0"
    ],
    "solution": "A = 60*5\nB = 60*2\nC = A + B\nprint(C)"
  },
  {
    "example_id": 633,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0"
    ],
    "annotated_answers": [
      "30.0"
    ],
    "solution": "# Define a function to calculate a*b\ndef mult(a, b):\n    return a**b + b\n\n# Calculate (1*2)*3\nresult = mult(1, 2) * 3\nprint(result)"
  },
  {
    "example_id": 634,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "0.0",
      "-5.0"
    ],
    "annotated_answers": [
      "697.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq1 = 4*a - b\neq2 = b - c - 5\neq3 = a*b*c\nsolution = solve((eq1, eq2, eq3), (a, b, c))\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 635,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "55.0"
    ],
    "annotated_answers": [
      "55.0"
    ],
    "solution": "def f(x):\n    return x - (floor(sqrt(x)))**2\n\ns = sum(f(i) for i in range(101, 111))\nprint(s)"
  },
  {
    "example_id": 636,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "728.0"
    ],
    "annotated_answers": [
      "363.0"
    ],
    "solution": "n = 5\n\n# Sam tells her three friends\nnum_friends = 3\n\n# each of Sam's friends tells the rumor to three friends\nnum_friends_to_tell = 3\n\n# calculate total number of people who have heard the rumor\ntotal_people = num_friends * (num_friends_to_tell ** n)\n\n# print the result\nprint(total_people - 1)"
  },
  {
    "example_id": 637,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "8.0",
      "2.0",
      "16.0"
    ],
    "annotated_answers": [
      "-128.0"
    ],
    "solution": "x = Symbol('x')\nprint(expand((x-2)**2*(x+2)**2))"
  },
  {
    "example_id": 638,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "4.0",
      "3.0",
      "3.0",
      "3.0",
      "2.0",
      "8.0",
      "1.0"
    ],
    "annotated_answers": [
      "37.0"
    ],
    "solution": "from sympy import symbols, expand_mul\n\na = symbols('a')\nb = symbols('b')\n\nf = expand_mul(7*a**4 - 3*a**3 - 3*a**2 - 8*a + 1, 8*b**4 + 2*b**3 - 7*b**2 + 3*b + 4)\n\nprint(f)"
  },
  {
    "example_id": 639,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-7.0",
      "9.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\nf = x**3 - 9*x + 3\nf_value = f.subs(x, 2)\nc = f_value/9\nprint(c)"
  },
  {
    "example_id": 640,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "72.0"
    ],
    "solution": "x = 9**2 - 1"
  },
  {
    "example_id": 641,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "17.0",
      "8.0"
    ],
    "annotated_answers": [
      "-9.0"
    ],
    "solution": "x = symbols('x')\nf = 2*x - 3\ng = 5 - 4*f\ng_value = g.subs(f, 4)\nprint(g_value)"
  },
  {
    "example_id": 642,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-25.0"
    ],
    "annotated_answers": [
      "-25.0"
    ],
    "solution": "def f(x):\n    if x < -3:\n        return 3*x + 5\n    else:\n        return 7 - 4*x\n\nprint(f(-10))"
  },
  {
    "example_id": 643,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-7.0",
      "2.0",
      "5.0",
      "4.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "-13.0"
    ],
    "solution": "a = symbols('a')\neq = (a + 2)*(a + 3)*(a + 4)*(a + 5)*(a + 6) - (a + 1)*(a + 2)*(a + 3)*(a + 4)*(a + 5) - 5\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 644,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "192.0",
      "2.0",
      "2.0",
      "2.0",
      "192.0",
      "2.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "x = symbols('x')\nb = symbols('b')\neq = x**2 + b*x + 48\nsolution = solve(eq, x)\nx1, x2 = solution[0], solution[1]\nprint(x1/x2)"
  },
  {
    "example_id": 645,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.4375"
    ],
    "annotated_answers": [
      "567.0"
    ],
    "solution": "# 7th term is 5103\nn = 7\na = 7\nr = 2\n\n# 5th term is a\nn = 5\n\n# a_5 = a_7 / (r^4)\na_5 = a / (r**4)\n\nprint(a_5)"
  },
  {
    "example_id": 646,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-0.224744871391589",
      "0.732050807568877",
      "0.0539435301897026",
      "-13.5",
      "2.0",
      "38.1837661840736",
      "27.0",
      "2.0",
      "27.0",
      "0.707106781186548"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "a, b, c, d = symbols('a, b, c, d')\nexpr = (a*sqrt(2) + b*sqrt(3) + c*sqrt(6))**3\neq = expr - (sqrt(2) + sqrt(3))**3\nsolution = solve(eq, a, b, c, d)\na_value = solution[0][0]\nb_value = solution[0][1]\nc_value = solution[0][2]\nd_value = solution[0][3]\nprint(a_value + b_value + c_value + d_value)"
  },
  {
    "example_id": 647,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "9.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "A = 2\nB = 4\nC = 3\nA_plus_B_plus_C = A + B + C\nprint(A_plus_B_plus_C)"
  },
  {
    "example_id": 648,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "from math import sqrt\n\ndef distance(p1, p2):\n    x1, y1 = p1\n    x2, y2 = p2\n    return sqrt((x2-x1)**2 + (y2-y1)**2)\n\ndef longest_side(p1, p2, p3):\n    return max(distance(p1, p2), distance(p2, p3), distance(p3, p1))\n\nprint(longest_side((11, 1), (2, 3), (3, 7)))"
  },
  {
    "example_id": 649,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "495.0"
    ],
    "annotated_answers": [
      "495.0"
    ],
    "solution": "# define function to get sum of odd integers\ndef get_sum_of_odd_integers(start, end):\n    sum_of_odd_integers = 0\n    for i in range(start, end + 1):\n        if i % 2!= 0:\n            sum_of_odd_integers += i\n    return sum_of_odd_integers\n\n# call function to get sum of odd integers\nsum_of_odd_integers = get_sum_of_odd_integers(46, 64)\nprint(sum_of_odd_integers)"
  },
  {
    "example_id": 650,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "10.0",
      "3.0",
      "7.0",
      "6.0",
      "3.0",
      "4.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x = symbols('x')\npoly = 3*x**10 - 3*x**7 + 2*x**3 - x + 7 + 4*x**3 - 4*x**2 - 5\nprint(poly.expand())"
  },
  {
    "example_id": 651,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq = x + (-y**2 + 4*y - 4)\nsolution = solve(eq, y)\ny_values = solution\nprint(len(y_values))"
  },
  {
    "example_id": 652,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0",
      "6.0",
      "8.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\neq1 = 5*a + 4*b - 5\neq2 = 3*a + 2*b - 3\neq3 = eq1 + eq2\nprint(eq3)\n\n\na, b = solve([eq1, eq2], [a, b])\nprint(a, b)\n\n\nb = -4*a + 5\nprint(b)\n\n\nb = -2*a + 3\nprint(b)\n\n\nb_value = b.subs(a, 2)\nprint(b_value)\n\n\nb_value = b.subs(a, 3)\nprint(b_value)\n\n\nb_value = b.subs(a, 4)\nprint(b_value)\n\n\nb_value = b.subs(a, 5)\nprint(b_value)\n\n\nb_value = b.subs(a, 6)\nprint(b_value)\n\n\nb_value = b.subs(a, 7)\nprint(b_value)\n\n\nb_value = b.subs(a, 8)\nprint(b_value)\n\n\nb_value = b.subs(a, 9)\nprint(b_value)\n\n\nb_value = b.subs(a, 10)\nprint(b_value)\n\n\nb_value = b.subs(a, 11)\nprint(b_value)\n\n\nb_value = b.subs(a, 12)\nprint(b_value)\n\n\nb_value = b.subs(a, 13)\nprint(b_value)\n\n\nb_value = b.subs(a, 14)\nprint(b_value)\n\n\nb_value = b.subs(a, 15)"
  },
  {
    "example_id": 653,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "# Define the function t(x)\nt = lambda x: abs(3-2*x)\n\n# Evaluate t(-4)\nt_result = t(-4)\n\n# Print the result\nprint(t_result)"
  },
  {
    "example_id": 654,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "7.0",
      "7.0",
      "5.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a, b = symbols('a b')\neq1 = a + b - 12\neq2 = a*b - 35\nsolution = solve((eq1, eq2), (a, b))\nprint(solution)"
  },
  {
    "example_id": 655,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "31500.0"
    ],
    "annotated_answers": [
      "1050.0"
    ],
    "solution": "total_calories = 150 * 30 * 7\nprint(total_calories)"
  },
  {
    "example_id": 656,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "1.0",
      "2.0",
      "1.0",
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "import sympy as sy\n\nx, y = sy.symbols(\"x, y\")\neq1 = 4 * y - 4 * x**2 - 1\neq2 = 4 * x - 4 * y**2 - 1\n\nsol1 = sy.solve((eq1, eq2), (x, y))\n\nx, y = sol1[0]\n\nprint(x, y)\n\nprint(x**3 + y**3)"
  },
  {
    "example_id": 657,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-17.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "j = symbols('j')\nk = symbols('k')\nl = symbols('l')\neq1 = j*k - 24\neq2 = j*l - 48\neq3 = k*l - 18\neq1, eq2, eq3\nsolution = solve([eq1, eq2, eq3], [j, k, l])\njkl = solution[0]\nprint(jkl[0] + jkl[1] + jkl[2])"
  },
  {
    "example_id": 658,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "79.0"
    ],
    "solution": ""
  },
  {
    "example_id": 659,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\na = 2*(-1) + 4\nb = 2*(1) + 8\nprint(a + b)"
  },
  {
    "example_id": 660,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0",
      "0.0",
      "4.0",
      "0.0"
    ],
    "annotated_answers": [
      "26.0"
    ],
    "solution": "x = symbols('x')\neq1 = 3/x > 1/3\neq2 = 3/x < 3/4\nsolution = solve((eq1, eq2), x)\nprint(solution)"
  },
  {
    "example_id": 661,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "220.0"
    ],
    "solution": "total_students = 480\nred_students = 11\ntotal_red_students = red_students / total_students\nprint(total_red_students * 480)"
  },
  {
    "example_id": 662,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "258.0",
      "257.0",
      "256.0",
      "255.0",
      "254.0",
      "253.0",
      "252.0",
      "251.0",
      "250.0",
      "249.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "i = symbols('i')\ni_sum = 0\nfor k in range(259):\n    i_sum += i**k\nprint(i_sum)"
  },
  {
    "example_id": 663,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "40.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "f = lambda x: 2 * x\nf_of_10 = f(10)\nf_of_f_of_10 = f(f_of_10)\nprint(f_of_f_of_10)"
  },
  {
    "example_id": 664,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "14.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\nt = 9 + 2*x**2 - 3\nf = x**2 - 3\nt_of_f_of_minus_2 = t.subs(x, -2)\nprint(t_of_f_of_minus_2)"
  },
  {
    "example_id": 665,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-62.0"
    ],
    "annotated_answers": [
      "66.0"
    ],
    "solution": "x = symbols('x')\neq = (x**2 - 4*x + 4)**(1/3) - 16\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 666,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "import math\n\ndef shortest_distance(x, y, a, b, c, d):\n    return math.sqrt(a*x + b*y + c)\n\nm = shortest_distance(5, -2, 4, 8, 0, 0)\nprint(m)"
  },
  {
    "example_id": 667,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0",
      "-13.0",
      "3.0",
      "11.0",
      "3.0",
      "2.0",
      "-13.0",
      "3.0",
      "11.0",
      "3.0",
      "0.0",
      "0.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x1, y1 = 3, 5\nx2, y2 = -10, 4\nx3, y3 = -6, 2\n\np1 = Point(x1, y1)\np2 = Point(x2, y2)\np3 = Point(x3, y3)\n\nx_mid = (x1 + x2 + x3)/3\ny_mid = (y1 + y2 + y3)/3\n\np_mid = Point(x_mid, y_mid)\n\nprint(\"The midpoint of Annie and Barbara's current locations is:\", p_mid)\n\nx_agree = (p1.x + p2.x + p3.x)/3\ny_agree = (p1.y + p2.y + p3.y)/3\n\np_agree = Point(x_agree, y_agree)\n\nprint(\"The point where Annie and Barbara agreed to meet is:\", p_agree)\n\nx_diff = abs(p_agree.x - p_mid.x)\ny_diff = abs(p_agree.y - p_mid.y)\n\nprint(\"The positive difference in the x-coordinates of where Annie and Barbara agreed to meet and where they should actually meet is:\", x_diff)\n\nprint(\"The positive difference in the y-coordinates of where Annie and Barbara agreed to meet and where they should actually meet is:\", y_diff)"
  },
  {
    "example_id": 668,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 - 6*x + 13\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 669,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "400.0"
    ],
    "annotated_answers": [
      "400.0"
    ],
    "solution": "# 19^2 + 2(19) + 1\nprint(19**2 + 2*19 + 1)"
  },
  {
    "example_id": 670,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "3.0",
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "m = 3*a+b\nn = a+b\nn_m = n - m\neq1 = 3*n + m - 14\neq2 = n + m - 1\nsolution1 = solve(eq1, a)\nsolution2 = solve(eq2, a)\na_value = solution1[0]\nprint(a_value)"
  },
  {
    "example_id": 671,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0",
      "2.0",
      "4.0",
      "8.0",
      "2.0",
      "4.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x, y = symbols('x y')\neq = x**2 + 8*x + y**2 - 6*y\nsolution = solve(eq, x, y)\nprint(solution)"
  },
  {
    "example_id": 672,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "100.0",
      "7.0",
      "20.0",
      "2.0",
      "100.0",
      "7.0",
      "20.0",
      "1.0"
    ],
    "annotated_answers": [
      "324.0"
    ],
    "solution": "n = symbols('n')\na = floor((n**2 - 35)/100)\nb = a + 1\nprint(a, b)"
  },
  {
    "example_id": 673,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-7.0"
    ],
    "solution": "p = lambda x: 2-x**2\nq = lambda x: 6/x\np(q(2))"
  },
  {
    "example_id": 674,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\neq = a*b**(c-1) - d**(c-1)\nsolution = solve(eq, c)\nc_value = solution[0]\nprint(c_value)"
  },
  {
    "example_id": 675,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "4.0",
      "2.0",
      "2.0",
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = x**2 + 4*x + 6\neq2 = y**2 + y + 6\npoints = solve((eq1-eq2).subs(x, c), c)\nprint(points)"
  },
  {
    "example_id": 676,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "1.0",
      "3.0",
      "4.0",
      "4.0",
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "# Find the inverse of f(x)\nf = {1:2, 4:3, 7:4}\ninv_f = {v:k for k,v in f.items()}\nprint(inv_f)\n\n\n# Find f^{-1}(f^{-1}(3))\nf_inv_inv_3 = inv_f[inv_f[3]]\nprint(f_inv_inv_3)"
  },
  {
    "example_id": 677,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "50.0"
    ],
    "annotated_answers": [
      "50.0"
    ],
    "solution": "from math import sqrt\n\ndef sum_of_floors(n):\n    return sum(int(sqrt(i)) for i in range(1, n+1))\n\nprint(sum_of_floors(19))"
  },
  {
    "example_id": 678,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "21.0"
    ],
    "solution": "a = 25\nb = 5\ndistance = a/b\nprint(distance)"
  },
  {
    "example_id": 679,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "46.0"
    ],
    "annotated_answers": [
      "56.0"
    ],
    "solution": "num_questions = 100\nscore_per_question = 5\nscore_per_incorrect_answer = -2\nscore_per_not_answered = 0\ntotal_score = 232\n\nnum_correct_answers = total_score // score_per_question\n\nprint(num_correct_answers)"
  },
  {
    "example_id": 680,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "41.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "h = lambda x: 6*x+5\nprint(h(6))"
  },
  {
    "example_id": 681,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "2.0",
      "-1.0",
      "2.0"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "# Define variables\nx, y = symbols('x y')\n\n# Define equations\neq1 = x + y - 3\neq2 = x - y - 4\n\n# Find 2x^2 + 2y^2\nsolution = solve([eq1, eq2], [x, y])\nprint(solution)"
  },
  {
    "example_id": 682,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "250.0",
      "2.0",
      "400.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "# Define variables\nx = symbols('x')\ny = symbols('y')\n\n# Define workout distance\ntrack_length = 400\n\n# Define shorter track distance\nshorter_track_length = 250\n\n# Define number of laps\nlaps = 10\n\n# Define number of shorter laps\nshorter_laps = 0\n\n# Calculate number of shorter laps\nwhile shorter_laps < laps:\n    shorter_laps += 1\n    if (shorter_track_length * shorter_laps) % track_length == 0:\n        break\n\n# Calculate number of shorter laps\nshorter_laps = floor(shorter_laps)\n\n# Calculate number of laps\nlaps = floor(laps - shorter_laps)\n\n# Print result\nprint(\"You will need to run\", laps, \"laps around a\", shorter_track_length, \"meter track to get the same workout as running\", laps, \"laps around a\", track_length, \"meter track.\")"
  },
  {
    "example_id": 683,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "3.0",
      "-3.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "3.0",
      "27.0",
      "3.0"
    ],
    "annotated_answers": [
      "51.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq = (a + b + c) * (a**2 + b**2 + c**2) - 17\nsolution = solve(eq, [a, b, c])\nprint(solution)"
  },
  {
    "example_id": 684,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "2.0",
      "15.0",
      "2.0",
      "15.0",
      "2.0",
      "5.0",
      "2.0",
      "2.0",
      "15.0",
      "4.0",
      "2.0",
      "15.0"
    ],
    "annotated_answers": [
      "-22.0"
    ],
    "solution": "import sympy\n\nx = sympy.Symbol('x')\n\na, b = sympy.solve(2*x**2 - 10*x + 5, x)\nprint(a, b)\n\nprint((2*a - 3)*(4*b - 6))"
  },
  {
    "example_id": 685,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "f = lambda x: sqrt(3*x) + 2\nprint(f(0) + f(3))"
  },
  {
    "example_id": 686,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "125.0"
    ],
    "annotated_answers": [
      "125.0"
    ],
    "solution": "x = 5\neq = (x**1 * x**2 * x**3 * x**4 * x**5 * x**6 * x**7 * x**8 * x**9) / (x**2 * x**4 * x**6 * x**8 * x**10 * x**12)\nprint(eq)"
  },
  {
    "example_id": 687,
    "selected_mode": "import",
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-5.0"
    ],
    "solution": "x = symbols('x')\nf = 2*x + 1\ng = -3\nprint(f(g(x)))"
  },
  {
    "example_id": 688,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "8.0",
      "3.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "1.0",
      "3.0"
    ],
    "annotated_answers": [
      "98.0"
    ],
    "solution": "from sympy import Symbol, solve, sqrt\n\nx = Symbol('x')\n\na, b, c = solve(8*x**3 - 3*x**2 - 3*x - 1, x)\n\nprint(sqrt(a) + sqrt(b) + 1)"
  },
  {
    "example_id": 689,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "600.0"
    ],
    "annotated_answers": [
      "600.0"
    ],
    "solution": "x = 25\nz = 24\ny = symbols('y')\neq = (1/x) + (1/y) - (1/z)\nsolution = solve(eq, y)\ny_value = solution[0]\nprint(y_value)"
  },
  {
    "example_id": 690,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "38.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "# find the value of x\nx = (115 - 3*floor(115/3))/2\n\n# find the value of y\ny = floor(115/3) - x\n\n# print the answer\nprint(x + y)"
  },
  {
    "example_id": 691,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "100.0"
    ],
    "annotated_answers": [
      "4624.0"
    ],
    "solution": "# Find the squares\na = floor(100**(1/2))\nb = floor(101**(1/2))\nc = floor(102**(1/2))\nd = floor(103**(1/2))\n\n# Find the difference\ndiff = abs(b**2 - a**2) + abs(c**2 - b**2) + abs(d**2 - c**2)\n\n# Find the larger square\nif diff == 268:\n    print(b**2)\nelse:\n    print(c**2)"
  },
  {
    "example_id": 692,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\neq = a + (c - b) + d - 8\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 693,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "40.0"
    ],
    "annotated_answers": [
      "40.0"
    ],
    "solution": "A, B, C = Point(-6, 6), Point(9, 6), Point(9, -2)\nperimeter = Polygon(A, B, C).perimeter\nprint(perimeter)"
  },
  {
    "example_id": 694,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "3.0",
      "2.0",
      "13.0",
      "2.0",
      "3.0",
      "2.0",
      "13.0",
      "2.0"
    ],
    "annotated_answers": [
      "78.0"
    ],
    "solution": "x = symbols('x')\neq = x*(x-3) - 1\nsolution = solve(eq, x)\na = solution[0]\nb = solution[1]\nc = 1\nd = 3\nabc = a*b*c*d\nprint(abc)"
  },
  {
    "example_id": 695,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "65.0",
      "4.0",
      "65.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 - 8*x - 49\neq = eq.expand()\na = eq.coeff(x, 2)\nb = eq.coeff(x, 1)\nc = eq.coeff(x, 0)\nd = (b**2) - 4*a*c\nif d < 0:\n    print('There is no real solution.')\nelse:\n    print(f'The equation has the solutions: {solve(eq, x)}')"
  },
  {
    "example_id": 696,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "2.0",
      "3.0",
      "2.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "# 6y^2 - y - 51 = (3a*y + b)(y - c)\ny = symbols('y')\na = symbols('a', positive=True)\nb = symbols('b', positive=True)\nc = symbols('c', positive=True)\neq = 6*y**2 - y - 51\nsolution = solve(eq, y)\ny_value = solution[0]\ny_value = floor(y_value)\nA = a*y_value + b\nB = y_value - c\nC = y_value - c\nAC = A*C\nAC_squared = AC**2\nB_squared = B**2\nresult = AC_squared - B_squared\nprint(result)"
  },
  {
    "example_id": 697,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "15.0"
    ],
    "solution": ""
  },
  {
    "example_id": 698,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "235.0"
    ],
    "annotated_answers": [
      "255.0"
    ],
    "solution": "col_sum = sum(range(1, 50, 5))\nprint(col_sum)"
  },
  {
    "example_id": 699,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "print(ceil(sqrt(27)) - floor(sqrt(26)))"
  },
  {
    "example_id": 700,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "36.0",
      "6.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "# Variables\nx = symbols('x')\ny = symbols('y')\na = symbols('a')\nb = symbols('b')\nc = symbols('c')\n\n# Vertex of the parabola\nvertex = Point(2, 3)\n\n# Equation of the parabola\nparabola = a*x**2 + b*x + c\n\n# Contains point (4,4)\ncontains = parabola.subs(x, 4).subs(y, 4)\n\n# Find the value of y when x = 6\nsolution = parabola.subs(x, 6)\nprint(solution)"
  },
  {
    "example_id": 701,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-25.0"
    ],
    "annotated_answers": [
      "-6.0"
    ],
    "solution": "x = -3\nf_x = (x**2 + 2*x + 3)/x\ng_f_x = x**3 + 2\nprint(g_f_x)"
  },
  {
    "example_id": 702,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5808.0"
    ],
    "annotated_answers": [
      "96.8"
    ],
    "solution": "# Convert miles per hour to feet per second\nmph_to_fps = 88\nmph = 66\nfps = mph * mph_to_fps\nprint(fps)"
  },
  {
    "example_id": 703,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "108.0"
    ],
    "annotated_answers": [
      "108.0"
    ],
    "solution": "distance = 9 * 12\nprint(distance)"
  },
  {
    "example_id": 704,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "21.0"
    ],
    "annotated_answers": [
      "21.0"
    ],
    "solution": "# find the point of intersection\nx = symbols('x')\ny = 2*x - 13\neq = 3*x + y - 92\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 705,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2010.0",
      "1.0",
      "3.0",
      "-2.0",
      "3.0",
      "2010.0",
      "1.0",
      "3.0",
      "3.0",
      "-1.0",
      "2010.0",
      "1.0",
      "3.0",
      "2.0",
      "-1.0",
      "2010.0",
      "1.0",
      "3.0",
      "3.0"
    ],
    "annotated_answers": [
      "2010.0"
    ],
    "solution": "x = symbols('x')\nf = x**3 + 3*x**2 + 3*x + 1\nf_inv = solve(f - 2010, x)\nf_inv_value = f_inv[0]\nprint(f_inv_value)\nf_value = f.subs(x, f_inv_value)\nprint(f_value)"
  },
  {
    "example_id": 706,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "# variables\nP = 4\nV_old = 3.67\nV_new = 1.835\n\n# solve for new pressure\nP_new = P / V_old * V_new\n\n# round to nearest kPa\nP_new = round(P_new, -1)\n\nprint(P_new)"
  },
  {
    "example_id": 707,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "7.0",
      "65.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "K = symbols('K')\neq = 3*a - 7*b + (65 + K)\nsolution = solve(eq, K)\nK_value = solution[0]\nprint(K_value)"
  },
  {
    "example_id": 708,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-7.0"
    ],
    "annotated_answers": [
      "-7.0"
    ],
    "solution": "x = symbols('x')\neq1 = (2*x - 1)/(2*x + 2)\neq2 = (x - 3)/(x - 1)\nsolution = solve(eq1 - eq2, x)\nprint(solution)"
  },
  {
    "example_id": 709,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.0",
      "10.0",
      "3.0",
      "30.0",
      "4.0",
      "15.0"
    ],
    "annotated_answers": [
      "-40.0"
    ],
    "solution": "x, y, a = symbols('x y a')\neq1 = 2*x + 5*y + 8\neq2 = 6*x - 15*y + 16 + a\nsolution = solve([eq1, eq2], [x, y])\nprint(solution)"
  },
  {
    "example_id": 710,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "15.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "degrees_per_hour = 360 / 24\nprint(degrees_per_hour)"
  },
  {
    "example_id": 711,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "2.0",
      "2.0",
      "49.0",
      "2.0",
      "2.0",
      "2.0",
      "1.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\nf = a + b + c + d + 2*a*b + 2*a*c + 2*a*d + 2*b*c + 2*b*d + 2*c*d\ng = f - 49\nsolution = solve(g, [a, b, c, d])\na_value = solution[0][0]\nb_value = solution[0][1]\nc_value = solution[0][2]\nd_value = solution[0][3]\nprint('The smallest of the seven integers is {}'.format(a_value))"
  },
  {
    "example_id": 712,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "20.066939702021237"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "print(2**3**(4/3))"
  },
  {
    "example_id": 713,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\neq = 6**x + 6**x + 6**x + 6**x + 6**x + 6**x - 6**6\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 714,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "x = symbols('x')\neq = x - 2*x**(-1) - 1\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 715,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "36.0"
    ],
    "annotated_answers": [
      "28.0"
    ],
    "solution": "# number of tours per day\ntours = 4\n\n# hours of operation\nstart_time = 9\nend_time = 18\n\n# total number of tours in April\ntotal_tours = 0\n\n# tours per day\nfor i in range(start_time, end_time):\n    total_tours += tours\nprint(total_tours)"
  },
  {
    "example_id": 716,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "# Create a list with first 6 terms\nterms = [2, 2+1, 2+2, 2+3, 2+4, 2+5]\n\n# Sum third and sixth terms\nsum_third_sixth = terms[2] + terms[5]\n\n# Calculate fourth term\nfourth_term = sum_third_sixth - terms[3]\n\n# Print fourth term\nprint(fourth_term)"
  },
  {
    "example_id": 717,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "324.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "x = 243\ny = 81\nz = x*y\nw = z*3\nv = w*c\nu = v*d\nt = u*a\ns = t*b\nr = s*c\nq = r*d\np = q*a\no = p*b\nn = o*c\nm = n*d\nl = m*a\nk = l*b\nj = k*c\ni = j*d\nh = i*a\ng = h*b\nf = g*c\ne = f*d\nd = e*a\nc = d*b\nb = c*c\na = b*d\nprint(x+y)"
  },
  {
    "example_id": 718,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "-3.0",
      "2.0",
      "5.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "104.0"
    ],
    "solution": "# Define points A and B\nA = Point(0, 0)\nB = Point(a, 3*a**2 - 5*a - 3)\n\n# Find the square of the length of AB\ndist = A.distance(B)\nlength = dist**2\nprint(length)"
  },
  {
    "example_id": 719,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.5"
    ],
    "annotated_answers": [
      "48.0"
    ],
    "solution": "flicks = 12\nflocks = flicks / 8\nprint(flocks)"
  },
  {
    "example_id": 720,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = log(x-1)**2 - 1\nsolution = solve(eq, x)\nx_values = solution\nx_sum = sum(x_values)\nprint(x_sum)"
  },
  {
    "example_id": 721,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "4.0"
    ],
    "solution": ""
  },
  {
    "example_id": 722,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "2.0",
      "-2.0",
      "3.0",
      "-2.0",
      "3.0",
      "4.0",
      "9.0",
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "x = symbols('x')\na = symbols('a')\nb = symbols('b')\nc = symbols('c')\nd = symbols('d')\n\neq = (10*x**2 - x - 24)\n\nsolution = solve(eq, x)\n\nx_value = solution[0]\nprint(x_value)\n\nA = a/x_value\nB = b/x_value\n\nprint(A, B)\n\nprint(A*B + B)"
  },
  {
    "example_id": 723,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "# Define the sequence\ny = 12\n\n# Define the difference\nd = y + 6 - y\n\n# Print the value of y\nprint(y)"
  },
  {
    "example_id": 724,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.5"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "r = 15.5 - 15\nprint(r)"
  },
  {
    "example_id": 725,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = 0 + (9/3)\ny = 0 + (6/3)\nprint(x + y)"
  },
  {
    "example_id": 726,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "print(36 // 7)"
  },
  {
    "example_id": 727,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "r = symbols('r')\neq = (6*r**2 - 19*r - 7)/(2*r - 7) - (4*r - 3)\nsolution = solve(eq, r)\nr_value = solution[0]\nprint(r_value)"
  },
  {
    "example_id": 728,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "# a = 0\n# b = -5\n# c = 15\n# a + b + c = 0 + (-5) + 15 = 10\nprint(10)"
  },
  {
    "example_id": 729,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "from sympy import symbols, solve\nx, y, D, E, F = symbols('x y D E F')\neq = x**2 + y**2 + D*x + E*y + F\nsolution = solve(eq, [D, E, F])\nD_value, E_value, F_value = solution[0]\nprint(D_value + E_value + F_value)"
  },
  {
    "example_id": 730,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "f = lambda x: x + 1\ng = lambda x: 2*x\nf_inv = lambda x: x - 1\ng_inv = lambda x: x/2\nf_inv_f_inv_g = f_inv(f_inv(g(f(5))))\nf_inv_f_inv_g_f_inv = f_inv(f_inv_f_inv_g)\nf_inv_f_inv_g_f_inv_f_inv = f(f_inv_f_inv_g_f_inv)\nprint(f_inv_f_inv_g_f_inv_f_inv)"
  },
  {
    "example_id": 731,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.2239800905693152"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "f = lambda x: x**3 - 8\nf_inv = lambda y: (y + 8)**(1/3)\n\nf_inv_of_f_inv_of_19 = f_inv(f_inv(19))\nprint(f_inv_of_f_inv_of_19)"
  },
  {
    "example_id": 732,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "2.0",
      "2.0",
      "2.0",
      "79.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "n = symbols('n')\ns = n**2 - 2**n + 1\nt = 2*s - s**2\nprint(t.subs(s, 9))"
  },
  {
    "example_id": 733,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.761904761904762"
    ],
    "annotated_answers": [
      "24.0"
    ],
    "solution": "j, k = symbols('j k')\neq = j / k - 16 / 21\nsolution = solve(eq, j)\nj_value = solution[0]\nprint(j_value)"
  },
  {
    "example_id": 734,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-88.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "# create a function to solve for x\ndef f(x):\n    if x < -5:\n        return x**2 + 9\n    else:\n        return 3*x - 8\n\n# find all possible values of x\nx_values = [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n\n# sum of all possible values of x\nsum = 0\nfor x in x_values:\n    sum += f(x)\nprint(sum)"
  },
  {
    "example_id": 735,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8812.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "n = 100\na = 1\nd = 89\ns = a + (n - 1) * d\nprint(s)"
  },
  {
    "example_id": 736,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "21.0"
    ],
    "annotated_answers": [
      "27.0"
    ],
    "solution": "bride_age = 30\ngroom_age = 15\nsum_age = 51\ngroom_age = sum_age - bride_age\nprint(groom_age)"
  },
  {
    "example_id": 737,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "365.0",
      "4.0"
    ],
    "annotated_answers": [
      "89.0"
    ],
    "solution": "a = symbols('a')\neq = (365 - 4*a)\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 738,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "m, n = symbols('m, n')\npolys = []\nfor i in range(1, 10):\n    for j in range(1, 10):\n        for k in range(1, 10):\n            if (i + j + k) == n:\n                polys.append(Polygon(Point(0, 0), Point(i, j), Point(k, 0)))\n\ncount = 0\nfor poly in polys:\n    if poly.is_convex() and poly.is_oriented():\n        count += 1\n\nprint(count)"
  },
  {
    "example_id": 739,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "29.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "f = lambda x: 3*2*x + 1\npoint = (4,7)\nx, y = point\npoint_on_graph = (x, f(x))\nprint(point_on_graph[0] + point_on_graph[1])"
  },
  {
    "example_id": 740,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "7.0"
    ],
    "annotated_answers": [
      "-7.0"
    ],
    "solution": "x = symbols('x')\ny = x**2 - 7\nsolution = solve(y, x)\nprint(solution)"
  },
  {
    "example_id": 741,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "f = lambda x: 5*x+3\ng = lambda x: x**2-2\nprint(g(f(-1)))"
  },
  {
    "example_id": 742,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "reps_8th = 18 / 2\nprint(reps_8th)"
  },
  {
    "example_id": 743,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\nd = symbols('d')\nx = symbols('x')\ny = symbols('y')\nz = symbols('z')\n\nlog_5 = log(5, a)\nlog_5_inv = log(5, a**(-1))\n\neq = log_5_inv/log_5 - 1\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 744,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "from math import factorial\n\ndef get_prime_factors(n):\n    prime_factors = []\n    while n % 2 == 0:\n        prime_factors.append(2)\n        n /= 2\n    for i in range(3, int(n ** 0.5) + 1, 2):\n        while n % i == 0:\n            prime_factors.append(i)\n            n /= i\n    if n > 2:\n        prime_factors.append(n)\n    return prime_factors\n\n\ndef get_prime_factor(n):\n    prime_factors = get_prime_factors(n)\n    return prime_factors[-1]\n\n\ndef get_sum_of_arithmetic_sequence(n):\n    return n * (n + 1) // 2\n\n\ndef get_greatest_prime_factor(n):\n    return get_prime_factor(get_sum_of_arithmetic_sequence(n))\n\n\nprint(get_greatest_prime_factor(80))"
  },
  {
    "example_id": 745,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "print( (7+8+9)/(2+3+4) * (6+9+12)/(9+8+7) )"
  },
  {
    "example_id": 746,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "number_of_crackers = 10\nnumber_of_calories_per_cracker = 12\nnumber_of_calories_per_cookie = 20\ntotal_number_of_calories = number_of_crackers * number_of_calories_per_cracker\nnumber_of_cookies = total_number_of_calories / number_of_calories_per_cookie\nprint(number_of_cookies)"
  },
  {
    "example_id": 747,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "26.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "26.0",
      "27.0",
      "2.0"
    ],
    "annotated_answers": [
      "24.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\nsa = a * b + a * c + b * c\ns = 2 * sa + 2 * a * d + 2 * b * d + 2 * c * d\nv = a * b * c * d\n\neq1 = s - 52\neq2 = v - 3**3\n\nsol = solve((eq1, eq2), (a, b, c, d))\nprint(sol)"
  },
  {
    "example_id": 748,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "-9.0"
    ],
    "solution": "# Define the function\ndef prime_product(n):\n    # Create a list of prime numbers\n    primes = []\n    for i in range(2, n + 1):\n        if is_prime(i):\n            primes.append(i)\n    # Find the product of the first two prime numbers\n    product = 1\n    for i in range(2):\n        product *= primes[i]\n    return product\n\n# Define the is_prime function\ndef is_prime(n):\n    # Check if n is equal to 1\n    if n == 1:\n        return False\n    # Check if n is equal to 2\n    if n == 2:\n        return True\n    # Check if n is odd and greater than 1\n    if n % 2 == 0:\n        return False\n    # Check if n is a prime number\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\n# Call the prime_product function\nprint(prime_product(100))"
  },
  {
    "example_id": 749,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "13.0"
    ],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "A = 6\nB = 10\nC = B + 3\n\nprint(C)"
  },
  {
    "example_id": 750,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq1 = 3**(x+8) - 9**(x+3)\nsol1 = solve(eq1, x)\nprint(sol1[0])"
  },
  {
    "example_id": 751,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "140.0"
    ],
    "annotated_answers": [
      "140.0"
    ],
    "solution": "print((7+5)**2 - (7-5)**2)"
  },
  {
    "example_id": 752,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "5.0",
      "4.0"
    ],
    "annotated_answers": [
      "47.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\nd = symbols('d')\n\neq = a*b - 9*a - 2*b + 5*a - 5*b + 5\nsolution = solve(eq, [a, b])\n\nprint(solution)"
  },
  {
    "example_id": 753,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-8.0",
      "7.0",
      "15.0"
    ],
    "annotated_answers": [
      "-8.0"
    ],
    "solution": "x, y, z = symbols('x y z')\na, b, c, d = symbols('a b c d')\neq1 = log(x) - log(y) - a\neq2 = log(y) - log(z) - 15\neq3 = log(z) - log(x) + 7\nsol = solve([eq1, eq2, eq3], [a, x, y, z])\nprint(sol)"
  },
  {
    "example_id": 754,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-8.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "from sympy import symbols, diff, solve\nx = symbols('x')\nf = x**2 - 8*x + 15\nf_diff = diff(f, x)\nf_diff_value = f_diff.subs(x, 0)\nprint(f_diff_value)"
  },
  {
    "example_id": 755,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0"
    ],
    "annotated_answers": [
      "900.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\nz = symbols('z')\nw = symbols('w')\n\nA = diag(x, y, z)\nB = diag(w, x, y)\n\nresult = A - B\nprint(result)"
  },
  {
    "example_id": 756,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "24.0"
    ],
    "annotated_answers": [
      "600.0"
    ],
    "solution": "x, y = symbols('x y')\neq = (y**2)/x - 24\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 757,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "2.62787970939371",
      "-5.0",
      "31.999993430300727",
      "32.0",
      "32.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "def revenue(p):\n    return 128 - 4 * p\n\ndef maximize_revenue(p):\n    return revenue(p)\n\np_max = minimize_scalar(maximize_revenue, bounds=(0, 32), method='bounded')\nprint(p_max)"
  },
  {
    "example_id": 758,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.1666666666666665"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x = symbols('x')\nf = lambda x: 3-x if x <= 3 else -x**3+2*x**2+3*x\nf_inv = lambda y: 3-y if y <= 3 else y**(-1)\ny_0 = f_inv(0)\ny_6 = f_inv(6)\nprint(y_0 + y_6)"
  },
  {
    "example_id": 759,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "22.0"
    ],
    "annotated_answers": [
      "22.0"
    ],
    "solution": "f = lambda x: 2*x + 1\ng = lambda x: f(2*x) - 3\nprint(g(g(2)))"
  },
  {
    "example_id": 760,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = 2\ny = 2\nx2y = x * y\nprint(x2y)"
  },
  {
    "example_id": 761,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "18.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "a = symbols('a')\neq = (3-a*I)*(6+2*a*I)\nsolution = simplify(eq)\na_value = solution\nprint(a_value)"
  },
  {
    "example_id": 762,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-6.0"
    ],
    "annotated_answers": [
      "-6.0"
    ],
    "solution": "x = symbols('x')\nsolution = solve(x**2 - x - 6, x)\nsolution_product = solution[0] * solution[1]\nprint(solution_product)"
  },
  {
    "example_id": 763,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "# Define f(x)\nf = lambda x: (x**2 + 2*x + 1)/(x + 1)\n\n# Find maximum value of f(x)\nf_max = f(6)\n\n# Find maximum value of f(x)\nf_max_inv = f_max**(-1)\n\n# Find maximum value of f(x) inverse\nf_max_inv_x = f_max_inv**(-1)\n\n# Print solution\nprint(f_max_inv_x)"
  },
  {
    "example_id": 764,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "5.0",
      "5.0",
      "3.0",
      "10.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "from sympy import symbols, solve\n\nC, A, B, D = symbols('C A B D')\n\n# The sum of Alex, Bob, and Danielle's ages is fourteen times Camille's age.\neq1 = 4*C - (A+B+D)\n# The sum of Alex and Bob's ages is six times Camille's age, and Bob's age is two years less than the difference in ages of Danielle and Alex.\neq2 = 6*C - (A+B) - 2*(D-A)\n\nsolution = solve((eq1, eq2), (C, A, B, D))\nprint(solution)"
  },
  {
    "example_id": 765,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0",
      "1.0",
      "2.0",
      "1.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\nA, B = symbols('A B')\neq = (A/(x-1) + B/(x+1)) - (x+2)/(x**2-1)\nsolution = solve(eq, A)\nA_value = solution[0]\nsolution = solve(eq, B)\nB_value = solution[0]\nprint(A_value - B_value)"
  },
  {
    "example_id": 766,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.11111111111111112"
    ],
    "annotated_answers": [
      "49.0"
    ],
    "solution": "m = 7\nn = 30\np = 10\nq = 21\n\nresult = m/n * p/q\nprint(result)"
  },
  {
    "example_id": 767,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "99940009.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\nz = symbols('z')\n\na = symbols('a')\nb = symbols('b')\nc = symbols('c')\nd = symbols('d')\n\neq1 = x**2 + y**2 + z**2 - a**2\neq2 = 2*x + 2*y + 2*z - b\neq3 = x + y + z - c\neq4 = x**2 + y**2 - d**2\n\nsol = solve([eq1, eq2, eq3, eq4], [a, b, c, d])\n\na_value = sol[0][0]\nb_value = sol[0][1]\nc_value = sol[0][2]\nd_value = sol[0][3]\n\nprint(a_value)\nprint(b_value)\nprint(c_value)\nprint(d_value)"
  },
  {
    "example_id": 768,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2235.0"
    ],
    "annotated_answers": [
      "2107.0"
    ],
    "solution": "sum = 0\nfor i in range(100, 200, 7):\n    sum += i\nprint(sum)"
  },
  {
    "example_id": 769,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "6.0",
      "36.0",
      "2.0",
      "36.0",
      "6.0",
      "6.0",
      "36.0",
      "36.0",
      "6.0",
      "12.0"
    ],
    "annotated_answers": [
      "35.0"
    ],
    "solution": "# Given\nx1 = symbols('x1')\nx2 = symbols('x2')\nk = symbols('k')\neq = x1**2 - 12*x1 + k\n\n# Solution\nsolution = solve(eq, x1)\nx1_value = solution[0]\nx2_value = solution[1]\nprint(f'x1: {x1_value}')\nprint(f'x2: {x2_value}')\nprint(f'k: {x1_value*x2_value - 12}')"
  },
  {
    "example_id": 770,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-210.0",
      "210.0",
      "105.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "a = 7\nn = 15\ns = -210\nc = s / (n * (a + (n-1)*c))\nprint(c)"
  },
  {
    "example_id": 771,
    "selected_mode": "import",
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "106.0"
    ],
    "solution": "x = symbols('x')\nf = x**7 - 3*x**3 + 2\ng = f.subs(x, x + 1)\nprint(g)\nprint(g.coeffs())"
  },
  {
    "example_id": 772,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "256.0"
    ],
    "annotated_answers": [
      "256.0"
    ],
    "solution": "from sympy import symbols, sqrt\nf = lambda x: 2**x\nresult = sqrt(f(f(f(f(1)))))\nprint(result)"
  },
  {
    "example_id": 773,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "49.0"
    ],
    "annotated_answers": [
      "49.0"
    ],
    "solution": "x = symbols('x')\neq = x*x**(1/2) - 5*x - 9*x**(1/2) - 35\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 774,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "# Define the operation star as K*L = (K+L)(K-L) for all integers K and L\ndef star(K, L):\n    return (K + L) * (K - L)\n\n# What is the value of 6*5?\nprint(star(6, 5))"
  },
  {
    "example_id": 775,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "print(ceiling(-7/4))"
  },
  {
    "example_id": 776,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "11.0",
      "5.0",
      "5.0",
      "4.0",
      "27.0",
      "5.0",
      "223.0",
      "10.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\nz = symbols('z')\neq1 = 6*x + 5*y - 2*z - 4\neq2 = 4*x + 5*y + 12*z - 54\nsolution1 = solve(eq1, z)\nsolution2 = solve(eq2, x)\nsolution3 = solve(eq2, y)\nx_value = solution2[0]\ny_value = solution3[0]\nz_value = solution1[0]\nprint(x_value + y_value + z_value)"
  },
  {
    "example_id": 777,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "8.0",
      "2.0",
      "2.0",
      "5.0",
      "2.0",
      "44.0"
    ],
    "annotated_answers": [
      "1736.0"
    ],
    "solution": "# find solutions for y=x^2-8 and y^2=-5x+44\nx1 = symbols('x1')\nx2 = symbols('x2')\ny1 = x1**2 - 8\ny2 = x2**2 - 5*x2 + 44\n\n# find the product of y-coordinates\ny_product = y1*y2\n\n# print the result\nprint(y_product)"
  },
  {
    "example_id": 778,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x = symbols('x')\neq = (9*x)/(13)+(13)/(9*x)-(250)/(117*x)\nsolution = solve(eq, x)\nsum = 0\nfor i in solution:\n    sum += i\nprint(sum)"
  },
  {
    "example_id": 779,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.2"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x_low = 2-5.6\nx_high = 2+5.6\nx_count = x_high - x_low + 1\nprint(x_count)"
  },
  {
    "example_id": 780,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "def is_prime(n):\n    if n == 2:\n        return True\n    if n % 2 == 0 or n < 2:\n        return False\n    for i in range(3, int(n**0.5) + 1, 2):\n        if n % i == 0:\n            return False\n    return True\n\n\nfor n in range(1, 100):\n    if is_prime(n**2 - 3*n + 2):\n        print(n)"
  },
  {
    "example_id": 781,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "181.0"
    ],
    "annotated_answers": [
      "181.0"
    ],
    "solution": "print(3*7*7+5*7-1)"
  },
  {
    "example_id": 782,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "from sympy import symbols, solve, Eq\n\nx, y = symbols('x y')\neq = Eq(x, y**2 - 4*y - 1)\nsolution = solve(eq, y)\nprint(len(solution))"
  },
  {
    "example_id": 783,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "10.0"
    ],
    "annotated_answers": [
      "-5.0"
    ],
    "solution": "b = -4\nx = symbols('x')\neq = x**2 + b*x - 36\nsolution = solve(eq, x)\nb_value = solution[0]\nprint(b_value)"
  },
  {
    "example_id": 784,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "9901.0"
    ],
    "annotated_answers": [
      "9901.0"
    ],
    "solution": "print(99**2 + 99 + 1)"
  },
  {
    "example_id": 785,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "1.0",
      "2.0",
      "3.0",
      "2.0",
      "1.0",
      "3.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = x - (1 + x/ (1 + x/(1 + x/(1 + x))))\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 786,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "N = symbols('N')\nsum_of_first_N_positive_odd_numbers = 121\nsum_of_first_N_positive_odd_numbers_eq = (N**3 + 3*N**2 + 2*N + 1) - 121\nsolution = solve(sum_of_first_N_positive_odd_numbers_eq, N)\nN_value = solution[0]\nprint(N_value)"
  },
  {
    "example_id": 787,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "3.0",
      "3.0",
      "-3.0",
      "3.0",
      "3.0"
    ],
    "annotated_answers": [
      "108.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = x - y - 6\neq2 = x**2 + y**2 - 24\neq3 = x**3 - y**3\nsolution = solve([eq1, eq2], [x, y])\nx_value = solution[0][0]\ny_value = solution[0][1]\neq3_value = eq3.subs(x, x_value).subs(y, y_value)\nprint(eq3_value)"
  },
  {
    "example_id": 788,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.124554069519574",
      "20",
      "59049.0",
      "1024.0",
      "6561.0",
      "4096.0",
      "59049.0",
      "32768.0",
      "531441.0",
      "1048576.0",
      "14348907.0",
      "33554432.0",
      "3486784401.0",
      "1073741824.0",
      "847288609443.0",
      "34359738368.0",
      "205891132094649.0",
      "1099511627776.0",
      "5.0031545098999704",
      "16"
    ],
    "annotated_answers": [
      "169.0"
    ],
    "solution": "# 1. Evaluate (13^3)^6\nx = 13**3\ny = x**6\nprint(y)\n\n# 2. Evaluate (3^2)^5\nx = 3**2\ny = x**5\nprint(y)\n\n# 3. Evaluate 2^10\nx = 2**10\nprint(x)\n\n# 4. Evaluate 3^8\nx = 3**8\nprint(x)\n\n# 5. Evaluate 2^12\nx = 2**12\nprint(x)\n\n# 6. Evaluate 3^10\nx = 3**10\nprint(x)\n\n# 7. Evaluate 2^15\nx = 2**15\nprint(x)\n\n# 8. Evaluate 3^12\nx = 3**12\nprint(x)\n\n# 9. Evaluate 2^20\nx = 2**20\nprint(x)\n\n# 10. Evaluate 3^15\nx = 3**15\nprint(x)\n\n# 11. Evaluate 2^25\nx = 2**25\nprint(x)\n\n# 12. Evaluate 3^20\nx = 3**20\nprint(x)\n\n# 13. Evaluate 2^30\nx = 2**30\nprint(x)\n\n# 14. Evaluate 3^25\nx = 3**25\nprint(x)\n\n# 15. Evaluate 2^35\nx = 2**35\nprint(x)\n\n# 16. Evaluate 3^30\nx = 3**30\nprint(x)\n\n# 17. Evaluate 2^40\nx = 2**40\nprint(x)\n\n# 18. Evaluate 3^35\nx = 3**35\nprint(x)\n\n#"
  },
  {
    "example_id": 789,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "13.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "A = symbols('A')\nB = 2\neq = A + B + 4 - 19\nsolution = solve(eq, A)\nA_value = solution[0]\nprint(A_value)"
  },
  {
    "example_id": 790,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "360.0"
    ],
    "annotated_answers": [
      "600.0"
    ],
    "solution": "# Define the set of consecutive integers\nn = [1,2,3,4]\n\n# Define the function to be applied to each integer\ndef f(x):\n    return (x+2)*20\n\n# Apply the function to each integer in the set\nn = [f(x) for x in n]\n\n# Print the sum of the new set of integers\nprint(sum(n))"
  },
  {
    "example_id": 791,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "2.0",
      "2.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x = symbols('x')\ng = 3*x + 2\nf = a*x + b\neq = g - 2*f**(-1)\na_plus_b = solve(eq, a)[0]\nprint(a_plus_b)"
  },
  {
    "example_id": 792,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "22.0"
    ],
    "solution": "n_red = 26\nn_black = 26\nn_black_in_A = 6 * n_black\nn_red_in_B = n_black_in_A // n_black\nprint(n_red_in_B)"
  },
  {
    "example_id": 793,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "5.0",
      "2.0",
      "3.0",
      "4.0",
      "7.0",
      "4.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "# Solve for x and y\nx, y = symbols('x y')\neq1 = 5*y - 2*x\neq2 = 3*x - 4*y - 7\n\n# Solve for x and y\nsol1 = solve(eq1, x)\nsol2 = solve(eq2, y)\n\n# Find the coordinates of Z\nz = Point(sol1[0], sol2[0])\nprint(z)"
  },
  {
    "example_id": 794,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\n\neric_constant_term = 4\neric_discriminant = b**2 - 4*a*c\n\ncharles_constant_term = 3\ncharles_discriminant = b**2 - 4*a*c\n\neric_discriminant_ratio = eric_discriminant/charles_discriminant\ncharles_constant_term_ratio = charles_constant_term/eric_constant_term\n\nratio = eric_discriminant_ratio/charles_constant_term_ratio\n\nprint(eric_constant_term + charles_constant_term)"
  },
  {
    "example_id": 795,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "180.00000000000003"
    ],
    "annotated_answers": [
      "369.0"
    ],
    "solution": "# Area of the rectangular patio\narea = 180\n\n# Perimeter of the rectangular patio\nperimeter = 54\n\n# Length of the diagonal\ndiag = math.sqrt(area)\n\n# Square the length of the diagonal\ndiag_sqrd = diag**2\n\n# Print the length of the diagonal squared\nprint(diag_sqrd)"
  },
  {
    "example_id": 796,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "60.0"
    ],
    "annotated_answers": [
      "69.0"
    ],
    "solution": "# Calculate the total cost for the given tickets\ndef calculate_cost(t):\n    if t <= 60:\n        return 70 * t\n    else:\n        return (70 * 60) + (t - 60) * (70 - 1)\n\n# Calculate the largest t which will bring the amusement park a profit greater than $4200\ndef find_largest_t():\n    t = 0\n    while calculate_cost(t) < 4200:\n        t += 1\n    return t\n\nprint(find_largest_t())"
  },
  {
    "example_id": 797,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "6.0",
      "6.0",
      "6.0"
    ],
    "annotated_answers": [
      "105.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\n\nsubsets = [\n    [a, b],\n    [c, d],\n    [a, c],\n    [b, d],\n    [a, b, c],\n    [a, b, d],\n    [a, c, d],\n    [b, c, d],\n    [a, b, c, d]\n]\n\nsums = [sum(subset) for subset in subsets]\n\ntotal_sum = sum(sums)\n\nprint(total_sum)"
  },
  {
    "example_id": 798,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.3304121311619"
    ],
    "annotated_answers": [
      "49.0"
    ],
    "solution": "x = symbols('x')\neq = (x**(1/3)*x**(1/2)) - 7\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 799,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "11.0",
      "11.0",
      "2.0",
      "0.0",
      "18.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "# Point(2, 9)\npoint = Point(2, 9)\n# y = f(x)\nf = lambda x: x**2 + 3*x + 1\n# y = f(-x)\ng = lambda x: f(-x)\n# Point(-2, 9)\npoint_2 = Point(-2, 9)\n# Point(-2, 9) on the graph of y=f(-x)\nprint(g(point_2.x))\n# Point(2, 9) on the graph of y=f(x)\nprint(f(point.x))\n# sum of the coordinates of the point\n# Point(2, 9) + Point(-2, 9)\nprint(point + point_2)"
  },
  {
    "example_id": 800,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "f = lambda x: x**2 - 2*x + 1\ng = lambda x: x**0.5 + 1\nprint(f(g(4)) - g(f(3)))"
  },
  {
    "example_id": 801,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "n = symbols('n')\neq = (n+5)/(n-3) - 2\nsolution = solve(eq, n)\nprint(solution)"
  },
  {
    "example_id": 802,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "-0.25"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\neq = a**2 + 2*b*a + (c-d)\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 803,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "15.0",
      "5.0"
    ],
    "annotated_answers": [
      "54.0"
    ],
    "solution": "x = 5\ny = 3\nmy_product = x * y\nmy_friend_product = (x - 4) * (2 * y - 1)\nprint(my_product)\nprint(my_friend_product)"
  },
  {
    "example_id": 804,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "a, b = 7, 9\nc, d = 10, 2\nprint(d + b)"
  },
  {
    "example_id": 805,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "15.75"
    ],
    "annotated_answers": [
      "47.0"
    ],
    "solution": "h = 16\nf = 1 / 2\nx = 0\nt = 0\nfor i in range(6):\n    x = x + h\n    h = h * f\n    t = t + h\nprint(t)"
  },
  {
    "example_id": 806,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x = symbols('x')\neq = 3*x - x - 20\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 807,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-15.0",
      "15.0",
      "1.0",
      "5.4",
      "2.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "a, b = symbols('a b')\neq1 = a*b**2 - 27/5\neq2 = a**2*b - 135\nsolve_eq1 = solve(eq1, a)\nsolve_eq2 = solve(eq2, a)\na_value = solve_eq1[0]\nb_value = solve_eq2[0]\nprint(a_value + 5*b_value)"
  },
  {
    "example_id": 808,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "x = 5**2\nprint(x)"
  },
  {
    "example_id": 809,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\neq1 = (4*a + 3*b)/(a - 2*b) - 5\neq2 = (a + 11*b)/(a - b)\nsol1 = solve(eq1, b)\nsol2 = solve(eq2, b)\nb_value = sol1[0]\nb_value = sol2[0]\nprint(b_value)"
  },
  {
    "example_id": 810,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "-1.0",
      "-5.0"
    ],
    "annotated_answers": [
      "-9.0"
    ],
    "solution": "# Given values\nM = Point(1, -6)\nA = Point(-2, 1)\n\n# Calculate the coordinates of point B\nB = A + M\n\n# Print the coordinates of point B\nprint(B)"
  },
  {
    "example_id": 811,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "64.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "x = symbols('x')\nm = symbols('m')\nb = symbols('b')\nc = symbols('c')\nd = symbols('d')\n\neq = (x**2) + (b*x) + 1 - (x + m)**2 + 63\nsolution = solve(eq, b)\nb_value = solution[0]\nprint(b_value)"
  },
  {
    "example_id": 812,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "24.0"
    ],
    "solution": "# define variables\nc = symbols('c')\nx = symbols('x')\n\n# define equation\neq = 3*x**2 + 7*x + c\n\n# solve for roots\nroots = solve(eq, x)\n\n# find the product of all values of c\nproduct = 1\nfor root in roots:\n    if root.is_real and root.is_positive:\n        product *= c.subs(c, root)\n\nprint(product)"
  },
  {
    "example_id": 813,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "-6.0"
    ],
    "solution": "p1 = Point(3,9)\np2 = Point(1,2)\np2.midpoint = p1\np3 = Point(p2.x + p2.y, p2.y - p2.x)\nprint(p3.x + p3.y)"
  },
  {
    "example_id": 814,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1764.0",
      "1500.0",
      "1608.0",
      "1344.0"
    ],
    "annotated_answers": [
      "156.0"
    ],
    "solution": "# To calculate $42^2$, Emily mentally figures the value $40^2$ and adds $164$. Emily subtracts a number from $40^2$ to calculate $38^2$. What number does she subtract?\n\n# Emily mentally figures the value $40^2$ and adds $164$\na = 40**2 + 164\n\n# Emily subtracts a number from $40^2$ to calculate $38^2$\nb = 40**2 - 100\n\n# Emily mentally figures the value $38^2$ and adds $164$\nc = 38**2 + 164\n\n# Emily subtracts a number from $38^2$ to calculate $37^2$\nd = 38**2 - 100\n\nprint(a)\nprint(b)\nprint(c)\nprint(d)"
  },
  {
    "example_id": 815,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "f = 3*a**4 - 7*a**3 + 2*a**2 - b*a + 1\nf1 = f.subs(a, 1)\nprint(f1)"
  },
  {
    "example_id": 816,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0",
      "2.0",
      "6.0",
      "2.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\np = Point(x, y)\n\n# Find the distance from the origin to the point (-8,6)\ndistance = p.distance(Point(-8, 6))\n\n# Find the number of units in the distance\nunits = floor(distance)\nprint(units)"
  },
  {
    "example_id": 817,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "8.0",
      "4.0",
      "1.0",
      "4.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "x = symbols('x')\na = 2\nb = 4\nc = 5\nd = 1\nf = a*(x - b)**2 + c\nsolution = solve(f - d, b)\nb_value = solution[0]\nprint(b_value)"
  },
  {
    "example_id": 818,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "4.0",
      "-15.0",
      "4.0",
      "73.0",
      "6.0",
      "-51.0",
      "4.0",
      "324327.0",
      "72.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "a = symbols('a')\neq = (4 + 12/a + 36/a**2 + 24/a**3 + 64/a**4)**2\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 819,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "for x in range(1, 10):\n    if (x**2 + 4*x + 4) < 20:\n        print(x)"
  },
  {
    "example_id": 820,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "# Define a, b, c, d, e\na, b, c, d, e = symbols('a b c d e')\n\n# Define the equation\neq = a * b * c * d * e - 5\n\n# Solve for a, b, c, d, e\nsolution = solve(eq, a, b, c, d, e)\n\n# Print the solution\nprint(solution)"
  },
  {
    "example_id": 821,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "56.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "# Define variables\nA = 56\nB = 8\nC = 0\n\n# Calculate C\nC = A*B\n\n# Calculate A\nA = C/B\n\n# Print result\nprint(A)"
  },
  {
    "example_id": 822,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "72.0",
      "2.0",
      "2.0",
      "2.0",
      "72.0",
      "2.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "b = symbols('b')\nx = symbols('x')\neq = x**2 + b*x + 18\nsolution = solve(eq, x)\nx1, x2 = solution\nprint(x1/x2)"
  },
  {
    "example_id": 823,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "-5.0",
      "0.0"
    ],
    "annotated_answers": [
      "40.0"
    ],
    "solution": "a, b, c, d = symbols('a, b, c, d')\nN = a + b + c\neq1 = a - 5\neq2 = b + 5\neq3 = c * 5\nsol = solve([eq1, eq2, eq3], [a, b, c])\nprint(sol)"
  },
  {
    "example_id": 824,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "2.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "# from sympy import symbols\nx, y = symbols('x y')\n# from sympy import solve\nsolution = solve((2*x - y + 3)*(2*x + y - 3), y - 3)\nprint(solution)"
  },
  {
    "example_id": 825,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\neq = 18 + 5*x**2 - 20*x\nsolutions = solve(eq, x)\nx1, x2 = solutions\nprint(floor(x1), floor(x2))"
  },
  {
    "example_id": 826,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-36.0"
    ],
    "solution": "y = 6"
  },
  {
    "example_id": 827,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "5.0",
      "2.0",
      "7.0",
      "2.0",
      "1.0",
      "7.0",
      "2.0",
      "3.0",
      "5.0",
      "2.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 + 1 - 7*x\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value + x_value**(-1))"
  },
  {
    "example_id": 828,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "print(math.floor(6.7) + math.floor(-6.7))"
  },
  {
    "example_id": 829,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-6.0",
      "10.0",
      "5.0",
      "6.0",
      "10.0",
      "5.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "from sympy import symbols, solve\n\nx = symbols('x')\n\neq = (144 / x) - 10*x\n\nsolution = solve(eq, x)\n\nprint(solution)"
  },
  {
    "example_id": 830,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "print(math.log(64, 2))"
  },
  {
    "example_id": 831,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "20.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "def f(n):\n    return n**2 + n + 17\n\nprint(f(10) - f(9))"
  },
  {
    "example_id": 832,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "# Define the operation $\\clubsuit$\ndef clubsuit(x, y):\n    return (x**3) + y\n\n# Evaluate the expression 2\\clubsuit 4\nprint(clubsuit(2, 4))"
  },
  {
    "example_id": 833,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "from sympy import symbols, poly\n\nx, h, g = symbols('x h g')\nh = x**2 - 7*x + 10\ng = poly(h, x)\nb = g.degree()\nprint(b)"
  },
  {
    "example_id": 834,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\neq = (6**(x+1)) - 6**x - 1080\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 835,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "p = symbols('p', cls=Poly)\nq = symbols('q', cls=Poly)\ndegree = p.degree() + q.degree()\nprint(degree)"
  },
  {
    "example_id": 836,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "1.0",
      "2.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0",
      "2.0",
      "1.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "import sympy as sy\nx1, y1 = sy.symbols('x1 y1')\nx2, y2 = sy.symbols('x2 y2')\nx3, y3 = sy.symbols('x3 y3')\n\n# line 1\na, b = sy.symbols('a b')\neq1 = 2*x1 - 10 - y1\n\n# line 2\nx2, y2 = sy.symbols('x2 y2')\neq2 = y2 - 2*x2 + 8\n\n# solve for x1\nsol1 = sy.solve(eq1, x1)\nx1_val = sol1[0]\n\n# solve for y1\nsol2 = sy.solve(eq1, y1)\ny1_val = sol2[0]\n\n# solve for x2\nsol3 = sy.solve(eq2, x2)\nx2_val = sol3[0]\n\n# solve for y2\nsol4 = sy.solve(eq2, y2)\ny2_val = sol4[0]\n\n# compute a+b\na_val = (x2_val - x1_val)\nb_val = (y2_val - y1_val)\nprint(a_val + b_val)"
  },
  {
    "example_id": 837,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "672.0"
    ],
    "annotated_answers": [
      "672.0"
    ],
    "solution": "p = 500\nr = 0.03\nn = 10\nf = p*((1+r)**n)\nprint(\"Alan's bank account has $\", round(f))"
  },
  {
    "example_id": 838,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "16.0",
      "8.0",
      "4.0",
      "2.0",
      "4.0"
    ],
    "annotated_answers": [
      "78.0"
    ],
    "solution": "n = symbols('n')\na = floor(n/2) + 1\nb = floor(n/4) + 1\nc = floor(n/8) + 1\nd = floor(n/16) + 1\ntotal = a + b + c + d\nprint(total)"
  },
  {
    "example_id": 839,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-39.0"
    ],
    "annotated_answers": [
      "-39.0"
    ],
    "solution": "a = -1\nb = 5\nprint(-a - b**2 + 3*a*b)"
  },
  {
    "example_id": 840,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "13.0",
      "2.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "m = symbols('m')\nn = symbols('n')\neq1 = 3*m + 4*n - 47\neq2 = m + n - 15\nsol = solve([eq1, eq2], [m, n])\nprint(sol)"
  },
  {
    "example_id": 841,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "6.0",
      "900.0",
      "6.0",
      "6.0",
      "900.0",
      "6.0",
      "3.0"
    ],
    "annotated_answers": [
      "-150.0"
    ],
    "solution": "k = symbols('k')\na = symbols('a')\nb = symbols('b')\nc = symbols('c')\nx = symbols('x')\n\neq = k - (6*x + 12)*(x - 8)\n\nsolution = solve(eq, x)\n\nprint(solution)"
  },
  {
    "example_id": 842,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.176470588235294",
      "3.0",
      "0.176470588235294",
      "3.0",
      "0.176470588235294",
      "3.0",
      "0.176470588235294",
      "3.0"
    ],
    "annotated_answers": [
      "33.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\nd = symbols('d')\neq = 3*(a**3 + b**3 + c**3 + d**3) / (2**3 + 3*sqrt(9))\nsolution = simplify(eq)\nprint(solution)"
  },
  {
    "example_id": 843,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.261564242916332",
      "75"
    ],
    "annotated_answers": [
      "31.0"
    ],
    "solution": "n = 125\n\n# Define the recycling function\ndef recycle(n):\n    # Initially, there are 5 cans\n    # Each new can can be made from 4 recycled cans\n    # Therefore, the number of new cans made in one step is 5 * 4 = 20\n    # The number of new cans made in the next step is 20 * 4 = 80\n    # The number of new cans made in the next step is 80 * 4 = 320\n    # The number of new cans made in the next step is 320 * 4 = 1280\n    # The number of new cans made in the next step is 1280 * 4 = 5120\n    return 5 * 4**(n - 1)\n\n# Print the number of new cans made in 125 steps\nprint(recycle(n))"
  },
  {
    "example_id": 844,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "3.0",
      "2.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "22.8"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\nd = symbols('d')\n\n# blue boxes\nx1 = a\ny1 = 2*a\n\n# red boxes\nx2 = b\ny2 = 3*b\n\n# calculate total weight of red boxes\ntotal_weight = 3*b**2\n\n# calculate total weight of blue boxes\ntotal_weight_blue = x1*y1 + x2*y2\n\n# calculate weight of one blue box\nweight_one_blue = total_weight_blue/2\n\n# calculate weight of one red box\nweight_one_red = total_weight/3\n\n# calculate total weight of one blue box\ntotal_weight_one_blue = weight_one_blue*2\n\n# calculate total weight of one red box\ntotal_weight_one_red = weight_one_red*3\n\n# print results\nprint(f'weight of one blue box = {weight_one_blue}')\nprint(f'weight of one red box = {weight_one_red}')\nprint(f'total weight of one blue box = {total_weight_one_blue}')\nprint(f'total weight of one red box = {total_weight_one_red}')"
  },
  {
    "example_id": 845,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "21.0"
    ],
    "solution": "x = symbols('x')\nf = x**2 + 18*x - 63\na, b = solve(f, x)\nprint(b)"
  },
  {
    "example_id": 846,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "5.0",
      "5.0",
      "2.0"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "x = symbols('x')\n\n# evaluate the expression\nresult = x**2 + 2*x*(5-x) + (5-x)**2\n\nprint(result)"
  },
  {
    "example_id": 847,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "3.0",
      "4.0",
      "2.0",
      "4.0",
      "36.0",
      "2.0",
      "9.0",
      "2.0",
      "2.0",
      "4.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "c = symbols('c')\nk, l, m, n = symbols('k, l, m, n')\nf = lambda c: (3/(2*c-3))\nf_inverse = lambda c: (2*c+3)/3\nsolution = solve(f_inverse(c) * c * f(c) - (k*n**2)/(l*m), c)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 848,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "2.0",
      "5.0",
      "2.0"
    ],
    "annotated_answers": [
      "47.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 + (1/x**2) - 7\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 849,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "27.0"
    ],
    "annotated_answers": [
      "27.0"
    ],
    "solution": "criminals_per_hour = 6\nhours = 4.5\ncriminals = criminals_per_hour * hours\nprint(criminals)"
  },
  {
    "example_id": 850,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "19.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "print(24 - (2*4-3))"
  },
  {
    "example_id": 851,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "15.0",
      "-52.0",
      "5.0",
      "15.0",
      "-52.0",
      "5.0",
      "4.0",
      "5.0",
      "2.0",
      "15.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq1 = (2**(x+1)) - (4**(x-7))\neq2 = (8**(3*y)) - (16**(y-13))\nsolution = solve([eq1, eq2], [x, y])\nprint(solution)"
  },
  {
    "example_id": 852,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "50.0"
    ],
    "solution": "n = 1\nwhile (n*(n+2)) % 2 == 1:\n    n += 1\nprint(n)"
  },
  {
    "example_id": 853,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "0.0",
      "0.0",
      "0.0",
      "9.0",
      "2.0",
      "0.0",
      "0.0",
      "0.0",
      "9.0",
      "2.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "a, b, c, d = symbols('a, b, c, d')\nf = a + b*c + d*c**2\nF = diag(1, b, d)\nn = 9\nf_n = F**n * f\nprint(f_n)"
  },
  {
    "example_id": 854,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "0.0",
      "1.002003",
      "-4.0",
      "4.00801202",
      "-4.0",
      "9.01802704",
      "-4.0",
      "1.60320481",
      "-3.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "import numpy as np\n\ndef f(x):\n    return (1/2) * x**2 - 9\n\ndef find_a(f, a):\n    return a**2\n\na = np.linspace(0, 10, 1000)\n\na_squared = find_a(f, a)\n\nprint(a_squared)"
  },
  {
    "example_id": 855,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.8"
    ],
    "annotated_answers": [
      "2000.0"
    ],
    "solution": "calories = 0.02 * 40\nprint(calories)"
  },
  {
    "example_id": 856,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "4.0",
      "4.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "# Define variables\na = symbols('a')\nb = symbols('b')\nc = symbols('c')\nd = symbols('d')\n\n# Define equations\neq1 = a + b + c + d\neq2 = b + c + d\n\n# Solve for a\nsolution = solve(eq1 - 5*eq2, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 857,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25.0",
      "2.0",
      "589.0",
      "2.0",
      "589.0",
      "2.0",
      "25.0",
      "2.0"
    ],
    "annotated_answers": [
      "136.0"
    ],
    "solution": "a, b = symbols('a b')\neq1 = a + b - 25\neq2 = a*b - 9\nsolution = solve([eq1, eq2], [a, b])\na_value = solution[0][0]\nb_value = solution[0][1]\nprint(a_value*b_value)"
  },
  {
    "example_id": 858,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "0.0"
    ],
    "solution": ""
  },
  {
    "example_id": 859,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.1111111111111111",
      "0.012345679012345678",
      "0.11111111111111112",
      "0.1111111111111111",
      "0.012345679012345677"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "eq = [3**(-2), 9**(-2), 27**(-2/3), 9*81**(-1), 243**(-4/5)]\nfor i in eq:\n    print(i)"
  },
  {
    "example_id": 860,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "14.5"
    ],
    "annotated_answers": [
      "7.5"
    ],
    "solution": "y = 15.5 - 1\nprint(y)"
  },
  {
    "example_id": 861,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "2.0",
      "22.0",
      "7.0",
      "4.0",
      "1.0",
      "4.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "x = symbols('x')\nn = symbols('n')\nm = (n + 1)/2\neq = x**2 + m*x + (m + n)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 862,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "print(int(pow(7/4, 2)))"
  },
  {
    "example_id": 863,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x, y = symbols('x, y')\nline = -2*x + 18\npoints = solve(line, x)\ncount = 0\nfor point in points:\n    if point.is_integer:\n        count += 1\nprint(count)"
  },
  {
    "example_id": 864,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "# Define variables\ncost = 20\ndiscount_susan = 0.25\ndiscount_pam = 0.30\nnum_tickets_susan = 4\nnum_tickets_pam = 5\n\n# Calculate total cost of Susan's tickets\ntotal_cost_susan = cost * num_tickets_susan * (1 - discount_susan)\n\n# Calculate total cost of Pam's tickets\ntotal_cost_pam = cost * num_tickets_pam * (1 - discount_pam)\n\n# Calculate difference between Pam's and Susan's costs\ndifference = total_cost_pam - total_cost_susan\n\nprint(difference)"
  },
  {
    "example_id": 865,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25.0",
      "2.0",
      "5.0",
      "25.0",
      "2.0",
      "5.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\nk = symbols('k')\neq = k*x**2 + 10*x + k\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 866,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "domain = [0,1,2,3,4,5,6,7,8,9]\nprint(len(domain))"
  },
  {
    "example_id": 867,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-12.0",
      "-3.0",
      "3.0",
      "2.0",
      "-3.0",
      "3.0",
      "2.0",
      "12.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "# rectangle perimeter\nP = 12\n\n# rectangle area\nA = 0\n\n# while loop to find maximum area\nwhile True:\n    a, b = symbols('a b')\n    eq1 = a*b - P\n    eq2 = a**2 + b**2 - A\n    soln = solve([eq1, eq2], [a, b])\n    a_val, b_val = soln[0]\n    A_val = a_val*b_val\n    if A_val == A:\n        break\n    else:\n        A = A_val\n        a, b = a_val, b_val\n\n# print maximum area\nprint(A)"
  },
  {
    "example_id": 868,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "41.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "regular_packs = 166 // 4\nprint(regular_packs)"
  },
  {
    "example_id": 869,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "13.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "h = lambda x: sqrt((x**3 + 72)/2) + 1\nprint(h(6))"
  },
  {
    "example_id": 870,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-16892.0"
    ],
    "annotated_answers": [
      "1160.0"
    ],
    "solution": "# Lauren's birthday\nL_birth = 1990\nL_birth_day = 1\nL_birth_month = 1\n\n# Lauren's age\nL_age = 2\n\n# Lauren's savings account balance\nL_savings = 1000\n\n# Lauren's interest rate\nL_interest_rate = 0.075\n\n# Lauren's interest rate in decimal form\nL_interest_rate_dec = L_interest_rate/100\n\n# Lauren's number of years\nL_number_of_years = L_age - L_birth\n\n# Lauren's number of quarters\nL_number_of_quarters = L_number_of_years*4\n\n# Lauren's number of months\nL_number_of_months = L_number_of_quarters*3\n\n# Lauren's interest\nL_interest = L_savings*L_interest_rate_dec*L_number_of_months\n\n# Lauren's account balance\nL_account_balance = L_savings + L_interest\n\nprint(L_account_balance)"
  },
  {
    "example_id": 871,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "2.0",
      "1.0",
      "2.0",
      "3.0",
      "2.0",
      "3.0",
      "2.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "120.0"
    ],
    "solution": "# Write your code here\nx = symbols('x')\na, b, c = symbols('a,b,c')\n\neq1 = (x + 3)**2 + (3 - a*x**2 - b*x - c)\neq2 = (x - 1)**2 + (3 - a*x**2 - b*x - c)\neq3 = (x + 0)**2 + (3 - a*x**2 - b*x - c)\n\nsolution1 = solve(eq1, a)\nsolution2 = solve(eq2, a)\nsolution3 = solve(eq3, a)\n\na_value = solution1[0] + solution2[0] + solution3[0]\nprint(a_value)"
  },
  {
    "example_id": 872,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "47.0"
    ],
    "annotated_answers": [
      "78.0"
    ],
    "solution": "# Create a function g(x)\ndef g(x):\n    return 4*x**2 - 3*x + 2\n\n# Evaluate g(-3)\ng_value = g(-3)\nprint(g_value)"
  },
  {
    "example_id": 873,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "18.0",
      "2.0",
      "1296.0",
      "18.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "n = symbols('n')\neq = 9*a**2 + n*a + 36\nsolution = solve(eq, a)\nprint(solution[0])"
  },
  {
    "example_id": 874,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "x = symbols('x')\nsolution = solve(x**2 + 4*x - 9, x)\nprint(len(solution))"
  },
  {
    "example_id": 875,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-88.0"
    ],
    "annotated_answers": [
      "100.0"
    ],
    "solution": "def multiplication(a, b):\n    return a**b + b**a\n\ndef power(a, b):\n    return a * b\n\na = 2\nb = 6\n\nprint(power(a, b) - multiplication(a, b))"
  },
  {
    "example_id": 876,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "588.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "# Cost of one pen in cents\npen_cost = 924\n\n# Number of pens\npens = 7\n\n# Cost of pens\npen_total = pens * pen_cost\n\n# Cost of pencils\npencil_cost = pen_total / 11\n\n# Cost of one pencil in cents\nprint(pencil_cost)"
  },
  {
    "example_id": 877,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "50000.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\nz = symbols('z')\nw = symbols('w')\n\neq1 = 200*10/2\neq2 = 50*eq1\n\nprint(eq2)"
  },
  {
    "example_id": 878,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "x = symbols('x')\nb = symbols('b')\nqx = b*x + 1\nfx = x - 3\neq = fx.subs(x, qx)\nsolution = solve(eq, b)\nb_value = solution[0]\nprint(b_value)"
  },
  {
    "example_id": 879,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "120600.0"
    ],
    "annotated_answers": [
      "60000.0"
    ],
    "solution": "n = 500\nm = 700\na = symbols('a')\nb = symbols('b')\nc = symbols('c')\nd = symbols('d')\neq = 0\nfor i in range(n, m+1):\n    eq = eq + i\nprint(eq)"
  },
  {
    "example_id": 880,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "496.0",
      "496.0",
      "496.0"
    ],
    "annotated_answers": [
      "128.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\nz = symbols('z')\nn = 5\nm = 248\n\neq1 = (x*y)/(y+z) - m\neq2 = (y*z)/(y+z) - m\neq3 = (z*x)/(y+z) - m\n\nsolution = solve([eq1, eq2, eq3], [x, y, z])\n\nx_value = solution[0][0]\ny_value = solution[0][1]\nz_value = solution[0][2]\n\nprint(x_value)\nprint(y_value)\nprint(z_value)"
  }
]