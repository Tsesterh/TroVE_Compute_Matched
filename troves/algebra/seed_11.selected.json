[
  {
    "example_id": 0,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "2013.0",
      "18.0",
      "5.0",
      "2.0",
      "1.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "n = 4\nt = symbols('t')\neq = (t + 2) * (t + 1) * (t + 3) - 5\nsolution = solve(eq, t)\nt_value = solution[0]\nprint(t_value)"
  },
  {
    "example_id": 1,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-2.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "a = symbols('a')\neq = (8**(-1))/(4**(-1)) - a**(-1) - 1\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 2,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "7.0",
      "2.0",
      "2.0",
      "7.0"
    ],
    "annotated_answers": [
      "268.0"
    ],
    "solution": "# define variables\nx = symbols('x')\n\n# define equation\neq = x**2 + 32 - 4*x\n\n# solve equation\nsolution = solve(eq, x)\n\n# print solution\nprint(solution)"
  },
  {
    "example_id": 3,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7945.0"
    ],
    "annotated_answers": [
      "7945.0"
    ],
    "solution": "rent = 5000\nelectricity = 1.45\ntotal = 16520.25\nelectricity_used = (total - rent)/electricity\nprint(electricity_used)"
  },
  {
    "example_id": 4,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "7.5"
    ],
    "solution": "flour = symbols('flour')\nfive_pound_cake = 2 * 5\ncake_flour = flour * 1.5\nfive_pound_cake_flour = five_pound_cake * cake_flour\nsolution = solve(five_pound_cake_flour - flour, flour)\nprint(ceil(solution[0]))"
  },
  {
    "example_id": 5,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "164.0"
    ],
    "solution": "win_ratio = 0.5\nmatches_played = 4\nmatches_won = 3\n\n# Find the largest number of matches that can be won before the weekend\nlargest_matches_won = int(win_ratio * matches_played)\n\n# Check if the largest number of matches won is greater than or equal to the number of matches won during the weekend\nif largest_matches_won >= matches_won:\n    print(\"The largest number of matches won is\", largest_matches_won)\nelse:\n    print(\"The largest number of matches won is\", matches_won)"
  },
  {
    "example_id": 6,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "60.0",
      "2.0",
      "60.0"
    ],
    "annotated_answers": [
      "30.0"
    ],
    "solution": "# Define variables\nx, y = symbols('x y')\n\n# Define equation\neq = (x**2 - y**2) - 60\n\n# Solve for x and y\nsolution = solve(eq, x, y)\n\n# Extract solutions\nx_value, y_value = solution\n\n# Print solution\nprint(x_value + y_value)"
  },
  {
    "example_id": 7,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq1 = x/y - 2\neq2 = z/x - 4\nsolution1 = solve(eq1, y)\nsolution2 = solve(eq2, z)\ny_value = solution1[0]\nz_value = solution2[0]\nprint(z_value/y_value)"
  },
  {
    "example_id": 8,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x, y = symbols('x, y')\neq1 = x+y-12\neq2 = x-y-8\neq3 = 2*x - x*y\nsolution = solve([eq1, eq2, eq3], [x, y])\nx_value = solution[0][0]\ny_value = solution[0][1]\nprint(ceil(2*x_value - x_value*y_value))"
  },
  {
    "example_id": 9,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-7.0",
      "12.0",
      "7.0",
      "42.0",
      "4.0",
      "48.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "K = symbols('K')\nx, y = symbols('x y')\neq1 = 6*x + 4*y - 7\neq2 = K*x + 8*y - 7\nsolution = solve([eq1, eq2], [x, y])\nprint(solution)"
  },
  {
    "example_id": 10,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "3.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "1457277.0",
      "6.0",
      "10865.0",
      "54.0"
    ],
    "annotated_answers": [
      "1545.0"
    ],
    "solution": "x = symbols('x')\n\n# solve for x\nsolution = solve(x**3 + 2*x**2 - 3*x - 405, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 11,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "81.0"
    ],
    "solution": "x = symbols('x')\neq = (x-1/x)**4\nsolution = ceil(solve(eq, x)[0])\nprint(solution)"
  },
  {
    "example_id": 12,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "2.0",
      "16.0",
      "2.0",
      "1.0",
      "2.0",
      "16.0",
      "2.0",
      "7.0",
      "7.0",
      "2.0",
      "16.0",
      "2.0",
      "1.0",
      "2.0",
      "16.0",
      "2.0",
      "7.0"
    ],
    "annotated_answers": [
      "125.0"
    ],
    "solution": "from sympy import symbols, solve\n\nn = symbols('n')\nm = symbols('m')\n\neq1 = 2000\neq2 = (2000 * (n**2 - 1)) / (n**2 - 4)\neq3 = (2000 * (m**2 - 1)) / (m**2 - 4)\neq4 = eq2 - eq3\neq5 = eq4 - eq1\n\nsolution = solve(eq5, n)\nn_value = solution[0]\nprint(n_value)\n\nsolution = solve(eq5, m)\nm_value = solution[0]\nprint(m_value)\n\nprint(n_value + m_value)"
  },
  {
    "example_id": 13,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3702.0"
    ],
    "annotated_answers": [
      "3702.0"
    ],
    "solution": "floor = lambda x: int(x)\n\nN = 1/3\n\nresult = (\n    floor(10 * N) +\n    floor(100 * N) +\n    floor(1000 * N) +\n    floor(10000 * N)\n)\n\nprint(result)"
  },
  {
    "example_id": 14,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "# set up\nx = symbols('x')\ny = symbols('y')\n\n# define equation\neq = (x**2 + y**2) - 25\n\n# solve for y\nsolution = solve(eq, y)\n\n# print number of times 25 is labeled\nnum_times_25_labeled = 0\nfor y_val in solution:\n    if y_val == 25:\n        num_times_25_labeled += 1\n\nprint(num_times_25_labeled)"
  },
  {
    "example_id": 15,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0"
    ],
    "annotated_answers": [
      "33.0"
    ],
    "solution": "# Define symbols\nx, y, c = symbols('x y c')\n\n# Define equation\neq = x**2 - 10*x + y**2 + 6*y + c\n\n# Define radius\nr = 1\n\n# Find value of c\nc_value = solve(eq.subs(x, 0).subs(y, 0) - r**2, c)[0]\n\n# Find the integer value of c\nc_int_value = floor(c_value)\n\n# Check if c_int_value is an integer\nif c_int_value == int(c_int_value):\n    print(\"The circle has a radius of length 1 if and only if c is equal to\", c_int_value)\nelse:\n    print(\"The circle has a radius of length 1 if and only if c is equal to an integer.\")"
  },
  {
    "example_id": 16,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0",
      "2.0",
      "16.0",
      "11.0",
      "2.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "# Define symbols\nx = symbols('x')\ny = symbols('y')\n\n# Define equation\neq = x**2 + y**2 + 3*x + 4*y + 5\n\n# Solve for A+B+C+D\nA = -3\nB = 3\nC = 1\nD = 5\n\n# Find A+B+C+D\nsolution = solve(eq)\n\n# Print solution\nprint(\"A+B+C+D =\", solution[0])"
  },
  {
    "example_id": 17,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "n1 = 0\nn2 = 2\nn3 = 4\nsum = n1 + n2 + n3\nif sum == 66:\n    print(n1)\nelse:\n    print(n2)"
  },
  {
    "example_id": 18,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "14.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "smaller_number = 25 - 11\nprint(smaller_number)"
  },
  {
    "example_id": 19,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.23007451985306",
      "43.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = x**(1/12) - 8**4\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 20,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "444.444444444444"
    ],
    "annotated_answers": [
      "445.0"
    ],
    "solution": "# Define the symbols\nn = symbols('n')\n# Define the equation\neq = (1000 + 0.5*n) - (2.75*n)\n# Solve the equation\nsolution = solve(eq, n)\n# Get the first solution\nsolution = solution[0]\n# Print the solution\nprint(solution)"
  },
  {
    "example_id": 21,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "print(0.5 * (1/3) * 36)"
  },
  {
    "example_id": 22,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "2.0",
      "3.0",
      "5.0",
      "2.0",
      "2.0",
      "1.0",
      "7.0",
      "2.0",
      "3.0",
      "5.0",
      "2.0",
      "-2.0"
    ],
    "annotated_answers": [
      "48.0"
    ],
    "solution": "x = symbols('x')\neq = x + 1/x - 7\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value**2 + 1/x_value**2 + 1)"
  },
  {
    "example_id": 23,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0",
      "7.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "f_degree = 7\ng_degree = 7\nf_min_degree = 0\nf_max_degree = f_degree\ng_min_degree = 0\ng_max_degree = g_degree\n\nf_plus_g_min_degree = max(f_min_degree, g_min_degree)\nf_plus_g_max_degree = min(f_max_degree, g_max_degree)\n\nprint(f'The minimum possible degree of f(x) + g(x) is {f_plus_g_min_degree}')\nprint(f'The maximum possible degree of f(x) + g(x) is {f_plus_g_max_degree}')"
  },
  {
    "example_id": 24,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "512.0"
    ],
    "annotated_answers": [
      "512.0"
    ],
    "solution": "x = 2\nprint(x ** (x + 1) ** x)"
  },
  {
    "example_id": 25,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "65536.0"
    ],
    "annotated_answers": [
      "64.0"
    ],
    "solution": "n = 2\nfor i in range(15):\n    n *= 2\nprint(n)"
  },
  {
    "example_id": 26,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-9.0"
    ],
    "annotated_answers": [
      "-9.0"
    ],
    "solution": "y = symbols('y')\neq = y**2 - 81\nsolution = solve(eq, y)\ny_value = solution[0]\nprint(y_value)"
  },
  {
    "example_id": 27,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1120.0"
    ],
    "annotated_answers": [
      "1120.0"
    ],
    "solution": "print(43**2 - 27**2)"
  },
  {
    "example_id": 28,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "print(math.log(27, 3))"
  },
  {
    "example_id": 29,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "177.0"
    ],
    "annotated_answers": [
      "194.0"
    ],
    "solution": "n = symbols('n')\na = 2\nb = 30\nr = (b-a)/(9-1)\nterm = a + n*r\nt50 = term.subs(n, 50)\nprint(t50)"
  },
  {
    "example_id": 30,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "9.0",
      "3.0",
      "4.0",
      "9.0",
      "5.0",
      "9.0",
      "2.0",
      "3.0",
      "7.0",
      "9.0",
      "8.0",
      "9.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "# define the variables\na, b, c, d, e, f, g, h = symbols('a b c d e f g h')\n\n# define the equation\neq = (2*a + 3*b + 4*c + 5*d + 6*e + 7*f + 8*g + 9*h)**2\n\n# solve for the sum\nsolution = solve(eq, h)\nsum = solution[0]\n\n# print the sum\nprint(sum)"
  },
  {
    "example_id": 31,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-312.5",
      "541.265877365274"
    ],
    "annotated_answers": [
      "625.0"
    ],
    "solution": "from sympy import expand_power_base\n\nprint(expand_power_base((-125)**(4/3)))"
  },
  {
    "example_id": 32,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-5.0",
      "-4.0",
      "-3.0",
      "-2.0",
      "-1.0",
      "0.0",
      "1.0",
      "2.0",
      "3.0",
      "4.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "# Define function\ndef f(x):\n    return (1 / (abs(x**2 + 3*x - 4) + abs(x**2 + 9*x + 20)))\n\n# Calculate domain\ndomain = []\n\n# Calculate domain values\nfor i in range(-5, 5):\n    x = symbols('x')\n    if f(x).subs(x, i)!= 0:\n        domain.append(i)\n\n# Print domain\nprint(domain)"
  },
  {
    "example_id": 33,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "-5.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "center_x = (7 + (-3)) / 2\ncenter_y = (-6 + (-4)) / 2\nprint(center_x, center_y)"
  },
  {
    "example_id": 34,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "a = symbols('a')\nf = 1/(1-a)\neq = f**(-1) * a * f\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 35,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "2.0",
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\neq = (x+1)*(x+2) - (x+3)\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 36,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-1.0",
      "1.0",
      "7.0",
      "4.0",
      "33.0",
      "4.0",
      "3.0",
      "4.0",
      "33.0",
      "4.0",
      "-1.0",
      "1.0",
      "33.0",
      "4.0",
      "7.0",
      "4.0",
      "3.0",
      "4.0",
      "33.0",
      "4.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "# create symbols a and b\na, b = symbols('a b')\n\n# solve quadratic equation\nx = solve(2*a**2 - 7*a + 2, a)\n\n# find roots\na_root = x[0]\nb_root = x[1]\n\n# find sum\nsum = (1/a_root - 1)/(a_root - 1) + (1/b_root - 1)/(b_root - 1)\n\n# print sum\nprint(sum)"
  },
  {
    "example_id": 37,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "12.0",
      "0.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "print((9-4j)-(-3-4j))"
  },
  {
    "example_id": 38,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "4.0",
      "5.0"
    ],
    "annotated_answers": [
      "-55.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\neq1 = (a*(-1)**2 + b*(-1) + c) - 0\neq2 = (a*0**2 + b*0 + c) - 5\neq3 = (a*5**2 + b*5 + c) - 0\nsolution = solve([eq1, eq2, eq3], [a, b, c])\nprint(solution)"
  },
  {
    "example_id": 39,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "839808.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq = (12**2)*(18**3) - (2**x)*(3**y)\nsolution = solve(eq, x, y)\nx_value = solution[0][0]\ny_value = solution[0][1]\nprint(x_value + y_value)"
  },
  {
    "example_id": 40,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "360.0"
    ],
    "annotated_answers": [
      "103.0"
    ],
    "solution": "# Define the problem\nA, B, C, D = symbols('A B C D')\n\n# Define the equation\ne = A + B + C + D - 360\n\n# Solve for B\nB = solve(e, B)[0]\n\n# Print the result\nprint(B)"
  },
  {
    "example_id": 41,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.0",
      "12.0",
      "12.0",
      "12.0",
      "11.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "from sympy import sqrt\n\ndef find_value(x):\n    return sqrt(12 - sqrt(12 - sqrt(12 - sqrt(12 - sqrt(12 - x)))))\n\ndef find_value_iter(x):\n    while True:\n        x = find_value(x)\n        if abs(x - find_value(x)) < 0.001:\n            return x\n        else:\n            continue\n\nx = find_value_iter(1)\nprint(x)"
  },
  {
    "example_id": 42,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "575.0"
    ],
    "solution": "x = symbols('x')\nn = symbols('n')\neq = (x**2 + 4*x + 4) - n\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 43,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "a = 1024\nb = 0.125\nc = 2**12\n\na_value = a/b/c\nprint(a_value)"
  },
  {
    "example_id": 44,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "4.0",
      "3.0",
      "4.0",
      "3.0",
      "4.0",
      "5.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "# create variables\ny = symbols('y')\nb = symbols('b')\n\n# create equation\neq = (4*y)/(3*b) - 1\n\n# solve for y\nsolution = solve(eq, y)\n\n# print solution\nprint(solution[0])\n\n# add 5 blue marbles\nb_add = 5\n\n# subtract 3 yellow marbles\ny_sub = 3\n\n# update ratio\neq_new = (4*y)/(3*b) - 1\n\n# solve for y\nsolution_new = solve(eq_new, y)\n\n# print solution\nprint(solution_new[0])\n\n# print number of blue marbles before adding 5\nprint(solution_new[0] + b_add)"
  },
  {
    "example_id": 45,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "13.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "from math import sqrt\na = (1, 2)\nb = (-4, -10)\n\ndef distance(p, q):\n    return sqrt((p[0] - q[0])**2 + (p[1] - q[1])**2)\n\ndef segment_length(p, q):\n    return distance(p, q)\n\nprint(segment_length(a, b))"
  },
  {
    "example_id": 46,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-7.0",
      "6.0",
      "8.0",
      "6.0",
      "6.0",
      "8.0",
      "1.0",
      "1.0",
      "1.0",
      "8.0",
      "6.0"
    ],
    "annotated_answers": [
      "-10.0"
    ],
    "solution": "x, y = symbols('x y')\n\n# Calculate the slope of the line\nslope = (y - 8) / (x - 6)\n\n# Calculate the y-intercept\ny_intercept = 8 - slope * 6\n\n# Calculate the midpoint coordinates\nmid_x, mid_y = (1, 1)\n\n# Calculate the coordinates of the other endpoint\nother_x = mid_x + (mid_y - y_intercept) / slope\nother_y = mid_y + (x - mid_x) * slope\n\n# Print the coordinates of the other endpoint\nprint(other_x, other_y)"
  },
  {
    "example_id": 47,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a = 4\nb = -1\nc = 1\nx = symbols('x')\neq = a*(x+b)**2 + c\na_plus_b_plus_c = eq.subs(x, 0)\nprint(a_plus_b_plus_c)"
  },
  {
    "example_id": 48,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "401.0",
      "2.0"
    ],
    "annotated_answers": [
      "286.0"
    ],
    "solution": "n = symbols('n')\na = 13\nd = 10\nm = 2008\neq = Eq(a + (n-1)*d, m)\nsolution = solve(eq, n)\nn_value = solution[0]\nprint(n_value)"
  },
  {
    "example_id": 49,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "27.0"
    ],
    "annotated_answers": [
      "28.0"
    ],
    "solution": "print(int(14.6) - int(-14.6) - 1)"
  },
  {
    "example_id": 50,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0",
      "3.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\nb = symbols('b')\neq = (3*x+x/3) - b\nsolution = solve(eq, b)\nb_value = solution[0]\nprint(b_value)"
  },
  {
    "example_id": 51,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5000.0"
    ],
    "annotated_answers": [
      "5000.0"
    ],
    "solution": "print(255**2 - 245**2)"
  },
  {
    "example_id": 52,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x1, y1 = 2, 3\nx2, y2 = 4, 3\nb = (y2 - y1) / (x2 - x1)\nc = y1 - b * x1\nprint(c)"
  },
  {
    "example_id": 53,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x = symbols('x')\neq = (7**(log(49, x))) - 49\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 54,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "3.0",
      "3.0",
      "5.0",
      "2.0",
      "3.0",
      "5.0",
      "3.0",
      "1.0",
      "2.0",
      "5.0",
      "5.0",
      "2.0",
      "3.0",
      "5.0",
      "3.0",
      "1.0",
      "2.0",
      "5.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "b = symbols('b')\nc = symbols('c')\n\neq1 = Eq(125**b, 5)\neq2 = Eq(27**b, c)\n\nsol = solve([eq1, eq2], [b, c])\n\nprint(sol)"
  },
  {
    "example_id": 55,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "8.0",
      "3.0",
      "2.0",
      "24.0",
      "62.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "from sympy import Min\nfrom sympy.abc import x, y\n\nexpr = 2*x**2 + 3*y**2 + 8*x - 24*y + 62\nprint(Min(expr))"
  },
  {
    "example_id": 56,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "37.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "# February has 28 days\nnum_days = 28\n# Suzanne walks 4 miles every 3 days\nnum_miles = 4\n# Suzanne can walk 28/3 = 9 miles in February\nnum_miles_in_february = num_days // 3\n# Suzanne can walk 9 miles in February\nnum_miles_in_february = num_miles * num_days // 3\nprint(num_miles_in_february)"
  },
  {
    "example_id": 57,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "s = 0\nwhile True:\n    if (s * 2 + 1) % 4 == 0:\n        s += 1\n    else:\n        break\nprint(s)"
  },
  {
    "example_id": 58,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "13.0",
      "12.0",
      "5.0",
      "12.0",
      "13.0",
      "12.0",
      "5.0",
      "12.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "# a, b, c = symbols('a b c')\na, b, c = symbols('a b c')\n\n# find a-7b+8c = 4 and 8a+4b-c = 7\n\n# a-7b+8c = 4\neq1 = Eq(a - 7*b + 8*c, 4)\n\n# 8a+4b-c = 7\neq2 = Eq(8*a + 4*b - c, 7)\n\n# find the solution\nsol = solve([eq1, eq2], [a, b, c])\n\n# print the solution\nprint(sol)\n\n# find a^2 - b^2 + c^2\na_squared = a**2\nb_squared = b**2\nc_squared = c**2\na_b_c = a_squared - b_squared + c_squared\nprint(a_b_c)"
  },
  {
    "example_id": 59,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "150.0",
      "0.1",
      "25.0",
      "1500.0",
      "2.0",
      "0.004",
      "25.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\n\neq1 = Eq((a*b)/c, 3/5)\neq2 = Eq((b*c)/d, 15/6)\neq3 = Eq(a*d, 6*c)\n\nsolution = solve([eq1, eq2, eq3], [a, b, c, d])\n\na_value = solution[0][0]\nb_value = solution[0][1]\nc_value = solution[0][2]\nd_value = solution[0][3]\n\nprint(\"a =\", a_value)\nprint(\"b =\", b_value)\nprint(\"c =\", c_value)\nprint(\"d =\", d_value)\n\nprint(\"a/b =\", a_value/b_value)\nprint(\"b/c =\", b_value/c_value)\nprint(\"c/d =\", c_value/d_value)"
  },
  {
    "example_id": 60,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "216.0"
    ],
    "solution": "# Define variables\nr1, r2, h1, h2 = symbols('r1 r2 h1 h2')\n\n# Define volume of cone 1\nV1 = (1/3)*math.pi*r1**2*h1\n\n# Define volume of cone 2\nV2 = (1/3)*math.pi*r2**2*h2\n\n# Define equation\neq = V1 - V2\n\n# Solve for h2\nh2 = solve(eq, h2)\n\n# Print the height of the other cone\nprint(h2)"
  },
  {
    "example_id": 61,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "9.0",
      "2.0",
      "32.0",
      "2.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "x, y = symbols('x y')\neq = Eq(y**2 - 3*x*y + 8, 0)\nsolution = solve(eq, y)\ny_value = solution[0]\nprint(y_value)"
  },
  {
    "example_id": 62,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "4.0",
      "6.0",
      "2.0",
      "7.0",
      "1.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x, y, a, b, c = symbols('x y a b c')\n\n# solve for a+b+c\neq1 = a*x + b*y + c - x - 7\neq2 = a + b*x + c*y - 2*x - 6*y\neq3 = a*y + b + c*x - 4*x - y\n\n# solve for x, y\nsol1 = solve(eq1, x, y)\nsol2 = solve(eq2, x, y)\nsol3 = solve(eq3, x, y)\n\n# find a+b+c\na_plus_b_plus_c = 0\nfor sol in sol1, sol2, sol3:\n    for x, y in sol:\n        a_plus_b_plus_c += x + y\n\nprint(a_plus_b_plus_c)"
  },
  {
    "example_id": 63,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "165.0"
    ],
    "annotated_answers": [
      "165.0"
    ],
    "solution": "n = 10\nthree = 3\nsum = 0\nfor i in range(1, n+1):\n    multiples = three*i\n    sum += multiples\nprint(sum)"
  },
  {
    "example_id": 64,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4007.0"
    ],
    "annotated_answers": [
      "4005.0"
    ],
    "solution": "# define the sequence of odd numbers\nn = 1\nfor i in range(2003):\n    n = n + 2\nprint(n)"
  },
  {
    "example_id": 65,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "c = symbols('c')\nf = 4*x**7+x**5+3*x**2-2*x+c\neq = f.subs(x, -1)\nsolution = solve(eq, c)\nc_value = solution[0]\nprint(c_value)"
  },
  {
    "example_id": 66,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "0.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "# Create symbol for number of pints\np = symbols('p')\n\n# Create equation for number of pints\neq = (3*p) - (1.5*p)\n\n# Solve equation for number of pints\nsolution = solve(eq, p)\n\n# Print solution\nprint(solution)\n\n# Calculate number of pints in next 10 miles\np_value = solution[0]\nprint(p_value)"
  },
  {
    "example_id": 67,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\n\n# Define the equation\neq = a*b - a + b\n\n# Find the smallest possible value of a/b + b/a - ab\nsol = solve(eq, [a, b])\n\n# Print the smallest possible value\nprint(sol[0])"
  },
  {
    "example_id": 68,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "13.0",
      "16.0",
      "1849.0",
      "16.0",
      "16.0"
    ],
    "annotated_answers": [
      "3.5"
    ],
    "solution": "t = symbols('t')\nsolution = solve(Eq(y, -16*t**2 + 26*t + 105), t)\nt_value = solution[0]\nprint(t_value)"
  },
  {
    "example_id": 69,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.999500998003992",
      "-0.500249625561658",
      "0.866169477209129",
      "0.999500998003992",
      "-0.500249625561658",
      "0.866169477209129"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "# define equation\neq = (2003/2004)*x + 1 + 1/x\n\n# find roots\nroots = solve(eq, x)\n\n# define sum\nsum = 0\n\n# loop through roots\nfor i in range(len(roots)):\n\n    # compute reciprocal\n    reciprocal = 1/roots[i]\n\n    # add to sum\n    sum += reciprocal\n\n# print sum\nprint(sum)"
  },
  {
    "example_id": 70,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "5.4"
    ],
    "solution": "x = 3\nprint(x)"
  },
  {
    "example_id": 71,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-10.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "n = symbols('n')\neq = (n**2 - n)/2 - 55\nsolution = solve(eq, n)\nn_value = solution[0]\nprint(n_value)"
  },
  {
    "example_id": 72,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "0.5"
    ],
    "solution": "x1 = -3\nx2 = 2\nx3 = 5\n\nsum = x1 + x2 + x3\nprint(sum)"
  },
  {
    "example_id": 73,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-5.0",
      "3.0",
      "15.0",
      "2.0",
      "62.0",
      "56.0",
      "2.0",
      "3.0",
      "4.0"
    ],
    "annotated_answers": [
      "-5.0"
    ],
    "solution": "x = symbols('x')\na = symbols('a')\neq = (x**2 - 3*x + 4)*(2*x**2 + a*x + 7) - 2*x**4 + 11*x**3 - 30*x**2 - 41*x + 28\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 74,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "6.0",
      "2.0",
      "2.0",
      "6.0",
      "2.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\neq = 2*x**2 + 4*x - 1\nsolution = solve(eq, x)\nsum_of_squares = 0\nfor i in solution:\n    sum_of_squares += i**2\nprint(sum_of_squares)"
  },
  {
    "example_id": 75,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "1.0",
      "2.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "from sympy import sqrt, solve\n\nx1, y1, x2, y2 = symbols('x1 y1 x2 y2')\n\neq = sqrt((x1 - x2)**2 + (y1 - y2)**2)\nsolution = solve(eq, x1, y1, x2, y2)\n\nprint(solution)"
  },
  {
    "example_id": 76,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "305.0",
      "305.0",
      "305.0",
      "-0.08",
      "-0.08",
      "-0.08"
    ],
    "annotated_answers": [
      "40.0"
    ],
    "solution": "# Define variables\nWells_hours = 105\nTed_hours = 105\nVino_hours = 105\nfree_hours = 10\ntotal_hours = Wells_hours + Ted_hours + Vino_hours\ntotal_cost = 10\nVino_cost = 26\n\n# Define functions\ndef get_hours_used(hours):\n    return total_hours - free_hours\n\ndef get_cost_per_hour(total_hours, total_cost, Vino_hours, Vino_cost):\n    return (total_cost - Vino_cost) / (total_hours - Vino_hours)\n\n# Calculate hours used\nWells_hours_used = get_hours_used(Wells_hours)\nTed_hours_used = get_hours_used(Ted_hours)\nVino_hours_used = get_hours_used(Vino_hours)\n\n# Calculate cost per hour\nWells_cost_per_hour = get_cost_per_hour(total_hours, total_cost, Vino_hours, Vino_cost)\nTed_cost_per_hour = get_cost_per_hour(total_hours, total_cost, Vino_hours, Vino_cost)\nVino_cost_per_hour = get_cost_per_hour(total_hours, total_cost, Vino_hours, Vino_cost)\n\n# Print results\nprint(f'Wells hours used: {Wells_hours_used}')\nprint(f'Ted hours used: {Ted_hours_used}')\nprint(f'Vino hours used: {Vino_hours_used}')\nprint(f'Wells cost per hour: ${Wells_cost_per_hour:.2f}')\nprint(f'Ted cost per hour: ${Ted_cost_per_hour:.2f}')\nprint(f'Vino cost per hour: ${Vino_cost_per_hour:.2f}')"
  },
  {
    "example_id": 77,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "73.5"
    ],
    "solution": "j = symbols('j')\nk = symbols('k')\neq = Eq(j, k**-1)\nsolution = solve(eq, j)\nj_value = solution[0]\nprint(j_value)"
  },
  {
    "example_id": 78,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "43.0"
    ],
    "annotated_answers": [
      "43.0"
    ],
    "solution": "x = 5 ** 2 + 18\nprint(x)"
  },
  {
    "example_id": 79,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2013.0"
    ],
    "annotated_answers": [
      "2015.0"
    ],
    "solution": "b = symbols('b')\nx = symbols('x')\n\n# find b > 2011\nb_value = 2011 + 1\n\n# find T(b+1) - T(b)\nT_b_plus_1 = (b_value + 1)*(b_value + 2)/2\nT_b = b_value*(b_value + 1)/2\n\n# find T(x)\nT_x = symbols('T_x')\n\n# solve for T(x)\nsolution = solve(Eq(T_b_plus_1 - T_b, T_x), T_x)\nT_x_value = solution[0]\n\n# find x\nx_value = T_x_value.subs(T_b, T_b)\n\nprint(x_value)"
  },
  {
    "example_id": 80,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "350.0"
    ],
    "annotated_answers": [
      "350.0"
    ],
    "solution": "print(113+276-13-26)"
  },
  {
    "example_id": 81,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "400.0"
    ],
    "solution": "w = symbols('w')\nl = 4*w\nperimeter = 100\narea = l*w\nprint(\"The area of the rectangle is: \", area)"
  },
  {
    "example_id": 82,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "import sympy\nx = sympy.Symbol('x')\nprint(sympy.solve(sympy.Eq(2**x - 2, 5*2**x + 10), x))"
  },
  {
    "example_id": 83,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = (2**(x+1))**3*4**x - 8192\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 84,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0",
      "81.0",
      "2.0",
      "9.0",
      "81.0",
      "2.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "a, b, x = symbols('a b x')\neq1 = a**2 + 2*a*b + b**2 - (2*x)\neq2 = 81 - 2*x\nsolution = solve((eq1, eq2), (a, b, x))\nprint(solution)"
  },
  {
    "example_id": 85,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "# Define variables\nf = symbols('f')\ng = symbols('g')\nh = symbols('h')\n\n\n# Define equation\neq = Eq(f(g(x)) + g(h(x)) + h(f(x)), 0)\n\n\n# Solve for h\nsolution = solve(eq, h)\n\n\n# Get the degree of the polynomial\ndegree = len(solution) - 1\nprint(degree)"
  },
  {
    "example_id": 86,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0",
      "22.0",
      "8.0",
      "6.0",
      "8.0",
      "6.0",
      "8.0",
      "6.0"
    ],
    "annotated_answers": [
      "-15.0"
    ],
    "solution": "def f(x):\n    return x - 7\n\ndef g(x):\n    return x + 7\n\ndef h(x):\n    return x & x - 7\n\ndef i(x):\n    return x & x + 7\n\ndef j(x):\n    return x & x & x - 7\n\ndef k(x):\n    return x & x & x + 7\n\ndef l(x):\n    return x & x & x & x - 7\n\ndef m(x):\n    return x & x & x & x + 7\n\nprint(f(15))\nprint(g(15))\nprint(h(15))\nprint(i(15))\nprint(j(15))\nprint(k(15))\nprint(l(15))\nprint(m(15))"
  },
  {
    "example_id": 87,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "14.70820393249937"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "n = symbols('n')\nf = lambda x: x if x >= 4 else ceil(x) if x < 4 else floor(x)\nf_value = f(float(pow(8, 2/3))) + f(sqrt(45)) + f(float(pow(8, 2/3)))\nprint(f_value)"
  },
  {
    "example_id": 88,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "42.0",
      "48.0",
      "5.0",
      "28.0",
      "5.0"
    ],
    "annotated_answers": [
      "38.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = 5*x - 2*y - 7\neq2 = 3*x + y - 2\neq1_val = solve(eq1, x)[0]\neq2_val = solve(eq2, y)[0]\nx_val = eq1_val\ny_val = eq2_val\nprint(24*x_val - 14*y_val)"
  },
  {
    "example_id": 89,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0",
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\ny = (x - 3) / (x**2 + 7*x - 30)\n\n# Vertical asymptote\nv_asymptote = 3\n\n# Horizontal asymptote\nh_asymptote = 0\n\n# Find the number of vertical asymptotes\nn_v_asymptotes = 1\n\n# Find the number of horizontal asymptotes\nn_h_asymptotes = 1\n\nprint(f\"Number of vertical asymptotes: {n_v_asymptotes}\")\nprint(f\"Number of horizontal asymptotes: {n_h_asymptotes}\")"
  },
  {
    "example_id": 90,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "75.0"
    ],
    "annotated_answers": [
      "75.0"
    ],
    "solution": "volume_of_water = 600 / 8\nprint(volume_of_water)"
  },
  {
    "example_id": 91,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "print(531**2 - 2*531*530 + 530**2)"
  },
  {
    "example_id": 92,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "1.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x = symbols('x')\neq = x**(-1) - x\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 93,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "treeks_weight = 3\nsquigs_weight = 1\ngoolee_weight = 1\n\ntotal_weight = treeks_weight + squigs_weight + goolee_weight\n\ntotal_weight_of_treeks = total_weight / squigs_weight\n\nprint(total_weight_of_treeks)"
  },
  {
    "example_id": 94,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.78145695364238"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "# define the variables\nx = symbols('x')\ny = symbols('y')\n\n# define the ratios\nratio1 = 3/5\nratio2 = 2/7\n\n# define the equation\neq = (ratio1 - ratio2) * (x - y) + 4 * x + 8 * y\n\n# solve the equation\nsolution = solve(eq, x)\n\n# print the result\nprint(solution)"
  },
  {
    "example_id": 95,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "6.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x = symbols('x')\nh = sqrt(25-x**2) + sqrt(-(x-2))\nprint(h.subs(x, 1))"
  },
  {
    "example_id": 96,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "187.5"
    ],
    "annotated_answers": [
      "187.5"
    ],
    "solution": "total_calories = 125 * 12 / 8\nprint(total_calories)"
  },
  {
    "example_id": 97,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "# define k\nk = symbols('k')\n\n# define equation\neq = (3**k)**6 - 3**6\n\n# solve for k\nsolution = solve(eq, k)\n\n# extract solution\nk_value = solution[0]\n\n# print solution\nprint(k_value)"
  },
  {
    "example_id": 98,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x = -2\nprint(2*x**2 + 3*x + 4)"
  },
  {
    "example_id": 99,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "243.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\neq1 = 2**a - 32\neq2 = a**b - 125\nsolution = solve([eq1, eq2], [a, b])\na_value = solution[0][0]\nb_value = solution[0][1]\nprint(b**a_value)"
  },
  {
    "example_id": 100,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "80.0",
      "3.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "p = symbols('p')\neq = (120 - 3*p) - 40\nsolution = solve(eq, p)\np_value = solution[0]\nprint(p_value)"
  },
  {
    "example_id": 101,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "4.0",
      "2.0",
      "2.0",
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "a = symbols('a')\nx = symbols('x')\neq = a*x**2+8*x+4\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 102,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "404496.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "# Define variables\ni = 0\nn = 0\nr = 0\na = 0\n\n# Define the compound interest rate\nr = 0.06\n\n# Define the number of years\nn = 3\n\n# Define the annual wage\na = 20000\n\n# Define the amount to be saved\nb = 66200\n\n# Define the minimum balance in the savings account\nc = a*(1+r)**n\n\n# Define the interest earned\nd = b-c\n\n# Define the number of deposits\ne = floor(d/(a*(1+r)**(n-1)))\n\n# Define the interest earned in each deposit\nf = a*(1+r)**(n-1)\n\n# Define the total interest earned\ng = e*f\n\n# Define the number of years to reach the desired amount\nh = ceil(math.log(b/c)/math.log(1+r))\n\n# Define the total interest earned over the years\ni = h*g\n\n# Print the result\nprint(\"The minimal compound interest rate is:\", round(i, 2), \"%\")"
  },
  {
    "example_id": 103,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "80.0"
    ],
    "annotated_answers": [
      "80.0"
    ],
    "solution": "print(34-10+20-9+55-10)"
  },
  {
    "example_id": 104,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "700.0"
    ],
    "annotated_answers": [
      "700.0"
    ],
    "solution": "print(32**2 - 18**2)"
  },
  {
    "example_id": 105,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.25",
      "2.25"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x = symbols('x')\ny = (3/2)**2\nz = (3/2)**(2)\nprint(y, z)"
  },
  {
    "example_id": 106,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "16.0",
      "15.0",
      "15.0",
      "16.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "for i in range(1, 20):\n    for j in range(1, 20):\n        if i * j - (i + j) == 39:\n            print(i + j)"
  },
  {
    "example_id": 107,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\n\nF = a**b + c*d\n\neq = F.subs({a:6, b:b, c:4, d:3}) - 48\n\nsolution = solve(eq, b)\n\nb_value = solution[0]\n\nprint(b_value)"
  },
  {
    "example_id": 108,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "def f(n):\n    if n > 1:\n        return n**3 + 2*n - 1\n    else:\n        return n - 1\n\nprint(f(0) + f(1) + f(2))"
  },
  {
    "example_id": 109,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-10.869604401089358"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "f_pi = -math.pi**2 - 1\nprint(f_pi)"
  },
  {
    "example_id": 110,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "9.0",
      "-1.0",
      "3.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "7.0",
      "54.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "x = symbols('x')\neq = (x + x**2 + x**3)/3 - sqrt(13)/2\nsolution = solve(eq, x)\nx_value = solution[0]\nS = (x_value + x_value**2 + x_value**3)/3\nprint(S**2)"
  },
  {
    "example_id": 111,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-33.0"
    ],
    "annotated_answers": [
      "27.0"
    ],
    "solution": "import sympy\nx = sympy.Symbol('x')\nf = x**2 - 6*x + 2 - 29\na, b = sympy.solve(f, x)\nprint(2*a - 3*b)"
  },
  {
    "example_id": 112,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "20.0",
      "2.0",
      "2.0",
      "20.0",
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "a = symbols('a')\neq = (x**2) + (a*x) + (5*a)\nsolution = solve(Eq(eq, 0), x)\nprint(solution)"
  },
  {
    "example_id": 113,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.625",
      "3.0",
      "0.625",
      "40.0",
      "0.125",
      "0.625",
      "0.790569415042095",
      "0.8549879733383485"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "# Find the numerator and denominator of the fraction\nnum = 5\nden = 8\n\n# Find the difference between the numerator and the denominator\ndiff = num - den\n\n# Find the quotient of the numerator and the denominator\nquotient = num / den\n\n# Find the product of the numerator and the denominator\nproduct = num * den\n\n# Find the reciprocal of the denominator\nreciprocal = 1/den\n\n# Find the fraction\nfraction = num/den\n\n# Print the fraction\nprint(fraction)\n\n# Find the absolute value of the difference between the numerator and the denominator\nabs_diff = abs(diff)\n\n# Print the absolute value of the difference between the numerator and the denominator\nprint(abs_diff)\n\n# Find the absolute value of the quotient\nabs_quotient = abs(quotient)\n\n# Print the absolute value of the quotient\nprint(abs_quotient)\n\n# Find the absolute value of the product\nabs_product = abs(product)\n\n# Print the absolute value of the product\nprint(abs_product)\n\n# Find the absolute value of the reciprocal\nabs_reciprocal = abs(reciprocal)\n\n# Print the absolute value of the reciprocal\nprint(abs_reciprocal)\n\n# Find the absolute value of the fraction\nabs_fraction = abs(fraction)\n\n# Print the absolute value of the fraction\nprint(abs_fraction)\n\n# Find the square root of the absolute value of the fraction\nsqrt_abs_fraction = sqrt(abs_fraction)\n\n# Print the square root of the absolute value of the fraction\nprint(sqrt_abs_fraction)\n\n# Find the cube root of the absolute value of the fraction\ncube_root_abs_fraction = pow(abs_fraction, 1/3)\n\n# Print the cube root of the absolute value of the fraction\nprint(cube_root_abs_fraction)\n\n# Find the floor of the square root of the absolute value of the fraction\nfloor_sqrt_abs_fraction = floor(sqrt_abs_fraction)\n\n# Print the floor of the square root of the"
  },
  {
    "example_id": 114,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-6.0"
    ],
    "annotated_answers": [
      "-6.0"
    ],
    "solution": "# Define function g(x)\ndef g(x):\n    return -6*math.sin(x*math.pi/6)\n\n# Evaluate g(-1)\ng_x = g(-1)\n\n# Evaluate g(g(-1))\ng_g_x = g(g_x)\n\n# Print g(g(-1))\nprint(g_g_x)"
  },
  {
    "example_id": 115,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "4.0",
      "39.0",
      "4.0",
      "-1.0",
      "4.0",
      "39.0",
      "4.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "c = symbols('c')\nf = (2*x**2 + x + 5)/(x**2 + 4*x + c)\ndomain = solve(f.as_numer_denom()[0], x)\nprint(domain)"
  },
  {
    "example_id": 116,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "1.0"
    ],
    "solution": ""
  },
  {
    "example_id": 117,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\neq = (5*x)**(1/2)*(10*x)**(1/2)*(18*x)**(1/2) - 30\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 118,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "m = 3"
  },
  {
    "example_id": 119,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0",
      "5.0",
      "2.0",
      "5.0",
      "5.0",
      "2.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\neq = 2*x*(x-10) + (-50)\nsolution = solve(eq, x)\nx_value = solution\nprint(x_value)"
  },
  {
    "example_id": 120,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\neq = Eq(2**8, 4**x)\nsolution = solve(eq, x)\nprint(solution[0])"
  },
  {
    "example_id": 121,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "8.0",
      "103.0",
      "8.0"
    ],
    "annotated_answers": [
      "34.0"
    ],
    "solution": "x = symbols('x')\ny = 8 - 5*x + 4*x**2\nsolution = solve(y, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 122,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "x = symbols('x')\neq = (2-abs(x))**2\nsolution = integrate(eq)\nprint(solution)"
  },
  {
    "example_id": 123,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "# Define symbols\nx1, y1, x2, y2, x3, y3 = symbols('x1, y1, x2, y2, x3, y3')\n\n\n# Define constants\nA_x, A_y = 9, 1\nB_x, B_y = 19, k\nC_x, C_y = 7, 0\n\n\n# Define the line\nline = Eq(y3 - y1, m * (x3 - x1))\n\n\n# Define the slope\nm = (y2 - y1) / (x2 - x1)\n\n\n# Solve for k\nsolution = solve(line, k)\nk_value = solution[0]\nprint(k_value)"
  },
  {
    "example_id": 124,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "74726.0"
    ],
    "annotated_answers": [
      "74726.0"
    ],
    "solution": "# Define the problem\np = 0.06\nM = 100000\nt = 5\n\n# Define the variables\nx = symbols('x')\n\n# Define the equation\neq = x * (1 + p)**t - M\n\n# Find the solution\nsolution = solve(eq, x)\n\n# Find the solution value\nx_value = solution[0]\n\n# Round the solution to the nearest dollar\nx_value_rounded = round(x_value)\n\n# Print the result\nprint(x_value_rounded)"
  },
  {
    "example_id": 125,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0",
      "9.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 - 5*x - 36\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 126,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "print(log(1, 2))"
  },
  {
    "example_id": 127,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "24.0"
    ],
    "annotated_answers": [
      "24.0"
    ],
    "solution": "N = symbols('N')\neq = Eq((2**3)**(2**3), 2**N)\nsolution = solve(eq, N)\nN_value = solution[0]\nprint(N_value)"
  },
  {
    "example_id": 128,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "23625.0",
      "2981.0",
      "24561.0",
      "5.0",
      "2981.0",
      "-18375.0",
      "2036.0",
      "19103.0",
      "5.0",
      "2036.0",
      "-250.0",
      "9.0",
      "28.0",
      "5.0",
      "3.0",
      "250.0",
      "7.0",
      "297.0",
      "5.0",
      "7.0"
    ],
    "annotated_answers": [
      "93.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\nd = symbols('d')\ne = symbols('e')\nf = symbols('f')\ng = symbols('g')\nh = symbols('h')\ni = symbols('i')\nj = symbols('j')\nk = symbols('k')\nl = symbols('l')\nm = symbols('m')\nn = symbols('n')\no = symbols('o')\np = symbols('p')\nq = symbols('q')\nr = symbols('r')\ns = symbols('s')\nt = symbols('t')\nu = symbols('u')\nv = symbols('v')\nw = symbols('w')\nx = symbols('x')\ny = symbols('y')\nz = symbols('z')\n\nA = 6\nB = 245\nC = 125\nD = 45\n\nE = 3*sqrt(B) + 4*sqrt(D)\nF = sqrt(B)\nG = 3*sqrt(D)\nH = 4*sqrt(D)\n\neq = (A*F)/(C + E) - (A*G)/(C + H)\nsolution = solve(eq, F)\n\nF_value = solution[0]\nprint(F_value)\n\neq2 = (A*F)/(C + E) - (A*G)/(C + H)\nsolution2 = solve(eq2, G)\n\nG_value = solution2[0]\nprint(G_value)\n\neq3 = (A*F)/(C + E) - (A*G)/(C + H)\nsolution3 = solve(eq3, E)\n\nE_value = solution3[0]\nprint(E_value)\n\neq4 = (A*F)/(C + E) - (A*G)/(C + H)\nsolution4 = solve(eq4, H)\n\nH_value = solution4[0]\nprint(H_value)\n\nA_value = F_value*G_value\nB_value = E_value*H_value\nC_value = A_value*B"
  },
  {
    "example_id": 129,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "14.0"
    ],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "u = Symbol('u')\nexpr = (u+4)*(u-1) - (u-3)*(u+6)\nprint(expr.expand())"
  },
  {
    "example_id": 130,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "13.5"
    ],
    "annotated_answers": [
      "13.5"
    ],
    "solution": "A = 1/4\nB = -1/2\ndifference = abs(18*A - 18*B)\nprint(difference)"
  },
  {
    "example_id": 131,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "3.0",
      "1.0",
      "-1.0",
      "1.0",
      "3.0",
      "1.0",
      "-1.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "# Define functions\nf = lambda x: (4-x)/2\ng = lambda x: 2*x-4\n\n# Evaluate f(g(1))\nf_g_1 = f(g(1))\n\n# Evaluate g(f(1))\ng_f_1 = g(f(1))\n\n# Print solution\nprint(\"f(g(1)) =\", f_g_1)\nprint(\"g(f(1)) =\", g_f_1)\n\n# Evaluate f(g(1)) and g(f(1))\nf_g_1_eval = f(g(1))\ng_f_1_eval = g(f(1))\n\n# Print solution\nprint(\"f(g(1)) =\", f_g_1_eval)\nprint(\"g(f(1)) =\", g_f_1_eval)"
  },
  {
    "example_id": 132,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "a = -1\nb = 2\n\nprint(a + b)"
  },
  {
    "example_id": 133,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.5355339059327378"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "a = 3\nb = 4\nc = 7\nd = 5\nm = 5.5\nn = 6.5\n\n# Distance between M and M'\ndist = (m-a)**2 + (n-b)**2\nprint(dist**0.5)"
  },
  {
    "example_id": 134,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-100.0",
      "3.0",
      "-50.0",
      "3.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "m = symbols('m')\nn = symbols('n')\n\n# create a equation\neq1 = 70 + m + n - 20\neq2 = m - 2*n\n\n# solve the equation\nsolution = solve((eq1, eq2), (m, n))\n\n# print the solution\nprint(solution)"
  },
  {
    "example_id": 135,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.9268033733231809",
      "129.0"
    ],
    "annotated_answers": [
      "125.0"
    ],
    "solution": "# Declare x as a symbol\nx = symbols('x')\n\n# Define the expression\nexpr = (4/(sqrt(5) + 1)*(sqrt(4*5) + 1)*(sqrt(8*5) + 1)*(sqrt(16*5) + 1))\n\n# Calculate (x+1)^48\nexpr_sol = expr + 1\nexpr_sol_pow = expr_sol**48\n\n# Print the result\nprint(expr_sol_pow)"
  },
  {
    "example_id": 136,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "# define function f(x) = x + 1\nf = lambda x: x + 1\n\n# define function g(x) = x^2 + 3\ng = lambda x: x**2 + 3\n\n# calculate f(g(2))\nprint(f(g(2)))"
  },
  {
    "example_id": 137,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-3.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "print(ceil(pow(3.6, 2)) - pow(ceil(3.6), 2))"
  },
  {
    "example_id": 138,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "121.0"
    ],
    "annotated_answers": [
      "121.0"
    ],
    "solution": "sqrt_400 = 20\nsqrt_81 = 9\nsqrt_n = 11\nn = 121\nprint(n)"
  },
  {
    "example_id": 139,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "49.0",
      "2.0",
      "14.0",
      "19.0",
      "7.0",
      "19.0",
      "7.0",
      "2.0"
    ],
    "annotated_answers": [
      "361.0"
    ],
    "solution": "x = symbols('x')\nf = 49*x**2 + 14*x*(19-7*x) + (19-7*x)**2\nprint(f)"
  },
  {
    "example_id": 140,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a, b = symbols('a b')\neq1 = 5*a + 2*b - 0\neq2 = a*b - (-10)\n\nsolution = solve((eq1, eq2), (a, b))\n\na_value = solution[0][0]\nprint(a_value)"
  },
  {
    "example_id": 141,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "15.0",
      "15.0",
      "2.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "# Define the variables\nn = symbols('n')\nN = 15\n\n# Define the equation\neq = (N**(n+1))/(2**n) - 1\n\n# Solve for n\nsolution = solve(eq, n)\n\n# Print the solution\nprint(solution)"
  },
  {
    "example_id": 142,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "5.0",
      "2.0",
      "3.0",
      "5.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 - x - 1\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value**3 - 2*x_value + 1)"
  },
  {
    "example_id": 143,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "# Define a function for nth term\ndef nth_term(n):\n    # If n is even, the term is (n+1)/2\n    if n%2 == 0:\n        return (n+1)/2\n    # If n is odd, the term is (n+1)/2 + 1\n    else:\n        return (n+1)/2 + 1\n\n# Define a function for sum of terms\ndef sum_terms(n):\n    # Initialize sum to 0\n    sum = 0\n    # Loop through terms\n    for i in range(1, n+1):\n        term = nth_term(i)\n        sum += term\n    return sum\n\n# Find the value of n\nn = ceil(math.log(2, 2) - 1)\n\n# Find the value of a + b + c\na = sum_terms(n)\nb = math.sqrt(a)\nc = a - b**2\nprint(a + b + c)"
  },
  {
    "example_id": 144,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "540.0"
    ],
    "annotated_answers": [
      "180.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\nd = symbols('d')\neq = (a+b) + (c+d) - (160+180+200)\nsolution = solve(eq, [a, b, c, d])\nprint(solution)"
  },
  {
    "example_id": 145,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "5.0",
      "3.0",
      "11.0",
      "5.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\nx_A = solve((3*y - x), x)\ny_A = solve((2*x + 5*y - 11), y)\nprint(x_A[0] + y_A[0])"
  },
  {
    "example_id": 146,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "1.0",
      "3.0",
      "2.0",
      "-2.0",
      "3.0",
      "2.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "from sympy import S, sqrt\n\nA = S(1 + sqrt(2))\nB = S(2 + sqrt(3))\nC = A**2 - B**2\nD = A**2 - 2*B**2\n\nprint(A*(1 + sqrt(B)) - (sqrt(C) + sqrt(D)))"
  },
  {
    "example_id": 147,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\np = x**2 + a*x + b\nsolution = solve(p.subs(x, 2*a) - p.subs(x, b), a)\na_value = solution[0]\nb_value = solution[1]\na_plus_b = a_value + b_value\nprint(a_plus_b)"
  },
  {
    "example_id": 148,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "234.0",
      "162.0",
      "234.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "m, n, p = symbols('m n p')\n\n# Solve for $mnp$:\neq1 = (m + n + p) * (m * n + m * p + n * p)\neq1 = eq1.expand()\neq1 = eq1.subs({m: 2, n: 3, p: 4})\nprint(eq1)\n\n# Solve for $m^2(n+p)+n^2(m+p)+p^2(m+n)$:\neq2 = m**2 * (n + p) + n**2 * (m + p) + p**2 * (m + n)\neq2 = eq2.expand()\neq2 = eq2.subs({m: 2, n: 3, p: 4})\nprint(eq2)\n\n# Solve for $mnp$:\nmnp = eq1.subs({m: 2, n: 3, p: 4})\nmnp = mnp.subs({m: 2, n: 3, p: 4})\nmnp = mnp.subs({m: 2, n: 3, p: 4})\nprint(mnp)"
  },
  {
    "example_id": 149,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "from sympy import I\n\nz = symbols('z')\nf = z**2 if not z.is_real else z + 2\n\nf_val = f.subs(z, I) + f.subs(z, 1) + f.subs(z, -1) + f.subs(z, -I)\nprint(f_val)"
  },
  {
    "example_id": 150,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "-114.0"
    ],
    "solution": "# define variables\nx = symbols('x')\n\n# define the sum\nsum = 0\n\n# define the bounds\nlow = -30\nhigh = 26\n\n# define the step size\nstep = 1\n\n# define the equation\neq = Eq(x, 0)\n\n# define the range\nfor i in range(low, high+1, step):\n    if eq.subs(x, i) == 0:\n        sum += i\n\n# display the sum\nprint(sum)"
  },
  {
    "example_id": 151,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "14.0",
      "112.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "# Number of cookies for each student\nn = 2\n\n# Number of students\nm = 108\n\n# Total number of cookies needed\ntotal = m * n\n\n# Number of cookies in one pan\npan = 15\n\n# Number of pans needed\npans = total // pan\n\n# Butter needed\nbutter = pans * 8\n\nprint(f\"Number of pans needed: {pans}\")\nprint(f\"Number of butter sticks needed: {butter}\")"
  },
  {
    "example_id": 152,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "3.0",
      "29.0",
      "3.0",
      "2.0",
      "56.0",
      "9.0",
      "-1.0",
      "3.0",
      "29.0",
      "3.0",
      "2.0",
      "2.0",
      "100.0",
      "9.0",
      "-1.0",
      "3.0",
      "29.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "64.0"
    ],
    "solution": "# Initialize variables\nx = symbols('x')\ny = symbols('y')\n\n# Create equation\neq = (2*x + 3*y)**2 - 4\n\n# Create another equation\neq2 = x*y - 5\n\n# Solve for x and y\nsolutions = solve([eq, eq2], [x, y])\n\n# Calculate the value of 4x^2 + 9y^2\nresult = 4*(solutions[0][0])**2 + 9*(solutions[0][1])**2\n\n# Print result\nprint(result)"
  },
  {
    "example_id": 153,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x = symbols('x')\nexpr = (x-3)/(x**2 - 10*x + 16)\nsolution = solve(expr, x)\nprint(solution)"
  },
  {
    "example_id": 154,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\ny = (x + 1)/(x**2 - 2*x + 1)\n# find the vertical asymptotes\nasymptotes = solve(y, x)\n# print the asymptotes\nprint(asymptotes)"
  },
  {
    "example_id": 155,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "26.0"
    ],
    "solution": "from sympy import symbols, solve, integrate\n\ndef h(x):\n    return (x-0.5)*(x-2.5)*(x-6.5)*(x-7.5)/16 + x\n\nx = symbols('x')\nint_1 = integrate(1, (x, 0, 8))\nint_2 = integrate(1, (x, 0, 8))\nsolution = int_1 - int_2\nprint(solution)"
  },
  {
    "example_id": 156,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "x = 8 / 2\ny = 8 / 4\nprint(x + y)"
  },
  {
    "example_id": 157,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "f = lambda x: 5*x + 2\ng = lambda x: 3*x**2 - 4*x\n\nprint(f(f(1)) - g(g(2)))"
  },
  {
    "example_id": 158,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "1.0",
      "3.0",
      "10.0",
      "2.0",
      "3.0",
      "3.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq = (x + (-16) + 6)/3\neq1 = eq**2 + (y**3)\nsolution = solve(eq1, y)\ny_value = solution[0]\nprint(y_value)"
  },
  {
    "example_id": 159,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-11.0"
    ],
    "annotated_answers": [
      "-11.0"
    ],
    "solution": "x = symbols('x')\neq = (x-9)/(x+1) - 2\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 160,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "928.0"
    ],
    "annotated_answers": [
      "1710.0"
    ],
    "solution": "n = 15\na = 28\nd = 4\ns = sum([a + (n-i)*d for i in range(n+1)])\nprint(s)"
  },
  {
    "example_id": 161,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "from sympy import symbols, solve\nfrom sympy.abc import x, y, a\neq = (y - x**2) * (y - x - 2*a)\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 162,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "100.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "# Define variables\nf = symbols('f')\ng = symbols('g')\nh = f(g(x)) + g(x)\n\n# Calculate degree of g(x)\ndegree_of_g = 8 - 4\n\n# Print the degree of g(x)\nprint(degree_of_g)"
  },
  {
    "example_id": 163,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "1.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\nm = symbols('m')\neq = (3*x**2 - 4*x + 1)/(x - 1) - m\nsolution = solve(eq, m)\nm_value = solution[0]\nprint(m_value)"
  },
  {
    "example_id": 164,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "4.0",
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x = symbols('x')\npoly = 3*(x - 4) + 2*(x**2 - x + 7) - 5*(x - 1)\npoly_simplified = poly.expand()\nprint(poly_simplified)"
  },
  {
    "example_id": 165,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "64.0"
    ],
    "annotated_answers": [
      "64.0"
    ],
    "solution": "print((1+3)**3)"
  },
  {
    "example_id": 166,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "20.0",
      "6.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "# Define variables\nI = 40\nR1 = 3\nR2 = 20\n\n# Calculate V\nV = I * R1\n\n# Calculate I when R = R2\nI2 = V / R2\n\nprint('The current flowing through the 20 ohm resistor is:', I2, 'amperes')"
  },
  {
    "example_id": 167,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-4.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "x = symbols('x')\neq = (2**12) - (1/8)**x\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 168,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25.0",
      "625.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\nlog = log(5**2, 5**4)\nprint(log)"
  },
  {
    "example_id": 169,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "143749.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\nf = 4*x**3 + 1\nf_inv = f**(-1)\nf_inv_val = f_inv.subs(x, 33)\nprint(f_inv_val)"
  },
  {
    "example_id": 170,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25.0",
      "12.0",
      "6.0",
      "5.0",
      "6.0",
      "25.0",
      "12.0",
      "6.0",
      "5.0",
      "6.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "k = symbols('k')\na = symbols('a')\nb = symbols('b')\neq1 = 3*a**2 + 5*a + k\neq2 = 3*b**2 + 5*b + k\nsolution = solve([eq1, eq2], [a, b])\nk_value = solution[0]\nprint(k_value)"
  },
  {
    "example_id": 171,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0",
      "10.0",
      "2.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "i = symbols('i', imaginary=True)\neq = (2-2*i)*(5+5*i)\nsolution = simplify(eq)\nprint(solution)"
  },
  {
    "example_id": 172,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "# Define the number of seats in each row\nseats_per_row = 450\n\n# Define the number of rows\nrows = 5\n\n# Calculate the number of seats in each row\nseats_in_each_row = seats_per_row * rows\n\n# Calculate the number of seats in the auditorium\ntotal_seats = seats_in_each_row * 3 / 4\n\n# Calculate the number of rows in the auditorium\nauditorium_rows = floor(total_seats / seats_per_row)\n\n# Print the number of rows in the auditorium\nprint(auditorium_rows)"
  },
  {
    "example_id": 173,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "5.0"
    ],
    "annotated_answers": [
      "23.0"
    ],
    "solution": "x = symbols('x')\nf = 2*x + 1\nf_inv = (x + 4)/(2*x + 1)\nf_inv_17 = f_inv.subs(x, 17)\nprint(f_inv_17)"
  },
  {
    "example_id": 174,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "1.0",
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "A, B = symbols('A B')\neq = (5*x - 16)/(x**2 - 7*x + 10) - (A/(x - 2) + B/(x - 5))\neq_expand = eq.expand()\nA_value = eq_expand.coeff(A)\nB_value = eq_expand.coeff(B)\nprint('A+B=', A_value + B_value)"
  },
  {
    "example_id": 175,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "import math\nprint(math.log(32,2) - 2)"
  },
  {
    "example_id": 176,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "16.0",
      "7.0",
      "7.0",
      "8.0",
      "6.0",
      "3.0",
      "12.0",
      "5.0",
      "9.0",
      "4.0",
      "53.0",
      "3.0",
      "3.0",
      "7.0",
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "from sympy import symbols, solve, diff, integrate\nx = symbols('x')\nP = 4*x**3 - 2*x**2 + 7*x - 1\nQ = P**2\ny_intercept = integrate(Q, x)\nprint(y_intercept)"
  },
  {
    "example_id": 177,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "1929.0",
      "2.0"
    ],
    "annotated_answers": [
      "23.0"
    ],
    "solution": "# Define variables\nn = symbols('n')\nS = 241\n\n# Define the expression\nexpr = (n*(n+1))/2 - S\n\n# Solve the equation\nsolution = solve(expr, n)\n\n# Print the solution\nprint(solution[0])"
  },
  {
    "example_id": 178,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "79.0"
    ],
    "solution": "print(int(ceil(int(52/3)/5/23)))"
  },
  {
    "example_id": 179,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-5.0",
      "5.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "# Define variables\nx = symbols('x')\n\n# Define expression\nexpr = (x-5)*(x+5)\n\n# Solve for x\nsolution = solve(expr)\n\n# Print solution\nprint(solution)"
  },
  {
    "example_id": 180,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "a, b = symbols('a, b')\nparabola = -((x + 1)**2 + 1)\neq1 = Eq(parabola, 0)\nsolution = solve(eq1, x)\nx1 = solution[0]\nx2 = solution[1]\nb_value = x2 - x1\nprint(b_value)"
  },
  {
    "example_id": 181,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-5.0",
      "-1.0",
      "-5.0",
      "-1.0",
      "-1.0",
      "2.0",
      "2.0",
      "2.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "a, b, S = symbols('a b S')\neq1 = Eq(S, a/(1-b) + a/(b-1) + a/(b**2-1) + a/(b**3-1) + a/(b**4-1))\neq2 = Eq(1/S, 1/(a/(1-b)) + 1/(a/(b-1)) + 1/(a/(b**2-1)) + 1/(a/(b**3-1)) + 1/(a/(b**4-1)))\nsol = solve((eq1, eq2), (a, b))\nprint(sol)"
  },
  {
    "example_id": 182,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "3.0",
      "3.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a1, a2, a3, a4, a5 = symbols('a1, a2, a3, a4, a5')\neq = (a4/a2) - 3\nsolution = solve(eq, a4)\na4_value = solution[0]\nprint(a4_value)\na5 = a4_value/a2*a3\nprint(a5)"
  },
  {
    "example_id": 183,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "978121.0"
    ],
    "annotated_answers": [
      "978121.0"
    ],
    "solution": "n = 989\nprint(n**2)"
  },
  {
    "example_id": 184,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 + 3*x + 9\nsolution = solve(eq, x)\nc_value = solution[0]\nprint(c_value)"
  },
  {
    "example_id": 185,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "-10.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\n\n# Line equation\ny = 4*x + 6\n\n# Find the y-coordinate of the point where the line crosses the y-axis\ny_axis = 0\nsolution = solve(y-y_axis, x)\nx_value = solution[0]\ny_value = y.subs(x, x_value)\nprint(y_value)"
  },
  {
    "example_id": 186,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "8.0",
      "2.0",
      "4.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x, y, c = symbols('x y c')\neq = x**2 + 8*x + y**2 + 4*y + c\nsolution = solve(eq, c)\nc_value = solution[0]\nprint(c_value)"
  },
  {
    "example_id": 187,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "log_8_2938 = 3.380491156940494\na = int(log_8_2938)\nb = a + 1\nprint(a+b)"
  },
  {
    "example_id": 188,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "1.0",
      "0.25"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "# Define variables\nT = 2 # Teaspoons of salt\nS = 1/4 # Salt per quart of water\nQ = 1 # Quart of water\n\n# Calculate amount of water needed for T teaspoons of salt\nwater_needed = T * S / Q\n\n# Calculate number of quarts needed for T teaspoons of salt\nquarts_needed = ceil(water_needed)\n\n# Calculate amount of salt needed for Q quarts of water\nsalt_needed = quarts_needed * Q * S\n\n# Print result\nprint(f'{T} teaspoons of salt is equivalent to {quarts_needed} quarts of water and {salt_needed} teaspoons of salt.')"
  },
  {
    "example_id": 189,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "f_g_2 = 2 * (2^2 + 3) - 4\nprint(f_g_2)"
  },
  {
    "example_id": 190,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0",
      "7.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\nk = symbols('k')\n\nroot1 = (-7 + 1j*sqrt(15))/8\nroot2 = (-7 - 1j*sqrt(15))/8\n\neq = Eq((4*x**2 + 7*x + k), 0)\n\nsolution = solve(eq, k)\nk_value = solution[0]\n\nprint(k_value)"
  },
  {
    "example_id": 191,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\ny = 2*x**2 - 4*x + 4\neq = Eq(y, 0)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 192,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "28.0"
    ],
    "solution": "# Adina's size is 6\nadina_size = 6\n# Lynn's size is 9\nlynn_size = 9\n# Adina's shoe size\nadina_shoe_size = ceil(lynn_size * adina_size / 10)\nprint(adina_shoe_size)"
  },
  {
    "example_id": 193,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "26.0",
      "-1.0",
      "120.0",
      "-1.0"
    ],
    "annotated_answers": [
      "28.0"
    ],
    "solution": "a, b = symbols('a, b')\n\nf = Eq(a/b*x, -60/13)\nf_1 = Eq(a*b*x**2, 3120)\n\nsolution = solve([f, f_1], [a, b])\n\na_value = solution[0][0]\nb_value = solution[0][1]\n\nprint(a_value + b_value)"
  },
  {
    "example_id": 194,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "from sympy import log\nprint(log(81, 3))"
  },
  {
    "example_id": 195,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-0.785714285714286",
      "1.0",
      "0.330578512396694",
      "0.357142857142857",
      "0.785714285714286",
      "1.0",
      "0.330578512396694",
      "0.357142857142857"
    ],
    "annotated_answers": [
      "0.43"
    ],
    "solution": "# Define the variables\nt = symbols('t')\ny = symbols('y')\n\n# Define the equation\neq = Eq(y, (-4.9*t**2) - 3.5*t + 2.4)\n\n# Find the solution\nsolution = solve(eq, t)\n\n# Print the solution\nprint(solution)"
  },
  {
    "example_id": 196,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "44.0"
    ],
    "annotated_answers": [
      "44.0"
    ],
    "solution": "print((4**3 + 2**3) - (3**3 + 1**3))"
  },
  {
    "example_id": 197,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq = x*y - (x**2 + y**2)\nsolution = solve(eq, y)\ny_value = solution[0]\nprint(y_value)"
  },
  {
    "example_id": 198,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "def D(a, b, c):\n    return a * b * c / (a + b + c)\n\nprint(D(2, 4, 6))"
  },
  {
    "example_id": 199,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "8000.0"
    ],
    "annotated_answers": [
      "8000.0"
    ],
    "solution": "print((26**2 - 24**2 - 10)**2 - 10**2)"
  },
  {
    "example_id": 200,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.7",
      "153.0"
    ],
    "annotated_answers": [
      "27.0"
    ],
    "solution": "x, y = symbols('x y')\neq = Eq((x + y), 153)\nsolution = solve(eq, y)\ny_value = solution[0]\neq = Eq((x/y), 0.7)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(y_value - x_value)"
  },
  {
    "example_id": 201,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "20.0",
      "2.0",
      "10.0",
      "4.0",
      "5.0",
      "5.0",
      "4.0",
      "10.0",
      "2.0",
      "20.0",
      "1.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "for x in range(1, 21):\n    for y in range(1, 21):\n        if harmonic_mean(x, y) == 20:\n            print(x, y)"
  },
  {
    "example_id": 202,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "3.0",
      "2.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "x1, y1 = symbols('x1 y1')\nx2, y2 = symbols('x2 y2')\nx3, y3 = symbols('x3 y3')\nx4, y4 = symbols('x4 y4')\n\ncenter_x = (x1*(x2**2 + y2**2) + x2*(x3**2 + y3**2) + x3*(x4**2 + y4**2))/(x2**2 + y2**2 + x3**2 + y3**2 + x4**2 + y4**2)\ncenter_y = (y1*(x2**2 + y2**2) + y2*(x3**2 + y3**2) + y3*(x4**2 + y4**2))/(x2**2 + y2**2 + x3**2 + y3**2 + x4**2 + y4**2)\n\nprint(center_x + center_y)"
  },
  {
    "example_id": 203,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "4.0",
      "3.0",
      "1.0",
      "3.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\nf = 4*x + 1\nf_inverse = 3/f\nf_inverse_inverse = f_inverse**(-1)\nf_inverse_inverse_inverse = f_inverse_inverse**(-1)\nprint(f_inverse_inverse_inverse)"
  },
  {
    "example_id": 204,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "17.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "p, q = symbols('p q')\neq = (q + 4)*(p + 3) - (q + 2)*(p + 1) - 44\nsolution = solve(eq, p)\np_value = solution[0]\nprint(p_value)"
  },
  {
    "example_id": 205,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "125.5"
    ],
    "annotated_answers": [
      "125.5"
    ],
    "solution": "sum = 0\nfor i in range(1, 251):\n    sum += i\nprint(sum / 250)"
  },
  {
    "example_id": 206,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "13.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "x = symbols('x')\neq = (x**2) - 4*x - 14 - 3*x - 16\nsolution = solve(eq, x)\nx_values = solution\nprint(x_values[1] - x_values[0])"
  },
  {
    "example_id": 207,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "# create a symbol for the variable\nx = symbols('x')\n\n# create an equation\neq = (3 + (1/x)) - (7/x)\n\n# solve for the variable\nsolution = solve(eq, x)\n\n# print the solution\nprint(solution)"
  },
  {
    "example_id": 208,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1201.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "# Define f(x) and g(x)\nf = lambda x: (1 + x) / (1 - x)\ng = lambda x: -2 / (x + 1)\n\n# Define the function that will be applied 8 times\ndef h(x):\n    return f(g(x))\n\n# Calculate the value of h(12)\nh_value = h(12)\nprint(h_value)\n\n# Calculate the number of times f and g will be applied\nn = 8\n\n# Create a list of equations\neqs = []\nfor i in range(n):\n    if i % 2 == 0:\n        eqs.append(Eq(f(g(12)), h_value))\n    else:\n        eqs.append(Eq(g(f(12)), h_value))\n\n# Solve the equations\nsolution = solve(eqs, f(g(12)))\n\n# Print the solution\nprint(solution)"
  },
  {
    "example_id": 209,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-3.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "x = symbols('x')\neq = (x + 3) * (x - 1) - x * (x + 2)\nprint(eq.simplify())"
  },
  {
    "example_id": 210,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "3.0",
      "4.0",
      "3.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "expr = sqrt((4/sqrt(24)) + (sqrt(3456)/9) + sqrt(6))/sqrt(6)\nprint(expr)"
  },
  {
    "example_id": 211,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "16.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\nexpr = (sqrt(x-2))/(x**2 + x - 6)\nexpr_defined = expr.is_defined(x)\nsolution = solve(expr_defined, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 212,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "16.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "x = symbols('x')\neq = Eq((4**5)+(4**5)+(4**5)+(4**5), x**3)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 213,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "import numpy as np\nA = -1\nB = 1\nC = 2\nprint(A + B + C)"
  },
  {
    "example_id": 214,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "3.0",
      "2.0",
      "4.0",
      "3.0",
      "1.0",
      "3.0",
      "2.0",
      "4.0",
      "1.0",
      "4.0",
      "2.0",
      "3.0",
      "4.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x1, y1, x2, y2, x3, y3, x4, y4 = symbols('x1, y1, x2, y2, x3, y3, x4, y4')\nm = (y1 - y2)/(x1 - x2) - (y3 - y4)/(x3 - x4)\nsolution = solve(m, simplify=True)\nslope = solution[0]\nprint(slope)"
  },
  {
    "example_id": 215,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\na = 5*x - 1\nb = x + 3\neq = Eq(a, b)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 216,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\neq = log(10 - 2*x, x - 1) - 2\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 217,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "# a, b, c, d = symbols('a, b, c, d')\na, b, c, d = symbols('a, b, c, d')\n\neq1 = a - b - 2*(c+d)\neq2 = b - a + 2\neq3 = d - c - 5\n\nsolution = solve((eq1, eq2, eq3), (c, d))\n\nc_value = solution[0][0]\nd_value = solution[0][1]\n\nprint(c_value)\nprint(d_value)"
  },
  {
    "example_id": 218,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "288.0"
    ],
    "solution": "a, b = symbols('a b')\neq = (2*a*b) - 12\nprint(8*a**2*b**2)"
  },
  {
    "example_id": 219,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.9999999999999996"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "a = 8\nvalue = (16*a**(2/3))**(1/3)\nprint(value)"
  },
  {
    "example_id": 220,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "2.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "# Define variables\nx1, y1, x2, y2 = symbols('x1, y1, x2, y2')\n\n# Define segment\nsegment = (x1, y1), (x2, y2)\n\n# Define coordinates of midpoint\nmidpoint = ((x1+x2)/2, (y1+y2)/2)\n\n# Calculate sum of coordinates of midpoint\nsum_coordinates = midpoint[0] + midpoint[1]\n\n# Print the sum of the coordinates of the midpoint\nprint(sum_coordinates)"
  },
  {
    "example_id": 221,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "32.0"
    ],
    "solution": "# Define the variables\nx, y = symbols('x, y')\n\n# Define the equations\neq1 = x**2 - 24*x + y**2 - 32*y + 384\neq2 = x**2 + 24*x + y**2 + 32*y + 384\n\n# Define the equations in terms of x\neq1x = eq1.subs(y, 0)\neq2x = eq2.subs(y, 0)\n\n# Find the shortest distance between the two circles\ndist = solve(eq1x - eq2x, x)\nprint(dist)"
  },
  {
    "example_id": 222,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x = symbols('x')\neq = (66-2**x)/(2**x+3) - (4-2**x)/(2**(x+1)+6)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 223,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "29.0"
    ],
    "solution": "# three pencils and a jumbo eraser cost 1.24\nthree_pencils = 1.24\n\n# five pencils and a jumbo eraser cost 1.82\nfive_pencils = 1.82\n\n# cost of a pencil\npencil_cost = ceil((three_pencils - five_pencils)/4)\n\nprint(pencil_cost)"
  },
  {
    "example_id": 224,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "4.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nm = symbols('m')\neq = (Eq(a/4 + b/12, 1))\nsolution = solve(eq, a, b, m)\na_value = solution[0][0]\nb_value = solution[0][1]\nm_value = solution[0][2]\n\nprint(a_value + b_value + m_value)"
  },
  {
    "example_id": 225,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "22.0"
    ],
    "solution": "# create symbols\na, b = symbols('a, b')\n\n# define the parabola\nparabola = 2*a**2 + 8*a + 4\n\n# define the line\nline = 7\n\n# find the intersection point\npoint = solve((parabola - line), a)\n\n# find the area\narea = (point[0] - point[0]) * (point[0] - point[0])\nprint(area)"
  },
  {
    "example_id": 226,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "28.0",
      "28.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "p = symbols('p')\nq = symbols('q')\n\n# Solve for p when q=49\neq = Eq(p, 28/q)\nsolution = solve(eq, p)\np_value = solution[0]\n\n# Solve for q when p=p_value\neq = Eq(q, p/28)\nsolution = solve(eq, q)\nq_value = solution[0]\n\nprint(p_value)\nprint(q_value)"
  },
  {
    "example_id": 227,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "7.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x = symbols('x')\neq = (x-4)**2 <= 9\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 228,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "n = 2"
  },
  {
    "example_id": 229,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "a = symbols('a')\neq = (sqrt(4+sqrt(16+16*a)) + sqrt(1+sqrt(1+a))) - 6\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 230,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "m1 = (4 - (-2)) / (2 - 0)\nm2 = (1 - 5) / (1 - 5)\nm = (m1 + m2) / 2\nprint(m)"
  },
  {
    "example_id": 231,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\neq = (x**2 - 5*x + 7) - (x - 3)*(x - 2)\nsolution = expand(eq)\nprint(solution)"
  },
  {
    "example_id": 232,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "368.0",
      "371.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "# m = 3, n = 5\nm = 3\nn = 5\n\n# k = 2, t = 1\nk = 2\nt = 1\n\n# k^t + t^k\nk_t = pow(k, t)\nt_k = pow(t, k)\nprint(k_t + t_k)\n\n# m^n + n^m\nm_n = pow(m, n)\nn_m = pow(n, m)\nprint(m_n + n_m)\n\n# m^n + n^m + k^t + t^k\nprint(m_n + n_m + k_t + t_k)"
  },
  {
    "example_id": 233,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "son_age = 30 - 5 * 5\nprint(son_age)"
  },
  {
    "example_id": 234,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4950.0"
    ],
    "annotated_answers": [
      "4950.0"
    ],
    "solution": "n = 100\nm = 200\nresult = 0\nfor i in range(n, m+1):\n    if i % 3 == 0:\n        result += i\nprint(result)"
  },
  {
    "example_id": 235,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "22.5"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "interest_rate = (1225 - 1000) / 1000\nprint(interest_rate * 100)"
  },
  {
    "example_id": 236,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "f = symbols('f')\nf_inverse = f.inv()\nf_inverse_of_6 = f_inverse(6)\nprint(f_inverse_of_6)"
  },
  {
    "example_id": 237,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "8281.0"
    ],
    "annotated_answers": [
      "8281.0"
    ],
    "solution": "print(91**2)"
  },
  {
    "example_id": 238,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "12.0",
      "2.0",
      "12.0",
      "2.0",
      "12.0",
      "2.0",
      "9.0"
    ],
    "annotated_answers": [
      "-27.0"
    ],
    "solution": "g = symbols('g')\neq = g**4 + 12*g**2 + 9\nc = 12\np = 12\nq = eq - c*(g**2 + p)**2\nprint(q)"
  },
  {
    "example_id": 239,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "from sympy import symbols, poly\nx = symbols('x')\nf = poly((x-1)*(3*x**4+x**3 - 25*x**2 +38*x -17), x)\nprint(f.degree())"
  },
  {
    "example_id": 240,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "2.0"
    ],
    "annotated_answers": [
      "3.5"
    ],
    "solution": "x = symbols('x')\neq = -6*x**2 + 43*x - 77\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 241,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "144.0",
      "4.0",
      "3.0",
      "72.0",
      "4.0",
      "2.0",
      "72.0",
      "4.0",
      "96.0",
      "4.0"
    ],
    "annotated_answers": [
      "-15.0"
    ],
    "solution": "from sympy import symbols, expand, simplify\n\na, b = symbols('a b')\neq = expand((24*a**4 + 6*a**3 + 4*a**2 - 7*a - 5)*(6*b**3 + 3*b**2 + 3*b + 4))\nprint(simplify(eq))"
  },
  {
    "example_id": 242,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "96.0"
    ],
    "solution": "# The equation is a cubic equation in a\na, b, c = symbols('a b c')\neq = a**2*b + b**2*c + c**2*a - a*b**2 - b*c**2 - c*a**2\nsolution = solve(eq, a)\nprint(len(solution))"
  },
  {
    "example_id": 243,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "x = 3\nprint(x)"
  },
  {
    "example_id": 244,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x = symbols('x')\neq = (2/3) - (4/(x-5))\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 245,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "2.2"
    ],
    "solution": "a = -1\nb = 3\nc = -2\n\nn = b**2 - 4*a*c\nprint(n)"
  },
  {
    "example_id": 246,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-0.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "f = lambda x: (x - 1)**0.5 / (x - 2)\nf_min = f(1)\nprint(f_min)"
  },
  {
    "example_id": 247,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "183.0"
    ],
    "annotated_answers": [
      "129.0"
    ],
    "solution": "n = 1\nwhile n <= 125:\n    n = n * (n + 1)\n    n = n + 1\nprint(n)"
  },
  {
    "example_id": 248,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "15.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "t = 1\naltitude = 100\nwhile altitude < 12000:\n    t = t + 1\n    altitude = altitude + 100 + 100*t\nprint(t)"
  },
  {
    "example_id": 249,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "4.0"
    ],
    "solution": ""
  },
  {
    "example_id": 250,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "57.0"
    ],
    "annotated_answers": [
      "54.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 - 6*x + 66\nsolution = solve(eq, x)\nb_plus_c = solution[0]\nprint(b_plus_c)"
  },
  {
    "example_id": 251,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-9.0",
      "2.0"
    ],
    "annotated_answers": [
      "0.75"
    ],
    "solution": "t = symbols('t')\neq = -16*t**2 - 60*t + 54\nsolution = solve(eq, t)\nt_value = solution[0]\nprint(t_value)"
  },
  {
    "example_id": 252,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "30.0"
    ],
    "solution": "# 5 workers can paint 4 houses in 6 days\n# 5/6 houses per day\n# 4 houses in 3 days\n# 12 houses in 3 days\n# 12/3 houses per day\n# 4 workers needed\nprint(4)"
  },
  {
    "example_id": 253,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.5",
      "0.16",
      "9.0",
      "2.0",
      "0.16",
      "5.0",
      "2.0",
      "1.0",
      "6.0",
      "2.0",
      "3.0",
      "2.0",
      "49.0"
    ],
    "annotated_answers": [
      "7.5"
    ],
    "solution": "from sympy import sqrt, symbols\n\nx, y = symbols('x y')\n\ndistance = sqrt(((x - 9)**2) + ((y - 5)**2) - 6.25) + sqrt(((x + 6)**2) + ((y + 3)**2) - 49)\n\nprint(distance)"
  },
  {
    "example_id": 254,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = (1/(x-1)) + (2*x)/(x-1) - 5\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 255,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x1 = 5\ny1 = 4\nx2 = -9\ny2 = 8\n\nmidpoint_x = (x1 + x2) / 2\nmidpoint_y = (y1 + y2) / 2\n\nsum_midpoint_coordinates = midpoint_x + midpoint_y\n\nprint(sum_midpoint_coordinates)"
  },
  {
    "example_id": 256,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "t = symbols('t')\neq = (t+2)*(t-3) - (t+1)*(t+1)\nsolution = eq.subs(t, t+1)\nprint(solution)"
  },
  {
    "example_id": 257,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "4.0",
      "5.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq1 = 2*x - y - 3\neq2 = x + y - 1\nsolution1 = solve(eq1, x)\nsolution2 = solve(eq2, y)\nx_value = solution1[0]\ny_value = solution2[0]\nprint(8*x_value - 7*y_value)"
  },
  {
    "example_id": 258,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "51.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\neq = ceil(8.8) + ceil(-8.8)\nprint(eq)"
  },
  {
    "example_id": 259,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "a = 5\nb = 3\nprint(a+b)"
  },
  {
    "example_id": 260,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = (x-2)/(x**2-7*x+10)\nsolution = solve(eq, x)\nprint(len(solution))"
  },
  {
    "example_id": 261,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "105.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\neq = Eq(x**6 - 2*x**5 + 2*x**3 - 2*x + 1, 292)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 262,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "220.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "m = 20\nn = symbols('n')\nf = x**2 - m*x + n\nroots = solve(f.expand(), x)\nroots = [int(root) for root in roots]\nroots = [root for root in roots if root > 1 and root.is_prime()]\nn_values = []\nfor root in roots:\n    if root % 2 == 0:\n        n_values.append(root)\n    else:\n        n_values.append(root + 1)\nn_values = set(n_values)\nn_values = list(n_values)\nprint(len(n_values))"
  },
  {
    "example_id": 263,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "27.0"
    ],
    "solution": "games_won = 2/9\ngames_lost = 15\ntotal_games = games_won + games_lost\nprint(total_games)"
  },
  {
    "example_id": 264,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "2.0",
      "2.0",
      "2.0",
      "11.0",
      "2.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "from sympy import symbols, solve, sqrt\nx = symbols('x')\ny = x**2 + 2*x - 6\nd = sqrt((4 - x)**2 + (5 - y)**2)\nprint(d)"
  },
  {
    "example_id": 265,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "402.0"
    ],
    "annotated_answers": [
      "402.0"
    ],
    "solution": "a = 6\nd = 4\nn = 100\nterm = a + (n - 1) * d\nprint(term)"
  },
  {
    "example_id": 266,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "12.0"
    ],
    "solution": ""
  },
  {
    "example_id": 267,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "4.0",
      "3.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "denali_pay = 16\nnate_pay = 12\ndenali_increase = 4\n\ndenali_pay_increase = denali_increase * denali_pay\nnate_pay_decrease = denali_increase * nate_pay\n\ndenali_pay_ratio = denali_pay_increase / denali_pay\nnate_pay_ratio = nate_pay_decrease / nate_pay\n\nprint(nate_pay_ratio)\nprint(denali_pay_ratio)\n\n# x = 12 / 1.5\nx = 12 / denali_pay_ratio\n\nprint(x)"
  },
  {
    "example_id": 268,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.5",
      "0.5",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "22.0"
    ],
    "solution": "a = 5\nb = 2\nc = 5\nd = 5\n\nA = 1\nB = 1\nC = 2\nD = 2\n\nprint(A/D, B/D, C/D, D)"
  },
  {
    "example_id": 269,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0",
      "2.0",
      "7.0",
      "-2.0",
      "7.0",
      "4.0"
    ],
    "annotated_answers": [
      "28.0"
    ],
    "solution": "from sympy import symbols, solve\nx = symbols('x')\nf = -x**2 - 8*x + 12\nsolution = solve(f, x)\nprint(solution)"
  },
  {
    "example_id": 270,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "4.0",
      "3.0",
      "23.0",
      "4.0",
      "5.0",
      "4.0",
      "3.0",
      "23.0",
      "4.0"
    ],
    "annotated_answers": [
      "26.0"
    ],
    "solution": "from sympy import solve, symbols\nt = symbols('t')\neq = 2*t**2 - 5*t + 29\nsolution = solve(eq, t)\nprint(solution)"
  },
  {
    "example_id": 271,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "96.0",
      "192.0",
      "384.0",
      "768.0",
      "1536.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "free_throws = 48\nn = 5\nfor i in range(n):\n    free_throws = 2 * free_throws\n    print(free_throws)"
  },
  {
    "example_id": 272,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\neq = 3*a + 2*b - 12\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 273,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "20.0"
    ],
    "annotated_answers": [
      "150.0"
    ],
    "solution": "alan = 30\ndavid = 3*alan\ntotal = 600\ndavid_bricks = total/alan\nprint(david_bricks)"
  },
  {
    "example_id": 274,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "import numpy as np\n\ndef line_through_two_points(p1, p2):\n    m = (p2[1] - p1[1]) / (p2[0] - p1[0])\n    b = p1[1] - m * p1[0]\n    return m, b\n\ndef compute_slope_intercept_sum(m, b):\n    return m + b\n\nm, b = line_through_two_points((7, -1), (-1, 7))\nprint(compute_slope_intercept_sum(m, b))"
  },
  {
    "example_id": 275,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "22.0"
    ],
    "annotated_answers": [
      "42.0"
    ],
    "solution": "dad_age = 53 - 31\nprint(dad_age)"
  },
  {
    "example_id": 276,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "32.0"
    ],
    "annotated_answers": [
      "-8.0"
    ],
    "solution": "x = 9 + 7\ny = 9 - 7\n\nx = 16\ny = 2\n\nproduct = x * y\nprint(product)"
  },
  {
    "example_id": 277,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0",
      "3.0",
      "1.0",
      "15.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\neq = sqrt(x*sqrt(x*sqrt(x*sqrt(x)))) - 3\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 278,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "-1.0",
      "1.0",
      "-1.0",
      "1.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "f = lambda x: int(round(-5/8)**x)\nprint(f(0), f(1), f(2), f(3), f(4))"
  },
  {
    "example_id": 279,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.5"
    ],
    "annotated_answers": [
      "-120.0"
    ],
    "solution": "x = -1\ny = 6\nA = 2\nB = 3\nC = (A*x + B*y + 1)/2\nprint(C)"
  },
  {
    "example_id": 280,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\neq = (3*x - 5)**(1/2) - 2\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 281,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "F = lambda a, b, c, d: a**b + c**d\nb = symbols('b')\neq = F(4, b, 2, 3) - 12\nsolution = solve(eq, b)\nb_value = solution[0]\nprint(b_value)"
  },
  {
    "example_id": 282,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "75.0",
      "1.0",
      "3.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "from sympy import sqrt\na = symbols('a')\neq = sqrt(a)**3 - 45\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 283,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "123.0"
    ],
    "annotated_answers": [
      "123.0"
    ],
    "solution": "print(123123 // 1001)"
  },
  {
    "example_id": 284,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "-10.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\neq = a * (b - c)\nsolution = solve(eq, a, b, c)\nprint(solution)"
  },
  {
    "example_id": 285,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2500.0"
    ],
    "annotated_answers": [
      "2500.0"
    ],
    "solution": "x = symbols('x')\neq = 3*x**2 - 2*(x**2 + 4) - 42\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value**4)"
  },
  {
    "example_id": 286,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "f = lambda x: x**3 + 2*x + 1\ng = lambda x: x - 1\nprint(f(g(1)))"
  },
  {
    "example_id": 287,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4800.0"
    ],
    "annotated_answers": [
      "4800.0"
    ],
    "solution": "import math\n\ndef bacteria_doubling_every_four_hours(current_population, hours):\n    return current_population * math.pow(2, hours/4)\n\n# Test the function\nprint(bacteria_doubling_every_four_hours(600, 12))"
  },
  {
    "example_id": 288,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "-102.0"
    ],
    "solution": "S = set()\nfor alpha in range(-100, 100):\n    try:\n        quotient = (x**2 + 5*x + alpha) / (x**2 + 7*x - 44)\n        numerator = quotient.numer()\n        denominator = quotient.denom()\n        if numerator.is_linear() and denominator.is_linear():\n            S.add(alpha)\n    except:\n        pass\nprint(sum(S))"
  },
  {
    "example_id": 289,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "83.0",
      "7.0",
      "5.0",
      "2.0",
      "3.0",
      "166.0",
      "15.0",
      "2.0",
      "5.0",
      "7.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq = 10*x*y + 14*x + 15*y - 166\nsolution = solve(eq, x)\nx_value = solution[0]\nsolution = solve(eq, y)\ny_value = solution[0]\nprint(x_value + y_value)"
  },
  {
    "example_id": 290,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "16.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x = symbols('x')\neq = (x * x**(3))**(4)\nprint(eq)"
  },
  {
    "example_id": 291,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "from sympy import symbols, solve\n\nx, y, a, b = symbols('x y a b')\n\ncircle1 = (x - 4)**2 + (y - 0)**2 - 1\ncircle2 = (x + 4)**2 + (y - 0)**2 - 1\ncircle3 = (x - 0)**2 + (y - 5)**2 - 1\n\nconditions = [\n    circle1.subs({x: a, y: b}) == 0,\n    circle2.subs({x: a, y: b}) == 0,\n    circle3.subs({x: a, y: b}) == 0\n]\n\nsolution = solve(conditions, [a, b])\n\nprint(len(solution))"
  },
  {
    "example_id": 292,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": ""
  },
  {
    "example_id": 293,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "2.0",
      "5.0",
      "3.0"
    ],
    "annotated_answers": [
      "23.0"
    ],
    "solution": "from sympy import sqrt, Integer\na = Integer(2)\nb = Integer(3)\nc = sqrt(2) + sqrt(3)\nprint(a*c + b*c)"
  },
  {
    "example_id": 294,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "12296.0",
      "8.0"
    ],
    "annotated_answers": [
      "32736.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\neq = (a**2 + b**2 + c**2) - 12296\nsolution = solve(eq, a, b, c)\na_value = solution[0][0]\nb_value = solution[0][1]\nc_value = solution[0][2]\nprint(a_value*b_value*c_value/8)"
  },
  {
    "example_id": 295,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "-4.0",
      "2.0",
      "4.0",
      "2.0",
      "9.0",
      "2.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "for i in range(10, 100):\n    digits = [int(digit) for digit in str(i)]\n    if digits[0] * digits[1] == i / 2:\n        print(i)\n        break"
  },
  {
    "example_id": 296,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-4.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "g = lambda x: 3*x - 4\nprint(g(0))"
  },
  {
    "example_id": 297,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "14.0"
    ],
    "annotated_answers": [
      "81.0"
    ],
    "solution": "n = 27\nmedian = (n + 1)/2\nprint(median)"
  },
  {
    "example_id": 298,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25.0",
      "2.0",
      "25.0",
      "2.0"
    ],
    "annotated_answers": [
      "81.0"
    ],
    "solution": "from sympy import symbols, solve\n\nx, y = symbols('x y')\neq = (x**2 + y**2) - 5**2\nsolution = solve(eq, [x, y])\nprint(solution)"
  },
  {
    "example_id": 299,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "f = lambda x: 9 - x\nprint(f(f(9)))"
  },
  {
    "example_id": 300,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-5.0"
    ],
    "annotated_answers": [
      "81.0"
    ],
    "solution": "x = symbols('x')\neq = (x + 5)**2\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 301,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "from math import sqrt\n\ndef f(x):\n    return sqrt(3*x+6) - (x+2)\n\ndef find_solutions(f, a, b):\n    solutions = []\n    for x in range(a, b+1):\n        if f(x) == 0:\n            solutions.append(x)\n    return solutions\n\ndef main():\n    solutions = find_solutions(f, 0, 10)\n    print(solutions)\n\nmain()"
  },
  {
    "example_id": 302,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = 3\ny = 2\nexpression = (4*x**2)/(9*y**2)\nprint(expression)"
  },
  {
    "example_id": 303,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "def p(x):\n    return 3\n\ndef q(x):\n    return 4*x + 7\n\nprint(q(-1))"
  },
  {
    "example_id": 304,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "225.0"
    ],
    "solution": "def brake_distance(start_distance, stop_distance):\n    current_distance = start_distance\n    while current_distance > stop_distance:\n        current_distance -= 1\n    return current_distance\n\nprint(brake_distance(45, 0))"
  },
  {
    "example_id": 305,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "customers = 15\nprice1 = 1500\nprice2 = 2500\ncustomers2 = customers/price1 * price2\nprint(customers2)"
  },
  {
    "example_id": 306,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2450.0"
    ],
    "annotated_answers": [
      "2450.0"
    ],
    "solution": "commission = 0.05\nsales = 25000\nbase_salary = 1200\ntotal_earnings = commission * sales + base_salary\nprint(total_earnings)"
  },
  {
    "example_id": 307,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq1 = 3*x - 8*y\neq2 = 5*y - 15*z\nsolution = solve([eq1, eq2], [x, z])\nx_value, z_value = solution.values()\nprint(x_value/z_value)"
  },
  {
    "example_id": 308,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "print(64**0.5 - 64**(1/3))"
  },
  {
    "example_id": 309,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "123422.0"
    ],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\neq = (123422 - a - b)/10000\nsolution = solve(eq, a, b)\na_value = solution[0][0]\nb_value = solution[0][1]\nprint(a_value)\nprint(b_value)"
  },
  {
    "example_id": 310,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.533333333333333"
    ],
    "annotated_answers": [
      "1.8"
    ],
    "solution": "x = 4.8 - (1+1+4.8)/3\nprint(x)"
  },
  {
    "example_id": 311,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "6.0",
      "144.0"
    ],
    "annotated_answers": [
      "144.0"
    ],
    "solution": "x = symbols('x')\neq = 192*x**2 - 16\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)\nprint(1/x_value**4)"
  },
  {
    "example_id": 312,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a = -2\nb = 4\nc = 1\n\nsum = a + b + c\n\nprint(sum)"
  },
  {
    "example_id": 313,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1001.0"
    ],
    "annotated_answers": [
      "2003.0"
    ],
    "solution": "sum_of_even_numbers = sum(range(0, 2003, 2))\nsum_of_odd_numbers = sum(range(1, 2003, 2))\nprint(sum_of_even_numbers - sum_of_odd_numbers)"
  },
  {
    "example_id": 314,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "a = 1\nb = 3\nproduct = a*b\nprint(product)"
  },
  {
    "example_id": 315,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "13225.0"
    ],
    "annotated_answers": [
      "13225.0"
    ],
    "solution": "print(115**2)"
  },
  {
    "example_id": 316,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "15.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "a = int(2*23/3)\nb = a+1\nprint(a)"
  },
  {
    "example_id": 317,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "26000.0"
    ],
    "annotated_answers": [
      "26000.0"
    ],
    "solution": "print(513**2 - 487**2)"
  },
  {
    "example_id": 318,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "-3.0",
      "2.0",
      "10.0",
      "1.0",
      "2.0",
      "5.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq1 = a**2 + b**2 + c**2 - 13\neq2 = a*b + b*c + c*a - 6\nsolution = solve((eq1, eq2), (a, b, c))\nprint(solution)"
  },
  {
    "example_id": 319,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-0.75"
    ],
    "annotated_answers": [
      "108.0"
    ],
    "solution": "def revolutions_from_center(horse_distance, merry_go_round_radius):\n    return horse_distance / (2 * merry_go_round_radius)\n\ndef revolutions_from_horse_to_horse(horse_distance_1, horse_distance_2, merry_go_round_radius):\n    return revolutions_from_center(horse_distance_2, merry_go_round_radius) - revolutions_from_center(horse_distance_1, merry_go_round_radius)\n\nprint(revolutions_from_horse_to_horse(64, 16, 32))"
  },
  {
    "example_id": 320,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "125.0",
      "5.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "from sympy import log\na = symbols('a')\nlog_a = log(125*a, 5)\nprint(log_a)"
  },
  {
    "example_id": 321,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "15.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "a = 3\nb = 12\nx = 2\ny = 5\n\na_plus_b = a + b\n\nprint(a_plus_b)"
  },
  {
    "example_id": 322,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-70.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "t_alice = 100 - 5\nt_beatrice = 25\nt_alice_to_run_50 = t_beatrice - t_alice\nprint(t_alice_to_run_50)"
  },
  {
    "example_id": 323,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "27.0"
    ],
    "annotated_answers": [
      "45.0"
    ],
    "solution": "x = 3**2\nx_next = x + 3**2\nx_next_next = x_next + 3**2\nprint(x_next_next)"
  },
  {
    "example_id": 324,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.810249675906654"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x1, y1 = 4, 3\nx2, y2 = 6, 1\nx3, y3 = 1, 7\n\ndist1 = math.sqrt((x1 - x2)**2 + (y1 - y2)**2)\ndist2 = math.sqrt((x1 - x3)**2 + (y1 - y3)**2)\ndist3 = math.sqrt((x2 - x3)**2 + (y2 - y3)**2)\n\nprint(max(dist1, dist2, dist3))"
  },
  {
    "example_id": 325,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "1.0",
      "3.0",
      "3.0",
      "2.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\nf = x**2 + x + 1\ng = x**3 + x**2 + x + 1\nprint(f**3 - g**2 + f - 1)"
  },
  {
    "example_id": 326,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "# 20% of 50% of 80\n# 20% of 80\n# 16\n\nprint(0.20 * 0.50 * 80)"
  },
  {
    "example_id": 327,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "4.0",
      "18.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\n\neq = (a + b + c)/3 - 6\nsolution = solve(eq, c)\nc_value = solution[0]\n\neq = c_value - c\nsolution = solve(eq, c)\nc_value = solution[0]\n\neq = b - (a/4)\nsolution = solve(eq, b)\nb_value = solution[0]\n\neq = a - (b/4)\nsolution = solve(eq, a)\na_value = solution[0]\n\nprint(a_value, b_value, c_value)"
  },
  {
    "example_id": 328,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "a,b,c,d,e = symbols('a b c d e')\nAB = a+b\nBC = b+c\nCD = c+d\nDE = d+e\nEA = e+a\n\nseq = [AB,BC,CD,DE,EA]\nmiddle_term = (seq[0]+seq[4])/2\n\nprint(middle_term)"
  },
  {
    "example_id": 329,
    "selected_mode": "import",
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-120.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq1 = Eq(a + b, 8)\neq2 = Eq(b + c, -3)\neq3 = Eq(a + c, -5)\n\neq12 = eq1 & eq2\neq123 = eq12 & eq3\n\nsolution = solve(eq123, a, b, c)\nprint(solution)\n\na_value, b_value, c_value = solution\nproduct = a_value * b_value * c_value\nprint(product)"
  },
  {
    "example_id": 330,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "14.0",
      "2.0"
    ],
    "annotated_answers": [
      "-56.0"
    ],
    "solution": "from sympy import symbols, solve\nx = symbols('x')\neq = 2*x**2 - 8*x + 15\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 331,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-464.0",
      "73.0",
      "12.0",
      "46.0",
      "73.0",
      "-174.0",
      "73.0",
      "32.0",
      "46.0",
      "73.0",
      "-6.0"
    ],
    "annotated_answers": [
      "52.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\na = symbols('a')\neq1 = x**2 + y**2 - 6**2\neq2 = (x - 8)**2 + (y - 3)**2 - 15**2\neq3 = x**2 + y**2 - a**2\nsolution = solve([eq1, eq2, eq3], [x, y, a])\nx_value = solution[0][0]\ny_value = solution[0][1]\na_value = solution[0][2]\nprint(x_value)\nprint(y_value)\nprint(a_value)"
  },
  {
    "example_id": 332,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "153.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "x = symbols('x')\neq1 = abs(x + 3) - 6\neq2 = x + 3 - 6\nsolution1 = solve(eq1, x)\nsolution2 = solve(eq2, x)\nsolution1_value = solution1[0]\nsolution2_value = solution2[0]\nprint(abs(solution1_value - solution2_value))"
  },
  {
    "example_id": 333,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "102.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "A = 6\nB = 17\nAB = A*B\nprint(AB)"
  },
  {
    "example_id": 334,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\nf = 3*2**(x - 7) - 8\nf_value = f.subs(x, 8)\nprint(f_value)"
  },
  {
    "example_id": 335,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-3.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "x = symbols('x')\neq = (9-4*x)/(x+6) - 7\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 336,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "17.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "red = 17\nyellow = red + 2\norange = red/3\nwhite = red + 3\nprint(red)"
  },
  {
    "example_id": 337,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1120.0"
    ],
    "annotated_answers": [
      "364.0"
    ],
    "solution": "a = 40 - 12\nb = 40\nprint(a*b)"
  },
  {
    "example_id": 338,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "65.0"
    ],
    "annotated_answers": [
      "65.0"
    ],
    "solution": "V = (1/3) * 30 * 6.5\nprint(V)"
  },
  {
    "example_id": 339,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "63.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "x = symbols('x')\neq = (63-x)**0.5\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 340,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\neq = x/(2-x)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 341,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-65.0",
      "-5.0",
      "2.0",
      "105.0",
      "2.0",
      "2.0",
      "-5.0",
      "2.0",
      "105.0",
      "2.0",
      "2.0",
      "20.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "import sympy\nx, y = sympy.symbols('x y')\n\nexpr1 = (x + y) ** 2\nexpr2 = x ** 2 + y ** 2\n\nsol = sympy.solve([expr1 - 105, expr2 - 65], [x, y])\nprint(sol[0][0] * sol[0][1])"
  },
  {
    "example_id": 342,
    "selected_mode": "import",
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "x = symbols('x')\nf = 3*x**4 + 5*x**2 - 9*x - 2\ng = f.subs(x, x-1)\ng_coefs = g.coeffs()\ng_sum = sum(g_coefs)\nprint(g_sum)"
  },
  {
    "example_id": 343,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2599.0"
    ],
    "annotated_answers": [
      "93.0"
    ],
    "solution": "a = symbols('a')\na1 = 1\na2 = 2\nd = 1\nn = 98\ns = 0\nfor i in range(n+1):\n    s += a2\n    a1, a2 = a2, a1 + d\nprint(s)"
  },
  {
    "example_id": 344,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-6.0",
      "11.0"
    ],
    "annotated_answers": [
      "549.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq1 = x**2 - 99\neq2 = x**2 - y**2\nsolution = solve([eq1, eq2], [x, y])\nx_value = solution[0][0]\ny_value = solution[0][1]\nsum = x_value + y_value\nprint(sum)"
  },
  {
    "example_id": 345,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "f = lambda x: x + 2\ng = lambda x: 1/f(x)\nprint(g(f(-3)))"
  },
  {
    "example_id": 346,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.14285714285714285",
      "-1.6071428571428572",
      "45.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "c = 4 / 28\np = -45 / 28\nq = 45\nprint(c, p, q)"
  },
  {
    "example_id": 347,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.2857142857143"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "x = symbols('x')\ny = 4*x - 36\neq = y/x - 1/2\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 348,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "f = lambda x: 2*x/(x**2-5*x-14)\na = -3/2\nb = 1/2\nc = 1\nprint(a+b+c)"
  },
  {
    "example_id": 349,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "13.0",
      "2.0",
      "73.0",
      "2.0",
      "2.0",
      "73.0",
      "2.0",
      "13.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = x + y - 13\neq2 = x*y - 24\nsolution = solve([eq1, eq2], [x, y])\nx_value = solution[0][0]\ny_value = solution[0][1]\ndistance = sqrt((x_value - 0)**2 + (y_value - 0)**2)\nprint(distance)"
  },
  {
    "example_id": 350,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-46.0",
      "3.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "from sympy import symbols, integrate\n\nx = symbols('x')\nf = (x - 2)**2 - 9\narea = integrate(f, (x, 2, 4))\nprint(area)"
  },
  {
    "example_id": 351,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 + x\nsolution = solve(eq, x)\nprint(len(solution))"
  },
  {
    "example_id": 352,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "21.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "amount_of_lenny = 35\namount_of_larry = 2/5 * amount_of_lenny\nprint(amount_of_lenny - amount_of_larry)"
  },
  {
    "example_id": 353,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "4.0"
    ],
    "solution": ""
  },
  {
    "example_id": 354,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "2.0",
      "18.0",
      "0.0"
    ],
    "annotated_answers": [
      "-8192.0"
    ],
    "solution": "a = symbols('a')\neq = a**2 - 2 + a**5 - 16\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 355,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = 2**(2*x) - 256**(1/2)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 356,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "149.0",
      "4.0",
      "3.0",
      "2.0",
      "3.0",
      "3.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x, y = symbols('x y')\neq = (2*x**2*y**3) + (4*y**3) - (149 + 3*x**2)\nsolution = solve(eq, x, y)\nx_value = solution[0][0]\ny_value = solution[0][1]\nx_y_sum = x_value + y_value\nprint(x_y_sum)"
  },
  {
    "example_id": 357,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "entry_fee = 2.25\nride_fee = 1.50\ntotal_cost = 12.75\nrides = (total_cost - entry_fee)/ride_fee\nprint(rides)"
  },
  {
    "example_id": 358,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "2.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "-9.0"
    ],
    "solution": "x1, y1, x2, y2 = symbols('x1, y1, x2, y2')\nx_mid = (x1 + x2)/2\ny_mid = (y1 + y2)/2\nproduct = x_mid*y_mid\nprint(product)"
  },
  {
    "example_id": 359,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0",
      "5.0",
      "-7.0",
      "5.0",
      "-32.0",
      "5.0"
    ],
    "annotated_answers": [
      "-56.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\neq1 = 3*a + b + c + 3\neq2 = a + 3*b + c + 9\neq3 = a + b + 3*c + 19\nsolution = solve([eq1, eq2, eq3], [a, b, c])\nprint(solution)"
  },
  {
    "example_id": 360,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.0",
      "15.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "def total_supplies(days, people):\n    return days * people\n\ndef daily_share(total, people):\n    return total / people\n\ndef days_supplies_last(total, daily, people):\n    return total / daily\n\ndef camping_trip(people):\n    original_supplies = total_supplies(10, people)\n    daily_share_original = daily_share(original_supplies, people)\n    new_people = 3\n    new_supplies = total_supplies(10, new_people)\n    daily_share_new = daily_share(new_supplies, new_people)\n    days_last = days_supplies_last(original_supplies, daily_share_original, new_people)\n    return days_last\n\nprint(camping_trip(12))\nprint(camping_trip(15))"
  },
  {
    "example_id": 361,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "128.0"
    ],
    "solution": "from sympy import symbols, solve\nfrom sympy.abc import x\n\nk = symbols('k')\neq = (y**2 + 24*y + 16 + k) - x**2\nsolution = solve(eq, k)\nk_value = solution[0]\nprint(k_value)"
  },
  {
    "example_id": 362,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "64.0"
    ],
    "annotated_answers": [
      "64.0"
    ],
    "solution": "a = 3\nb = 5\nresult = a**2 + 2*a*b + b**2\nprint(result)"
  },
  {
    "example_id": 363,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "4.0",
      "5.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "for i in range(1, 11):\n    if (i**2 + 4*i + 4) >= 10 and (i**2 + 4*i + 4) <= 50:\n        print(i)"
  },
  {
    "example_id": 364,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "102.0"
    ],
    "annotated_answers": [
      "54.0"
    ],
    "solution": "# Total miles\ntotal_miles = 26 + 12*2 + 12*2 + 28\nprint(total_miles)"
  },
  {
    "example_id": 365,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "n = symbols('n')\neq = n**2 - 5*n - 14\nsolution = solve(eq, n)\nn_value = solution[0]\nprint(n_value)"
  },
  {
    "example_id": 366,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-48.0"
    ],
    "annotated_answers": [
      "-48.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq1 = 725*x + 727*y - 1500\neq2 = 729*x + 731*y - 1508\nsolution = solve([eq1, eq2], [x, y])\nx_value = solution[x]\ny_value = solution[y]\nprint(x_value - y_value)"
  },
  {
    "example_id": 367,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "def count_right_triangles(side_lengths):\n    # Check if all the sides are positive integers\n    if all(isinstance(side, int) and side > 0 for side in side_lengths):\n        # Check if the sum of the two sides is greater than the third side\n        if sum(side_lengths[:2]) > side_lengths[2]:\n            # Check if the third side is a multiple of the sum of the first two sides\n            if side_lengths[2] % sum(side_lengths[:2]) == 0:\n                return 1\n    return 0\n\ndef solve_for_side_lengths(leg_length):\n    # Find the number of right triangles with a leg length of 162\n    count = 0\n    for side_length_1 in range(1, leg_length // 2 + 1):\n        for side_length_2 in range(1, leg_length // 2 + 1):\n            count += count_right_triangles([side_length_1, side_length_2, leg_length - side_length_1 - side_length_2])\n    return count\n\nprint(solve_for_side_lengths(162))"
  },
  {
    "example_id": 368,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "3.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x = symbols('x')\neq = 6*x**2 + x - 2\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 369,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "6.0"
    ],
    "solution": ""
  },
  {
    "example_id": 370,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0",
      "100.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "a = 16\nb = 36\nc = 56\n\nm = 2\nn = -2\n\nmn = m*n\nprint(mn)\n\na_squared = a + b + c\nm_squared = m*m\nn_squared = n*n\n\nprint(a_squared - m_squared - n_squared)"
  },
  {
    "example_id": 371,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "from sympy import symbols, simplify, integrate, diff, solve\nfrom sympy.abc import x\n\ndef f(x):\n    return 10 - 2*x\n\ndef g(x):\n    return 8 - x\n\ndef diff_f(x):\n    return diff(f(x), x)\n\ndef diff_g(x):\n    return diff(g(x), x)\n\ndef integral_f(x):\n    return integrate(f(x), x)\n\ndef integral_g(x):\n    return integrate(g(x), x)\n\nprint(simplify(diff_f(x) - diff_g(x)))\nprint(simplify(integral_f(x) - integral_g(x)))"
  },
  {
    "example_id": 372,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.5"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "horses = 10\nlegs = 30\nheads = 10\nhorses = legs / 4\nprint(horses)"
  },
  {
    "example_id": 373,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0",
      "2.0",
      "11.0",
      "2.0",
      "5.0",
      "2.0",
      "11.0",
      "2.0",
      "3.0",
      "2.0",
      "11.0",
      "2.0",
      "3.0",
      "2.0",
      "11.0",
      "2.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "from sympy import symbols, solve\nx = symbols('x')\neq = x**2 - 5*x + 9\nsolution = solve(eq)\na = solution[0]\nb = solution[1]\nprint(a)\nprint(b)\nprint((a - 1)*(b - 1))"
  },
  {
    "example_id": 374,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "17.0",
      "2.0",
      "4.0",
      "2.0",
      "9.0",
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "d = symbols('d')\ne = symbols('e')\neq1 = 2*d - 17*e - 8\neq2 = 2*e - d - 9\nsolution1 = solve(eq1, d)\nsolution2 = solve(eq2, e)\nd_value = solution1[0]\ne_value = solution2[0]\nprint(d_value)\nprint(e_value)"
  },
  {
    "example_id": 375,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "900.0"
    ],
    "solution": ""
  },
  {
    "example_id": 376,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-5.0"
    ],
    "annotated_answers": [
      "-5.0"
    ],
    "solution": "b = symbols('b')\neq = b**2 + 2*b - 15\nsolution = solve(eq, b)\nb_value = solution[0]\nprint(b_value)"
  },
  {
    "example_id": 377,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "288.0"
    ],
    "annotated_answers": [
      "288.0"
    ],
    "solution": "expression = (2*(-3))**5/(-3)**3\nprint(expression)"
  },
  {
    "example_id": 378,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "26.0"
    ],
    "annotated_answers": [
      "26.0"
    ],
    "solution": "n = 26\nsum = 0\nfor i in range(n):\n    sum += i\n    if sum >= n:\n        break\nprint(n)"
  },
  {
    "example_id": 379,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "f = lambda x: (x-1)*(x-3)*(x-7)*(x-9)\nprint(f(6) - f(4))"
  },
  {
    "example_id": 380,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10521.685854133319"
    ],
    "annotated_answers": [
      "10455.0"
    ],
    "solution": "# Initialize variables\ninitial_investment = 10000\nannual_interest_rate_1 = 0.04\nannual_interest_rate_2 = 0.05\nsemi_annual_period = 2\n\n# Calculate how much Dr. Zaius has after six months in the first CD\ntime_1 = 6\ninterest_earned_1 = initial_investment \\\n                   * (annual_interest_rate_1/semi_annual_period) \\\n                   * (1 + annual_interest_rate_1/semi_annual_period)**time_1\ntotal_earnings_1 = initial_investment + interest_earned_1\n\n# Calculate how much Dr. Zaius has after six months in the second CD\ntime_2 = 6\ninterest_earned_2 = total_earnings_1 \\\n                   * (annual_interest_rate_2/semi_annual_period) \\\n                   * (1 + annual_interest_rate_2/semi_annual_period)**time_2\ntotal_earnings_2 = total_earnings_1 + interest_earned_2\n\n# Print the final answer\nprint(total_earnings_2)"
  },
  {
    "example_id": 381,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "59.999999999999986"
    ],
    "annotated_answers": [
      "60.0"
    ],
    "solution": "print(12**(1/3) * 20**(1/3) * 15**(1/3) * 60**(1/3))"
  },
  {
    "example_id": 382,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "4.0",
      "7.0",
      "1.0",
      "2.0",
      "4.0",
      "7.0",
      "1.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x, y = symbols('x, y')\neq = x**2 + y**2 + 2*x - 4*y + 8\nsolution = solve(eq, [x, y])\nprint(solution)"
  },
  {
    "example_id": 383,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "60.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x = symbols('x')\neq = (120 - x)**0.5 - x**0.5\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 384,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.4"
    ],
    "annotated_answers": [
      "-23.5"
    ],
    "solution": "# Line 1\nm1 = 1/3\nb1 = 7\n# Line 2\nm2 = 2\nb2 = 5\n# Calculate the intersection points\nx1 = (b2 - b1)/(m1 - m2)\ny1 = m1*x1 + b1\nx2 = (b1 - b2)/(m2 - m1)\ny2 = m2*x2 + b2\n# Calculate the sum of the x-coordinates\nsum_of_x_coords = x1 + x2\nprint(sum_of_x_coords)"
  },
  {
    "example_id": 385,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "66.0",
      "13.0",
      "23.0",
      "13.0",
      "67.0",
      "13.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "import sympy as sp\nx, y, z = sp.symbols('x, y, z')\neq1 = 3*x + y - 17\neq2 = 5*y + z - 14\neq3 = 3*x + 5*z - 41\nprint(sp.solve([eq1, eq2, eq3], [x, y, z]))"
  },
  {
    "example_id": 386,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "5400.0"
    ],
    "solution": "x = 60\ny = 90"
  },
  {
    "example_id": 387,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "16.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "print(4/3*6/4*8/5*10/6*12/7*14/8)"
  },
  {
    "example_id": 388,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-5.0",
      "2.0",
      "1.0",
      "6.0"
    ],
    "annotated_answers": [
      "73.0"
    ],
    "solution": "A = symbols('A')\nB = symbols('B')\neq = 9 * (3 * (2 * A + 5 * B) + 1)\nsolution = solve(eq, A)\nA_value = solution[0]\nprint(A_value)"
  },
  {
    "example_id": 389,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 - 2*x - 3\np, q = solve(eq, x)\nprint((p+1)*(q+1))"
  },
  {
    "example_id": 390,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "A = symbols('A')\nB = symbols('B')\nC = (A + B)/2\nD = 3\nE = 5\nF = 8\nG = (D + E)/2\nH = (F + G)/2\nsolution = solve(C - H, A)\nA_value = solution[0]\nprint(A_value)"
  },
  {
    "example_id": 391,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.285714285714286"
    ],
    "annotated_answers": [
      "78.0"
    ],
    "solution": "x, y = symbols('x y')\neq = (1/x) + (1/y) - (1/7)\nsolution = solve(eq, (x, y))\nsum_x_coords = 0\nfor x_coord, y_coord in solution:\n    sum_x_coords += x_coord\nprint(sum_x_coords)"
  },
  {
    "example_id": 392,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a = -2"
  },
  {
    "example_id": 393,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq1 = 2*x - 9*y - 14\neq2 = 6*x - y - 42\nsolution = solve((eq1, eq2), (x, y))\nx_value = solution[0][0]\ny_value = solution[0][1]\nxy_value = x_value*y_value\nprint(xy_value)"
  },
  {
    "example_id": 394,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "3.0"
    ],
    "solution": ""
  },
  {
    "example_id": 395,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "num = 2**10 - 2**8\nden = 2**7 - 2**6\nprint(num/den)"
  },
  {
    "example_id": 396,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-5.0"
    ],
    "annotated_answers": [
      "-5.0"
    ],
    "solution": "x = symbols('x')\neq = (x + 2)/3 - (4/(x + 1))\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 397,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0",
      "2.0",
      "2.0",
      "-4.0",
      "2.0",
      "2.0",
      "-4.0",
      "2.0",
      "2.0",
      "-4.0"
    ],
    "annotated_answers": [
      "2.5"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\nx = symbols('x')\ny = a*x**2 + b*x + c\n\nsolution = solve(y, x)\n\nroot1 = solution[0]\nroot2 = solution[1]\n\nroot1_x = root1.subs(x, 2)\nroot2_x = root2.subs(x, 2)\n\nprint(root1_x)\nprint(root2_x)\n\ny_1 = a*root1_x**2 + b*root1_x + c\ny_2 = a*root2_x**2 + b*root2_x + c\n\nprint(y_1)\nprint(y_2)\n\ngreater_root = symbols('greater_root')\n\neq = greater_root**2 - (y_1 + y_2)\nsolution = solve(eq, greater_root)\n\nn = solution[0]\nprint(n)"
  },
  {
    "example_id": 398,
    "selected_mode": "import",
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "d = symbols('d')\nc = symbols('c')\neq1 = d - 6*c - 4\neq2 = 2*d - 9*c - 20\nsolution = solve([eq1, eq2], [d, c])\nd_value = solution[0][0]\nc_value = solution[0][1]\nprint(\"d = \" + str(d_value))\nprint(\"c = \" + str(c_value))\nprint(\"d/c = \" + str(d_value/c_value))"
  },
  {
    "example_id": 399,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1343.9882831055315"
    ],
    "annotated_answers": [
      "0.015"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\n\ndef f(x):\n    return (3/206) + (9/2*pow(103, 2)) + (27/2*pow(103, 3)) + (81/2*pow(103, 4)) + (243/2*pow(103, 5)) + (729/2*pow(103, 6)) + (2187/2*pow(103, 7)) + (6561/2*pow(103, 8)) + (19683/2*pow(103, 9)) + (59049/2*pow(103, 10)) + (177147/2*pow(103, 11)) + (531441/2*pow(103, 12)) + (1594323/2*pow(103, 13)) + (4782969/2*pow(103, 14)) + (14348907/2*pow(103, 15)) + (43046721/2*pow(103, 16)) + (129140170/2*pow(103, 17)) + (387420489/2*pow(103, 18)) + (1089706253/2*pow(103, 19)) + (3041409421/2*pow(103, 20)) + (8557522221/2*pow(103, 21)) + (25010752733/2*pow(103, 22)) + (74207381371/2*pow(103, 23)) + (205891178263/2"
  },
  {
    "example_id": 400,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "6.0",
      "3.0",
      "72.0",
      "6.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "max_workers = (-265 * x + 2800) / -265\nprint(max_workers)"
  },
  {
    "example_id": 401,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-6.0",
      "3.0",
      "9.0",
      "2.0",
      "-9.0",
      "6.0",
      "3.0",
      "2.0",
      "-12.0",
      "3.0",
      "18.0",
      "12.0",
      "3.0"
    ],
    "annotated_answers": [
      "117.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 + 18*x - 27\nsolution = solve(eq, x)\nx_value = solution[0]\nx_value_2 = solution[1]\na = (x_value**2 - x_value_2**2)/(2*x_value_2)\nb = x_value - x_value_2\nprint(a + b)"
  },
  {
    "example_id": 402,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "# Total number of candies\ntotal = 15\n\n# Number of chocolate and vanilla candies\nchocolate_and_vanilla = total // 2\n\n# Number of peppermint and lemon candies\npeppermint_and_lemon = total - chocolate_and_vanilla\n\n# Number of peppermint candies\npeppermint = peppermint_and_lemon\n\n# Number of lemon candies\nlemon = peppermint_and_lemon - peppermint\n\nprint(lemon)"
  },
  {
    "example_id": 403,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "from math import ceil\nn = ceil(pow(25, 1/3))\nprint(n)"
  },
  {
    "example_id": 404,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "h = lambda x: sqrt((x+3)/2)\nprint(h(-1))"
  },
  {
    "example_id": 405,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "26.0"
    ],
    "solution": "x = symbols('x')\na, b, c = symbols('a b c', positive=True)\neq = Eq(2*x**2, 4*x + 9)\nsolution = solve(eq, x)\na_plus_b_plus_c = 0\nfor sol in solution:\n    a_plus_b_plus_c += sol\nprint(a_plus_b_plus_c)"
  },
  {
    "example_id": 406,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "14.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "# find the smallest number in the domain of f\n\n# define the domain of f\ndomain = [i for i in range(1, 1000)]\n\n# define the function f(x)\ndef f(x):\n    if x % 2 == 0:\n        return x // 2\n    else:\n        return 3 * x + 1\n\n# find the smallest number in the domain of f\nsmallest = None\nfor i in domain:\n    if f(i) == 7:\n        smallest = i\n        break\n\n# print the smallest number in the domain of f\nif smallest is not None:\n    print(smallest)"
  },
  {
    "example_id": 407,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "324.0",
      "4.0",
      "2.0",
      "-216.0",
      "3.0",
      "3.0",
      "324.0",
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "simplify(7+8*x-3*2-3*6*x-3*2*x**2+9*1-9*7+9*x**3-9*x**4)"
  },
  {
    "example_id": 408,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = 1 + 7\nprint(x)"
  },
  {
    "example_id": 409,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\ny = (2)/(x**2 + x - 6)\neq = Eq(y, 0)\nsolution = solve(eq, x)\nprint(len(solution))"
  },
  {
    "example_id": 410,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "15.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "a = 2\nb = 3\nc = 4\nprint((b-c)**2 + a*(b+c))"
  },
  {
    "example_id": 411,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x1 = (7 + 7**0.5) / 2\nx2 = (7 - 7**0.5) / 2\nprint(x1 + x2)"
  },
  {
    "example_id": 412,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "22.902551328258497"
    ],
    "annotated_answers": [
      "112.0"
    ],
    "solution": "A = 2\nB = 3\nC = 2 - sqrt(3)\nD = 1 + 2*sqrt(3)\nE = 2/D\nF = 3/C\nG = A + B*sqrt(3)\nH = G + F\nI = E + H\nJ = I/C\nK = J/D\nL = K + E\nM = L + F\nN = M/C\nO = N/D\nP = A + B + N\nprint(O)"
  },
  {
    "example_id": 413,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "630.0"
    ],
    "solution": "n = symbols('n')\nsum_even = 0\nsum_5 = 0\nfor i in range(20):\n    sum_even += floor(i*(2*n-1))\n    sum_5 += floor(i*5)\ndiff = sum_5 - sum_even\nprint(diff)"
  },
  {
    "example_id": 414,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "59.0",
      "2.0",
      "-1.0",
      "2.0",
      "59.0",
      "2.0"
    ],
    "annotated_answers": [
      "16384.0"
    ],
    "solution": "k = symbols('k')\nfactored_quadratic = (k**2 + k + 15)\nsolution = solve(factored_quadratic, k)\nprint(solution)"
  },
  {
    "example_id": 415,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "13.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "import math\n\ndef distance(p1, p2):\n    return math.sqrt((p2[0] - p1[0])**2 + (p2[1] - p1[1])**2)\n\nprint(distance((-4, 1), (1, 13)))"
  },
  {
    "example_id": 416,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0",
      "2.0",
      "481.0",
      "2.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "# Declare variables\nx = symbols('x')\n\n# Define equation\neq = Eq(x**2, 10**2 + (10-1)*x)\n\n# Solve for x\nsolution = solve(eq, x)\n\n# Print result\nprint(solution[0])"
  },
  {
    "example_id": 417,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0",
      "4.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x = symbols('x')\nf = (12/(x*x)) * (x**4/14*x) * (35/3*x)\nprint(f)"
  },
  {
    "example_id": 418,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-8.5"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "# Find slope of line l\nm = 4\nb = -7\n\n# Find slope of line m\na = -1/m\n\n# Find y-coordinate of point on m\ny = a * 6 + b\nprint(y)"
  },
  {
    "example_id": 419,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "41.0"
    ],
    "solution": "a, b = symbols('a, b')\n\neq1 = (8**(-1))/(4**(-1)) - (a**(-1))\neq2 = (8**(-1))/(4**(-1)) - (b**(-1))\n\nsolution1 = solve(eq1, a)\nsolution2 = solve(eq2, b)\n\na_value = solution1[0]\nb_value = solution2[0]\n\nprint(a_value)\nprint(b_value)"
  },
  {
    "example_id": 420,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0",
      "4.0",
      "2.0",
      "4.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x1, x2, x3, x4 = symbols('x1, x2, x3, x4')\ny1 = x1**4\ny2 = 5*x2**2 - 6\n\nm = (y1.subs(x1, x2) - y2.subs(x2, x1)).subs(x1, x3).subs(x2, x4).subs(x3, x1).subs(x4, x2)\nn = (y1.subs(x1, x2) - y2.subs(x2, x1)).subs(x1, x2).subs(x2, x1).subs(x3, x2).subs(x4, x3)\n\nm_value = m.evalf()\nn_value = n.evalf()\nprint(m_value - n_value)"
  },
  {
    "example_id": 421,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "expr = (3**4 - 3**3)/(3**3 - 3**2)\nprint(expr)"
  },
  {
    "example_id": 422,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\nexpr = (x-5)/(x**2-9)\nexpr_value = expr.subs(x, 1)\nprint(expr_value)"
  },
  {
    "example_id": 423,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.5",
      "4.5",
      "4.5"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "# Initialize variables\nP = 3\nQ = 6\n\n# Calculate $3 \\ast (6 \\ast 8)$\n# using the formula: $P \\ast Q$ means $\\cfrac{P+Q}{2}$\nresult = (P + Q) / 2\nprint(result)\n\n# Calculate $3 \\ast (6 \\ast 8)$\n# using the formula: $P \\ast Q$ means $\\cfrac{P+Q}{2}$\nresult = (P + Q) / 2\nprint(result)\n\n# Calculate $3 \\ast (6 \\ast 8)$\n# using the formula: $P \\ast Q$ means $\\cfrac{P+Q}{2}$\nresult = (P + Q) / 2\nprint(result)"
  },
  {
    "example_id": 424,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "6.0",
      "10.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "# Create a function for the problem\ndef find_sum_difference(number_1, number_2):\n    sum_of_numbers = number_1 + number_2\n    difference_of_squares = (number_1 - number_2)**2\n    return abs(sum_of_numbers - difference_of_squares)\n\n# Test the function with different inputs\nprint(find_sum_difference(1, 2))\nprint(find_sum_difference(3, 4))\nprint(find_sum_difference(5, 6))"
  },
  {
    "example_id": 425,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "21.0",
      "2.0",
      "13.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "z = symbols('z')\na = symbols('a')\nb = symbols('b')\neq = (2*z**2 + 13*z + 21)\nsolution = solve(Eq(eq, (z + a)*(2*z + b)), z)\nz_value = solution[0]\nprint(z_value)"
  },
  {
    "example_id": 426,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "a = 9 - 2 * 3\nb = 9 - 2 * 3\nprint(a + b)"
  },
  {
    "example_id": 427,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "from graph import *\n\nlowerx, upperx, lowery, uppery = -5, 5, -2, 4\n\ngraph(lambda x: (x-1)*(x-1)-3, lowerx, upperx, lowery, uppery, color='red')"
  },
  {
    "example_id": 428,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "32.0"
    ],
    "annotated_answers": [
      "32.0"
    ],
    "solution": "a = 7\nb = 8\nc = 9\nd = 0\nslope = (b - d)/(a - c)\ny_intercept = d - (slope * c)\nsum = slope + y_intercept\nprint(sum)"
  },
  {
    "example_id": 429,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "74.0"
    ],
    "annotated_answers": [
      "22.0"
    ],
    "solution": "n = 3\nd = 14\nh = 6\ns = 120\n\na = s / (n - 1)\nb = a - d\nc = a + d\n\nprint(c)"
  },
  {
    "example_id": 430,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "21.0"
    ],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "def letter_count(n):\n    if 0 <= n <= 20:\n        return len(str(n))\n    else:\n        return None\n\ncount = 0\nfor i in range(21):\n    if letter_count(i) is not None:\n        count += 1\nprint(count)"
  },
  {
    "example_id": 431,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-0.6057142857142856"
    ],
    "annotated_answers": [
      "50.0"
    ],
    "solution": "x = symbols('x')\neq1 = (sqrt(12*x)+12)*(sqrt(3*x)-6) - (4*(x+3)) + (x-34)\neq2 = Eq(eq1, 0)\nsolution = solve(eq2, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 432,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 - 6*x + 13\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 433,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-6.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x = symbols('x')\ny = -2*x**2 - 12*x - 15\neq = y - 0\nsolution = solve(eq, x)\nm = solution[0]\nn = solution[1]\nprint(m + n)"
  },
  {
    "example_id": 434,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "10.0",
      "4.0",
      "10.0",
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "from sympy import symbols, solve\nx, y = symbols('x y')\neq = (x**2 - 4*x + y**2 - 6*y - 36)\nsolution = solve(eq, [x, y])\nprint(solution)"
  },
  {
    "example_id": 435,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "f = lambda x: 2*x - 3\ng = lambda x: x + 1\nprint(g(f(5) - 1))"
  },
  {
    "example_id": 436,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "107.0"
    ],
    "annotated_answers": [
      "107.0"
    ],
    "solution": "def prime_factors(n):\n    factors = []\n    for i in range(2, int(n ** 0.5) + 1):\n        while n % i == 0:\n            factors.append(i)\n            n //= i\n    if n > 1:\n        factors.append(n)\n    return factors\n\n\nprint(prime_factors(9951)[-1])"
  },
  {
    "example_id": 437,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.33333333333333"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "x = symbols('x')\neq = 3*x**2 + 14*x + 8\nsolution = solve(eq)\na = solution[0]\nb = solution[1]\na_value = a.evalf()\nb_value = b.evalf()\nprint(a_value - b_value)"
  },
  {
    "example_id": 438,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "511.75"
    ],
    "annotated_answers": [
      "228.3"
    ],
    "solution": "# height = current_height * (1 + percent_increase/100)^days\n# since Alice noticed the plant growing 2 weeks ago, days = 2\n# height = 452 * (1 + 0.05/100)^2\n# height = 452 * 1.05^2\n# height = 452 * 1.1025\n# height = 511.75\nprint(511.75)"
  },
  {
    "example_id": 439,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "4.0"
    ],
    "solution": ""
  },
  {
    "example_id": 440,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "25.0"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "sum = 1 + 3 + 5 + 7 + 9\nprint(sum)"
  },
  {
    "example_id": 441,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x, y, z = symbols('x, y, z')\neq = ( (y-x)**2 / (y-z)*(z-x) ) + ( (z-y)**2 / (z-x)*(x-y) ) + ( (x-z)**2 / (x-y)*(y-z) )\nsolution = solve(eq, x, y, z)\nprint(solution)"
  },
  {
    "example_id": 442,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "18.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "a = int(9/2**0.5)\nb = int(9/2**0.5)\nc = int(9/2**0.5)\nprint(a+b+c)"
  },
  {
    "example_id": 443,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "10.0",
      "7.0",
      "812.0",
      "3.0",
      "2.0",
      "10.0",
      "7.0",
      "35.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq = (6*x*y*z + 30*x*y + 21*x*z + 2*y*z + 105*x + 10*y + 7*z) - 812\nsolution = solve(eq, x, y, z)\nx_value, y_value, z_value = solution[0]\nprint(x_value + y_value + z_value)"
  },
  {
    "example_id": 444,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "2.0",
      "45.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "217.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq1 = x + y - 7\neq2 = 3*x + y - 45\nsolution1 = solve(eq1, x)\nsolution2 = solve(eq2, y)\nx_value = solution1[0]\ny_value = solution2[0]\nprint(x_value**2 - y_value**2)"
  },
  {
    "example_id": 445,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "14.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "x = 11\ny = 25 - 11\nprint(y)"
  },
  {
    "example_id": 446,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "978179.0"
    ],
    "annotated_answers": [
      "29.0"
    ],
    "solution": "import math\n\ndef inside_region(x, y):\n    return abs(y) <= x**2 - 35/4\n\ndef on_boundary(x, y):\n    return abs(y) == x**2 - 35/4\n\ndef count_lattice_points(f, g):\n    count = 0\n    for x in range(1000):\n        for y in range(1000):\n            if inside_region(x, y):\n                count += 1\n            elif on_boundary(x, y):\n                count += 1\n    return count\n\nprint(count_lattice_points(lambda x: x, lambda y: y))"
  },
  {
    "example_id": 447,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "40.0",
      "40.0",
      "0.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "a = 3\nb = 5\n\nc = (a + b) * b\nprint(c)\n\nd = (b + a) * b\nprint(d)\n\nprint(c - d)"
  },
  {
    "example_id": 448,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-1.0",
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "x = symbols('x')\neq = 9*x**2 + 18*x + 7\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 449,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0",
      "2.0",
      "0.4"
    ],
    "annotated_answers": [
      "28.0"
    ],
    "solution": "# Let's define the variables\na = symbols('a')\nb = symbols('b')\nc = symbols('c')\nd = symbols('d')\n\n# Let's define the equations\neq1 = a + b + c + d - 3*a\neq2 = a + b + c - 4*b\neq3 = a + b - 2*c\neq4 = 8*a + 10*b + 6*c - 120\n\n# Let's solve the equations\nsol1 = solve(eq1, a)\nsol2 = solve(eq2, b)\nsol3 = solve(eq3, c)\nsol4 = solve(eq4, d)\n\n# Let's print the solution\nprint(sol1)\nprint(sol2)\nprint(sol3)\nprint(sol4)\n\n# Let's define the variables for the fraction\nnumerator = 2\ndenominator = 5\n\n# Let's find the solution for the fraction\nfraction = numerator/denominator\n\n# Let's print the solution\nprint(fraction)"
  },
  {
    "example_id": 450,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "2.0"
    ],
    "annotated_answers": [
      "-7.0"
    ],
    "solution": "x = symbols('x')\nb = symbols('b')\nc = symbols('c')\neq = x**2+b*x+c > 0\ndiscriminant = b**2 - 4*c\ndiscriminant_value = solve(discriminant, b)\nprint(discriminant_value)"
  },
  {
    "example_id": 451,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "15.999999999999996"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "def f(x):\n    if x >= 0:\n        return -x**(1/3)\n    else:\n        return x**2\n\nf_result = f(f(f(f(512))))\nprint(f_result)"
  },
  {
    "example_id": 452,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "21.0"
    ],
    "solution": "A = 1\nB = 2\nC = 0\nr = 5\n\nprint(A + B + C + r)"
  },
  {
    "example_id": 453,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "15625.0"
    ],
    "annotated_answers": [
      "125.0"
    ],
    "solution": "print(5**5+5**5+5**5+5**5+5**5)"
  },
  {
    "example_id": 454,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "41.0"
    ],
    "solution": "john_age = 24\nfather_age = 27 - john_age\nsum_of_digits = 0\nfor digit in str(father_age):\n    sum_of_digits += int(digit)\nif sum_of_digits == 5:\n    print(father_age)\nelse:\n    print('The sum of the digits in father_age is not 5')"
  },
  {
    "example_id": 455,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "405.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "def f(n):\n    if n % 2 == 0:\n        return n**2 - 3*n + 1\n    else:\n        return n**2 + 1\n\ndef f_of_f_of_f_of_f_of_f(n):\n    return f(f(f(f(f(f(n))))))\n\nprint(f_of_f_of_f_of_f_of_f(2))"
  },
  {
    "example_id": 456,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.474536776308408",
      "64",
      "3.1139303872087715",
      "26",
      "1.0",
      "3.0",
      "2.0",
      "3.0",
      "11.0",
      "5.474536776308408",
      "64",
      "3.1139303872087715",
      "26",
      "3.0",
      "2.0",
      "3.0",
      "11.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "from sympy import sqrt\n\nden = (1/(sqrt(2) + sqrt(8) + sqrt(32)))\n\ndef rationalize(den):\n    num = 1\n    for i in range(1, 100):\n        den_prev = den\n        den = (1/(sqrt(2) + sqrt(8) + sqrt(i)))\n        if den == den_prev:\n            break\n        num = num*sqrt(i)\n    return (num, den)\n\nnum, den = rationalize(den)\nprint(num, den)\n\nprint(num/den)"
  },
  {
    "example_id": 457,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "3.0",
      "3.0",
      "4.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "from sympy import symbols, simplify, sqrt\n\na = symbols('a')\nb = symbols('b')\nexpr = (3/sqrt(16)) + (1/sqrt(3))\nexpr = simplify(expr)\nexpr = expr.rewrite(sqrt)\nexpr = expr.rewrite(sqrt, a**5)\nexpr = expr.rewrite(sqrt, b)\na_value = expr.args[0]\nb_value = expr.args[1]\na_plus_b = a_value + b_value\nprint(a_plus_b)"
  },
  {
    "example_id": 458,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\neq = (3/4)**x - 81/256\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 459,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-20.0",
      "4.0",
      "4.0",
      "3.0",
      "9.0",
      "2.0",
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "from sympy import symbols, simplify\nx = symbols('x')\neq = (1+2*x) - 2*(1+2*x+3*x**2) + 3*(1+2*x+3*x**2+4*x**3) - 4*(1+2*x+3*x**2+4*x**3+5*x**4)\nprint(simplify(eq))"
  },
  {
    "example_id": 460,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\nf = {0: 0, 1: 0, 2: 1, 3: 3, 4: 6}\ng = f.copy()\ng = {k: v - k for k, v in g.items()}\nprint(g)"
  },
  {
    "example_id": 461,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "4.0",
      "5.0",
      "11.0"
    ],
    "annotated_answers": [
      "208.0"
    ],
    "solution": "a, b = symbols('a b')\neq = 2*a + b - (5*a - 4)*(b - 1)/3\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 462,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "n = 7\nprint(n)"
  },
  {
    "example_id": 463,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "for x in range(-4, 4):\n    if abs(2-x) == 3:\n        print(x)"
  },
  {
    "example_id": 464,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "4.0",
      "28.0"
    ],
    "annotated_answers": [
      "81.0"
    ],
    "solution": "from sympy import symbols, Max\n\nx = symbols('x')\nf = 4*(x + 7)*(2 - x)\nmax_f = Max(f, x)\nprint(max_f)"
  },
  {
    "example_id": 465,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "78.0"
    ],
    "solution": "chimes = 12\nprint(chimes)"
  },
  {
    "example_id": 466,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "81.0"
    ],
    "solution": "x = symbols('x')\nf = Function('f')\neq1 = f(3) - 5\neq2 = f(3*x) - (f(x) + 2)\nsolution = solve(eq1, f(3))\nf_value = solution[0]\nsolution = solve(eq2, f(x))\nf_inv_value = solution[0]\nprint(f_value)\nprint(f_inv_value)"
  },
  {
    "example_id": 467,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "294.0"
    ],
    "annotated_answers": [
      "45.0"
    ],
    "solution": "f = lambda x: x**2 + 1\nf_1 = f(1)\nf_2 = f(2)\nf_3 = f(3)\nf_4 = f(4)\nf_5 = f(5)\nf_6 = f(6)\nf_7 = f(7)\nf_8 = f(8)\nf_9 = f(9)\nprint(f_1 + f_2 + f_3 + f_4 + f_5 + f_6 + f_7 + f_8 + f_9)"
  },
  {
    "example_id": 468,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "print(8 * (6**2 - 3 * 11) / 8 + 3)"
  },
  {
    "example_id": 469,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = 3\nprint(x)"
  },
  {
    "example_id": 470,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x = [3, 4, 5, 6, 7]\nfor x in x:\n    if abs(x-3) + abs(3-x) - 1 == 3:\n        print(x)"
  },
  {
    "example_id": 471,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "-6.0"
    ],
    "solution": "x = symbols('x')\neq = (2*x**(1/3))/(x**(1/3)+4) - (2*x**(1/3))/(2*x-4)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 472,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-14.0"
    ],
    "annotated_answers": [
      "89.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 + 14*x - 33\nsolution = solve(eq, x)\na = solution[0]\nb = solution[1]\nprint(a+b)"
  },
  {
    "example_id": 473,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x = 5\ny = 2\nprint(sqrt(x**3 - 2**y))"
  },
  {
    "example_id": 474,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-7.0",
      "2.0",
      "57.0",
      "2.0",
      "2.0",
      "57.0",
      "2.0",
      "7.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "53.0"
    ],
    "solution": "from sympy import symbols, solve, Poly\n\nx = symbols('x')\np = Poly(x**2 + 7*x - 2, x)\nroots = p.all_roots()\nalpha = roots[0]\nbeta = roots[1]\nalpha2 = alpha**2\nbeta2 = beta**2\nprint(alpha2 + beta2)"
  },
  {
    "example_id": 475,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "9.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "print(5*1+4)"
  },
  {
    "example_id": 476,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7272.0"
    ],
    "annotated_answers": [
      "15554.0"
    ],
    "solution": "n = 6\na = 2222\nb = a + (n - 1)*1010\nprint(b)"
  },
  {
    "example_id": 477,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\na = 7\nb = 4\nc = 6\nd = 3\neq = a*x + b - c*d\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 478,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3600.0"
    ],
    "annotated_answers": [
      "3600.0"
    ],
    "solution": "original_area = 3491 * 3491\ndecreased_length = 3491 - 60\nincreased_width = 3491 + 60\nnew_area = increased_width * decreased_length\nprint(new_area - original_area)"
  },
  {
    "example_id": 479,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "163.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x1 = symbols('x1')\nx2 = symbols('x2')\ny1 = x1**4\ny2 = 7*x2**2 - 10\neq1 = y1 - y2\neq2 = x1 - x2\nsolution = solve([eq1, eq2], [x1, x2])\nx1_value = solution[0][0]\nx2_value = solution[0][1]\nm = x1_value**2 + x2_value**2\nn = x2_value**2\nprint(m-n)"
  },
  {
    "example_id": 480,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "200.0"
    ],
    "annotated_answers": [
      "200.0"
    ],
    "solution": "print((15 + 5) * (15 - 5))"
  },
  {
    "example_id": 481,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-0.6"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "f = lambda x: 2/(x+1)\nf_inv = lambda y: 2/y - 1\nprint(f_inv(5))"
  },
  {
    "example_id": 482,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "9.0",
      "3.0",
      "1.0",
      "9.0",
      "3.0"
    ],
    "annotated_answers": [
      "-7.0"
    ],
    "solution": "from sympy import solve\nfrom sympy.abc import x, y\n\neq = x**2 + 6*x + y**2 + 8*y\n\nsolution = solve(eq)\n\nprint(solution)"
  },
  {
    "example_id": 483,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x, y = symbols('x y')\neq = 4*x - 3*y\neq2 = (2*x + y)/(3*x - 2*y)\nsolution = solve(eq, [x, y])\nx_value = solution[0][0]\ny_value = solution[0][1]\nprint(eq2.subs({x: x_value, y: y_value}))"
  },
  {
    "example_id": 484,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0"
    ],
    "annotated_answers": [
      "-15.0"
    ],
    "solution": "n = symbols('n')\neq = (2-(-1))**2 + (n-1)**2 - 5**2\nsolution = solve(eq, n)\nn_value = solution[0]\nprint(n_value)"
  },
  {
    "example_id": 485,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "print(int(abs(23/9)))"
  },
  {
    "example_id": 486,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0",
      "14.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = 56 // 7\ny = 56 // 4\nprint(x)\nprint(y)"
  },
  {
    "example_id": 487,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-15.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "a = int((-15 + sqrt(15**2 + 4*2**2))/(2))\nb = int((-15 - sqrt(15**2 + 4*2**2))/(2))\nprint(b-a)"
  },
  {
    "example_id": 488,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "f = lambda x: g(g(x)) - g(x)\ng = lambda x: 2*x - 1\nf_value = f(3)\nprint(f_value)"
  },
  {
    "example_id": 489,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "c = 6\nd = 9\nc_over_d = c/d\nd_over_c = d/c\nd_when_c_equals_6 = c_over_d * c\nprint(d_when_c_equals_6)"
  },
  {
    "example_id": 490,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "33.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "n = 4\nwhile True:\n    n += 2\n    if n**2 - n + 3 >= 4:\n        break\n\nprint(n**2 - n + 3)"
  },
  {
    "example_id": 491,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "annual_maintenance_cost = 650\nannual_energy_saving = 1200\none_time_installation_cost = 10000\n\ny = (annual_maintenance_cost + annual_energy_saving) / one_time_installation_cost\nx = int(y)\n\nprint(x)"
  },
  {
    "example_id": 492,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "1.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "midpoint_x = (3 + 5) / 2\nmidpoint_y = (1 + 1) / 2\nprint(midpoint_x, midpoint_y)"
  },
  {
    "example_id": 493,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "a = 1\nb = 1\nc = 1\n\nprint(a+b+c)"
  },
  {
    "example_id": 494,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "48.0",
      "105.0"
    ],
    "annotated_answers": [
      "-9.0"
    ],
    "solution": "A = 24\nB = 2\nC = -19\nD = 35\n\nAB = A * B\nAB_minus_3C = AB - 3 * C\n\nprint(AB)\nprint(AB_minus_3C)"
  },
  {
    "example_id": 495,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq1 = 3*x + 4*y - 12*z - 10\neq2 = -2*x - 3*y + 9*z + 4\nsol = solve([eq1, eq2], [x, y, z])\nprint(sol)"
  },
  {
    "example_id": 496,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "64.0",
      "2.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\nlog = log(64*x**2, x)\nprint(log)"
  },
  {
    "example_id": 497,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-31.0"
    ],
    "annotated_answers": [
      "-13.5"
    ],
    "solution": "p = -14\nq = -17\nprint(p + q)"
  },
  {
    "example_id": 498,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25.0"
    ],
    "annotated_answers": [
      "48.0"
    ],
    "solution": "def count_endpoints(n):\n    count = 0\n    for i in range(n):\n        if i % 2 == 0:\n            count += 2\n        else:\n            count += 3\n    return count\n\nn = 10\nprint(count_endpoints(n))"
  },
  {
    "example_id": 499,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "1.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x = symbols('x')\neq = -2*x**2 - 20*x - 53\na, d, e = eq.as_coefficients_dict()\nprint(a + d + e)"
  },
  {
    "example_id": 500,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0014",
      "10.0"
    ],
    "annotated_answers": [
      "-6.5"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\neq = (2000**(-1))/(7*10**(-7)) - (a*10**b)**(-1)\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 501,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "1056.0"
    ],
    "solution": "num = 1\nwhile True:\n    if (num-1)*(num) == num:\n        break\n    num += 1\nprint(num)"
  },
  {
    "example_id": 502,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x = symbols('x')\neq = (x + 1)/(x - 1) - (x - 2)/(x + 2)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 503,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "0.0",
      "0.0"
    ],
    "annotated_answers": [
      "360.0"
    ],
    "solution": "h, w, l = symbols('h w l')\nV = h*w*l\narea1 = 30\narea2 = 180\narea3 = 24\neq1 = V - area1*h*w\neq2 = V - area2*h*l\neq3 = V - area3*w*l\nsolution = solve([eq1, eq2, eq3], [h, w, l])\nh_value = solution[0][0]\nw_value = solution[0][1]\nl_value = solution[0][2]\nprint('h = ', h_value, 'w = ', w_value, 'l = ', l_value)\nprint('V = ', h_value*w_value*l_value)"
  },
  {
    "example_id": 504,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "2.0",
      "6.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "6.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "23.0"
    ],
    "solution": "m = symbols('m')\nn = symbols('n')\nx = symbols('x')\nb = symbols('b')\neq = x**2 + b*x + b + 3\nsolution = solve(eq, x)\nx_roots = solution\nm_plus_n = (x_roots[0]**2 - b) + (x_roots[1]**2 - b)\nprint(m_plus_n)"
  },
  {
    "example_id": 505,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.6"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "time = 3\npeople = 5\nhours_per_person = time/people\nprint(hours_per_person)"
  },
  {
    "example_id": 506,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "def oyster_sharing(num_friends):\n    return num_friends\n\nprint(oyster_sharing(12))"
  },
  {
    "example_id": 507,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "22.0"
    ],
    "annotated_answers": [
      "3.2"
    ],
    "solution": "f = lambda x: 2*x + 2\nprint(f(10))"
  },
  {
    "example_id": 508,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "-18.0"
    ],
    "solution": "x = 7\nprint(x)"
  },
  {
    "example_id": 509,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.5198420997897464"
    ],
    "annotated_answers": [
      "1024.0"
    ],
    "solution": "f_inv = lambda x: x ** (1/3)\nf_8 = f_inv(8)\nf_8_inv = f_inv(f_8)\nprint(f_8_inv / (f_8 ** -1))"
  },
  {
    "example_id": 510,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\neq = x - (1/(2 + (1/(x - 2))))\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 511,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0140487458524796"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "from math import ceil\n\nresult = (ceil(sqrt(20)))**2\nprint(result)"
  },
  {
    "example_id": 512,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "18.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "x = symbols('x')\nf = 5*x**2 + 3*x + 4\nf_value = f.subs(x, -2)\nprint(f_value)"
  },
  {
    "example_id": 513,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "print(120*30/100-130*20/100)"
  },
  {
    "example_id": 514,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "144.0"
    ],
    "annotated_answers": [
      "144.0"
    ],
    "solution": "x = 13\ny = 5\nprint((x+y)*(x-y))"
  },
  {
    "example_id": 515,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-5.0",
      "-4.0",
      "-3.0",
      "-2.0",
      "-1.0",
      "-19.0",
      "-84.0",
      "-99.0",
      "-100.0",
      "-99.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x_coords = []\ny_coords = []\nfor x in range(-10, 0):\n    y = (x+2)**4 - 100\n    if y < 0 and x < 0:\n        x_coords.append(x)\n        y_coords.append(y)\nprint(x_coords, y_coords)"
  },
  {
    "example_id": 516,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.4659258262890678",
      "1.4659258262890678",
      "1.4659258262890678",
      "4.397777478867203"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "from fractions import Fraction\n\nnum = 1\nden = 1 + Fraction(sqrt(2)) - Fraction(sqrt(3))\n\na = (num * den)**(-1)\na = a.numerator / a.denominator\nprint(a)\n\nb = (num * den)**(-1)\nb = b.numerator / b.denominator\nprint(b)\n\nc = (num * den)**(-1)\nc = c.numerator / c.denominator\nprint(c)\n\nprint(a + b + c)"
  },
  {
    "example_id": 517,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 + 6**2 - 10**2\nsolution = solve(eq)\nsum = 0\nfor s in solution:\n    sum += s\nprint(sum)"
  },
  {
    "example_id": 518,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "b = 6*(-1) + 7\nprint(b)"
  },
  {
    "example_id": 519,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0",
      "3.0",
      "4.0",
      "3.0"
    ],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq = (y - 6)/(x + 2) - (y + 2)/(x - 4)\nsolution = solve(eq, y)\ny_value = solution[0]\nprint(y_value)"
  },
  {
    "example_id": 520,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "4.5"
    ],
    "solution": "import math\n\nx_min = -math.sqrt(3)\nx_max = math.sqrt(3)\ny_min = -3\ny_max = 0\n\narea = 0\nfor x in range(int(x_min), int(x_max)):\n    for y in range(int(y_min), int(y_max)):\n        if y >= abs(x) and y <= -abs(x) + 3:\n            area += 1\n\nprint(area / (x_max - x_min) / (y_max - y_min))"
  },
  {
    "example_id": 521,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-15.0"
    ],
    "solution": ""
  },
  {
    "example_id": 522,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0",
      "46.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 - 14*x + 3\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 523,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1083.2142857142858"
    ],
    "annotated_answers": [
      "2300.0"
    ],
    "solution": "feather_price = 932\nfeather_weight = 8\ngold_price = 1402\ngold_weight = 14\n\nfeather_value = feather_price / feather_weight\ngold_value = gold_price / gold_weight\n\nfeather_weight_5 = 5\ngold_weight_5 = 5\n\nfeather_value_5 = feather_value * feather_weight_5\ngold_value_5 = gold_value * gold_weight_5\n\nprint(feather_value_5 + gold_value_5)"
  },
  {
    "example_id": 524,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "-8.0"
    ],
    "solution": "x = symbols('x')\nk = solve(x**2 - 8*x + 5 - x, k)\nk_value = k[0]\nprint(k_value)"
  },
  {
    "example_id": 525,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "n = 5\nm = 8\n\neven_sum = sum(range(0, m, 2))\nodd_sum = sum(range(1, n))\n\nprint(even_sum - 4 - odd_sum)"
  },
  {
    "example_id": 526,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x = 3\ny = 2\neq = (2*x**3 - 3*y**2)/6\nprint(eq)"
  },
  {
    "example_id": 527,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "19.0",
      "2.0",
      "19.0",
      "2.0",
      "14.0",
      "2.0"
    ],
    "annotated_answers": [
      "158.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq1 = (x + y)/2 - 7\neq2 = (x*y)/(x + y) - sqrt(19)\nsolution1 = solve(eq1, x)\nsolution2 = solve(eq2, y)\nx_value = solution1[0]\ny_value = solution2[0]\nprint(x_value**2 + y_value**2)"
  },
  {
    "example_id": 528,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1600.0"
    ],
    "annotated_answers": [
      "30.0"
    ],
    "solution": "x = 30\ny = 40\neq = (x*40) + ((40-x)*y)\nprint(eq)"
  },
  {
    "example_id": 529,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0",
      "1.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "a = 1\nb = 1\nc = 1\n\nprint(\"a:\", (a + b + c)/3)\nprint(\"b:\", (a + 2*b)/3)\nprint(\"c:\", (a + 2*c)/3)"
  },
  {
    "example_id": 530,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x = symbols('x')\nexpr = -2*x**2 + 4*x + 5\na, h, k = expr.as_poly().all_coeffs()\nprint(k)"
  },
  {
    "example_id": 531,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "59.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "# First we find the slope of the line passing through (0,7) and (4,-3)\nm1 = (7-(-3)) / (0-4)\nm1 = 10 / 1\n\n# Now we find the slope of the line passing through (1,2) and (19,4)\nm2 = (4-2) / (19-1)\nm2 = 2 / 18\n\n# Now we find the slope of the line that passes through the midpoint of the other two lines\nm = (m1 + m2) / (1 + 18)\nm = 3 / 19\n\n# Now we find the y-intercept of the line\nb = 2 - m * 1\nb = 2 - 3 * 1\nb = -1\n\n# Now we find the x-coordinate of the point on l whose x-coordinate is 20\nx = 20\nx = 20\n\n# Now we find the y-coordinate of the point on l whose x-coordinate is 20\ny = m * x + b\ny = 3 * 20 + (-1)\ny = 60 - 1\ny = 59\n\nprint(y)"
  },
  {
    "example_id": 532,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.498046875"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "n = 10\nS = (1/4 + 1/8 + 1/16 + 1/32 + 1/64 + 1/128 + 1/256 + 1/512)\nprint(S)"
  },
  {
    "example_id": 533,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "800000.0"
    ],
    "annotated_answers": [
      "800000.0"
    ],
    "solution": "print(1002**2 - 502**2 + 298**2 - 202**2)"
  },
  {
    "example_id": 534,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "13.0",
      "19.0",
      "24.0"
    ],
    "annotated_answers": [
      "1320.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq1 = x + y - z - 8\neq2 = x - y + z - 18\neq3 = -x + y + z - 30\nsolution = solve([eq1, eq2, eq3], [x, y, z])\nprint(solution)"
  },
  {
    "example_id": 535,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "m = symbols('m')\nfirst_term = 1\nnext_term = first_term * m / 7\neq = next_term - first_term\nsolution = solve(eq, m)\nm_value = solution[0]\nprint(m_value)"
  },
  {
    "example_id": 536,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-11.0",
      "73.0",
      "73.0"
    ],
    "annotated_answers": [
      "84.0"
    ],
    "solution": "m = symbols('m')\nn = symbols('n')\np = symbols('p')\nx = symbols('x')\neq = (x*(2*x-7)) - 3\neq1 = eq.subs(x, (m+sqrt(n))/p)\neq2 = eq.subs(x, (m-sqrt(n))/p)\nsolution = solve([eq1, eq2], [m, n, p])\nm_value = solution[0][0]\nn_value = solution[0][1]\np_value = solution[0][2]\nprint(m_value + n_value + p_value)"
  },
  {
    "example_id": 537,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "150.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "A = 100\nB = 1.5*A\nC = 2*A\nD = 2*B\nE = 10\n\nprint(B)"
  },
  {
    "example_id": 538,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "40000.0"
    ],
    "annotated_answers": [
      "2500.0"
    ],
    "solution": "area = 200 ** 2\nprint(area)"
  },
  {
    "example_id": 539,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "print(ceiling(sqrt(-23)))"
  },
  {
    "example_id": 540,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "def f(x):\n    if x >= 3:\n        return 2*x - 5\n    else:\n        return -x + 5\n\nprint(f(f(3)))"
  },
  {
    "example_id": 541,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "1023.0"
    ],
    "solution": "a = 1\nb = 3\nwhile (a**2 - b**2)!= 128:\n    a += 2\n    b += 2\nprint(a*b)"
  },
  {
    "example_id": 542,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "n = 1000\nfor i in range(1, 10000):\n    n = int(9/10 * n)\n    if n == 974:\n        break\nprint(n)"
  },
  {
    "example_id": 543,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "n = symbols('n')\neq = (9**(18*n)) - (27**(24))\nsolution = solve(eq, n)\nn_value = solution[0]\nprint(n_value)"
  },
  {
    "example_id": 544,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "60.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq = (a + b + c) - 60\neq = eq.expand()\neq = eq.factor()\nsolution = solve(eq, [a, b, c])\nprint(solution)"
  },
  {
    "example_id": 545,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\neq = a * b - 2 * a - 3 * b\nsolution = solve(eq, a)\na_value = solution[0]\nprint(4 * 3)"
  },
  {
    "example_id": 546,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "total_value = 75\nnum_dimes = 11\nnum_nickels = (total_value - num_dimes*10) // 5\nprint(num_nickels)"
  },
  {
    "example_id": 547,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "81.66666666666666"
    ],
    "annotated_answers": [
      "75.0"
    ],
    "solution": "small_dog = 185/3\ndiff = 20\nlargest_dog = small_dog + diff\nprint(largest_dog)"
  },
  {
    "example_id": 548,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "def f(n):\n    if n % 2 == 0:\n        return n**2 - 4*n - 1\n    else:\n        return n**2\n\ndef g(n):\n    return f(f(f(f(n))))\n\nprint(g(4))"
  },
  {
    "example_id": 549,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "21.0"
    ],
    "annotated_answers": [
      "21.0"
    ],
    "solution": "print(int(11.1) + 2*int(0.5*11.1))"
  },
  {
    "example_id": 550,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = 1\nprint(x)"
  },
  {
    "example_id": 551,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-13.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "t = symbols('t')\ng = symbols('g')\neq_t = 3 - g\neq_g = g**(1/2)\neq_t_g = t - eq_t\neq_t_g_16 = eq_t_g.subs(g, 16)\nsolution = solve(eq_t_g_16, t)\nt_value = solution[0]\nprint(t_value)"
  },
  {
    "example_id": 552,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\neq = (17**6 - 17**5)/16 - 17**x\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 553,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.3525"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "from sympy import symbols, Sum\nx = symbols('x')\nf = (1/(x**2 - 7)) + (1/(x**3 - 8)) + (1/(x**4 - 9))\nsum_f = Sum(f, (x, 1, oo))\nprint(sum_f)"
  },
  {
    "example_id": 554,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "print(ceil(sqrt(10))+ floor(sqrt(10)))"
  },
  {
    "example_id": 555,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "250.0"
    ],
    "annotated_answers": [
      "4000.0"
    ],
    "solution": "liters = 1000\ndrip = 1/4\ndrip_in_liter = liters * drip\nprint(drip_in_liter)"
  },
  {
    "example_id": 556,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "2.0",
      "21.0",
      "2.0",
      "21.0",
      "2.0",
      "5.0",
      "2.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "# The first pile has 5 fewer than the second pile.\n# So the second pile has 5 + 1 = 6 quarters.\n# The second pile has 4 more than the third pile.\n# So the third pile has 4 - 1 = 3 quarters.\n# The fourth pile has three times as many as the second pile.\n# So the fourth pile has 6 \\* 3 = 18 quarters.\n# There are 27 quarters in total.\n# So the fourth pile has 27 - 18 = 9 quarters.\nprint(9)"
  },
  {
    "example_id": 557,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "367.6470588235294"
    ],
    "annotated_answers": [
      "368.0"
    ],
    "solution": "horsepower = 500 / 1.36\nprint(horsepower)"
  },
  {
    "example_id": 558,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "square = symbols('square')\ntriangle = symbols('triangle')\nclubsuit = symbols('clubsuit')\ndiamond = symbols('diamond')\n\neq1 = triangle + square - clubsuit\neq2 = triangle + triangle - diamond - diamond - diamond - diamond\neq3 = triangle + triangle - clubsuit - diamond\n\nsolution = solve([eq1, eq2, eq3], [square, triangle, clubsuit, diamond])\n\nprint(solution)"
  },
  {
    "example_id": 559,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "210.0"
    ],
    "annotated_answers": [
      "210.0"
    ],
    "solution": "f = lambda x: x**2 - 1\ng = lambda x: x + 7\nprint(f(g(7)) + g(f(3)))"
  },
  {
    "example_id": 560,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "8.0",
      "5.0",
      "3.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = (3*x - 4)*x - (6*x**2 - 3*x + 5)/10\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 561,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "11.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 - 8*x - 33\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 562,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "18.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "miles = symbols('miles')\njosh_rate = 2 * miles\nmike_rate = 4 * miles / 5\neq = Eq(josh_rate - mike_rate, miles)\nsolution = solve(eq, miles)\nmike_miles = solution[0]\nprint(mike_miles)"
  },
  {
    "example_id": 563,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "print(ceil(pow(7/4, 2)))"
  },
  {
    "example_id": 564,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "939.9"
    ],
    "annotated_answers": [
      "920.25"
    ],
    "solution": "dollars = 10000\nrate = 0.045\ntime = 2\ninterest = dollars * (1 + rate/12)**(12*time) - dollars\nprint(round(interest, 2))"
  },
  {
    "example_id": 565,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "630.0"
    ],
    "annotated_answers": [
      "135.0"
    ],
    "solution": "def arithmetic_sequence(a, d, n):\n    return a + (n - 1) * d\n\ndef term(a, d, n, r):\n    return a + (r - 1) * d\n\na = 30\nd = 30\nn = 7\nr = 21\n\nprint(term(a, d, n, r))"
  },
  {
    "example_id": 566,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "from sympy import symbols, poly\nx = symbols('x')\nf = poly(x**3, x)\ng = poly(x**5, x)\nh = poly(2*f + 4*g, x)\nprint(h.total_degree())"
  },
  {
    "example_id": 567,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.3333333333333333"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "minutes_to_travel = 20 / 60\nprint(minutes_to_travel)"
  },
  {
    "example_id": 568,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "26.0"
    ],
    "annotated_answers": [
      "26.0"
    ],
    "solution": "a = 3\nb = 10\n\nab = a*b\n\na_star_b_star = 2*a + 5*b - ab\n\nprint(a_star_b_star)"
  },
  {
    "example_id": 569,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-5.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "58281.0",
      "18.0",
      "27.0",
      "2.0",
      "1.0"
    ],
    "annotated_answers": [
      "720.0"
    ],
    "solution": "a = symbols('a')\neq = (a + 1 + 2) * (a + 2 + 3) * (a + 3 + 4)\nsolution = solve(eq - 27, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 570,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "16.0"
    ],
    "annotated_answers": [
      "50.0"
    ],
    "solution": "percent = 110\nnum = 10\nresult = 5 + (num * (percent/100))\nprint(result)"
  },
  {
    "example_id": 571,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "11.0",
      "2.0",
      "5.0",
      "5.0",
      "2.0",
      "5.0",
      "2.0"
    ],
    "annotated_answers": [
      "75.0"
    ],
    "solution": "from sympy import sqrt\na = symbols('a')\nb = symbols('b')\nc = symbols('c')\nd = symbols('d')\nAB = sqrt( (0 - 1)**2 + (7 - 0)**2 )\nBC = sqrt( (1 - 12)**2 + (-2 - (-2))**2 )\nCD = sqrt( (12 - 7)**2 + (-2 - 8)**2 )\nDA = sqrt( (7 - 0)**2 + (8 - 7)**2 )\n\narea = (AB + BC + CD + DA) / 2\n\nprint(area)"
  },
  {
    "example_id": 572,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "m, n = symbols('m n')\neq1 = m*n - 7\neq2 = m + n - 8\nsolution = solve([eq1, eq2], [m, n])\nm_value, n_value = solution[0]\nprint(abs(m_value - n_value))"
  },
  {
    "example_id": 573,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "24.0",
      "32.0",
      "18.0"
    ],
    "annotated_answers": [
      "49.0"
    ],
    "solution": "x, y = symbols('x y')\neq = x**2 + y**2 - 14*x - 48*y\nsolution = solve(eq, y)\nmax_y_value = solution[0]\nprint(max_y_value)"
  },
  {
    "example_id": 574,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "3.21"
    ],
    "solution": "a = 2.6\nb = -a\nc = 3.6\n\nprint(b + c)"
  },
  {
    "example_id": 575,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "from sympy import symbols, solve\nx = symbols('x')\nf = 2*x**2 + 3*x - 5\nd, e = solve(f, x)\nprint((d-1)*(e-1))"
  },
  {
    "example_id": 576,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.032"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "from sympy import expand_power_base\n\nx = 2**(1/4)\ny = 4**(3/8)\n\nprint(x**2/5*y**2/25)"
  },
  {
    "example_id": 577,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "454.0"
    ],
    "annotated_answers": [
      "33840.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = a*b\nd = a + b\ne = 454\neq = c + d - e\nsolution = solve(eq, [c, d])\nc_value = solution[0][0]\nd_value = solution[0][1]\nprint(c_value, d_value)"
  },
  {
    "example_id": 578,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "900.0"
    ],
    "annotated_answers": [
      "24.0"
    ],
    "solution": "# Declare variables\nx = symbols('x')\ny = symbols('y')\n\n# Write the equations\neq1 = 2*6 + 4*3 - 8*3\neq2 = 8*(3+3)\n\n# Solve for the positive difference\ndiff = eq2 - eq1\n\n# Print the solution\nprint(diff)"
  },
  {
    "example_id": 579,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "13.0",
      "2.0",
      "3.0",
      "13.0",
      "2.0",
      "1.0",
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = x-y-1\neq2 = x**2+y**2-7\neq3 = x**3-y**3\nsolution = solve([eq1, eq2], [x, y])\nx_value = solution[0][0]\ny_value = solution[0][1]\neq3_value = eq3.subs(x, x_value).subs(y, y_value)\nprint(eq3_value)"
  },
  {
    "example_id": 580,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "114.0",
      "2.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "a = symbols('a')\neq = (3*5**2 - 4*(5 - a)**2)/3 - 63\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 581,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "34.252737116907895"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x = symbols('x')\nexpr = (3*x-2)*(4*x+1)-(3*x-2)*4*x+1\nsolution = expr.subs(x, 4)\nprint(solution)"
  },
  {
    "example_id": 582,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.5"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "y = symbols('y')\neq = (19 + 3*y)**(1/2) - 7\nsolution = solve(eq, y)\ny_value = solution[0]\nprint(y_value)"
  },
  {
    "example_id": 583,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "5.0",
      "3.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "from sympy import symbols, solve\nx, y = symbols('x y')\neq = x**2 + y**2 - 6 - 6*x - 2*y\nradius = solve(eq, x)[0]\nprint(radius)"
  },
  {
    "example_id": 584,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "70.0"
    ],
    "annotated_answers": [
      "70.0"
    ],
    "solution": "f = lambda x: x**2 - 4*sqrt(x) + 1\nprint(f(f(4)))"
  },
  {
    "example_id": 585,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5050.0"
    ],
    "annotated_answers": [
      "5050.0"
    ],
    "solution": "sum = 0\nfor i in range(1, 101):\n    sum += i\nprint(sum)"
  },
  {
    "example_id": 586,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "4.0"
    ],
    "solution": ""
  },
  {
    "example_id": 587,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1600.0"
    ],
    "annotated_answers": [
      "1600.0"
    ],
    "solution": "x = 441 + 2 * 21 * 19 + 361\nprint(x)"
  },
  {
    "example_id": 588,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.9999999999999998"
    ],
    "annotated_answers": [
      "-42.0"
    ],
    "solution": "f = x**3 - 6*x**2 + 3*x - 4\ng = x**3 + 5*x**2 + 9*x - 2\n\nf_g = f(g(x))\nf_g = f(x**3 + 5*x**2 + 9*x - 2)\nf_g = x**3 - 6*x**2 + 3*x - 4\n\nprint(f_g)"
  },
  {
    "example_id": 589,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "35.0",
      "2.0",
      "2.0",
      "10.0",
      "105.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq = (x-5)**2 + (y-15)**2 - 130\nsolution = solve(eq, y)\ny_value = solution[0]\nx_value = 2*y_value + 5\nprint(x_value)"
  },
  {
    "example_id": 590,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-16.0"
    ],
    "annotated_answers": [
      "-8.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 + 24*x + 128\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 591,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "g = lambda x: 3\nprint(g(2))"
  },
  {
    "example_id": 592,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "9.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "x = symbols('x')\neq = 2*x**2 + 13*x + 6\nsolution = solve(eq, x)\na_value = solution[0]\nb_value = solution[1]\nprint(a_value**2 * b_value**2)"
  },
  {
    "example_id": 593,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "63.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "n = 2005\nk = 1\nwhile n > 0:\n    k += 1\n    n -= k\n\nprint(k)"
  },
  {
    "example_id": 594,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "600.0"
    ],
    "annotated_answers": [
      "600.0"
    ],
    "solution": "print(31**2 - 19**2)"
  },
  {
    "example_id": 595,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "from sympy import symbols, Function, lambdify, floor\nfrom sympy.abc import x\nfrom sympy.functions.elementary.exponential import exp\nfrom sympy.functions.elementary.integers import floor\nfrom sympy.functions.special.gamma_functions import gamma\nfrom sympy.functions.special.polynomials import binomial\nfrom sympy.functions.special.zeta_functions import zeta\nfrom sympy.solvers.solvers import solve\nfrom sympy.core.numbers import Number\nfrom sympy.core.symbol import Symbol\n\nf = exp(3*x**2 - floor(x)**2 - 1) + binomial(22 + 735235*floor(x)**2, 2356) + gamma(floor(x)**2 + 1) + 72*x**4 + 3*x**3 - 6*x**2 + 2*x + 1\ng = exp(3*x**2 - floor(x)**2 - 1) + binomial(22 + 735235*floor(x)**2, 2356) + gamma(floor(x)**2 + 1) + 72*x**4 + 4*x**3 - 11*x**2 - 6*x + 13\n\nsolution = solve(f - g, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 596,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "44.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "pile1 = 20 - 3\npile2 = 20 + 2\npile3 = 20 - 2\npile4 = 2 * pile2\nprint(pile4)"
  },
  {
    "example_id": 597,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0",
      "1.0",
      "1.0",
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "p, q = symbols('p q')\neq = (1/p) + (1/q) - 1\nsolution = solve(eq, p)\np_value = solution[0]\nsolution = solve(eq, q)\nq_value = solution[0]\nprint((p_value - 1)*(q_value - 1))"
  },
  {
    "example_id": 598,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.189207115002721"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "f = lambda x: 2**x\nf_inverse = lambda x: 2**(-x)\nf_inverse_of_two = f_inverse(2)\nf_of_f_inverse_of_two = f(f_inverse_of_two)\nprint(f_of_f_inverse_of_two)"
  },
  {
    "example_id": 599,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "6.0",
      "7.0",
      "8.0",
      "9.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "for t in range(1, 10):\n    if (t**0.5) > 2 and (t**0.5) < 3.5:\n        print(t)"
  },
  {
    "example_id": 600,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "16.0",
      "3.0",
      "3.0",
      "2.0",
      "4.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "import sympy\nx, y = sympy.symbols('x, y')\n\n# Solve the first equation for x\nx = (3*y + 8) / 2\n\n# Substitute x into the second equation\ny = (-4*x - 3*y) / 3\n\n# Find the product of x and y\nproduct = x * y\n\nprint(product)"
  },
  {
    "example_id": 601,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "0.0",
      "0.0",
      "0.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\nd = symbols('d')\n\neq1 = a + 3*b + c/3\neq2 = a + 2*c/3\neq3 = b + c + d\neq4 = a*b*c*d\n\nsolution = solve([eq1, eq2, eq3, eq4], [a, b, c, d])\n\na_value = solution[0][0]\nb_value = solution[0][1]\nc_value = solution[0][2]\nd_value = solution[0][3]\n\nprint(a_value)\nprint(b_value)\nprint(c_value)\nprint(d_value)"
  },
  {
    "example_id": 602,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "from sympy import sqrt\na = 2/(sqrt(4)+sqrt(32))\nprint(a)"
  },
  {
    "example_id": 603,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3125.0"
    ],
    "annotated_answers": [
      "3125.0"
    ],
    "solution": "print(5**3 * 5**2)"
  },
  {
    "example_id": 604,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "41.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq = (c**2 - (a**2 + b**2))/((b-a)*(c-a))\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 605,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1100.0"
    ],
    "annotated_answers": [
      "350.0"
    ],
    "solution": "n = 6\na = 100\nd = 200\nx = a + (n - 1) * d\nprint(x)"
  },
  {
    "example_id": 606,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\neq = (x-3)/(2*x**2-8*x+7)\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 607,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.0",
      "10.0",
      "8.0",
      "10.0"
    ],
    "annotated_answers": [
      "143.0"
    ],
    "solution": "# Define variables\nn = symbols('n')\na = floor(n/10)\nb = floor(n%10)\nc = a + b\nd = 10*(b-a)\ne = n - d\nf = 10*(a-b)\ng = a + f\nh = b + g\ni = c + d\nj = e + h\nk = i + j\nl = k\nm = l\nprint(m)"
  },
  {
    "example_id": 608,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "52.0"
    ],
    "annotated_answers": [
      "52.0"
    ],
    "solution": "x1, y1 = 1, -2\nx2, y2 = -4, 10\n\n# Calculate the length of sides of the square\nside_length = sqrt(pow(x2 - x1, 2) + pow(y2 - y1, 2))\n\n# Calculate the perimeter of the square\nperimeter = 4 * side_length\nprint(\"The perimeter of the square is:\", perimeter)"
  },
  {
    "example_id": 609,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-7.0",
      "1.0"
    ],
    "annotated_answers": [
      "-16.0"
    ],
    "solution": "a = symbols('a')\neq = a**2 + 6*a - 7\nsolution = solve(eq, a)\nprint(solution)"
  },
  {
    "example_id": 610,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25.0"
    ],
    "annotated_answers": [
      "-120.0"
    ],
    "solution": "k = symbols('k')\narea = 20\n\n# find the upper bound of k\nupper = ceil(sqrt(area*2/3))\n\n# find the lower bound of k\nlower = floor(sqrt(area*2/3))\n\n# find the sum of all possible integral values of k\nsum = 0\nfor i in range(int(lower), int(upper)+1):\n    sum += pow(i, 2)\nprint(sum)"
  },
  {
    "example_id": 611,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "80.0",
      "4.0",
      "80.0",
      "20.0",
      "80.0",
      "4.0"
    ],
    "annotated_answers": [
      "63.0"
    ],
    "solution": "# Define the number of ligs in one lags\nlags_to_ligs = 4\n\n# Define the number of lags in one lugs\nlugs_to_lags = 20\n\n# Define the number of ligs in one lugs\nligs_to_lugs = 1/lugs_to_lags\n\n# Define the number of lags in one lig\nligs_to_lags = 1/lags_to_ligs\n\n# Define the number of ligs equivalent to 80 lugs\nligs_equivalent_to_80_lugs = 80*ligs_to_lugs\n\n# Define the number of lags equivalent to 80 ligs\nlags_equivalent_to_80_ligs = 80*ligs_to_lags\n\n# Define the number of lugs equivalent to 80 ligs\nlugs_equivalent_to_80_ligs = 80*ligs_to_lugs\n\n# Print the number of ligs equivalent to 80 lugs\nprint('The number of ligs equivalent to 80 lugs is: {}'.format(ligs_equivalent_to_80_lugs))\n\n# Print the number of lags equivalent to 80 ligs\nprint('The number of lags equivalent to 80 ligs is: {}'.format(lags_equivalent_to_80_ligs))\n\n# Print the number of lugs equivalent to 80 ligs\nprint('The number of lugs equivalent to 80 ligs is: {}'.format(lugs_equivalent_to_80_ligs))"
  },
  {
    "example_id": 612,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "7.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq = x**2 + y**2 - 6*x + 8*y - 24\npt = (-3, -12)\nd = sqrt((pt[0] - x)**2 + (pt[1] - y)**2)\nprint(d)"
  },
  {
    "example_id": 613,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "10.0",
      "4.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "x = symbols('x')\neq = Eq((4*x+2)**2, 10)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 614,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.0",
      "25.0",
      "5.0",
      "2.0",
      "12.0",
      "25.0",
      "5.0",
      "2.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a = symbols('a')\nx = symbols('x')\neq = a*x**2 + 5*x - 3\nsolution = solve(eq, x)\nroot1 = solution[0]\nroot2 = solution[1]\nroot_diff = abs(root1 - root2)\nroot_diff_value = root_diff.evalf()\nprint(root_diff_value)"
  },
  {
    "example_id": 615,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "51.0"
    ],
    "annotated_answers": [
      "23.0"
    ],
    "solution": "a = 3\nb = -24\nc = 72\nprint(a+b+c)"
  },
  {
    "example_id": 616,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "n = symbols('n')\neq = Eq((2**3)**4, 2**n)\nsolution = solve(eq, n)\nprint(solution)"
  },
  {
    "example_id": 617,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "2.0",
      "49.0",
      "2.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\neq1 = a*b - 7\neq2 = a + b - 5\neq1 = solve(eq1, a)\neq2 = solve(eq2, b)\na_value = eq1[0]\nb_value = eq2[0]\nprint(a_value**2 + b_value**2)"
  },
  {
    "example_id": 618,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "243.9"
    ],
    "annotated_answers": [
      "221.0"
    ],
    "solution": "# Define the variables\nweight_at_beginning_of_workouts = 244\nweight_loss_per_week = 0.01\n\n# Define the weight at the end of the ten weeks\nten_weeks = 10\nweight_at_end_of_ten_weeks = weight_at_beginning_of_workouts - (weight_loss_per_week * ten_weeks)\n\n# Print the weight at the end of the ten weeks\nprint(\"The weight at the end of the ten weeks is:\", weight_at_end_of_ten_weeks)"
  },
  {
    "example_id": 619,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "800.0"
    ],
    "annotated_answers": [
      "800.0"
    ],
    "solution": "print(102**2 - 98**2)"
  },
  {
    "example_id": 620,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0",
      "5.0",
      "5.0",
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "# Initialize variables\na, b = symbols('a, b')\n# Define equation\neq = Eq(a*b, 5*a + 5*b)\n# Solve for a\nsolution = solve(eq, a)\na_value = solution[0]\n# Print a value\nprint(a_value)\n# Solve for b\nsolution = solve(eq, b)\nb_value = solution[0]\n# Print b value\nprint(b_value)"
  },
  {
    "example_id": 621,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-9.0",
      "3.0",
      "10.0"
    ],
    "annotated_answers": [
      "90.0"
    ],
    "solution": "x = symbols('x')\neq = (x**2 + 18*x - 9)\nsolution = solve(eq, x)\nc_value = solution[0]\nprint(c_value)"
  },
  {
    "example_id": 622,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-14.0",
      "8.0"
    ],
    "annotated_answers": [
      "-6.0"
    ],
    "solution": "x = symbols('x')\neq1 = Eq((x+3)**2, 121)\nsolution = solve(eq1, x)\nprint(solution)"
  },
  {
    "example_id": 623,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "16.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "x = symbols('x')\neq = Eq((4**5) + (4**5) + (4**5) + (4**5), (x**3))\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 624,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "1.0"
    ],
    "solution": ""
  },
  {
    "example_id": 625,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "-128.0"
    ],
    "solution": "x = symbols('x')\neq = abs(x - 4) - 10 == 2\nsolution = solve(eq, x)\nx_values = []\nfor x_value in solution:\n    x_values.append(x_value)\nx_values = set(x_values)\nproduct = 1\nfor x_value in x_values:\n    product *= x_value\nprint(product)"
  },
  {
    "example_id": 626,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "# Define the function\ndef hyperbola_lattice_points(a, b, c):\n    '''\n    a, b, c are parameters of the hyperbola\n    x^2 - y^2 = a\n    x^2 - y^2 = b\n    x^2 - y^2 = c\n    '''\n    # Define the function\n    def f(x, y):\n        return x**2 - y**2\n\n    # Define the interval\n    x_interval = (floor(-sqrt(a) + 1), ceil(sqrt(a) + 1))\n    y_interval = (floor(-sqrt(a) + 1), ceil(sqrt(a) + 1))\n\n    # Initialize the counter\n    count = 0\n\n    # Loop over the interval\n    for x in range(x_interval[0], x_interval[1] + 1):\n        for y in range(y_interval[0], y_interval[1] + 1):\n            # Check if the point is on the hyperbola\n            if f(x, y) == 17:\n                count += 1\n\n    return count\n\n# Test the function\nprint(hyperbola_lattice_points(17, 0, 0))"
  },
  {
    "example_id": 627,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "449.0",
      "225000.0",
      "449.0"
    ],
    "annotated_answers": [
      "350.0"
    ],
    "solution": "# Symbols\nx = symbols('x')\ny = symbols('y')\n\n# Equation\neq = x + 5 * y\n\n# Objective\nobj = x * 450 - 500 * 450\n\n# Solve\nsolution = solve(Eq(eq, obj), x)\n\n# Print\nprint(solution)"
  },
  {
    "example_id": 628,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "18.0",
      "18.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "# Define symbols\ncookies = symbols('cookies')\nbrownies = symbols('brownies')\ncupcakes = symbols('cupcakes')\n\n# Define equations\neq_cookies = 6*cookies == 2*brownies\neq_brownies = 4*brownies == 10*cupcakes\n\n# Define price of 18 cookies\nprice = 18*cookies\n\n# Define solution\nsolution = solve([eq_cookies, eq_brownies], [cookies, brownies, cupcakes])\n\n# Print solution\nprint(solution)\n\n# Calculate Bob's price\nbob_price = price.subs(solution)\n\n# Print Bob's price\nprint(bob_price)\n\n# Calculate Bob's price\nbob_price = price.subs(solution)\n\n# Print Bob's price\nprint(bob_price)"
  },
  {
    "example_id": 629,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "time = 36 / 18\nprint(time)"
  },
  {
    "example_id": 630,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "81.0",
      "9.0",
      "2.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nx = symbols('x')\nf = a*x**4-b*x**2+x+5\nf_value = f.subs({x:-3})\nprint(f_value)"
  },
  {
    "example_id": 631,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "3.0",
      "5.0",
      "4.0",
      "1.0",
      "4.0",
      "4.0",
      "3.0",
      "5.0",
      "4.0"
    ],
    "annotated_answers": [
      "-5.0"
    ],
    "solution": "# k = symbols('k')\nk = symbols('k')\nx = symbols('x')\ny = symbols('y')\n\n# Define equations\neq1 = y - 2*x**2 - k*x - 6\neq2 = y + x - 4\n\n# Define system of equations\nsystem = [eq1, eq2]\n\n# Solve system of equations\nsolution = solve(system, [x, y])\n\n# Print solutions\nprint(solution)"
  },
  {
    "example_id": 632,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "174.0"
    ],
    "annotated_answers": [
      "174.0"
    ],
    "solution": "A, B = symbols('A B')\neq1 = Eq(2/5, A/60)\neq2 = Eq(60/B, A/60)\nsolution = solve([eq1, eq2], [A, B])\nA_value = solution[0][0]\nB_value = solution[0][1]\nprint(A_value + B_value)"
  },
  {
    "example_id": 633,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "1.0"
    ],
    "annotated_answers": [
      "30.0"
    ],
    "solution": "a, b = symbols('a, b')\neq = Eq((a**b+b), (1*2)*3)\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 634,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "64.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "697.0"
    ],
    "solution": "# find abc\na, b, c = symbols('a b c')\nabc = (4**a)*(b**(a-1))*(c**(a-1))\nabc_value = abc.subs(a, 3)\nprint(abc_value)\n\n\n# find bc\nbc = (b**2-c**2)/(b-c)\nbc_value = bc.subs(b, 5)\nprint(bc_value)\n\n\n# find ac\nac = (a**2-c**2)/(a-c)\nac_value = ac.subs(c, 5)\nprint(ac_value)\n\n\n# find ab\nab = (a**2-b**2)/(a-b)\nab_value = ab.subs(a, 4)\nprint(ab_value)"
  },
  {
    "example_id": 635,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "55.0"
    ],
    "annotated_answers": [
      "55.0"
    ],
    "solution": "def f(x):\n    return x - floor(sqrt(x))**2\n\nsum = 0\nfor i in range(101, 111):\n    sum += f(i)\nprint(sum)"
  },
  {
    "example_id": 636,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-9.0"
    ],
    "annotated_answers": [
      "363.0"
    ],
    "solution": "# Sam tells her three friends\nnum_friends = 3\n\n# Each friend tells three friends\nnum_friends_per_friend = 3\n\n# Number of cycles\nnum_cycles = 5\n\n# Calculate total number of people\n# Not including Sam\ntotal_people = num_friends * num_friends_per_friend\n\n# Calculate number of people\n# Not including Sam in the first cycle\n# i.e. Sam tells her three friends\ntotal_people -= num_friends\n\n# Calculate number of people\n# Not including Sam in each subsequent cycle\n# i.e. each friend tells three friends\ntotal_people -= num_friends_per_friend * num_cycles\n\n# Print number of people\n# Not including Sam\nprint(total_people)"
  },
  {
    "example_id": 637,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "-128.0"
    ],
    "solution": "# define variables\nx = symbols('x')\n# expand the product\nexpanded_product = (x-2)**2 * (x+2)**2\n# calculate the product of the nonzero coefficients\ncoefficients_product = 0\nfor term in expanded_product.args:\n    if term!= 1:\n        coefficients_product *= term\nprint(coefficients_product)"
  },
  {
    "example_id": 638,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "4.0",
      "3.0",
      "3.0",
      "3.0",
      "2.0",
      "8.0",
      "1.0",
      "8.0",
      "4.0",
      "2.0",
      "3.0",
      "7.0",
      "2.0",
      "3.0",
      "4.0"
    ],
    "annotated_answers": [
      "37.0"
    ],
    "solution": "x = symbols('x')\neq1 = 7*x**4 - 3*x**3 - 3*x**2 - 8*x + 1\neq2 = 8*x**4 + 2*x**3 - 7*x**2 + 3*x + 4\neq = eq1*eq2\nprint(eq)"
  },
  {
    "example_id": 639,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "f = 3*2**3 - 9*2 + 3\nprint(f)"
  },
  {
    "example_id": 640,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "72.0"
    ],
    "solution": ""
  },
  {
    "example_id": 641,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-15.0"
    ],
    "annotated_answers": [
      "-9.0"
    ],
    "solution": "f = lambda x: 2*x - 3\ng = lambda f_x: 5 - 4*f_x\nprint(g(f(4)))"
  },
  {
    "example_id": 642,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-25.0"
    ],
    "annotated_answers": [
      "-25.0"
    ],
    "solution": "# define function\ndef f(x):\n    if x < -3:\n        return 3*x + 5\n    else:\n        return 7 - 4*x\n\n# find value of function at x=-10\nprint(f(-10))"
  },
  {
    "example_id": 643,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "56.0"
    ],
    "annotated_answers": [
      "-13.0"
    ],
    "solution": "# Define the arithmetic sequence\na_1 = 1\nd = 5\nn = 12\n\n# Define the terms\na_n = a_1 + (n-1)*d\n\n# Find the twelfth term\nprint(a_n)"
  },
  {
    "example_id": 644,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "192.0",
      "2.0",
      "2.0",
      "2.0",
      "192.0",
      "2.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "x = symbols('x')\nb = symbols('b')\neq = x**2 + b*x + 48\nsolution = solve(eq, x)\nx_value_1 = solution[0]\nx_value_2 = solution[1]\nprint(x_value_1/x_value_2)\nprint(b)"
  },
  {
    "example_id": 645,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "112.0",
      "2.0",
      "1.0",
      "3.0",
      "35.0",
      "9.0",
      "234909033.0",
      "137941.0",
      "1.0"
    ],
    "annotated_answers": [
      "567.0"
    ],
    "solution": "a = symbols('a')\neq = a*(a-1)*(a-2)*(a-3)*(a-4)*(a-5) - 5103\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 646,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "3.0",
      "2.0",
      "3.0",
      "3.0",
      "18.0",
      "3.0",
      "3.0",
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\neq = (a*sqrt(2) + b*sqrt(3) + c*sqrt(6))**3 - (sqrt(2)+sqrt(3))**3\nsolution = solve(eq, a)\na_value = solution[0]\nsolution = solve(eq, b)\nb_value = solution[0]\nsolution = solve(eq, c)\nc_value = solution[0]\nprint(a_value+b_value+c_value)"
  },
  {
    "example_id": 647,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0",
      "1.0",
      "1.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "a = 8/3\nb = 8/3\nc = 2\n\nabc = a*b*c\nab = a*b\nac = a*c\nbc = b*c\n\nabc_prime = 1\nab_prime = 1\nac_prime = 1\nbc_prime = 1\n\nwhile abc_prime!= 1:\n    abc_prime = abc_prime*a + abc_prime*b + abc_prime*c\n    ab_prime = ab_prime*a + ab_prime*b\n    ac_prime = ac_prime*a + ac_prime*c\n    bc_prime = bc_prime*b + bc_prime*c\n\nprint(abc_prime)\nprint(ab_prime)\nprint(ac_prime)\nprint(bc_prime)"
  },
  {
    "example_id": 648,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "a, b, c = symbols('a b c')\ns = Eq(a**2 + b**2, c**2)\nsolution = solve(s, c)\nc_value = solution[0]\nprint(c_value)"
  },
  {
    "example_id": 649,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "495.0"
    ],
    "annotated_answers": [
      "495.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\n\nsum_odd = 0\nfor i in range(46, 65):\n    if i % 2 == 1:\n        sum_odd += i\n\nprint(sum_odd)"
  },
  {
    "example_id": 650,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "10.0",
      "3.0",
      "7.0",
      "6.0",
      "3.0",
      "4.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "from sympy import symbols, Poly\nx = symbols('x')\np = Poly(3*x**10 - 3*x**7 + 2*x**3 - x + 7 + 4*x**3 - 4*x**2 - 5)\nprint(p.as_expr())"
  },
  {
    "example_id": 651,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "from sympy import symbols, solve\nx, y = symbols('x y')\neq = x - y**2 + 4*y - 4\nsolution = solve(eq, y)\nprint(len(solution))"
  },
  {
    "example_id": 652,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0",
      "9.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "a, b = symbols('a, b')\neq1 = 5*a + 4*b - 5\neq2 = 3*a + 2*b - 3\nsol1 = solve(eq1, a)\nsol2 = solve(eq2, b)\na_value = sol1[0]\nb_value = sol2[0]\nprint(6*b_value)"
  },
  {
    "example_id": 653,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "print(abs(-3 + 2 * -4))"
  },
  {
    "example_id": 654,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.0",
      "35.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = x + y - 12\neq2 = x * y - 35\nsol1 = solve(eq1, x)\nsol2 = solve(eq2, y)\n\nprint(sol1)\nprint(sol2)"
  },
  {
    "example_id": 655,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "31500.0"
    ],
    "annotated_answers": [
      "1050.0"
    ],
    "solution": "num_days = 7\nnum_minutes = 30\ncalories = 150\ntotal_calories = calories * num_minutes * num_days\nprint(total_calories)"
  },
  {
    "example_id": 656,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "1.0",
      "2.0",
      "1.0",
      "4.0",
      "-1.0",
      "2.0",
      "2.0",
      "-1.0",
      "2.0",
      "1.0",
      "4.0",
      "-1.0",
      "2.0",
      "2.0",
      "-1.0",
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = 4*y - 4*x**2 - 1\neq2 = 4*x - 4*y**2 - 1\nsolution = solve([eq1, eq2], [x, y])\nprint(solution)"
  },
  {
    "example_id": 657,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-17.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "j, k, l = symbols('j k l')\neq1 = j*k - 24\neq2 = j*l - 48\neq3 = k*l - 18\nsolution = solve([eq1, eq2, eq3], [j, k, l])\nj_value, k_value, l_value = solution[0]\nprint(j_value + k_value + l_value)"
  },
  {
    "example_id": 658,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "64.0",
      "118.0",
      "2.0",
      "5.0",
      "96.0"
    ],
    "annotated_answers": [
      "79.0"
    ],
    "solution": "from sympy import sqrt, pi, floor, ceiling, symbols\n\nx = symbols('x')\nf = sqrt(8)**(-1)*floor(sqrt(8))**2 + pi**(-1)*ceiling(pi)**2 + sqrt(50)**(-1)*floor(sqrt(50))**2 + sqrt(9)/2**(-1)*ceiling(sqrt(9)/2)**2\nf_value = f.subs(x, sqrt(3)*(-8)**(1/3)) + f.subs(x, -pi) + f.subs(x, sqrt(50)) + f.subs(x, 9/2)\nprint(f_value)"
  },
  {
    "example_id": 659,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "a = -4\nb = 8\nanswer = a + b\nprint(answer)"
  },
  {
    "example_id": 660,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0"
    ],
    "annotated_answers": [
      "26.0"
    ],
    "solution": "x = symbols('x')\neq1 = Eq((3/x), (1/3))\neq2 = Eq((3/x), (3/4))\nsol1 = solve(eq1, x)\nsol2 = solve(eq2, x)\nsolution = []\nfor sol in sol1:\n    if sol > sol2[0]:\n        solution.append(sol)\nfor sol in sol2:\n    if sol > sol1[0]:\n        solution.append(sol)\nprint(sum(solution))"
  },
  {
    "example_id": 661,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "220.0"
    ],
    "annotated_answers": [
      "220.0"
    ],
    "solution": "student_in_school = 480\nstudent_in_class = 24\nred_student_in_class = 11\n\nred_student_in_school = red_student_in_class * student_in_school // student_in_class\nprint(red_student_in_school)"
  },
  {
    "example_id": 662,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "257.0",
      "256.0",
      "255.0",
      "254.0",
      "253.0",
      "252.0",
      "251.0",
      "250.0",
      "249.0",
      "248.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "# Define variables\ni = symbols('i')\nn = 258\n\n# Compute sum\nsum = 0\nfor k in range(0, n):\n    sum += i**k\n\nprint(sum)"
  },
  {
    "example_id": 663,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.000000000000002"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "def f(x):\n    return x**2\n\ndef f_inv(x):\n    return x**(1/2)\n\nprint(f(f_inv(10)))"
  },
  {
    "example_id": 664,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "# define f(x) = x^2-3\nf = lambda x: x**2 - 3\n# define t(x) = 9 + 2f(x)\nt = lambda x: 9 + 2*f(x)\n# evaluate t(f(-2))\nprint(t(f(-2)))"
  },
  {
    "example_id": 665,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "0.0"
    ],
    "annotated_answers": [
      "66.0"
    ],
    "solution": "x = symbols('x')\neq = Eq(((x**2) - (4*x)) + 4, 16**(1/3))\nsolution = solve(eq, x)\nsolution = [ceil(solution[0]), floor(solution[0])]\nprint(solution)"
  },
  {
    "example_id": 666,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x, y = symbols('x y')\nc = x**2 + y**2 - 4*x - 8*y\np = 5*x - 2*y\nd = sqrt(c.subs({x: 5, y: -2}) - p.subs({x: 5, y: -2}))\nm = int(floor(d.evalf()))\nprint(m)"
  },
  {
    "example_id": 667,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.5"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x1 = 3\ny1 = 5\nx2 = -10\ny2 = 4\n\n# find the midpoint of their current locations\nmidx = (x1 + x2)/2\nmidy = (y1 + y2)/2\n\n# print the positive difference in the x-coordinates of where they agreed to meet and where they should actually meet\nprint(abs(midx - x1))"
  },
  {
    "example_id": 668,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "from sympy import symbols, solve, diff\n\nx = symbols('x')\ny = x**2 - 6*x + 13\nsolution = solve(y, x)\nprint(solution)"
  },
  {
    "example_id": 669,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "400.0"
    ],
    "annotated_answers": [
      "400.0"
    ],
    "solution": "print(19**2 + 2*19 + 1)"
  },
  {
    "example_id": 670,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "11.0",
      "3.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "n = symbols('n')\nm = symbols('m')\neq1 = 3*n + m - 14\neq2 = n + m - 1\nsolution1 = solve(eq1, n)\nsolution2 = solve(eq2, m)\nn_value = solution1[0]\nm_value = solution2[0]\nprint(n_value - m_value)"
  },
  {
    "example_id": 671,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0",
      "2.0",
      "4.0",
      "8.0",
      "2.0",
      "4.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x, y = symbols('x y')\neq = x**2 + 8*x + y**2 - 6*y\nsolution = solve(eq, x, y)\nprint(solution)"
  },
  {
    "example_id": 672,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "36.0"
    ],
    "annotated_answers": [
      "324.0"
    ],
    "solution": "# find the difference between two consecutive perfect squares\ndiff = 35\n\n# find the greater of the two squares\ngreater = diff + 1\n\n# print the greater of the two squares\nprint(greater)"
  },
  {
    "example_id": 673,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0"
    ],
    "annotated_answers": [
      "-7.0"
    ],
    "solution": "# Declare symbols\nx = symbols('x')\np = 2 - x**2\nq = 6 / x\n\n# Find the value of p(q(2))\np_of_q = p.subs(x, q)\nq_of_2 = q.subs(x, 2)\np_of_q_of_2 = p_of_q.subs(x, q_of_2)\nprint(p_of_q_of_2)"
  },
  {
    "example_id": 674,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "def pick_numbers(n, r):\n    k = 0\n    for i in range(1, n+1):\n        if i % r == 0:\n            k += 1\n    return k\n\nprint(pick_numbers(100, 10))"
  },
  {
    "example_id": 675,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "0.125",
      "2.0",
      "2.0",
      "0.25",
      "2.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "# Define the parabolas\nx1 = symbols('x1')\ny1 = x1**2 + 4*x1 + 6\n\nx2 = symbols('x2')\ny2 = 0.5*x2**2 + x2 + 6\n\n# Find the intersection\nsolution = solve([Eq(y1, y2)], [x1, x2])\n\n# Find the difference\ndifference = solution[0][1] - solution[0][0]\n\n# Print the difference\nprint(difference)"
  },
  {
    "example_id": 676,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "f = {1: 2, 4: 3, 7: 4}\nf_inv = {2: 1, 3: 4, 4: 7}\n\nprint(f_inv[f_inv[3]])"
  },
  {
    "example_id": 677,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "46.0"
    ],
    "annotated_answers": [
      "50.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\nz = symbols('z')\na = symbols('a')\nb = symbols('b')\nc = symbols('c')\nd = symbols('d')\ne = symbols('e')\nf = symbols('f')\ng = symbols('g')\nh = symbols('h')\ni = symbols('i')\nj = symbols('j')\nk = symbols('k')\nl = symbols('l')\nm = symbols('m')\nn = symbols('n')\no = symbols('o')\np = symbols('p')\nq = symbols('q')\nr = symbols('r')\ns = symbols('s')\nt = symbols('t')\nu = symbols('u')\nv = symbols('v')\nw = symbols('w')\nx = symbols('x')\ny = symbols('y')\nz = symbols('z')\n\ntotal = 0\nfor i in range(1,19):\n    total += floor(sqrt(i))\n\nprint(total)"
  },
  {
    "example_id": 678,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "21.0"
    ],
    "solution": "a = 1\nb = 1\nwhile True:\n    if a % b**2 == 0:\n        break\n    a += 1\n    b += 1\nprint(a+b)"
  },
  {
    "example_id": 679,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "46.0"
    ],
    "annotated_answers": [
      "56.0"
    ],
    "solution": "n_questions = 100\npoints_per_question = 5\npoints_per_incorrect_answer = -2\npoints_per_not_answered = 0\ntotal_points = 232\n\ncorrect_questions = total_points // points_per_question\nprint(correct_questions)"
  },
  {
    "example_id": 680,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "30.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "a, b = 5 - 1, 5 + 1\nh = lambda x: a*x + b\nprint(h(6))"
  },
  {
    "example_id": 681,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = Eq(x + y, 3)\neq2 = Eq(x - y, 4)\nsol1 = solve(eq1, x)\nsol2 = solve(eq2, y)\nx_value = sol1[0]\ny_value = sol2[0]\nprint(2*x_value**2 + 2*y_value**2)"
  },
  {
    "example_id": 682,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.25"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "laps = 10 * 250 / 400\nprint(laps)"
  },
  {
    "example_id": 683,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "3.0",
      "17.0",
      "1.0",
      "3.0",
      "2.0",
      "3.0",
      "3.0",
      "3.0",
      "17.0"
    ],
    "annotated_answers": [
      "51.0"
    ],
    "solution": "# Define variables\na, b, c = symbols('a, b, c')\n\n# Define the equation\neq = a**3 + b**3 + c**3 - 17\n\n# Solve for the variables\nsolution = solve(eq, a, b, c)\n\n# Print the solution\nprint(solution)"
  },
  {
    "example_id": 684,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "15.0",
      "4.0",
      "2.0",
      "15.0"
    ],
    "annotated_answers": [
      "-22.0"
    ],
    "solution": "# solve for x\nx = symbols('x')\nsol = solve(2*x**2 - 10*x + 5, x)\n\n# find a and b\na = sol[0]\nb = sol[1]\n\n# compute the expression\nexpr = (2*a - 3)*(4*b - 6)\nprint(expr)"
  },
  {
    "example_id": 685,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "f = lambda x: sqrt(3*x) + 2\nprint(f(0) + f(3))"
  },
  {
    "example_id": 686,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.4551915228366852",
      "25.0"
    ],
    "annotated_answers": [
      "125.0"
    ],
    "solution": "x = 5\nresult = reduce(lambda a, b: a * b, [x**n for n in range(1, 13)])\nresult /= reduce(lambda a, b: a * b, [x**n for n in range(2, 13, 2)])\nprint(result)"
  },
  {
    "example_id": 687,
    "selected_mode": "import",
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-5.0"
    ],
    "solution": "x = symbols('x')\nf = 2*x + 1\ng = -3\nf_g = f(g(x))\nprint(f_g)"
  },
  {
    "example_id": 688,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "8.0",
      "3.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "1.0",
      "3.0",
      "8.0"
    ],
    "annotated_answers": [
      "98.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq = (8*a**3 - 3*a**2 - 3*a - 1)/(c**3)\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 689,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25.0",
      "24.0"
    ],
    "annotated_answers": [
      "600.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\nz = symbols('z')\n\neq = (1/x) + (1/y) - (1/z)\n\nsolution = solve(eq, y)\n\n# print(solution)\n\ny_value = solution[0]\n\nprint(y_value)\n\nx_value = 25\n\nz_value = 24\n\nprint('x = {0}, y = {1}, z = {2}'.format(x_value, y_value, z_value))"
  },
  {
    "example_id": 690,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "115.0",
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq = 3*x + 2*y + x*y - 115\nsolution = solve(eq, x, y)\nx_value = solution[0][0]\ny_value = solution[0][1]\nprint(x_value + y_value)"
  },
  {
    "example_id": 691,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "4624.0"
    ],
    "solution": "# Define variables\nn = 0\nm = 0\n\n# Define function\ndef is_even(n):\n    return n % 2 == 0\n\n# Define function\ndef is_perfect_square(n):\n    return math.sqrt(n).is_integer()\n\n# Define function\ndef consecutive_perfect_squares(n):\n    perfect_squares = [1]\n    for i in range(1, n):\n        perfect_squares.append(perfect_squares[i-1] + 1)\n    return perfect_squares\n\n# Find the larger of the two squares\nconsecutive_perfect_squares = consecutive_perfect_squares(100)\nfor i in range(len(consecutive_perfect_squares)):\n    if consecutive_perfect_squares[i] - consecutive_perfect_squares[i-1] == 268:\n        n = consecutive_perfect_squares[i]\n        m = consecutive_perfect_squares[i-1]\n        break\n\n# Print the larger square\nprint(max(n, m))"
  },
  {
    "example_id": 692,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-8.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a = symbols('a')\neq = (3*a - 2*a) + 8\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 693,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "1.0",
      "3.0",
      "1.0",
      "2.0",
      "1.0",
      "3.0",
      "2.0",
      "1.0"
    ],
    "annotated_answers": [
      "40.0"
    ],
    "solution": "from sympy import Symbol, solve, sqrt\n\n# Define the coordinates of the points\nA = (Symbol('x1'), Symbol('y1'))\nB = (Symbol('x2'), Symbol('y2'))\nC = (Symbol('x3'), Symbol('y3'))\n\n# Define the equations of the lines\nline1 = (A[0] - B[0])*(C[0] - B[0]) + (A[1] - B[1])*(C[1] - B[1])\nline2 = (B[0] - C[0])*(A[0] - C[0]) + (B[1] - C[1])*(A[1] - C[1])\nline3 = (C[0] - A[0])*(B[0] - A[0]) + (C[1] - A[1])*(B[1] - A[1])\n\n# Find the perimeter of the polygon\nperimeter = sqrt(line1**2 + line2**2 + line3**2)\n\n# Print the answer\nprint(perimeter)"
  },
  {
    "example_id": 694,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "13.0",
      "2.0",
      "5.0",
      "2.0",
      "3.0",
      "5.0",
      "2.0",
      "13.0",
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "78.0"
    ],
    "solution": "x = symbols('x')\na, b, c = symbols('a, b, c')\neq1 = Eq(x*(x-3), 1)\neq2 = Eq(x**2 - 3*x + 1, 0)\nsol1 = solve(eq1, x)\nsol2 = solve(eq2, x)\nsol1_a = sol1[0]\nsol1_b = sol1[1]\nsol2_a = sol2[0]\nsol2_b = sol2[1]\na = sol1_a + sol2_a\nb = sol1_b + sol2_b\nc = sol1_a*sol2_a - sol1_b*sol2_b\nprint(a, b, c)"
  },
  {
    "example_id": 695,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-8.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "a = -1\nb = 8\nc = 49\nab = a*b\nprint(ab)"
  },
  {
    "example_id": 696,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2905.0",
      "16.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "# Solve for y^2\ny = symbols('y')\neq = 6*y**2 - y - 51\nsolution = solve(eq, y)\ny_value = solution[0]\n\n# Find the values of A, B, and C\nA = 3*y_value + 1\nB = -3*y_value - 1\nC = -y_value - 1\n\n# Find AC\nAC = A*C\n\n# Find AC^2 - B\nAC_squared = AC**2\nAC_squared_minus_B = AC_squared - B\nprint(AC_squared_minus_B)"
  },
  {
    "example_id": 697,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "# Letters a through h are nonzero constants.\na, b, c, d, e, f, g, h = symbols('a b c d e f g h')\n\n# Degree of the polynomial\ndegree = 0\n\n# Find degree of the polynomial\nfor i in [a, b, c, d, e, f, g, h]:\n    degree = max(degree, i.degree())\n\nprint(degree)"
  },
  {
    "example_id": 698,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "50.0",
      "45.0",
      "50.0",
      "45.0",
      "-2.0",
      "2.0",
      "2.0",
      "2.0",
      "95.0"
    ],
    "annotated_answers": [
      "255.0"
    ],
    "solution": "a, b, c, d, e = symbols('a b c d e')\n\neq1 = a + b + c + d + e - 50\n\neq2 = (a + 1) + (b + 1) + (c + 1) + (d + 1) + (e + 1) - 50\n\nsol1 = solve(eq1, e)\nsol2 = solve(eq2, e)\n\nprint(sol1)\nprint(sol2)\n\nsol1_e = sol1[0]\nsol2_e = sol2[0]\n\nprint(sol1_e)\nprint(sol2_e)\n\nprint(sol1_e + sol2_e)"
  },
  {
    "example_id": 699,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "4.0",
      "2.0",
      "4.0",
      "2.0",
      "2.0",
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "# Define variables\na = symbols('a')\nb = symbols('b')\nc = symbols('c')\nd = symbols('d')\n\n# Define equations\neq1 = (a**2 + b**2)**2 - 4*(a**2 + b**2)*(c**2 + d**2)\neq2 = (a**2 + b**2)**2 - 4*(c**2 + d**2)\n\n# Solve equations\nsolution1 = solve(eq1, a, b, c, d)\nsolution2 = solve(eq2, a, b, c, d)\n\n# Print solutions\nprint(solution1)\nprint(solution2)"
  },
  {
    "example_id": 700,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "2.0",
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "import sympy as sym\n\n# Create a symbol for each of the variables\nx, a, b, c = sym.symbols(\"x a b c\")\n\n# Create a symbol for each of the variables\ny = a * x ** 2 + b * x + c\n\n# Use sympy to solve for the equation\nsolve = sym.solve(y - 4)\n\n# Use sympy to solve for the equation\nsolve_2 = sym.solve(y - 4)\n\n# Print the solution\nprint(solve)\nprint(solve_2)"
  },
  {
    "example_id": 701,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-6.0"
    ],
    "annotated_answers": [
      "-6.0"
    ],
    "solution": "f = lambda x: (x**2 + 2*x + 3)/x\ng = lambda x: x**3 + 2\nprint(g(f(-3)))"
  },
  {
    "example_id": 702,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5808.0"
    ],
    "annotated_answers": [
      "96.8"
    ],
    "solution": "feet_per_second = 66 * 5280 / 60\nprint(feet_per_second)"
  },
  {
    "example_id": 703,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "108.0"
    ],
    "annotated_answers": [
      "108.0"
    ],
    "solution": "distance = 9 * 12\nprint(distance)"
  },
  {
    "example_id": 704,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "21.0"
    ],
    "annotated_answers": [
      "21.0"
    ],
    "solution": "x = symbols('x')\ny = 2*x - 13\neq = 3*x + y - 92\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 705,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "3.0",
      "2010.0",
      "1.0",
      "3.0",
      "3.0",
      "-1.0",
      "2010.0",
      "1.0",
      "3.0",
      "2.0",
      "-1.0",
      "2010.0",
      "1.0",
      "3.0",
      "3.0"
    ],
    "annotated_answers": [
      "2010.0"
    ],
    "solution": "from sympy import symbols, solve, Eq\nfrom sympy.abc import x\n\nf = x**3 + 3*x**2 + 3*x + 1\nf_inv = solve(Eq(f, 2010), x)\nf_inv_value = f_inv[0]\nf_of_f_inv = f.subs(x, f_inv_value)\nprint(f_of_f_inv)"
  },
  {
    "example_id": 706,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "pressure = 4\nvolume_old = 3.67\nvolume_new = 1.835\npressure_new = pressure / (volume_old / volume_new)\nprint(pressure_new)"
  },
  {
    "example_id": 707,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "100.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "K = symbols('K')\nline = 3*x - 7*y - 65\np1 = (7, 4)\np2 = (0, K)\neq = line.subs(x, p1[0]).subs(y, p1[1])\neq2 = line.subs(x, p2[0]).subs(y, p2[1])\nsolution = solve([eq, eq2], [x, y])\nx_value = solution[0][0]\ny_value = solution[0][1]\nprint(x_value, y_value)"
  },
  {
    "example_id": 708,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-7.0"
    ],
    "annotated_answers": [
      "-7.0"
    ],
    "solution": "x = symbols('x')\neq = (2*x - 1)/(2*x + 2) - (x - 3)/(x - 1)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 709,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0",
      "3.0",
      "12.0",
      "30.0",
      "4.0",
      "15.0"
    ],
    "annotated_answers": [
      "-40.0"
    ],
    "solution": "x, y, a = symbols('x y a')\neq1 = 2*x + 5*y - 8\neq2 = 6*x - 16 + a - 15*y\nsolution = solve([eq1, eq2], [x, y])\nprint(solution)"
  },
  {
    "example_id": 710,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "15.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "degrees_per_hour = 360 / 24\nprint(degrees_per_hour)"
  },
  {
    "example_id": 711,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "n = symbols('n')\neq = (n + (n + 1) + (n + 2) + (n + 3) + (n + 4) + (n + 5) + (n + 6)) - 49\nsolution = solve(eq, n)\nsmallest = solution[0]\nprint(smallest)"
  },
  {
    "example_id": 712,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "20.066939702021237"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "print(2**3**(4/3))"
  },
  {
    "example_id": 713,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "# Define x\nx = symbols('x')\n\n# Define equation\neq = (6**x) + (6**x) + (6**x) + (6**x) + (6**x) + (6**x) - (6**6)\n\n# Find solution\nsolution = solve(eq, x)\n\n# Print solution\nprint(solution)"
  },
  {
    "example_id": 714,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "from math import e\n\ndef smallest_number():\n    for i in range(1, 1000000):\n        if i == i * 2 - 1:\n            return i\n    return e\n\nprint(smallest_number())"
  },
  {
    "example_id": 715,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "28.0"
    ],
    "solution": "# Define variables\ntour_interval = 20\ntour_count = 0\ntime_of_day = 0\n\n# Find the number of tours per day\nwhile time_of_day < 24:\n    tour_count += 1\n    time_of_day += tour_interval\n\nprint(tour_count)"
  },
  {
    "example_id": 716,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-12.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "# Define the first term\na = 2\n\n# Define the sum of the third and sixth terms\nb = 25\n\n# Define the third term\nc = a + 2\n\n# Define the sixth term\nd = a + 5\n\n# Calculate the sum of the third and sixth terms\ne = c + d\n\n# Calculate the difference between the sum and the given sum\nf = e - b\n\n# Calculate the fourth term\ng = a + f\n\n# Print the result\nprint(g)"
  },
  {
    "example_id": 717,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "246.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "x = 243\ny = 3\nprint(x + y)"
  },
  {
    "example_id": 718,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "104.0"
    ],
    "solution": "# define variables\nx1 = symbols('x1')\nx2 = symbols('x2')\n\n# define equations\neq1 = 3*x1**2 - 5*x1 - 3\neq2 = 3*x2**2 - 5*x2 - 3\n\n# find midpoint\nmidpoint = (x1 + x2)/2\n\n# find length of AB\nlength = (x2 - x1)\n\n# find square of length\nsqr = length**2\n\n# find square of length\nprint(sqr)"
  },
  {
    "example_id": 719,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "0.3333333333333333",
      "0.3333333333333333"
    ],
    "annotated_answers": [
      "48.0"
    ],
    "solution": "flicks = 12\nflecks = 8\nflocks = 4\n\nflicks_to_flecks = flicks/flicks\nflecks_to_flocks = flecks/flecks\nflocks_to_flicks = flocks/flicks\n\nsolution_1 = flicks_to_flecks * flecks_to_flocks\nsolution_2 = flicks_to_flecks * flocks_to_flicks\nsolution_3 = flecks_to_flocks * flocks_to_flicks\n\nprint(solution_1, solution_2, solution_3)"
  },
  {
    "example_id": 720,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = log(x-1, 3**2) - 1\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 721,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "623.0",
      "1247.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "a = symbols('a')\neq = (x**2 + a) - (ax)\nsolution = solve(eq)\nprint(solution)"
  },
  {
    "example_id": 722,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "2.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "x = symbols('x')\neq = 10*x**2 - x - 24\nsolution = solve(eq, x)\nAB_plus_B = solution[0]\nprint(AB_plus_B)"
  },
  {
    "example_id": 723,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "y = 12 - 6\nprint(y)"
  },
  {
    "example_id": 724,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.46862696659689"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "r = symbols('r')\neq = (r**2 + r - 15.5)\nsolution = solve(eq, r)\nr_value = solution[0]\nprint(r_value)"
  },
  {
    "example_id": 725,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "# Define variables\nx0, y0, x1, y1, x2, y2, x3, y3 = symbols('x0 y0 x1 y1 x2 y2 x3 y3')\n\n# Define equations\neq1 = Eq(x0, 0)\neq2 = Eq(y0, 0)\neq3 = Eq(x1, 9)\neq4 = Eq(y1, 6)\n\n# Define line segment\neq5 = Eq(x2, x0 + (x1 - x0)/3)\neq6 = Eq(y2, y0 + (y1 - y0)/3)\n\n# Define point\neq7 = Eq(x3, x2)\neq8 = Eq(y3, y2)\n\n# Solve for point\nsolution = solve([eq1, eq2, eq3, eq4, eq5, eq6, eq7, eq8], [x3, y3])\n\n# Print solution\nprint(solution)"
  },
  {
    "example_id": 726,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "print(36 // 7)"
  },
  {
    "example_id": 727,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "r = symbols('r')\neq = (6*r**2 - 19*r - 7)/(2*r-7) - (4*r-3)\nsolution = solve(eq, r)\nr_value = solution[0]\nprint(r_value)"
  },
  {
    "example_id": 728,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-5.999999999999995"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "import numpy as np\na = np.linalg.det([[0, 1, 2], [5, 10, 19], [1, 4, 9]])\nprint(a)"
  },
  {
    "example_id": 729,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "from sympy import symbols, solve\nx, y, D, E, F = symbols('x y D E F')\neq = x**2 + y**2 + D*x + E*y + F\nsolution = solve(eq, [D, E, F])\nprint(solution)"
  },
  {
    "example_id": 730,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "f = lambda x: x + 1\ng = lambda x: 2*x\nf_inv = lambda x: x - 1\ng_inv = lambda x: x/2\n\nf_of_g_inv_of_f_inv_of_f_inv_of_g = f(g_inv(f_inv(f_inv(g(f(5))))))\nprint(f_of_g_inv_of_f_inv_of_f_inv_of_g)"
  },
  {
    "example_id": 731,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "f = lambda x: x**3 - 8\nf_inv = lambda x: (x + 8)**(1/3)\nprint(f_inv(f(f_inv(19))))"
  },
  {
    "example_id": 732,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "n = symbols('n')\ns = n**2 - 2**n + 1\nt = 2*s - s**2\nsolution = solve(t, s)\ns_value = solution[0]\nprint(s_value)"
  },
  {
    "example_id": 733,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "24.0"
    ],
    "solution": "j, k = symbols('j k')\neq = Eq(j, 1/k)\nsolution = solve(eq, k)\nk_value = solution[0]\nprint(k_value)"
  },
  {
    "example_id": 734,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "# Define f(x)\nx = symbols('x')\nf = x**2 + 9\nf2 = 3*x - 8\n\n# Find sum of all possible values of x\nx_range = range(-5, 100)\nsum = 0\nfor x in x_range:\n    if f.subs(x, x).equals(10):\n        sum += x\n    elif f2.subs(x, x).equals(10):\n        sum += x\nprint(sum)"
  },
  {
    "example_id": 735,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "100.0",
      "1.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "# Create variables\na, b, c = symbols('a, b, c')\n\n# Define the equation\neq = Eq(a*b + b*c + c*a, 100)\n\n# Find the solutions\nsolution = solve(eq, [a, b, c])\n\n# Print the solutions\nfor sol in solution:\n    print(sol)\n\n# Print the number of distinct sequences\nprint(len(solution))"
  },
  {
    "example_id": 736,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "24.0"
    ],
    "annotated_answers": [
      "27.0"
    ],
    "solution": "b = symbols('b')\na = 0.5*b\ngrooms_age = 15 + a\nsolution = solve(Eq(grooms_age + b, 51), b)\nb_value = solution[0]\nprint(b_value)"
  },
  {
    "example_id": 737,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "765.0",
      "865.0",
      "1165.0",
      "100.0",
      "100.0",
      "100.0"
    ],
    "annotated_answers": [
      "89.0"
    ],
    "solution": "from sympy import symbols, solve\n\nx, y = symbols('x y')\n\nline = 365 + 100*x\n\nprint(line.subs(x, 4))\n\nprint(line.subs(x, 5))\n\nprint(line.subs(x, 8))\n\nslope = line.diff(x)\n\nprint(slope.subs(x, 4))\n\nprint(slope.subs(x, 5))\n\nprint(slope.subs(x, 8))"
  },
  {
    "example_id": 738,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "num_of_polys = 0\nfor m in range(1, 13):\n    for n in range(1, 13):\n        if (m * m + m + n == 28) and (m * m - n == 0):\n            num_of_polys += 1\nprint(num_of_polys)"
  },
  {
    "example_id": 739,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "def f(x):\n    return 3*f(2*x) + 1\n\npoint = (4,7)\nprint(point[0] + point[1])"
  },
  {
    "example_id": 740,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "1.0",
      "0.0",
      "8.881784197001252",
      "-16.0"
    ],
    "annotated_answers": [
      "-7.0"
    ],
    "solution": "x = symbols('x')\ny = x**2 - 7\n\n# Using solve function\nsolution = solve(Eq(y, 0), x)\n\n# Extract the solution\nsolution = solution[0]\n\n# Print the solution\nprint(solution)\n\n# Calculate the minimum value of y\nprint(solution**2 - 7)\n\n# Calculate the minimum value of y using floor\nprint(floor(solution**2 - 7))\n\n# Calculate the minimum value of y using ceil\nprint(ceil(solution**2 - 7))\n\n# Calculate the minimum value of y using floor\nprint(floor(solution**2 - 7))\n\n# Calculate the minimum value of y using factorial\nprint(factorial(solution**2 - 7))\n\n# Calculate the minimum value of y using sqrt\nprint(sqrt(solution**2 - 7))\n\n# Calculate the minimum value of y using pow\nprint(pow(solution, 2) - 7)"
  },
  {
    "example_id": 741,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\nf = 5*x + 3\ng = x**2 - 2\nf_value = -1\ng_value = g.subs(x, f_value)\nprint(g_value)"
  },
  {
    "example_id": 742,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "18.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x, y = symbols('x y')\neq = x + y - 18\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)\n\n\nx, y = symbols('x y')\neq = x + y - 18\nsolution = solve(eq, y)\ny_value = solution[0]\nprint(y_value)"
  },
  {
    "example_id": 743,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-5.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "x = symbols('x')\nn = 5\nd = 625\nfraction = (n**(-1))/d\nlog_fraction = log(fraction, n)\nprint(log_fraction)"
  },
  {
    "example_id": 744,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3240.0",
      "2.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "# Find the sum of the arithmetic sequence\nn = 80\nsum_arithmetic_sequence = (n * (n + 1)) // 2\nprint(sum_arithmetic_sequence)\n\n# Find the greatest common divisor\ngcd = 1\nfor i in range(2, ceil(sqrt(sum_arithmetic_sequence)) + 1):\n    if sum_arithmetic_sequence % i == 0:\n        gcd = i\n        break\nprint(gcd)"
  },
  {
    "example_id": 745,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "print( (((7+8+9)/(2+3+4))*((6+9+12)/(9+8+7))) )"
  },
  {
    "example_id": 746,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "calories_in_crackers = 12 * 10\ncalories_in_cookies = 20\ntotal_calories = calories_in_crackers / calories_in_cookies\nprint(total_calories)"
  },
  {
    "example_id": 747,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "2.0",
      "217.0",
      "2.0"
    ],
    "annotated_answers": [
      "24.0"
    ],
    "solution": "a = symbols('a')\neq = a**2 + 3*a - 52\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 748,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "-9.0"
    ],
    "solution": "# Define x\nx = symbols('x')\n\n# Define prime\ndef prime(n):\n    if n == 1:\n        return False\n    for i in range(2, int(n ** 0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\n# Define f(x)\nf = (x ** 2) - 16\n\n# Define prime values\nprime_values = []\n\n# Define x_1\nx_1 = floor(sqrt(16))\n\n# Define x_2\nx_2 = ceil(sqrt(16))\n\n# Define i\ni = 0\n\n# Define while loop\nwhile i < (x_2 - x_1):\n\n    # Define n\n    n = x_1 + i\n\n    # Define check\n    check = prime(n)\n\n    # Define if condition\n    if check:\n        prime_values.append(n)\n\n    # Define i\n    i += 1\n\n# Define product\nproduct = 1\n\n# Define for loop\nfor value in prime_values:\n    product *= value\n\n# Print product\nprint(product)"
  },
  {
    "example_id": 749,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "3.0",
      "3.0"
    ],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "A, B, C = symbols('A B C')\n\n# Using the given information, we can find C\nC = B + 3\n\n# Using the given information, we can find B\nB = A + 6\n\n# Now we can find A\nA = C - 3\n\n# Now we can find the average\naverage = (A + B + C)/3\n\n# Print the solution\nprint(average)"
  },
  {
    "example_id": 750,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = (3**(x+8)) - (9**(x+3))\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 751,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "140.0"
    ],
    "annotated_answers": [
      "140.0"
    ],
    "solution": "print(((7+5)**2)-((7-5)**2))"
  },
  {
    "example_id": 752,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "5.0",
      "9.0"
    ],
    "annotated_answers": [
      "47.0"
    ],
    "solution": "a, b = symbols('a, b')\neq = (9*a + 2*b - a*b + 5)\nx = solve(eq, a)\nx_value = x[0]\nprint(x_value)"
  },
  {
    "example_id": 753,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-22.0"
    ],
    "annotated_answers": [
      "-8.0"
    ],
    "solution": "x, y, z, a = symbols('x y z a')\neq1 = log(x) - log(y) - a\neq2 = log(y) - log(z) - 15\neq3 = log(z) - log(x) - 7\nsolution = solve([eq1, eq2, eq3], [x, y, z, a])\nx_value = solution[0][0]\ny_value = solution[0][1]\nz_value = solution[0][2]\na_value = solution[0][3]\nprint(a_value)"
  },
  {
    "example_id": 754,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "3.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\nf = x**2 - 8*x + 15\ny = 2\ndistance = solve(f - y, x)[0]\nprint(distance)"
  },
  {
    "example_id": 755,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "3.0",
      "3.0",
      "1.0",
      "3.0",
      "1.0"
    ],
    "annotated_answers": [
      "900.0"
    ],
    "solution": "# Define variables\na = symbols('a')\nb = symbols('b')\n\n# Define equations\neq1 = Eq((a**2) - (b**3), 0)\neq2 = Eq((a**2) - (b**3), 1)\n\n# Solve for a\nsolution1 = solve(eq1, a)\nsolution2 = solve(eq2, a)\n\n# Print solutions\nprint(solution1)\nprint(solution2)"
  },
  {
    "example_id": 756,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "24.0",
      "15.0"
    ],
    "annotated_answers": [
      "600.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq1 = Eq(y, 15)\neq2 = Eq(x, 24)\neq3 = Eq(y, 3)\nsol1 = solve(eq1, y)\nsol2 = solve(eq2, x)\nsol3 = solve(eq3, y)\nx_value = sol2[0]\ny_value = sol1[0]\nprint(\"x = \", x_value)\nprint(\"y = \", y_value)"
  },
  {
    "example_id": 757,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "2.62787970939371",
      "-5.0",
      "31.999993430300727",
      "32.0",
      "32.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "def revenue(p):\n    return 128 - 4*p\n\ndef maximize(p):\n    return revenue(p)\n\np_max = minimize_scalar(maximize, bounds=(0, 32))\nprint(p_max)"
  },
  {
    "example_id": 758,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "0.0"
    ],
    "solution": ""
  },
  {
    "example_id": 759,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "22.0"
    ],
    "annotated_answers": [
      "22.0"
    ],
    "solution": "f = lambda x: 2*x + 1\ng = lambda x: f(2*x) - 3\nprint(g(g(2)))"
  },
  {
    "example_id": 760,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0",
      "2.0",
      "1.0",
      "4.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = x**2 + y - 4\neq2 = x**4 + y**2 - 10\neq3 = eq1*eq2\nsolution = solve(eq3, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 761,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "18.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "# Define the variables\na = symbols('a')\nb = symbols('b')\nc = symbols('c')\nd = symbols('d')\n\n# Define the equation\neq = (3-a)*(6+2*a)\n\n# Simplify the equation\nsolution = simplify(eq)\n\n# Print the solution\nprint(solution)"
  },
  {
    "example_id": 762,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-6.0"
    ],
    "annotated_answers": [
      "-6.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 - x - 6\nsolution = solve(eq)\nprint(solution[0] * solution[1])"
  },
  {
    "example_id": 763,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "4.0",
      "1.0",
      "2.0",
      "4.0",
      "8.0",
      "13.0",
      "-1.0",
      "1.0",
      "2.0",
      "4.0",
      "1.0",
      "-1.0",
      "1.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x = symbols('x')\nf = x**2 - 4*x + 1\nf_prime = 2*x - 4\nf_prime_max = f_prime.subs(x, 6)\nf_max = f.subs(x, 6)\nf_inverse = 1/f\nf_inverse_max = f_inverse.subs(x, 4)\nprint(\"f(x) = \" + str(f))\nprint(\"f'(x) = \" + str(f_prime))\nprint(\"f'(x) max = \" + str(f_prime_max))\nprint(\"f(x) max = \" + str(f_max))\nprint(\"f^-1(x) = \" + str(f_inverse))\nprint(\"f^-1(x) max = \" + str(f_inverse_max))"
  },
  {
    "example_id": 764,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0",
      "3.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "a = symbols('a')\neq1 = 4*a - 2*(a - 2) - 14*a\neq2 = 6*a - 2*(a - 2)\nsolution1 = solve(eq1, a)\nsolution2 = solve(eq2, a)\ncamille_age = solution1[0]\nprint(camille_age)"
  },
  {
    "example_id": 765,
    "selected_mode": "import",
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\na = symbols('a')\nb = symbols('b')\nexpr = (a/(x-1))+(b/(x+1))-(x+2)/(x**2-1)\nsol = solve(expr, [a, b])\na_value = sol[0]\nb_value = sol[1]\nprint(a_value)\nprint(b_value)"
  },
  {
    "example_id": 766,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.1111111111111111"
    ],
    "annotated_answers": [
      "49.0"
    ],
    "solution": "print((7*10)/(30*21))"
  },
  {
    "example_id": 767,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "99940009.0"
    ],
    "annotated_answers": [
      "99940009.0"
    ],
    "solution": "print(9997 ** 2)"
  },
  {
    "example_id": 768,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "14950.0",
      "14950.0"
    ],
    "annotated_answers": [
      "2107.0"
    ],
    "solution": "# create symbols for a and b\na = symbols('a')\nb = symbols('b')\n\n# create equation\neq = a * 7 + b * 7\n\n# find the sum of all multiples of 7 between 100 and 200\nsum = 0\nfor i in range(100, 200):\n    sum += i * 7\n\n# find the value of a and b\na_value = solve(eq - sum, a)\nb_value = solve(eq - sum, b)\n\n# print the value of a and b\nprint(a_value)\nprint(b_value)"
  },
  {
    "example_id": 769,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "12.0",
      "1.0"
    ],
    "annotated_answers": [
      "35.0"
    ],
    "solution": "x1, x2 = symbols('x1 x2')\nk = symbols('k')\neq = Eq(x1**2 - 12*x1 + k, 0)\nsolution = solve(eq, k)\nk_value = solution[0]\nprint(k_value)"
  },
  {
    "example_id": 770,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "29.0",
      "2.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "a, b, n, d = symbols('a b n d')\neq = 7 + 14*n - 210\nsolution = solve(eq, n)\nn_value = solution[0]\nprint(n_value)"
  },
  {
    "example_id": 771,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0"
    ],
    "annotated_answers": [
      "106.0"
    ],
    "solution": "import sympy\nx = sympy.Symbol('x')\nf = x**7 - 3*x**3 + 2\ng = f.subs(x, x + 1)\nprint(g.expand().coeff(x))"
  },
  {
    "example_id": 772,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "256.0"
    ],
    "annotated_answers": [
      "256.0"
    ],
    "solution": "f = lambda x: 2**x\nf_f_f_f_1 = f(f(f(f(1))))\nsqrt_f_f_f_f_1 = sqrt(f_f_f_f_1)\nprint(sqrt_f_f_f_f_1)"
  },
  {
    "example_id": 773,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "49.0"
    ],
    "annotated_answers": [
      "49.0"
    ],
    "solution": "x = symbols('x')\neq = x*sqrt(x) - 5*x - 9*sqrt(x) - 35\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 774,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "30.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "print(6 * 5)"
  },
  {
    "example_id": 775,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "x = symbols('x')\neq = (7*x)/4\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(ceil(x_value))"
  },
  {
    "example_id": 776,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "29.0",
      "-8.0",
      "34.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq1 = 6*x + 5*y - 2*z + (-4)\neq2 = 4*x + 5*y + 12*z + 54\nsolution = solve([eq1, eq2], [x, y, z])\nprint(solution)"
  },
  {
    "example_id": 777,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "34.0",
      "3.0",
      "1681.0",
      "18.0",
      "132833.0",
      "432.0",
      "5.0",
      "6025827.0",
      "144.0",
      "1.0"
    ],
    "annotated_answers": [
      "1736.0"
    ],
    "solution": "x1 = symbols('x1')\nx2 = symbols('x2')\ny1 = x1**2 - 8\ny2 = y1**2 - 5*x1 + 44\nsolutions = solve((Eq(y1, y2), y1!= y2), (x1, x2))\nsolutions_y = [solution[0] for solution in solutions]\nprint(solutions_y)"
  },
  {
    "example_id": 778,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x = symbols('x')\neq = (9*x)/(13) + (13)/(9*x) - (250)/(117*x)\nsolution = solve(eq)\nprint(sum(solution))"
  },
  {
    "example_id": 779,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.2"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x_min = 2 - 5.6\nx_max = 2 + 5.6\nx_count = x_max - x_min + 1\nprint(x_count)"
  },
  {
    "example_id": 780,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "n = symbols('n')\neq = n**2 - 3*n + 2\nsolution = solve(eq, n)\nprint(solution)"
  },
  {
    "example_id": 781,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "181.0"
    ],
    "annotated_answers": [
      "181.0"
    ],
    "solution": "expression = 3 * 7**2 + 5 * 7 - 1\nprint(expression)"
  },
  {
    "example_id": 782,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\nparabola = Eq(x, y**2 - 4*y - 1)\nsolution = solve(parabola, y)\nprint(len(solution))"
  },
  {
    "example_id": 783,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "10.0"
    ],
    "annotated_answers": [
      "-5.0"
    ],
    "solution": "x = symbols('x')\nb = -4\neq = x**2 + b*x - 36\nsolution = solve(eq, x)\nb_value = solution[0]\nprint(b_value)"
  },
  {
    "example_id": 784,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "9901.0"
    ],
    "annotated_answers": [
      "9901.0"
    ],
    "solution": "print(99**2 + 99 + 1)"
  },
  {
    "example_id": 785,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "1.0",
      "2.0",
      "3.0",
      "2.0",
      "1.0",
      "3.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = Eq(x, 1 + x/(1 + x/(1 + x/(1 + x))))\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 786,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "23.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "N = symbols('N')\nn = 1\ns = 121\nwhile s > 0:\n    s = s - n\n    n = n + 2\nprint(n)"
  },
  {
    "example_id": 787,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "3.0",
      "6.0",
      "3.0"
    ],
    "annotated_answers": [
      "108.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\n\n# Find x and y\nx_value = solve(x-y-6, x)[0]\ny_value = solve(x-y-6, y)[0]\n\n# Find x^3 - y^3\nx_cubed = x_value**3\ny_cubed = y_value**3\nx_cubed_minus_y_cubed = x_cubed - y_cubed\nprint(x_cubed_minus_y_cubed)"
  },
  {
    "example_id": 788,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "169.0"
    ],
    "solution": "# define the variable\nx = symbols('x')\n\n# define the equation\neq = (x**(1/3))**6\n\n# solve the equation\nsolution = solve(eq, x)\n\n# print the value\nprint(solution[0])"
  },
  {
    "example_id": 789,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "19.0",
      "19.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "A = symbols('A')\nB = symbols('B')\n\nA_spadesuit_B = A + B + 4\n\nA_spadesuit_2 = A_spadesuit_B.subs(B, 2)\n\nprint(A_spadesuit_2)\n\nprint(A_spadesuit_2.subs(A_spadesuit_2, 19))\n\nprint(A_spadesuit_2.subs(A_spadesuit_2, 19).evalf())"
  },
  {
    "example_id": 790,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0",
      "8.0",
      "8.0",
      "8.0"
    ],
    "annotated_answers": [
      "600.0"
    ],
    "solution": "# Set the variables\nn1, n2, n3, n4 = symbols('n1, n2, n3, n4')\n\n# Calculate the sum of the integers\nsum_old = n1 + n2 + n3 + n4\n\n# Increase each integer by 2 and multiply by 20\nn1_new = n1 + 2 * 20\nn2_new = n2 + 2 * 20\nn3_new = n3 + 2 * 20\nn4_new = n4 + 2 * 20\n\n# Calculate the sum of the new set of integers\nsum_new = n1_new + n2_new + n3_new + n4_new\n\n# Calculate the difference between the two sums\ndiff = sum_new - sum_old\n\n# Find the value of n1, n2, n3, and n4\nn1_value = diff / 20\nn2_value = diff / 20\nn3_value = diff / 20\nn4_value = diff / 20\n\n# Print the values\nprint(n1_value)\nprint(n2_value)\nprint(n3_value)\nprint(n4_value)"
  },
  {
    "example_id": 791,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "a, b = symbols('a, b')\ng = 3*x + 2\nf = a*x + b\nf_inv = solve(Eq(f, g), x)\na_plus_b = (a + b)/2\nprint(a_plus_b)"
  },
  {
    "example_id": 792,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "936.0"
    ],
    "annotated_answers": [
      "22.0"
    ],
    "solution": "# pile A has 6 times as many black cards as red cards\n# pile B has a multiple of the number of black cards\n\n# set up variables\nred_black = symbols('red_black')\nred_black_a = symbols('red_black_a')\nblack_a = symbols('black_a')\nblack_b = symbols('black_b')\nred_b = symbols('red_b')\n\n# pile A has 6 times as many black cards as red cards\nred_black = 6\nred_black_a = red_black\nblack_a = 26\n\n# pile B has a multiple of the number of black cards\nblack_b = black_a * red_black_a\n\n# number of red cards in pile B is a multiple of the number of black cards in pile B\nred_b = black_b * red_black\n\n# print the number of red cards in pile B\nprint(red_b)"
  },
  {
    "example_id": 793,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x, y = symbols('x y')\n\n# line 5y = 2x\neq1 = 5*y - 2*x\n\n# line 3x - 4y = 7\neq2 = 3*x - 4*y - 7\n\n# solve for x and y\nsol = solve([eq1, eq2], [x, y])\n\n# sum of coordinates of point Z\nsum_coords = sol[x] + sol[y]\nprint(sum_coords)"
  },
  {
    "example_id": 794,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "8.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\neq = (b**2 - 4*a*c) / (4*a*c) - (b - a) / (b + a)\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 795,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-6.0",
      "5.0"
    ],
    "annotated_answers": [
      "369.0"
    ],
    "solution": "# Define variables\nl = symbols('l')\n# Define equation\neq = Eq(l**2, 180)\n# Solve for l\nsolution = solve(eq, l)\n# Print solution\nprint(solution[0])"
  },
  {
    "example_id": 796,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "69.0"
    ],
    "solution": "t = symbols('t')\ndef cost_per_ticket(t):\n    if t <= 60:\n        return 70\n    else:\n        return 69 - t + 60\n\ndef total_cost(t):\n    return t * cost_per_ticket(t)\n\ndef profit(t):\n    return total_cost(t) - 4200\n\ndef largest_t(profit):\n    return ceil(sqrt(profit / cost_per_ticket(60)))\n\nprint(largest_t(4200))"
  },
  {
    "example_id": 797,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "3.0",
      "3.0"
    ],
    "annotated_answers": [
      "105.0"
    ],
    "solution": "# Define the variables\nn = 6\nm = 2\nx = symbols('x')\ny = symbols('y')\nz = symbols('z')\n\n# Define the subsets\nsubsets = [set([x, y]),\n           set([x, z]),\n           set([y, z]),\n           set([x, y, z])]\n\n# Define the sum\nsum_subsets = []\nfor subset in subsets:\n    sum_subsets.append(sum(subset))\n\n# Define the sum of the sums\nsum_of_subsets = sum(sum_subsets)\n\n# Print the result\nprint(sum_of_subsets)"
  },
  {
    "example_id": 798,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.3304121311619"
    ],
    "annotated_answers": [
      "49.0"
    ],
    "solution": "x = symbols('x')\neq = (x**(1/3)*x**(1/2))-7\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 799,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0",
      "-1.0",
      "-2.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "# Define the function\nf = lambda x: 2*x + 3\n\n# Find the value of f(2)\ny = f(2)\nprint(y)\n\n# Find the value of f(-2)\ny = f(-2)\nprint(y)\n\n# Find the sum of the coordinates\nsum = y + f(-2)\nprint(sum)"
  },
  {
    "example_id": 800,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "f = lambda x: x**2 - 2*x + 1\ng = lambda x: x**0.5 + 1\nprint(f(g(4)) - g(f(3)))"
  },
  {
    "example_id": 801,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "n = symbols('n')\neq = (n+5)/(n-3) - 2\nsolution = solve(eq, n)\nn_value = solution[0]\nprint(n_value)"
  },
  {
    "example_id": 802,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.4142135623731",
      "0.5",
      "2.0",
      "0.125",
      "0.5",
      "0.5"
    ],
    "annotated_answers": [
      "-0.25"
    ],
    "solution": "# Solve for a\na = symbols('a')\nb = symbols('b')\nsolve_a = solve(Eq(a**2 + 2*b*a + (a-b), 0), a)\n\n# Find the real solution of the equation\nsolution = solve_a[0]\n\n# Check the real solution\nsolution_value = solution.evalf()\nprint(solution_value)"
  },
  {
    "example_id": 803,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "8.0",
      "4.0",
      "1.0"
    ],
    "annotated_answers": [
      "54.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq = (x + 4)*(2*y + 1) - (x*y)*(x + y + 1)\nsolution = solve(eq, x*y)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 804,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "100.0",
      "3.0",
      "2.0",
      "3.0",
      "4.0",
      "4.0",
      "2.0",
      "4.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "# Define variables\nx1, y1 = symbols('x1, y1')\nx2, y2 = symbols('x2, y2')\nx3, y3 = symbols('x3, y3')\nx4, y4 = symbols('x4, y4')\n\n# Define equations\neq1 = Eq(x1**2 + y1**2 - 7**2, 0)\neq2 = Eq(x2**2 + y2**2 - 9**2, 0)\neq3 = Eq(x3**2 + y3**2 - 10**2, 0)\neq4 = Eq(x4**2 + y4**2 - 2**2, 0)\n\n# Solve equations\nsolution1 = solve(eq1, x1, y1)\nsolution2 = solve(eq2, x2, y2)\nsolution3 = solve(eq3, x3, y3)\nsolution4 = solve(eq4, x4, y4)\n\n# Find coordinates of other two vertices\nx3_value = solution3[0]\ny3_value = solution3[1]\nx4_value = solution4[0]\ny4_value = solution4[1]\n\n# Calculate sum of y-coordinates of other two vertices\nsum_y = y3_value + y4_value\n\n# Print result\nprint(sum_y)"
  },
  {
    "example_id": 805,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "16.0"
    ],
    "annotated_answers": [
      "47.0"
    ],
    "solution": "# Define variables\nh = 16\nx = symbols('x')\n\n# Define function\ndef f(x):\n    return (h - x)/2\n\n# Solve for x\nx_value = solve(Eq(f(x), 0), x)[0]\n\n# Print result\nprint(x_value)"
  },
  {
    "example_id": 806,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "20.0",
      "3.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\neq = 3*a - b - 20\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 807,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "15.0",
      "0.6",
      "-7.5",
      "12.9903810567666",
      "-0.3",
      "0.519615242270663",
      "-7.5",
      "12.9903810567666",
      "-0.3",
      "0.519615242270663",
      "5.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "# create symbol for a and b\na, b = symbols('a b')\n\n# solve for a and b\neq1 = Eq(a * b**2, 27/5)\neq2 = Eq(a**2 * b, 135)\nsolution = solve([eq1, eq2], [a, b])\n\n# print the solution\nprint(solution)\n\n# compute a+5b\na_plus_5b = a + 5 * b\nprint(a_plus_5b)"
  },
  {
    "example_id": 808,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0625"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "# Define x\nx = symbols('x')\n\n\n# Define equation\neq = Eq(sqrt(x + sqrt(x + sqrt(x +...))), 5)\n\n\n# Solve for x\nsolution = solve(eq, x)\n\n\n# Print solution\nprint(solution)"
  },
  {
    "example_id": 809,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "11.0",
      "25.0",
      "2.0",
      "25.0",
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\neq1 = (4*a + 3*b)/(a - 2*b)\neq1_value = eq1.subs({a: 4, b: 3})\neq2 = (a + 11*b)/(a - b)\neq2_value = eq2.subs({a: eq1_value})\nprint(eq2_value)"
  },
  {
    "example_id": 810,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-0.5"
    ],
    "annotated_answers": [
      "-9.0"
    ],
    "solution": "# The midpoint of the segment is given by\n# (x1 + x2) / 2 = (1 + (-6)) / 2 = -2 / 2 = -1\nx1 = -2\nx2 = 1\nx = (x1 + x2) / 2\nprint(x)\n\n\n# The sum of the coordinates of point B is given by\n# x + y = 1\n# Since we already know the coordinates of point A, we can\n# write the equation for point B as\n# x + y = 1 + (-2)\n# x + y = -1\n# We can solve for x and y separately\n# x = -1 - y\n# Substituting y = 1 - x, we get\n# x = -1 - (1 - x)\n# x = 2 - x\n# Solving for x, we get\n# x = 1\n# y = 1 - x\n# y = 1 - 1\n# y = 0\nprint(x, y)"
  },
  {
    "example_id": 811,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "64.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "x = symbols('x')\nm = symbols('m')\nb = symbols('b')\n\neq1 = Eq(x**2 + b*x + 1, (x + m)**2 - 63)\n\nsol1 = solve(eq1, b)\n\nprint('b =', sol1[0])"
  },
  {
    "example_id": 812,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "49.0",
      "12.0",
      "6.0",
      "7.0",
      "6.0"
    ],
    "annotated_answers": [
      "24.0"
    ],
    "solution": "from sympy import symbols, solve, factor\n\nx = symbols('x')\nc = symbols('c', positive=True)\nf = 3*x**2 + 7*x + c\n\nsolution = solve(f.factor(), x)\nc_value = solution[0]\nprint(c_value)"
  },
  {
    "example_id": 813,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "-6.0"
    ],
    "solution": "x = 3 + (1-3)\ny = 9 + (2-9)\nprint(x, y)"
  },
  {
    "example_id": 814,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1764.0"
    ],
    "annotated_answers": [
      "156.0"
    ],
    "solution": "# calculate 42^2\nvalue = 42**2\nprint(value)"
  },
  {
    "example_id": 815,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "2.0",
      "7.0",
      "2.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "# define variables\nx = symbols('x')\nb = symbols('b')\n\n# define equation\neq = 3*x**4 - 7*x**3 + 2*x**2 - b*x + 1\n\n# solve for b\nsolution = solve(eq, b)\n\n# print solution\nprint(solution)\n\n# check f(1)\nf_x = eq.subs(x, 1)\nprint(f_x)\n\n# check f(1) = 1\nif f_x == 1:\n    print('f(1) = 1')\nelse:\n    print('f(1)!= 1')"
  },
  {
    "example_id": 816,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "distance = math.sqrt(8**2 + 6**2)\nprint(distance)"
  },
  {
    "example_id": 817,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "3.0",
      "27.0",
      "2.0",
      "2.0",
      "54.0",
      "-4.0",
      "6.0",
      "2.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "x = symbols('x')\na = 1\nh = 1\nk = 5\neq = Eq((x**2) + (4*x) + (5), (a*(x - h))**2 + k)\nsolution = solve(eq, h)\nh_value = solution[0]\nprint(h_value)"
  },
  {
    "example_id": 818,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "a = symbols('a')\neq = 4 + (12/a) + (36/a**2)\nsolution = solve(eq**2, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 819,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = 0\nwhile x*x + 4*x + 4 < 20:\n    print(x)\n    x += 1"
  },
  {
    "example_id": 820,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "5.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "# Find the sum of five consecutive integers\na, b, c, d, e = symbols('a, b, c, d, e')\nconsecutive_integers = Eq(a + b + c + d + e, 5)\n\n# Find the product of the five consecutive integers\nconsecutive_integers_product = Eq(a * b * c * d * e, 5)\n\n# Solve for a, b, c, d, e\nsolution = solve([consecutive_integers, consecutive_integers_product], [a, b, c, d, e])\n\n# Print the solution\nprint(solution)"
  },
  {
    "example_id": 821,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "56.0",
      "448.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "age = 56\ngrandfather_age = age * 8\nprint(age)\nprint(grandfather_age)"
  },
  {
    "example_id": 822,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "72.0",
      "2.0",
      "2.0",
      "2.0",
      "72.0",
      "2.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "x = symbols('x')\nb = symbols('b')\neq = x**2 + b*x + 18\nsolution = solve(eq, x)\nx_values = solution\nprint(x_values)"
  },
  {
    "example_id": 823,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "81.0",
      "17.0",
      "32.0",
      "160.0"
    ],
    "annotated_answers": [
      "40.0"
    ],
    "solution": "a = 22\nb = 27\nc = 32\nN = a + b + c\n\na_new = a - 5\nb_new = b + 5\nc_new = c * 5\n\nprint(N)\nprint(a_new)\nprint(b_new)\nprint(c_new)"
  },
  {
    "example_id": 824,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0",
      "3.0",
      "2.0",
      "1.0",
      "1.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "x1, y1 = symbols('x1 y1')\nx2, y2 = 2, -3\nslope = (y2-y1)/(x2-x1)\ny_intercept = y1 - slope*x1\nprint(y_intercept)"
  },
  {
    "example_id": 825,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\nsolutions = solve(18 + 5*x**2 - 20*x, x)\nx1 = ceil(solutions[0])\nx2 = floor(solutions[1])\nresult = x1 * x2\nprint(result)"
  },
  {
    "example_id": 826,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "-36.0"
    ],
    "solution": "y = 6\nprint(y)"
  },
  {
    "example_id": 827,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0",
      "2.0",
      "3.0",
      "5.0",
      "2.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x = symbols('x')\nf = Eq(x**2 + 1, 7*x)\nsolution = solve(f, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 828,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "print(floor(6.7)+floor(-6.7))"
  },
  {
    "example_id": 829,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "20.0",
      "2.0",
      "2.0",
      "5761.0",
      "20.0",
      "1.0",
      "20.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "# Define variables\na = symbols('a')\nb = symbols('b')\n\n# Define equations\neq = Eq((144/a) - (10*a) + (1*b), 1)\n\n# Solve for a and b\nsolution = solve([eq], [a, b])\n\n# Extract solution\na_value = solution[0][0]\nb_value = solution[0][1]\n\n# Print solution\nprint(a_value)\nprint(b_value)"
  },
  {
    "example_id": 830,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "# define log_2(x) function\ndef log_2(x):\n    return math.log(x, 2)\n\n# define x variable\nx = 64\n\n# evaluate log_2(x)\nlog_2_x = log_2(x)\nprint(log_2_x)"
  },
  {
    "example_id": 831,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "20.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "def f(n):\n    return n**2 + n + 17\n\nprint(f(10) - f(9))"
  },
  {
    "example_id": 832,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "print(2**3 + 4)"
  },
  {
    "example_id": 833,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "b = 5 - 2\nprint(b)"
  },
  {
    "example_id": 834,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "# define x\nx = symbols('x')\n\n# define equation\neq = 6**(x+1) - 6**x - 1080\n\n# solve for x\nsolution = solve(eq, x)\n\n# extract value of x\nx_value = solution[0]\n\n# print value of x\nprint(x_value)"
  },
  {
    "example_id": 835,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "14.0"
    ],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "degree_p = 7\ndegree_q = 7\ndegree_p_q = degree_p + degree_q\nprint(degree_p_q)"
  },
  {
    "example_id": 836,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "5.0",
      "3.0",
      "2.0",
      "5.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "# Define the symbols\na, b = symbols('a b')\n\n# Define the equation\neq = (2*a - 10) - b\n\n# Solve for a\nsolution = solve(eq, a)\n\n# Print the result\nprint(solution[0])\n\n# Compute a + b\nprint(solution[0] + b)"
  },
  {
    "example_id": 837,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0",
      "10.0"
    ],
    "annotated_answers": [
      "672.0"
    ],
    "solution": "# Define a, b, c, d, and e\na, b, c, d, e = symbols('a b c d e')\n\n# Define the equation\neq = (a*b**10)/(c*d**10) - e\n\n# Solve for e\nsolution = solve(eq, e)\n\n# Find the value of e\ne_value = solution[0]\n\n# Print the value of e\nprint(e_value)"
  },
  {
    "example_id": 838,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "78.0"
    ],
    "annotated_answers": [
      "78.0"
    ],
    "solution": "total_cars = 0\nfor i in range(1, 13):\n    total_cars += i\nprint(total_cars)"
  },
  {
    "example_id": 839,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-39.0"
    ],
    "annotated_answers": [
      "-39.0"
    ],
    "solution": "a = -1\nb = 5\nprint(-a - b**2 + 3*a*b)"
  },
  {
    "example_id": 840,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "m = 47 - 3*15\nprint(m)"
  },
  {
    "example_id": 841,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "30.0",
      "6.0",
      "900.0",
      "6.0",
      "900.0",
      "6.0",
      "5.0"
    ],
    "annotated_answers": [
      "-150.0"
    ],
    "solution": "k = symbols('k')\nx = symbols('x')\na = symbols('a')\nb = symbols('b')\nc = symbols('c')\n\n# least possible value of k\neq = Eq(k, (6*x + 12)*(x - 8))\nsolution = solve(eq, x)\nx_value = solution[0]\n\n# least possible value of k\nk_value = (6*x_value + 12)*(x_value - 8)\nprint(k_value)"
  },
  {
    "example_id": 842,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "44.78460969082653"
    ],
    "annotated_answers": [
      "33.0"
    ],
    "solution": "expression = 3 * 2**3 * (2 + 3**(1/2)) / 2\nprint(expression)"
  },
  {
    "example_id": 843,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "1.0",
      "2.0",
      "3.0",
      "2.0",
      "1.0",
      "2.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "31.0"
    ],
    "solution": "# Define variables\nn = 125\nx = symbols('x')\n\n# Define equation\neq = Eq(x**5 + x**4 + x**3 + x**2 + x + 1, 0)\n\n# Find solution\nsolution = solve(eq, x)\n\n# Print solution\nprint(solution)"
  },
  {
    "example_id": 844,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "22.799999999999997"
    ],
    "annotated_answers": [
      "22.8"
    ],
    "solution": "blue_box_weight = (3 * 15.2) / 2\nprint(blue_box_weight)"
  },
  {
    "example_id": 845,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "18.0",
      "63.0"
    ],
    "annotated_answers": [
      "21.0"
    ],
    "solution": "x = symbols('x')\na, b = symbols('a b', nonnegative=True)\nexpr = x**2 + 18*x - 63\neq = Eq(expr, (x - a)*(x + b))\nsolution = solve(eq, b)\nb_value = solution[0]\nprint(b_value)"
  },
  {
    "example_id": 846,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "5.0",
      "5.0",
      "2.0"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "# Define x as a symbol\nx = symbols('x')\n\n# Define the expression\nexp = x**2 + 2*x*(5-x) + (5-x)**2\n\n# Print the expression\nprint(exp)"
  },
  {
    "example_id": 847,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "9.0"
    ],
    "solution": ""
  },
  {
    "example_id": 848,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "2.0",
      "5.0",
      "2.0",
      "-4.0",
      "-3.0",
      "2.0",
      "5.0",
      "2.0",
      "4.0"
    ],
    "annotated_answers": [
      "47.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 + (1/x**2) - 7\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value**4 + 1/x_value**4)"
  },
  {
    "example_id": 849,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "27.0"
    ],
    "annotated_answers": [
      "27.0"
    ],
    "solution": "captured = 6\ntime = 4.5\nprint(captured * time)"
  },
  {
    "example_id": 850,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "19.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "print(24 - (2*4 - 3))"
  },
  {
    "example_id": 851,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "15.0",
      "52.0",
      "5.0",
      "15.0",
      "52.0",
      "5.0",
      "4.0",
      "5.0",
      "2.0",
      "15.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\n\neq1 = 2**(x+1) - 4**(x-7)\neq2 = 8**(3*y) - 16**(y+13)\n\nsolution = solve([eq1, eq2], [x, y])\n\nprint(solution)"
  },
  {
    "example_id": 852,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "50.0"
    ],
    "solution": "# Define variables\nperimeter = symbols('perimeter')\nlength = symbols('length')\nwidth = symbols('width')\n\n# Define the area\narea = length*width\n\n# Define the perimeter\nperimeter = 2*length + 2*width\n\n# Define the equation\neq = (area/perimeter) - 3\n\n# Define the solution\nsolution = solve(eq, perimeter)\n\n# Print the solution\nprint(solution)"
  },
  {
    "example_id": 853,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1053.0",
      "6.0",
      "6.0",
      "1.44444444444444"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "a = symbols('a')\nn = 7\np = 1053\nq = 13/9\nterm = p*(a**(n-1))/(a**(n-1) - q)\nprint(term)"
  },
  {
    "example_id": 854,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.24264068711928",
      "0.111111111111111",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "x = symbols('x')\ny = (1/2)*x**2 - 9\na = symbols('a')\neq = Eq(y, a)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)\na_value = a**2\nprint(a_value)"
  },
  {
    "example_id": 855,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "45.0",
      "45.0",
      "1800.0",
      "1.0"
    ],
    "annotated_answers": [
      "2000.0"
    ],
    "solution": "# Calculate daily caloric requirement\ndaily_caloric_requirement = 1800\n\n# Calculate percentage of daily caloric requirement\npercentage = 2\n\n# Calculate calories in a snack-size tin of peaches\ncalories_in_tin = 40\n\n# Calculate number of tins needed to fulfill daily caloric requirement\ntins_needed = ceil(daily_caloric_requirement / calories_in_tin)\n\n# Calculate total calories needed\ntotal_calories = tins_needed * calories_in_tin\n\n# Calculate percentage of daily caloric requirement\npercentage_of_daily_caloric_requirement = total_calories / daily_caloric_requirement\n\n# Calculate number of tins needed to fulfill daily caloric requirement\ntins_needed = ceil(daily_caloric_requirement / calories_in_tin)\n\n# Print results\nprint(\"To fulfill a person's daily caloric requirement,\", tins_needed, \"snack-size tins of peaches would be needed.\")\nprint(\"Total calories in\", tins_needed, \"tins of peaches would be\", total_calories, \"calories.\")\nprint(\"This is\", percentage_of_daily_caloric_requirement, \"% of a person's daily caloric requirement.\")"
  },
  {
    "example_id": 856,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "# First sequence\na = symbols('a')\nb = a + (a + 3)\nc = a + (a + 6)\nd = a + (a + 9)\ne = a + (a + 12)\n\n# Second sequence\nf = 3\ng = f + (f + 3)\nh = f + (f + 6)\ni = f + (f + 9)\nj = f + (f + 12)\n\n# Find the fifth term of the first sequence\na = solve(Eq(e, j), a)[0]\nprint(a)"
  },
  {
    "example_id": 857,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0",
      "2.0",
      "19.0",
      "2.0",
      "9.0",
      "2.0",
      "19.0",
      "2.0"
    ],
    "annotated_answers": [
      "136.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq = (x + y) - 9\neq2 = x*y - 25\nsolution = solve([eq, eq2], [x, y])\nx_value = solution[0][0]\ny_value = solution[0][1]\nprint(x_value, y_value)"
  },
  {
    "example_id": 858,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "# create a function f(x) = x^2\nf = lambda x: x**2\n\n\n# find f(f(x)) = x\nx = symbols('x')\nf_x = f(f(x))\n\n\n# find f(x) - f_x\nf_x_minus_f = f(x) - f_x\n\n\n# find f_x - f_x_minus_f\nf_x_minus_f_minus_f_x = f_x - f_x_minus_f\n\n\n# find f_x_minus_f_minus_f_x\nprint(f_x_minus_f_minus_f_x)"
  },
  {
    "example_id": 859,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "0.0",
      "0.012345679012345677",
      "0.012345679012345678",
      "0.1111111111111111",
      "0.11111111111111112",
      "0.0",
      "1.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "n = symbols('n')\nx = 3**(-2)\ny = 9**(-2)\nz = 27**(-2/3)\na = 9*81**(-1)\nb = 243**(-4/5)\n\ndef find_values(x):\n    # if x < 0:\n    #     return 0\n    # else:\n    #     return 1\n    return x\n\ndef find_values(x):\n    return x\n\nvalues = [find_values(x), find_values(y), find_values(z), find_values(a), find_values(b)]\nvalues = list(set(values))\nvalues.sort()\nvalues.insert(0, 0)\nvalues.insert(0, 1)\nvalues.append(0)\nvalues.append(1)\n\nprint(values)"
  },
  {
    "example_id": 860,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "14.5"
    ],
    "annotated_answers": [
      "7.5"
    ],
    "solution": "y = 15.5 - 1\nprint(y)"
  },
  {
    "example_id": 861,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "4.0",
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "n = symbols('n')\nx = symbols('x')\nm = symbols('m')\neq = x**2 + m*x + (m+n)\nsolution = solve(eq, x)\nm_value = solution[0]\nprint(m_value)"
  },
  {
    "example_id": 862,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "print(ceiling(((7/4)**2)))"
  },
  {
    "example_id": 863,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "18.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "import sympy\nx, y = sympy.symbols('x y')\neq = y - 2*x + 18\nlattice_points = eq.integrate(x, y)\nprint(lattice_points)"
  },
  {
    "example_id": 864,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "70.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "# Define variables\nsusan_tickets = 4\nsusan_cost = 20\npam_tickets = 5\npam_cost = 30\n\n# Calculate the total cost for Pam\npam_total_cost = pam_cost * pam_tickets\n\n# Calculate the total cost for Susan\nsusan_total_cost = susan_cost * susan_tickets\n\n# Calculate the difference between the two total costs\ndifference = pam_total_cost - susan_total_cost\n\n# Print the difference\nprint(difference)"
  },
  {
    "example_id": 865,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "4.0",
      "6.0",
      "8.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "for k in range(1, 10):\n    d = k**2 - 4 * 10\n    if d % 4 == 0:\n        print(k)"
  },
  {
    "example_id": 866,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "x = symbols('x')\nf = x**2\ndomain = [-1, 1, 2, 3, 4, 5, 6, 7, 8, 9]\ndomain_set = set(domain)\nrange_set = set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\nintersection = domain_set.intersection(range_set)\nprint(len(intersection))"
  },
  {
    "example_id": 867,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "# Find the maximum value of x that satisfies the equation:\n# 12 = 4x - x**2\nx = symbols('x')\neq = Eq(12, 4*x - x**2)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 868,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "83.0",
      "2.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "# Define variables\nn_regular_packs = symbols('n_regular_packs')\nn_super_packs = symbols('n_super_packs')\nn_batteries_regular = n_regular_packs * 4\nn_batteries_super = n_super_packs * 6\nn_batteries_total = n_batteries_regular + n_batteries_super\n\n# Define equation\neq = Eq(n_batteries_total, 166)\n\n# Solve equation\nsolution = solve(eq, n_regular_packs)\n\n# Extract solution\nn_regular_packs_solution = solution[0]\n\n# Calculate number of super packs\nn_super_packs = floor((n_batteries_total - n_batteries_regular) / 6)\n\n# Print result\nprint(n_regular_packs_solution, n_super_packs)"
  },
  {
    "example_id": 869,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "13.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "# define the function h(x)\nh = lambda x: sqrt((x**3 + 72)/2) + 1\n\n# calculate the value of h(6)\nprint(h(6))"
  },
  {
    "example_id": 870,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "1018.24460109857",
      "2036.48920219714"
    ],
    "annotated_answers": [
      "1160.0"
    ],
    "solution": "# 1. Solve for x in the equation\nx = symbols('x')\neq = Eq(x, 2)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)\n\n# 2. Calculate the interest\ninterest = 1000 * (1 + 0.075)**(1/4)\nprint(interest)\n\n# 3. Calculate the total amount\ntotal_amount = x_value * interest\nprint(total_amount)"
  },
  {
    "example_id": 871,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "13.0",
      "4.0"
    ],
    "annotated_answers": [
      "120.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\neq1 = 3*a - 3*a**2 - 3*b - 3*c + 3\neq2 = a + 3*b + 3*c - 3\neq3 = a*(-3)**2 + b*(-3) + c - 0\nsolution = solve([eq1, eq2, eq3], [a, b, c])\na_value = solution[0][0]\nb_value = solution[0][1]\nc_value = solution[0][2]\nprint(100*a_value + 10*b_value + c_value)"
  },
  {
    "example_id": 872,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "47.0"
    ],
    "annotated_answers": [
      "78.0"
    ],
    "solution": "g = lambda x: 4*x**2 - 3*x + 2\nprint(g(-3))"
  },
  {
    "example_id": 873,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "9.0",
      "323.0",
      "9.0",
      "-1.0",
      "9.0",
      "323.0",
      "9.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "n = 2\nx = symbols('x')\neq = 9*x**2 + n*x + 36\nsolution = solve(eq)\nprint(solution)"
  },
  {
    "example_id": 874,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-13.0",
      "5.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "x = symbols('x')\neq = abs(x + 4) < 9\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 875,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "100.0"
    ],
    "solution": "from math import log\n\ndef is_power(a, b):\n    if a * b == a**b + b**a:\n        return True\n    else:\n        return False\n\nif is_power(2, 6):\n    print(2 * 6)\nelse:\n    print(\"Not a power\")"
  },
  {
    "example_id": 876,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "132.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "pens_cost = 924\npencils_cost = pens_cost / 7\nprint(pencils_cost)"
  },
  {
    "example_id": 877,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "percent_50 = 0.5\npercent_200 = 2\namount = 10\ntotal = percent_50 * percent_200 * amount\nprint(total)"
  },
  {
    "example_id": 878,
    "selected_mode": "import",
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "# Define f(x) and q(x)\nf = lambda x: x - 3\nq = lambda x: b*x + 1\n\n# Solve for b\nb = -(f(q(1)))/(q(1) - 1)\nprint(b)"
  },
  {
    "example_id": 879,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "60000.0"
    ],
    "annotated_answers": [
      "60000.0"
    ],
    "solution": "sum = 0\nfor i in range(501, 700, 2):\n    sum += i\nprint(sum)"
  },
  {
    "example_id": 880,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "16.0",
      "4.0",
      "1.0",
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "128.0"
    ],
    "solution": "# The number of pages read on the first day\nx = symbols('x')\n\n# The number of pages read on the fifth day\ny = symbols('y')\n\n# The number of pages in the novel\nz = symbols('z')\n\n# The equation for the number of pages read on the fifth day\neq1 = (y/2)**4 - x**4 - z**4\n\n# The equation for the number of pages in the novel\neq2 = (y/2)**4 - x**4\n\n# Solve for x\nsol1 = solve(eq1, x)\nsol2 = solve(eq2, x)\n\n# Find the value of x\nx_value = sol1[0]\n\n# Find the value of z\nz_value = sol2[0]\n\n# Print the results\nprint(\"The number of pages read on the first day is\", x_value)\nprint(\"The number of pages in the novel is\", z_value)"
  }
]