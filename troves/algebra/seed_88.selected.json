[
  {
    "example_id": 0,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "3.0",
      "5.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "n = 4\nx1, x2, x3 = symbols('x1:4')\neq = (x1*x3)/5 - x2\nsolution = solve(eq, x2)\nx2_value = solution[0]\nprint(x2_value)"
  },
  {
    "example_id": 1,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-2.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "a = symbols('a')\neq = (8**(-1))/(4**(-1)) - a**(-1) - 1\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 2,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "341.0"
    ],
    "annotated_answers": [
      "268.0"
    ],
    "solution": "# create a symbol for the area of each circle\nr = symbols('r')\n\n# create a symbol for the sum of the areas of all circles\nS = symbols('S')\n\n# define the equation for the sum of the areas of all circles\neq = S - (16**2) - (8**2) - (4**2) - (2**2) - (1**2)\n\n# solve for the sum of the areas of all circles\nsolution = solve(eq, S)\n\n# get the value of the sum of the areas of all circles\nS_value = solution[0]\n\nprint(S_value)"
  },
  {
    "example_id": 3,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7945.0"
    ],
    "annotated_answers": [
      "7945.0"
    ],
    "solution": "rent = 5000\nelectricity = 1.45\ntotal_cost = 16520.25\n\nelectricity_used = (total_cost - rent) / electricity\nprint(electricity_used)"
  },
  {
    "example_id": 4,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.3333333333333335",
      "2.0",
      "1.3333333333333333"
    ],
    "annotated_answers": [
      "7.5"
    ],
    "solution": "flour_cup = 1.5\nfive_pound = 5.0\ntwo_pound = 2.0\ncake_count = 2\n\nflour_total = flour_cup * cake_count\nfive_pound_total = five_pound * cake_count\ntwo_pound_total = two_pound * cake_count\n\nfive_pound_flour = five_pound_total / flour_total\ntwo_pound_flour = two_pound_total / flour_total\n\nprint('For {} five-pound cakes: {} cups'.format(cake_count, five_pound_flour))\nprint('For {} two-pound cakes: {} cups'.format(cake_count, two_pound_flour))"
  },
  {
    "example_id": 5,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "164.0"
    ],
    "solution": "# define variables\nx = symbols('x')\n\n# define equation\neq = (3/4) - (x/4)\n\n# solve for x\nsolution = solve(eq, x)\n\n# get the largest solution\nlargest_solution = max(solution)\n\n# print the largest solution\nprint(largest_solution)"
  },
  {
    "example_id": 6,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "15.0",
      "2.0",
      "15.0"
    ],
    "annotated_answers": [
      "30.0"
    ],
    "solution": "x = symbols('x')\neq = (x**2 - 60) + (x**2 - 60)\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 7,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "8.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq1 = x/y - 2\neq2 = z/x - 4\nsolution = solve([eq1, eq2], [x, y, z])\nprint(solution)"
  },
  {
    "example_id": 8,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = x + y - 12\neq2 = x - y - 8\neq3 = 2*x - x*y\nsolution = solve((eq1, eq2, eq3), (x, y))\nx_value, y_value = solution[0]\nprint(eq3.subs(x, x_value).subs(y, y_value))"
  },
  {
    "example_id": 9,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.5833333333333334"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "K = 7 / (4 + 8)\nprint(K)"
  },
  {
    "example_id": 10,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1215.0"
    ],
    "annotated_answers": [
      "1545.0"
    ],
    "solution": "x = symbols('x')\n\ndef f(x):\n    return 2/3 * x\n\ndef g(x):\n    return x - 405\n\nsolution = solve(f(x) - g(x), x)\n\nprint(solution)"
  },
  {
    "example_id": 11,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "4.0",
      "2.0",
      "6.0",
      "4.0",
      "2.0",
      "-4.0"
    ],
    "annotated_answers": [
      "81.0"
    ],
    "solution": "x = symbols('x')\neq = (x - 1/x)**4\nsolution = expand(eq)\nprint(solution)"
  },
  {
    "example_id": 12,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4000000.0",
      "2.0",
      "2.0",
      "4000000.0",
      "1.0",
      "2.0",
      "-2.0",
      "32000.0",
      "32000.0",
      "1.0",
      "1.0"
    ],
    "annotated_answers": [
      "125.0"
    ],
    "solution": "m, n = symbols('m, n', positive=True, relate=(lambda x, y: x*y == 1))\ns = 2000\nS = expand((s*(1-1/m**n))/(1-1/n))\nS_squared = expand((s**2*(1-1/m**n))/(1-1/n)**2)\nprint(S_squared - 16*S)\nprint(solve(S_squared - 16*S, m+n))"
  },
  {
    "example_id": 13,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3702.0"
    ],
    "annotated_answers": [
      "3702.0"
    ],
    "solution": "floor = lambda x: int(x)\n\nN = 1/3\n\nprint(floor(10*N) + floor(100*N) + floor(1000*N) + floor(10000*N))"
  },
  {
    "example_id": 14,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq = (x**2 + y**2) - 25\nsolution = solve(eq, [x, y])\nprint(len(solution))"
  },
  {
    "example_id": 15,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.98021856",
      "0.9802185",
      "0.9802185",
      "0.98021832",
      "0.98021832",
      "0.980218",
      "0.980218",
      "0.98021755",
      "0.98021755",
      "0.98021694"
    ],
    "annotated_answers": [
      "33.0"
    ],
    "solution": "import numpy as np\n\ndef circle_radius(c):\n    x = np.linspace(-10, 10)\n    y = np.linspace(-6, 6)\n    circle = x**2 - 10*x + y**2 + 6*y + c\n    circle_roots = np.roots(circle)\n    circle_radius = np.abs(circle_roots)\n    return circle_radius\n\nprint(circle_radius(0))"
  },
  {
    "example_id": 16,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0",
      "2.0",
      "16.0",
      "7.0",
      "2.0",
      "1.0",
      "2.0",
      "-4.0",
      "2.0",
      "16.0",
      "7.0",
      "2.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "from math import sqrt\nfrom sympy import symbols, solve\n\nx, y = symbols('x, y')\nA, B, C, D = 1, 1, -4, 2\n\neq = x**2 + A*y**2 + B*x + C*y + D\n\nsolution = solve(eq)\n\nprint(solution)"
  },
  {
    "example_id": 17,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "66.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\nz = symbols('z')\neq = x + y + z - 66\nsolution = solve(eq, [x, y, z])\nx_value = solution[0][0]\ny_value = solution[0][1]\nz_value = solution[0][2]\nprint(f'x = {x_value}')\nprint(f'y = {y_value}')\nprint(f'z = {z_value}')"
  },
  {
    "example_id": 18,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "a = 11\nb = 25 - a\nsmaller = min(a, b)\nprint(smaller)"
  },
  {
    "example_id": 19,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a = symbols('a')\neq = (8**4)**(1/12)\nsolution = expand(eq)\nprint(solution)"
  },
  {
    "example_id": 20,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "444.0"
    ],
    "annotated_answers": [
      "445.0"
    ],
    "solution": "# Define variables\nx = symbols('x')\n\n# Define equation\neq = (2.75*x)-1000 - (0.5*x)\n\n# Solve for x\nsolution = solve(eq, x)\n\n# Print solution\nprint(floor(solution[0]))"
  },
  {
    "example_id": 21,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "print(50 / 100 * (1 / 3) * 36)"
  },
  {
    "example_id": 22,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "2.0",
      "3.0",
      "5.0",
      "2.0"
    ],
    "annotated_answers": [
      "48.0"
    ],
    "solution": "x = symbols('x')\neq = x + (1/x) - 7\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 23,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "f = symbols('f(x)')\ng = symbols('g(x)')\nf_degree = floor(f.as_poly().degree())\ng_degree = floor(g.as_poly().degree())\nmax_degree = max(f_degree, g_degree)\nmin_degree = min(f_degree, g_degree)\nprint(max_degree + min_degree)"
  },
  {
    "example_id": 24,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "512.0"
    ],
    "annotated_answers": [
      "512.0"
    ],
    "solution": "x = 2\nexpression = x ** (x + 1) ** x\nprint(expression)"
  },
  {
    "example_id": 25,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "65536.0"
    ],
    "annotated_answers": [
      "64.0"
    ],
    "solution": "n = 2\nfor i in range(15):\n    n = n * 2\nprint(n)"
  },
  {
    "example_id": 26,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-9.0"
    ],
    "annotated_answers": [
      "-9.0"
    ],
    "solution": "y = symbols('y')\neq = y**2 - 81\nsolution = solve(eq, y)\ny_value = solution[0]\nprint(y_value)"
  },
  {
    "example_id": 27,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-27.0"
    ],
    "annotated_answers": [
      "1120.0"
    ],
    "solution": "x = symbols('x')\neq = (x**2) - (27**2)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 28,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "print(math.log(27, 3))"
  },
  {
    "example_id": 29,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "28.0",
      "26.0"
    ],
    "annotated_answers": [
      "194.0"
    ],
    "solution": "n = symbols('n')\na1 = 2\na9 = 30\nd = a9 - a1\nt = (n - 1) * d + a1\nprint(t)"
  },
  {
    "example_id": 30,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "42.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "n = 9\nm = 2\nS = sum(range(n, 0, -1))\nN = n * (n + 1) // 2\nM = m * (m + 1) // 2\nS = N - M\nprint(S)"
  },
  {
    "example_id": 31,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-312.5",
      "541.265877365274"
    ],
    "annotated_answers": [
      "625.0"
    ],
    "solution": "x = symbols('x')\neq = (-125)**(4/3)\nsolution = expand(eq)\nprint(solution)"
  },
  {
    "example_id": 32,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-4.0",
      "4.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "x = symbols('x')\nf = (1/(abs(x**2+3*x-4)+abs(x**2+9*x+20)))\nf_expanded = expand(f)\ndomain = []\nfor i in range(-5, 5):\n    for j in range(-5, 5):\n        if abs(i**2+3*i*j-4) + abs(i**2+9*i*j+20) == 0:\n            domain.append(i)\nprint(domain)"
  },
  {
    "example_id": 33,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "-5.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "x1, y1 = 7, -6\nx2, y2 = -3, -4\nx_center = (x1 + x2) / 2\ny_center = (y1 + y2) / 2\ncenter = (x_center, y_center)\nprint(center)"
  },
  {
    "example_id": 34,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "a = symbols('a')\neq = (1/(1-a)) * a * (1/(1-a))\nsolution = simplify(eq)\nprint(solution)"
  },
  {
    "example_id": 35,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "0.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\neq = (x+1)*(x+2) - (x+3)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(expand(x_value))\nprint(floor(simplify(expand(x_value))))"
  },
  {
    "example_id": 36,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "4.0",
      "33.0",
      "4.0",
      "33.0",
      "4.0",
      "7.0",
      "4.0",
      "-1.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "x = symbols('x')\na, b = solve(2*x**2 - 7*x + 2, x)\nprint(a, b)\n\n# find the expression for the sum of the reciprocals\n# use the simplify function to get rid of the extra terms\nprint(simplify(1/(a - 1) + 1/(b - 1)))"
  },
  {
    "example_id": 37,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "from sympy import I\nexpr = (9-4*I) - (-3-4*I)\nprint(expr.simplify())"
  },
  {
    "example_id": 38,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "100.0",
      "100.0",
      "100.0"
    ],
    "annotated_answers": [
      "-55.0"
    ],
    "solution": "a, b, c = symbols('a b c')\n\n# find equation\neq = a*(-1)**2 + b*(-1) + c\n\n# find coefficients\ncoeff = eq.subs([(-1, 0), (0, 5), (5, 0)])\n\n# find 100a+10b+c\ncoeff = floor(coeff*100)/100\n\nprint(coeff)"
  },
  {
    "example_id": 39,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "6.0",
      "7.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "a = symbols('a')\neq = 12**2 * 18**3 - 2**a * 3**a\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 40,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "219.0"
    ],
    "annotated_answers": [
      "103.0"
    ],
    "solution": "# Solve for angle_2\nangle_1 = 129\nangle_2 = angle_1 + 180\nangle_3 = angle_1 + 90\n\n# Calculate the difference of angles\ndiff = angle_2 - angle_3\n\n# Solve for the value of the angle\nangle_2_val = angle_2 - diff\n\n# Print the value of the angle\nprint(angle_2_val)"
  },
  {
    "example_id": 41,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "n = 12\ns = symbols('s')\neq = s**2 - n\nsolution = solve(eq, s)\ns_value = solution[0]\ns_value = simplify(s_value)\ns_value = floor(s_value)\nprint(s_value)"
  },
  {
    "example_id": 42,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1001.0",
      "1002001.0"
    ],
    "annotated_answers": [
      "575.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\nn = symbols('n')\n\n# The line passing through (1001,n) and parallel to the y-axis\neq = (1001 - x)/(1001 - 1000) + y/1001\n\n# Solve for y\nsolution = solve(eq, y)\n\n# Find the integer solution\ny_value = floor(simplify(solution[0]))\nprint(y_value)"
  },
  {
    "example_id": 43,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "expr = (1024/2)/(0.125*2**12)\nprint(expr)"
  },
  {
    "example_id": 44,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "60.0",
      "7.0",
      "16.0",
      "7.0",
      "15.0",
      "4.0",
      "7.0",
      "16.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "# Define variables\ny = symbols('y')\nb = symbols('b')\n\n# Define equations\neq1 = (y/3) - b/4\neq2 = (y + 5)/7 - b/3\n\n# Find solution for b\nsolution = solve(eq1 - eq2, b)\nb_value = solution[0]\n\n# Find solution for y\nsolution = solve(eq1 - eq2, y)\ny_value = solution[0]\n\n# Print solution\nprint(b_value)\nprint(y_value)"
  },
  {
    "example_id": 45,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "13.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "import math\n\ndef distance(p1, p2):\n    return math.sqrt((p1[0] - p2[0]) ** 2 + (p1[1] - p2[1]) ** 2)\n\nprint(distance((1, 2), (-4, -10)))"
  },
  {
    "example_id": 46,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0",
      "2.0",
      "36.0",
      "49.0",
      "2.0",
      "7.0",
      "2.0",
      "-4.0",
      "2.0",
      "36.0",
      "49.0",
      "2.0",
      "7.0",
      "2.0"
    ],
    "annotated_answers": [
      "-10.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\neq = (a*a + b*b) + (6*a - 8*b) + (1*a - 1*b)\nsolution = solve(eq, a, b)\na_value = solution[0]\nb_value = solution[1]\nprint(a_value + b_value)"
  },
  {
    "example_id": 47,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a = 4\nb = 2\nc = -1\nprint(a + b + c)"
  },
  {
    "example_id": 48,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2022.0",
      "-2022.0",
      "-2022.0",
      "-2022.0",
      "-2022.0"
    ],
    "annotated_answers": [
      "286.0"
    ],
    "solution": "n = symbols('n')\na = 13\nb = 20\nc = 27\nd = 34\nx = 2008\nf = (a + (n-1)*(b-a)) - (c + (n-1)*(d-c))\ng = f - x\nh = g.subs(n, 1)\ni = h.subs(n, 2)\nj = h.subs(n, 3)\nk = h.subs(n, 4)\nl = h.subs(n, 5)\nm = h.subs(n, 6)\nprint(simplify(i))\nprint(simplify(j))\nprint(simplify(k))\nprint(simplify(l))\nprint(simplify(m))"
  },
  {
    "example_id": 49,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "28.0"
    ],
    "annotated_answers": [
      "28.0"
    ],
    "solution": "print(int(14.6) - int(-14.6))"
  },
  {
    "example_id": 50,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "1.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\nb = symbols('b')\neq = 3*x + x**(-1) - b\nsolution = solve(eq, b)\nb_value = solution[0]\nprint(b_value)"
  },
  {
    "example_id": 51,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5000.0"
    ],
    "annotated_answers": [
      "5000.0"
    ],
    "solution": "print(255**2 - 245**2)"
  },
  {
    "example_id": 52,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "import math\n\nx1 = 2\ny1 = 3\nx2 = 4\ny2 = 3\n\nb = (y2 - y1) / (x2 - x1)\nc = y1 - b * x1\n\nprint(c)"
  },
  {
    "example_id": 53,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x = symbols('x')\neq = 7**(log(49, x)) - 49\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 54,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "3.0",
      "3.0",
      "5.0",
      "2.0",
      "3.0",
      "5.0",
      "3.0",
      "1.0",
      "2.0",
      "5.0",
      "5.0",
      "2.0",
      "3.0",
      "5.0",
      "3.0",
      "1.0",
      "2.0",
      "5.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "b = symbols('b')\nc = symbols('c')\neq1 = 125**b - 5\neq2 = 27**b - c\nsolution = solve([eq1, eq2], [b, c])\nprint(solution)"
  },
  {
    "example_id": 55,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "8.0",
      "3.0",
      "2.0",
      "24.0",
      "62.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "from sympy import symbols, Min\n\nx, y = symbols('x y')\nf = 2*x**2+3*y**2+8*x-24*y+62\nprint(Min(f, x, y))"
  },
  {
    "example_id": 56,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "x = symbols('x')\nF = floor(x/3)\nM = floor(x/4)\neq = F - M\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 57,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "s = symbols('s')\nx = symbols('x')\neq = (1/2)*x**2 + s*x - 1/2\nsolution = solve(eq, x)\nsum = 0\nfor value in solution:\n    sum += s\nprint(sum)"
  },
  {
    "example_id": 58,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "4.0",
      "7.0",
      "4.0",
      "2.0",
      "8.0",
      "4.0",
      "7.0",
      "2.0",
      "7.0",
      "8.0",
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "a, b, c = symbols('a, b, c')\neq1 = a - 7*b + 8*c - 4\neq2 = 8*a + 4*b - c - 7\n\n# Solve equations\nsol1 = solve(eq1, a)\nsol2 = solve(eq2, b)\nsol3 = solve(eq2, c)\n\n# Find a^2 - b^2 + c^2\na_value = sol1[0]\nb_value = sol2[0]\nc_value = sol3[0]\na_squared = a_value**2\nb_squared = b_value**2\nc_squared = c_value**2\n\n# Print solution\nprint(a_squared - b_squared + c_squared)"
  },
  {
    "example_id": 59,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "15.0",
      "90.0",
      "6.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "a = 3*5\nb = 15*6\nc = 6\nd = 1\n\nad = a*d\nbd = b*d\ncd = c*d\n\nprint(ad)\nprint(bd)\nprint(cd)"
  },
  {
    "example_id": 60,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "24.0"
    ],
    "annotated_answers": [
      "216.0"
    ],
    "solution": "r1 = 3*3\nh1 = 24\nv1 = (1/3) * pi * (r1**2) * h1\n\nr2 = 3*3\nh2 = 24\nv2 = (1/3) * pi * (r2**2) * h2\n\nprint(h2)"
  },
  {
    "example_id": 61,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "x = 3\ny = 9\neq = y**2 - 3*x*y + 8\nprint(eq)"
  },
  {
    "example_id": 62,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "# Define variables\na, b, c, x, y = symbols('a b c x y')\n\n# Define equation\neq1 = a*x + b*y + c - x - 7\neq2 = a + b*x + c*y - 2*x - 6*y\neq3 = a*y + b + c*x - 4*x - y\n\n# Solve equations\nsolution = solve([eq1, eq2, eq3], [a, b, c])\n\n# Print solution\nprint(solution)"
  },
  {
    "example_id": 63,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "3.0",
      "3.0"
    ],
    "annotated_answers": [
      "165.0"
    ],
    "solution": "n = symbols('n')\nx = 3*n\ny = floor(x)\nz = simplify(x-y)\nw = z**3\nprint(w)"
  },
  {
    "example_id": 64,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4012005.0",
      "4002.0"
    ],
    "annotated_answers": [
      "4005.0"
    ],
    "solution": "n = 2003\na = symbols('a')\nx = (2*a - 1)/(2*a + 1)\ny = (2*a + 1)/(2*a - 1)\nz = x + y\nsolution = solve(z - n, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 65,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x = symbols('x')\nc = symbols('c')\nf = 4*x**7 + x**5 + 3*x**2 - 2*x + c\neq = f.subs(x, -1)\nsolution = solve(eq, c)\nc_value = solution[0]\nprint(c_value)"
  },
  {
    "example_id": 66,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "15.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "pints_per_mile = 1.5\nmiles = 10\ntotal_pints = pints_per_mile * miles\nprint(total_pints)"
  },
  {
    "example_id": 67,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a, b = symbols('a b')\neq = a*b - a + b\neq = eq.expand()\neq = eq.subs(a, b)\neq = eq.subs(b, a)\neq = eq.simplify()\n\n# find the smallest possible value of the expression\neq = eq.subs(a, 0)\neq = eq.subs(b, 0)\neq = eq.simplify()\n\nprint(eq)"
  },
  {
    "example_id": 68,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "13.0",
      "16.0",
      "1849.0",
      "16.0",
      "16.0",
      "1849.0",
      "16.0",
      "16.0",
      "13.0",
      "16.0"
    ],
    "annotated_answers": [
      "3.5"
    ],
    "solution": "# Assign symbols for t and y\nt, y = symbols('t y')\n\n# Define the equation\neq = y - (-16*t**2 + 26*t + 105)\n\n# Solve for t\nsolution = solve(eq, t)\n\n# Print the solution\nprint(solution)"
  },
  {
    "example_id": 69,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "8011.0",
      "1.0",
      "8011.0",
      "4006.0",
      "4006.0",
      "4006.0",
      "4006.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "from sympy import symbols, expand, solve, pprint\nx = symbols('x')\neq = 2003*x + 1 + 1/x - 0\nsolution = solve(eq, x)\npprint(solution)"
  },
  {
    "example_id": 70,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "5.4"
    ],
    "solution": "x = 3"
  },
  {
    "example_id": 71,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-10.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "n = symbols('n')\neq = (n**2-n)/2 - 55\nsolution = solve(eq, n)\nn_value = solution[0]\nprint(n_value)"
  },
  {
    "example_id": 72,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "4.0",
      "233.0",
      "4.0"
    ],
    "annotated_answers": [
      "0.5"
    ],
    "solution": "# x = symbols('x')\nx = symbols('x')\n# eq = (2*x + 5)*(x - 3) - 14\neq = (2*x + 5)*(x - 3) - 14\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 73,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-5.0",
      "3.0",
      "15.0",
      "2.0",
      "62.0",
      "56.0",
      "2.0",
      "3.0",
      "4.0"
    ],
    "annotated_answers": [
      "-5.0"
    ],
    "solution": "x = symbols('x')\na = symbols('a')\nf = (x**2 - 3*x + 4)*(2*x**2 + a*x + 7) - 2*x**4 + 11*x**3 - 30*x**2 - 41*x + 28\nsolution = solve(f, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 74,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "6.0",
      "2.0",
      "2.0",
      "6.0",
      "2.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\neq = 2*x**2 + 4*x - 1\nsolution = solve(eq, x)\nsum_of_squares = 0\nfor i in solution:\n    sum_of_squares += i**2\nprint(sum_of_squares)"
  },
  {
    "example_id": 75,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "1.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "x1, y1, x2, y2 = symbols('x1 y1 x2 y2')\neq = (x2 - x1) + (y2 - y1)\nsolution = solve(eq, x1, y1, x2, y2)\nprint(solution)"
  },
  {
    "example_id": 76,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0",
      "10.0",
      "26.0"
    ],
    "annotated_answers": [
      "40.0"
    ],
    "solution": "Wells = 105\nTed = 105\nVino = 105\n\nWells_cost = 10\nTed_cost = 10\nVino_cost = 26\n\nWells_extra_hours = 0\nTed_extra_hours = 0\nVino_extra_hours = 0\n\nWells_extra_cost = 0\nTed_extra_cost = 0\nVino_extra_cost = 0\n\n# Calculate the extra hours\nWells_extra_hours = Wells - 105\nTed_extra_hours = Ted - 105\nVino_extra_hours = Vino - 105\n\n# Calculate the extra cost\nWells_extra_cost = Wells_extra_hours * 10\nTed_extra_cost = Ted_extra_hours * 10\nVino_extra_cost = Vino_extra_hours * 26\n\n# Calculate the total cost\nWells_total_cost = Wells_cost + Wells_extra_cost\nTed_total_cost = Ted_cost + Ted_extra_cost\nVino_total_cost = Vino_cost + Vino_extra_cost\n\n# Print the results\nprint('Wells\\'s total cost is:', Wells_total_cost)\nprint('Ted\\'s total cost is:', Ted_total_cost)\nprint('Vino\\'s total cost is:', Vino_total_cost)"
  },
  {
    "example_id": 77,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "24.0"
    ],
    "annotated_answers": [
      "73.5"
    ],
    "solution": "k = 56\nj = 42\nk_value = 32\nk_value_decimal = (k_value/k) * j\nprint(round(k_value_decimal, 1))"
  },
  {
    "example_id": 78,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "43.0"
    ],
    "annotated_answers": [
      "43.0"
    ],
    "solution": "x = 5 ** 2 + 18\nprint(x)"
  },
  {
    "example_id": 79,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "1.0",
      "3.0"
    ],
    "annotated_answers": [
      "2015.0"
    ],
    "solution": "from sympy import Symbol, solve\n\nb = Symbol('b')\nx = Symbol('x')\n\neq = (b**2 + b)/2 - (b-1)**2/2 - x\nsolution = solve(eq, b)\n\nb_value = solution[0]\nprint(b_value)"
  },
  {
    "example_id": 80,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "350.0"
    ],
    "annotated_answers": [
      "350.0"
    ],
    "solution": "print(113+276-13-26)"
  },
  {
    "example_id": 81,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "400.0"
    ],
    "solution": "length = symbols('length')\nwidth = symbols('width')\nperimeter = symbols('perimeter')\narea = symbols('area')\n\neq1 = length*width - perimeter\neq2 = length*width*4 - area\n\nsolution = solve((eq1, eq2), (length, width, perimeter, area))\n\nlength_value = solution[0][0]\nwidth_value = solution[0][1]\nperimeter_value = solution[0][2]\narea_value = solution[0][3]\n\nprint(f'The length of the rectangle is {length_value} cm.')\nprint(f'The width of the rectangle is {width_value} cm.')\nprint(f'The perimeter of the rectangle is {perimeter_value} cm.')\nprint(f'The area of the rectangle is {area_value} cm^2.')"
  },
  {
    "example_id": 82,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\n\n# simplify the equation\neq = expand(simplify(2**x*2**x + 2*2**x + 10 - 3*4**x - 12))\n\n# solve the equation\nsolution = solve(eq, x)\n\n# print the result\nprint(solution)"
  },
  {
    "example_id": 83,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = (2**(x+1))**3 * 4**x - 8192\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 84,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "a, b, x = symbols('a b x')\neq = a**2 + 2*a*b + b**2 - 2**x\nsolution = solve(eq, x)\nsum_of_values_of_x = 0\nfor i in solution:\n    sum_of_values_of_x += floor(i)\nprint(sum_of_values_of_x)"
  },
  {
    "example_id": 85,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "# define f(x) and g(x)\nf = symbols('f(x)')\ng = symbols('g(x)')\n\n\n# define h(x)\nh = symbols('h(x)')\n\n\n# define the equation\neq = f(g(x)) + g(h(x)) + h(f(x))\n\n\n# solve for h(x)\nsolution = solve(eq, h)\nh_value = solution[0]\n\n\n# find the degree of h(x)\ndegree = floor(log(h_value, 10) + 1)\nprint(degree)"
  },
  {
    "example_id": 86,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "29.0",
      "2.0",
      "1.0",
      "2.0",
      "29.0",
      "2.0",
      "7.0",
      "0.0",
      "2.0"
    ],
    "annotated_answers": [
      "-15.0"
    ],
    "solution": "x = symbols('x')\neq1 = (x**2) - 7 - x\neq2 = x - 7\nsolution1 = solve(eq1, x)\nsolution2 = solve(eq2, x)\nsolution3 = solve(eq1 - eq2, x)\nprint(solution1)\nprint(solution2)\nprint(solution3)"
  },
  {
    "example_id": 87,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "import math\n\n\ndef f(n):\n    if n >= 4:\n        return math.floor(n)\n    else:\n        return math.ceil(n)\n\n\nprint(f(math.pi / 3) + f(math.sqrt(45)) + f(8 ** (2 / 3)))"
  },
  {
    "example_id": 88,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "11.0",
      "15.0",
      "11.0",
      "15.0"
    ],
    "annotated_answers": [
      "38.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = 5*x - 2*y - 7\neq2 = 3*x + y - 2\neq1_solution = solve(eq1, x)\neq2_solution = solve(eq2, x)\neq3 = eq1_solution[0] - eq2_solution[0]\neq4 = expand(eq3)\neq5 = floor(eq4)\neq6 = simplify(eq5)\nprint(eq6)"
  },
  {
    "example_id": 89,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "from sympy import symbols, solveset, S\nx = symbols('x')\nf = (x-3)/(x**2+7*x-30)\nprint(len(list(solveset(f, x))))"
  },
  {
    "example_id": 90,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "75.0"
    ],
    "annotated_answers": [
      "75.0"
    ],
    "solution": "volume = 600/8\nprint(volume)"
  },
  {
    "example_id": 91,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "print(531**2 - 2*531*530 + 530**2)"
  },
  {
    "example_id": 92,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "1.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x = symbols('x')\neq = x**(-1) - x\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 93,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "treeks = 10\nsquigs = 3\ngoolees = 1\n\ntotal_weight = treeks * (squigs + goolees)\n\nequal_weight = squigs + 1\n\nprint(total_weight // equal_weight)"
  },
  {
    "example_id": 94,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "a, b = symbols('a b')\nratio = a / b\nnew_ratio = (a - 4) / (b + 8)\neq = ratio - new_ratio\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 95,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x = symbols('x')\nh = sqrt(25-x**2) + sqrt(x-2)\nprint(h.diff(x))"
  },
  {
    "example_id": 96,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "4.0",
      "500.0",
      "2.0",
      "2.0",
      "125.0",
      "2.0",
      "2.0",
      "4.0",
      "500.0",
      "2.0",
      "1.0"
    ],
    "annotated_answers": [
      "187.5"
    ],
    "solution": "# Declare variables\nx = symbols('x')\ny = symbols('y')\n\n# Set up the equation\neq = (x**2 + 125)/(x + 1) - y\n\n# Solve for x\nsolution = solve(eq, x)\n\n# Evaluate x\nx_value = solution[0]\n\n# Calculate the number of calories\ncalories = (x_value**2 + 125)/(x_value + 1)\n\n# Print the answer\nprint(calories)"
  },
  {
    "example_id": 97,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "k = symbols('k')\neq = (3**k)**6 - 3**6\nsolution = solve(eq, k)\nk_value = solution[0]\nprint(k_value)"
  },
  {
    "example_id": 98,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "print(2*(-2)**2+3*(-2)+4)"
  },
  {
    "example_id": 99,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "243.0"
    ],
    "annotated_answers": [
      "243.0"
    ],
    "solution": "a, b = symbols('a, b')\neq1 = 2**a - 32\neq2 = a**b - 125\nsolution = solve([eq1, eq2], [a, b])\na_value = solution[0][0]\nb_value = solution[0][1]\nprint(b_value**a_value)"
  },
  {
    "example_id": 100,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "40.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "p = symbols('p')\nexpr = (120-3*p)\nsolution = solve(expr, p)\nprint(solution)"
  },
  {
    "example_id": 101,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "4.0",
      "2.0",
      "2.0",
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "a = symbols('a')\nx = symbols('x')\neq = a*x**2 + 8*x + 4\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 102,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-100.0",
      "10.0",
      "3310.0",
      "1.0",
      "3.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "# Initial deposit\nd = 20000\n\n# Desired amount\ndesired = 66200\n\n# Interest rate\nr = symbols('r')\n\n# Minimum interest rate to reach desired amount\nsolution = solve(d*(1+r)**3 - desired, r)\n\n# Print the minimum interest rate\nprint(solution[0] * 100)"
  },
  {
    "example_id": 103,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "80.0"
    ],
    "annotated_answers": [
      "80.0"
    ],
    "solution": "print(34-10+20-9+55-10)"
  },
  {
    "example_id": 104,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "700.0"
    ],
    "annotated_answers": [
      "700.0"
    ],
    "solution": "print(32**2 - 18**2)"
  },
  {
    "example_id": 105,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.25"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x = symbols('x')\ny = (3/2)**2\nz = (3/2)**(2)\nresult = (y + ceil(z))\nprint(result)"
  },
  {
    "example_id": 106,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "16.0",
      "15.0",
      "15.0",
      "16.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "for a in range(1, 20):\n    for b in range(1, 20):\n        if (a * b) - (a + b) == 39:\n            print(a + b)"
  },
  {
    "example_id": 107,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\nF = a**b + c*d\neq = F.subs({a: 6, b: b, c: 4, d: 3}) - 48\nsolution = solve(eq, b)\nb_value = solution[0]\nprint(b_value)"
  },
  {
    "example_id": 108,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "def f(n):\n    if n > 1:\n        return n**3 + 2*n - 1\n    else:\n        return n - 1\n\nprint(f(0) + f(1) + f(2))"
  },
  {
    "example_id": 109,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-10.8696044010894"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\nf = expand(Min(2, -x**2 - 1, sqrt(x)))\nf_value = f.subs(x, pi)\nprint(f_value)"
  },
  {
    "example_id": 110,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "4.0",
      "2.0",
      "3.0",
      "4.0",
      "3.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "x1, x2, x3 = symbols('x1 x2 x3')\na = (x1 + x2 + x3)/3\nb = (x1 + x2 + 2*x3)/3\nc = (x1 + 2*x2 + x3)/3\nS = a + b + c\nS2 = S**2\nprint(S2)"
  },
  {
    "example_id": 111,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-33.0"
    ],
    "annotated_answers": [
      "27.0"
    ],
    "solution": "x = symbols('x')\neq = (x**2) - 6*x + 2 - 29\nsolution = solve(eq, x)\na, b = solution\nprint(2*a - 3*b)"
  },
  {
    "example_id": 112,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "20.0",
      "2.0",
      "2.0",
      "20.0",
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "a = symbols('a')\nx = symbols('x')\neq = x**2 + a*x + 5*a\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 113,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0",
      "8.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "a, b = symbols('a b')\nfrac = a/b\nfrac_value = frac.subs(b, 8)\nfrac_value_plus_a = frac_value + 5\nfrac_value_plus_a_plus_b = frac_value_plus_a + 8\nfrac_value_plus_a_plus_b_minus_5 = frac_value_plus_a_plus_b - 5\nfrac_value_plus_a_plus_b_minus_5_divided_by_b = frac_value_plus_a_plus_b_minus_5/b\nprint(frac_value_plus_a_plus_b_minus_5_divided_by_b)"
  },
  {
    "example_id": 114,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-6.0"
    ],
    "annotated_answers": [
      "-6.0"
    ],
    "solution": "def g(x):\n    return -6*sin(x*pi/6)\n\nprint(g(g(-1)))"
  },
  {
    "example_id": 115,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "c = -1"
  },
  {
    "example_id": 116,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "1.0"
    ],
    "solution": ""
  },
  {
    "example_id": 117,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\neq = (5*x)**(1/2)*(10*x)**(1/2)*(18*x)**(1/2) - 30\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 118,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "m = symbols('m')\neq = (3*m)**2 + 12 - 3*m**2 - 12\nsolution = solve(eq, m)\nm_value = solution[0]\nprint(m_value)"
  },
  {
    "example_id": 119,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\neq = 2*x*(x-10) == -50\nsolution = solve(eq, x)\nsum_of_all_values = sum(solution)\nprint(sum_of_all_values)"
  },
  {
    "example_id": 120,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\neq = 2**8 - 4**x\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 121,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "34.0"
    ],
    "annotated_answers": [
      "34.0"
    ],
    "solution": "y = 8 - 5 * (-2) + 4 * (-2) ** 2\nprint(y)"
  },
  {
    "example_id": 122,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "20.0"
    ],
    "solution": ""
  },
  {
    "example_id": 123,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "5.0",
      "5.0",
      "-2399.0",
      "20.0",
      "11.0",
      "5.0",
      "5.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "# define variables\nx = symbols('x')\ny = symbols('y')\nk = symbols('k')\n# define equations\neq1 = (9 - x)**2 + (1 - y)**2 - 1\neq2 = (19 - x)**2 + (k - y)**2 - 1\neq3 = (7 - x)**2 + (0 - y)**2 - 1\n# solve equations\nsol = solve([eq1, eq2, eq3], [x, y, k])\n# get the value of k\nk_value = sol[0][2]\n# print the value of k\nprint(k_value)"
  },
  {
    "example_id": 124,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "64725.0"
    ],
    "annotated_answers": [
      "74726.0"
    ],
    "solution": "# Define the initial investment\nI = 10000\n\n# Define the annual return rate\nr = 0.06\n\n# Define the number of years\nn = 5\n\n# Define the present value\nPV = 100000\n\n# Define the future value\nFV = I * (1 + r)**n\n\n# Find the difference between the present value and the future value\ndiff = PV - FV\n\n# Find the amount to invest\namount = floor(diff / (1 + r)**n)\n\n# Print the amount to invest\nprint(amount)"
  },
  {
    "example_id": 125,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0",
      "9.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 - 5*x - 36\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 126,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "print(log(1, 2))"
  },
  {
    "example_id": 127,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "24.0"
    ],
    "annotated_answers": [
      "24.0"
    ],
    "solution": "N = 3 * 2**3\nprint(N)"
  },
  {
    "example_id": 128,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "34.0",
      "5.0",
      "3.0",
      "5.0",
      "85.0",
      "6.0",
      "2893.0",
      "5.0",
      "85.0"
    ],
    "annotated_answers": [
      "93.0"
    ],
    "solution": "from sympy import sqrt, simplify, powsimp\n\nA = 6\nB = simplify(sqrt(245) + 3*sqrt(125) + 4*sqrt(45))\nC = simplify(A/B)\n\nprint(A, B, C)\nprint(A + B + C)"
  },
  {
    "example_id": 129,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "14.0"
    ],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "u = symbols('u')\neq = (u + 4)*(u - 1) - (u - 3)*(u + 6)\nsolution = simplify(eq)\nprint(solution)"
  },
  {
    "example_id": 130,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "13.5"
    ],
    "annotated_answers": [
      "13.5"
    ],
    "solution": "# initialize variables\nA = 1/4\nB = -1/2\n\n# find absolute value of difference between 18A and 18B\ndiff = abs(18*A - 18*B)\n\n# print result\nprint(diff)"
  },
  {
    "example_id": 131,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "from sympy import symbols, solve\nf, g = symbols('f g', cls=Function)\neq = (f(g(1)) * g(f(1)))\nprint(eq.evalf())"
  },
  {
    "example_id": 132,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "a = 2\nb = 3\nsum = a + b\nprint(sum)"
  },
  {
    "example_id": 133,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "4.0",
      "2.0",
      "6.0",
      "2.0",
      "4.0",
      "2.0",
      "8.0",
      "2.0",
      "4.0",
      "6.0",
      "2.0",
      "4.0",
      "8.0",
      "2.0",
      "12.0",
      "2.0",
      "16.0",
      "100.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "a, b, c, d, m, n = symbols('a, b, c, d, m, n')\n\n# A's new coordinates\na_new = a + 14\nb_new = b + 20\n\n# B's new coordinates\nc_new = c - 2\nd_new = d - 4\n\n# Midpoint between A and B\nM = (a + c)/2, (b + d)/2\n\n# Midpoint between A' and B'\nM_new = (a_new + c_new)/2, (b_new + d_new)/2\n\n# Distance between M and M'\nd_M_M_new = expand(sqrt((m - M_new[0])**2 + (n - M_new[1])**2))\n\nprint(d_M_M_new)"
  },
  {
    "example_id": 134,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "30.0",
      "2.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "m = symbols('m')\nn = symbols('n')\n\n# Solve for n\neq1 = 70 + m + n - 20 - 80\neq2 = 2*n - m\n\nsolution1 = solve(eq1, n)\nsolution2 = solve(eq2, n)\n\nn_value = solution1[0]\nn_value_2 = solution2[0]\n\nprint(n_value, n_value_2)"
  },
  {
    "example_id": 135,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "5.0",
      "3.0",
      "1.0",
      "4.0",
      "5.0",
      "1.0",
      "5.0",
      "1.0",
      "1.0",
      "5.0",
      "3.0",
      "1.0",
      "4.0",
      "5.0",
      "1.0",
      "5.0",
      "48.0"
    ],
    "annotated_answers": [
      "125.0"
    ],
    "solution": "from sympy import sqrt\nx = (4 / (sqrt(5) + 1) * sqrt(5) + 1) * (sqrt(5) + 1) * (sqrt(5) + 1) * (sqrt(5) + 1)\nprint(x)\nprint((x + 1)**48)"
  },
  {
    "example_id": 136,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "f = lambda x: x + 1\ng = lambda x: x**2 + 3\nprint(f(g(2)))"
  },
  {
    "example_id": 137,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-3.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "print((ceil(3.6**2))-(ceil(3.6))**2)"
  },
  {
    "example_id": 138,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "121.0"
    ],
    "annotated_answers": [
      "121.0"
    ],
    "solution": "n = symbols('n')\neq = (400)**(1/2) - (81)**(1/2) - (n)**(1/2)\nsolution = solve(eq, n)\nn_value = solution[0]\nprint(n_value)"
  },
  {
    "example_id": 139,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "361.0"
    ],
    "annotated_answers": [
      "361.0"
    ],
    "solution": "x = 5\ny = 19 - 7 * x\nprint(49 * x ** 2 + 14 * x * y + y ** 2)"
  },
  {
    "example_id": 140,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "0.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a, b = symbols('a b')\neq1 = 5*a + 2*b\neq2 = a*b\neq = [eq1, eq2]\nsolution = solve(eq, [a, b])\nprint(solution)"
  },
  {
    "example_id": 141,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "# Define variables\na = symbols('a')\nb = symbols('b')\nc = symbols('c')\nd = symbols('d')\ne = symbols('e')\nf = symbols('f')\ng = symbols('g')\nh = symbols('h')\ni = symbols('i')\nj = symbols('j')\nk = symbols('k')\nl = symbols('l')\nm = symbols('m')\nn = symbols('n')\n\n# Define equation\neq = a**2 + b**2 + c**2 + d**2 + e**2 + f**2 + g**2 + h**2 + i**2 + j**2 + k**2 + l**2 + m**2 + n**2 - 15**2\n\n# Find solutions\nsolution = solve(eq)\n\n# Print solution\nprint(solution)"
  },
  {
    "example_id": 142,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "5.0",
      "2.0",
      "3.0",
      "5.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 - x - 1\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value**3 - 2*x_value + 1)"
  },
  {
    "example_id": 143,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.162277660112833"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "def find_value(n):\n    if n == 1:\n        return 6\n    else:\n        return 6 + 1/find_value(n-1)\n\nvalue = find_value(7)\nprint(value)"
  },
  {
    "example_id": 144,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "540.0"
    ],
    "annotated_answers": [
      "180.0"
    ],
    "solution": "# Abby and Bart\nabby_bart = 160\n# Bart and Cindy\nbart_cindy = 180\n# Cindy and Damon\ncindy_damon = 200\n\nabby_damon = abby_bart + bart_cindy + cindy_damon\n\nprint(abby_damon)"
  },
  {
    "example_id": 145,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = -5\ny = 3\npoint_a_sum = x + y\nprint(point_a_sum)"
  },
  {
    "example_id": 146,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.5",
      "1.0",
      "0.5",
      "2.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "x = symbols('x')\neq = (1+x**0.5)/(2+x**0.5)\nsolution = simplify(eq)\nprint(solution)"
  },
  {
    "example_id": 147,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "a = 2\nb = 3\n\np = lambda x: x**2 + a*x + b\n\nsol = solve(p(a) - p(b), a+b)\nprint(sol)"
  },
  {
    "example_id": 148,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "7.0"
    ],
    "solution": ""
  },
  {
    "example_id": 149,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "0.0",
      "2.0",
      "1.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "z = 1j\nprint(z**2)\nprint(z+2)"
  },
  {
    "example_id": 150,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-114.0"
    ],
    "annotated_answers": [
      "-114.0"
    ],
    "solution": "sum = 0\nfor x in range(-30, 27):\n    sum += x\nprint(sum)"
  },
  {
    "example_id": 151,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "27.84"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "# Number of students taking the test\nn = 108\n\n# Number of cookies eaten per student\nc = 2\n\n# Number of cookies baked by Walter and Gretel\nb = 216\n\n# Number of cookies per pan\np = 15\n\n# Number of pans of cookies baked\ns = b/p\n\n# Number of students who baked cookies\nj = s/c\n\n# Number of cookies eaten by all students\ne = j * c\n\n# Number of cookies left over\no = e - n * c\n\n# Number of cookies needed\nr = b - o\n\n# Number of pans needed\na = r/p\n\n# Number of tablespoons of butter needed\nb = a * 8\n\n# Number of sticks of butter needed\ns = b / 8\n\nprint(s)"
  },
  {
    "example_id": 152,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "3.0",
      "29.0",
      "3.0",
      "2.0",
      "56.0",
      "9.0",
      "-1.0",
      "3.0",
      "29.0",
      "3.0",
      "2.0",
      "2.0",
      "100.0",
      "9.0",
      "-1.0",
      "3.0",
      "29.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "64.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = (2*x + 3*y)**2 - 4\neq2 = x*y - 5\nsolution = solve([eq1, eq2], [x, y])\nx_value = solution[0][0]\ny_value = solution[0][1]\nprint(4*x_value**2 + 9*y_value**2)"
  },
  {
    "example_id": 153,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x = symbols('x')\nf = (x-3)/(x**2-10*x+16)\n\nsolution = solve(f, x)\nprint(solution)"
  },
  {
    "example_id": 154,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\neq = (x+1)/(x**2-2*x+1)\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 155,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "2.5",
      "6.5",
      "7.5"
    ],
    "annotated_answers": [
      "26.0"
    ],
    "solution": "from sympy import Symbol, solve, pprint\n\nx = Symbol(\"x\")\nh = x*(x-2.5)*(x-6.5)*(x-7.5)/16 + x\n\nsol = solve(h - x, x)\n\npprint(sol)"
  },
  {
    "example_id": 156,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "f = lambda x: 1/4*x\nx, y = 8, 8\npoint = f(x), f(y)\nprint(point[0] + point[1])"
  },
  {
    "example_id": 157,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "f = lambda x: 5*x + 2\ng = lambda x: 3*x**2 - 4*x\nprint(f(f(1)) - g(g(2)))"
  },
  {
    "example_id": 158,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\n\neq1 = (13+(-16)+6)/3\neq2 = (8)**(1/3)\n\neq3 = eq1 + eq2\n\nsolution = expand(eq3)\nprint(solution)"
  },
  {
    "example_id": 159,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-11.0"
    ],
    "annotated_answers": [
      "-11.0"
    ],
    "solution": "x = symbols('x')\neq = (x - 9)/(x + 1) - 2\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 160,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "26.0",
      "2.0"
    ],
    "annotated_answers": [
      "1710.0"
    ],
    "solution": "n = symbols('n')\nfirst_term = 28\ncommon_diff = 2\nsum_of_terms = (first_term + (n - 1)*common_diff)\narithmetic_series = sum_of_terms*n/2\nprint(arithmetic_series)"
  },
  {
    "example_id": 161,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a = symbols('a')\nx = symbols('x')\nf = a*x**2\nf1 = a*x + 2*a\neq = f - f1\neq1 = eq.subs(x, a)\neq2 = eq.subs(x, -a)\nsolution = solve((eq1, eq2), a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 162,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "f_degree = 4\ng_degree = 8 - f_degree\nprint(g_degree)"
  },
  {
    "example_id": 163,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "3.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\nm = (3*x**2 - 4*x + 1)/(x - 1)\nsolution = solve(m, x)\nprint(solution)"
  },
  {
    "example_id": 164,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "0.0",
      "0.0",
      "0.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x = symbols('x')\npoly = 3*x - 4 + 2*x**2 - x + 7 - 5*x + 1\nsolution = simplify(expand(poly))\ncoeff = solution.as_coefficients_dict()\na = coeff['x']\nb = coeff['1']\nc = coeff['2']\nd = coeff['3']\nprint(a)\nprint(b)\nprint(c)\nprint(d)"
  },
  {
    "example_id": 165,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "64.0"
    ],
    "annotated_answers": [
      "64.0"
    ],
    "solution": "print((1+3)**3)"
  },
  {
    "example_id": 166,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "voltage = 40\nresistance_1 = 3\ncurrent_1 = voltage / resistance_1\nresistance_2 = 20\ncurrent_2 = voltage / resistance_2\nprint(current_2)"
  },
  {
    "example_id": 167,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-4.0",
      "-4.0",
      "3.0215734278848",
      "-4.0",
      "3.0215734278848"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "# define x\nx = symbols('x')\n\n# define equation\neq = 2**12 - (1/8)**x\n\n# solve for x\nsolution = solve(eq, x)\n\n# print solution\nprint(solution)"
  },
  {
    "example_id": 168,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25.0",
      "625.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "from sympy import log\nx = 5**2\ny = 5**4\nz = log(x, y)\nprint(z)"
  },
  {
    "example_id": 169,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0",
      "-1.0",
      "3.0",
      "-1.0",
      "3.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\nf = 4*x**3 + 1\nf_inv = solve(f - 33, x)\nprint(f_inv)"
  },
  {
    "example_id": 170,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "# define k\nk = symbols('k')\n\n\n# define roots\nx1 = (-5 + I * sqrt(11))/6\nx2 = (-5 - I * sqrt(11))/6\n\n\n# solve for k\neq = (3*x1**2 + 5*x1 + k) - (3*x2**2 + 5*x2 + k)\nsolution = solve(eq, k)\nk_value = solution[0]\nprint(k_value)"
  },
  {
    "example_id": 171,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0",
      "10.0",
      "2.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "a = symbols('a')\neq = (2-2*a)*(5+5*a)\nsolution = simplify(eq)\nprint(solution)"
  },
  {
    "example_id": 172,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "# 450 people in the audience\nn = 450\n\n# 3 fewer seats per row\ns_per_row = 3\n\n# 5 extra rows\nn_rows = 5\n\n# number of seats in each row\nn_seats = n // n_rows\n\n# number of seats in the auditorium\nn_seats_total = n_seats * n_rows\n\n# number of rows in the auditorium\nn_rows = n // n_seats\n\n# print(n_rows)\nprint(floor(n_rows))"
  },
  {
    "example_id": 173,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "23.0"
    ],
    "solution": "# Define function\nf = symbols('f')\n\n\n# Define equation\neq = f(2) - 5\n\n\n# Define recursive function\ng = symbols('g')\nh = 2*g + 1\n\n\n# Define solution\nsolution = solve(eq, f)\nf_value = solution[0]\n\n\n# Define recursive solution\nsolution_h = solve(h, g)\ng_value = solution_h[0]\n\n\n# Define final solution\nfinal_solution = f_value**(-1) * (17 - 4) + g_value\nprint(final_solution)"
  },
  {
    "example_id": 174,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "5.0",
      "16.0",
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\nA, B = symbols('A B')\neq = (5*x-16)/(x**2-7*x+10) - A/(x-2) - B/(x-5)\nsolution = solve(eq, A)\nA_value = solution[0]\nprint(A_value)"
  },
  {
    "example_id": 175,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\neq = 2**(x + 2) - 32\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 176,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\nP = 4*x**3 - 2*x**2 + 7*x - 1\nQ = P**2\nprint(Q.subs(x, 0))"
  },
  {
    "example_id": 177,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "1929.0",
      "2.0"
    ],
    "annotated_answers": [
      "23.0"
    ],
    "solution": "# define the variables\nn = symbols('n')\nS = 241\n\n# Define the equation\neq = (n * (n + 1)) / 2 - S\n\n# Find the solution\nsolution = solve(eq, n)\n\n# Display the solution\nn_value = solution[0]\nprint(n_value)"
  },
  {
    "example_id": 178,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "80.0"
    ],
    "annotated_answers": [
      "79.0"
    ],
    "solution": "n = 52/3\nm = 5/23\nprint(int(ceil(ceil(n/m))))"
  },
  {
    "example_id": 179,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "x = 5\nprint(x)"
  },
  {
    "example_id": 180,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "13.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "# The graph of the parabola defined by the equation y=-(x+1)^2+1 is shifted 1 unit to the right, then shifted 5 units down, then rotated 180 degrees about its vertex. The resulting parabola has zeros at x=a and x=b, where b>=a. What is b-a?\n\n# Let y=-(x+1)^2+1\n# Let y=-x^2+x+1\n# Let y=x^2-x+1\n\n# Shift 1 unit to the right\n# Let y=x^2-x+1+1\n# Let y=x^2-x+2\n\n# Shift 5 units down\n# Let y=x^2-x+2+5\n# Let y=x^2-x+7\n\n# Rotate 180 degrees about its vertex\n# Let y=x^2-x+7\n# Let y=x^2-x+7-180\n# Let y=x^2-x+7-173\n\n# Find zeros at x=a and x=b, where b>=a\n# Solve for a and b\n\n# Solve for a\na = -floor((sqrt(173)-1)/2)\n\n# Solve for b\nb = floor((sqrt(173)+1)/2)\n\n# Print b-a\nprint(b-a)"
  },
  {
    "example_id": 181,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0",
      "2.0",
      "8.0",
      "3.0",
      "2.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "a, b = symbols('a, b')\nS = a/(1-b)\neq = (1-b)/(1-a) - S\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value + b)"
  },
  {
    "example_id": 182,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.2222222222222223"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a1 = 1\na2 = 4\na3 = 9\na4 = 16\na5 = 25\n\neq = a4/a2 - a5/a3\nprint(eq)"
  },
  {
    "example_id": 183,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "989.0"
    ],
    "annotated_answers": [
      "978121.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 - 989\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 184,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "1.0",
      "2.0",
      "9.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "x = symbols('x')\nf = x**2 + 3*x + 9\ng = x**2 + 2*x + 1\nprint(g**2 - f)"
  },
  {
    "example_id": 185,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "44.0",
      "34.0"
    ],
    "annotated_answers": [
      "-10.0"
    ],
    "solution": "# Line parallel to y = 4x + 6\nx = symbols('x')\ny = 4*x + 6\n\n# Line passing through (5, 10)\nx1 = 5\ny1 = 10\n\n# Slope of the line\nm = y1 - y\n\n# y-intercept\nb = y - m*x1\n\n# Point of intersection\nx_intercept = (b - y) / m\ny_intercept = m * x_intercept + b\n\nprint(y_intercept)"
  },
  {
    "example_id": 186,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "8.0",
      "2.0",
      "4.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x, y, c = symbols('x y c')\neq = x**2 + 8*x + y**2 + 4*y + c\nsolution = solve(eq, c)\nc_value = solution[0]\nprint(c_value)"
  },
  {
    "example_id": 187,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "log_8_2938 = 4.737488204139171\na = floor(log_8_2938)\nb = ceil(log_8_2938)\nprint(a+b)"
  },
  {
    "example_id": 188,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "# Define variables\nq = symbols('q')\ns = symbols('s')\n\n# Define equations\neq1 = q - s/4\neq2 = 2*s - 2*q\n\n# Solve for q\nsolution = solve(eq1, q)\n\n# Print solution\nprint(solution)\n\n# Solve for s\nsolution = solve(eq2, s)\n\n# Print solution\nprint(solution)"
  },
  {
    "example_id": 189,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "# define functions\nf = lambda x: 2*x - 4\ng = lambda x: x**2 + 3\n\n# evaluate\nprint(f(g(2)))"
  },
  {
    "example_id": 190,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "49.0",
      "16.0",
      "8.0",
      "7.0",
      "8.0",
      "49.0",
      "16.0",
      "8.0",
      "7.0",
      "8.0",
      "1.0",
      "11.0",
      "14.0",
      "4.0",
      "2.0",
      "7.0",
      "14.0",
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "# Create symbols\nx = symbols('x')\nk = symbols('k')\n\n# Expand the quadratic\neq = 4*x**2 + 7*x + k\n\n# Solve for x\nsol = solve(eq, x)\n\n# Check if the solution is real or imaginary\nfor x_sol in sol:\n    if x_sol.is_real:\n        print('Real root: {}'.format(x_sol))\n    else:\n        print('Imaginary root: {}'.format(x_sol))\n\n# Evaluate the quadratic at x=1\nprint('Evaluate the quadratic at x=1: {}'.format(eq.subs(x, 1)))\n\n# Find the discriminant\ndisc = expand(eq.subs(x, 1) - eq.subs(x, -1))\nprint('Discriminant: {}'.format(disc))\n\n# Check if the discriminant is positive, negative, or zero\nif disc.is_real and disc > 0:\n    print('The quadratic has two distinct real roots.')\nelif disc.is_real and disc < 0:\n    print('The quadratic has two distinct imaginary roots.')\nelif disc.is_real and disc == 0:\n    print('The quadratic has two repeated real roots.')\nelif disc.is_imaginary and disc > 0:\n    print('The quadratic has two distinct imaginary roots.')\nelif disc.is_imaginary and disc < 0:\n    print('The quadratic has two distinct real roots.')\nelif disc.is_imaginary and disc == 0:\n    print('The quadratic has two repeated imaginary roots.')\n\n# Find the minimum value of the quadratic\nprint('Minimum value of the quadratic: {}'.format(Min(eq)))\n\n# Find the logarithm of the discriminant\nprint('Logarithm of the discriminant: {}'.format(log(disc)))\n\n# Find the floor of the logarithm of the discriminant\nprint('Floor of the logarithm of the discriminant: {}'.format(floor(log(disc))))\n\n# Find the ceiling of the logarith"
  },
  {
    "example_id": 191,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x, y = symbols('x y')\neq = 2*x**2 - 4*x + 4\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 192,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "99.0"
    ],
    "annotated_answers": [
      "28.0"
    ],
    "solution": "# Define Adina's and Lynn's shoe size\nshoe_size_lynn = 9\nshoe_size_adina = 6\n\n# Define the difference in shoe size\ndifference_in_shoe_size = shoe_size_lynn - shoe_size_adina\n\n# Define the factor by which the shoe size needs to be multiplied\nfactor = (42 - shoe_size_lynn) / (shoe_size_lynn - shoe_size_adina)\n\n# Calculate the shoe size for Adina\nshoe_size_adina = factor * shoe_size_lynn\n\n# Print the shoe size for Adina\nprint(shoe_size_adina)"
  },
  {
    "example_id": 193,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.384615384615385"
    ],
    "annotated_answers": [
      "28.0"
    ],
    "solution": "import math\na = -60/13\nb = 13\nc = 3120\n\ndef f(x):\n    if x <= -4:\n        return a/b*x\n    else:\n        return ab*x**2\n\nprint(a+b)"
  },
  {
    "example_id": 194,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "print(math.log(81, 3))"
  },
  {
    "example_id": 195,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.14285714285714"
    ],
    "annotated_answers": [
      "0.43"
    ],
    "solution": "t = symbols('t')\ny = -4.9*t**2 - 3.5*t + 2.4\nsolution = solve(y, t)[0]\nprint(solution)"
  },
  {
    "example_id": 196,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "44.0"
    ],
    "annotated_answers": [
      "44.0"
    ],
    "solution": "print(4**3 + 2**3 - (3**3 + 1**3))"
  },
  {
    "example_id": 197,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "24.0",
      "4.0",
      "74.0",
      "2.0",
      "649.0",
      "2.0",
      "1.0",
      "24.0",
      "4.0",
      "74.0",
      "2.0",
      "649.0",
      "2.0",
      "1.0"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "x, y = symbols('x, y')\nexpr1 = expand((x * y) - 24)\nexpr2 = expand((x**2) + (y**2) - 73)\nexpr3 = simplify(expr1**2 - expr2)\nsolution = solve(expr3, x, y)\nx_value = solution[0]\ny_value = solution[1]\nprint(x_value, y_value)"
  },
  {
    "example_id": 198,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "D = 2 * 4 * 6 / (2 + 4 + 6)\nprint(D)"
  },
  {
    "example_id": 199,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "8000.0"
    ],
    "annotated_answers": [
      "8000.0"
    ],
    "solution": "print(((26**2 - 24**2 - 10)**2) - 10**2)"
  },
  {
    "example_id": 200,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.42857142857143",
      "153.0"
    ],
    "annotated_answers": [
      "27.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = x + y - 153\neq2 = x/y - 0.7\nsol1 = solve(eq1, x)\nsol2 = solve(eq2, y)\nx_value = sol1[0]\ny_value = sol2[0]\nprint(y_value - x_value)"
  },
  {
    "example_id": 201,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "19.0",
      "2.0",
      "18.0",
      "4.0",
      "16.0",
      "5.0",
      "15.0",
      "10.0",
      "10.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "x = 1\nwhile x < 20:\n    y = 20 - x\n    if y % x == 0:\n        print(x, y)\n    x += 1"
  },
  {
    "example_id": 202,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "4.0",
      "2.0",
      "15.0",
      "2.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "h, k = symbols('h k')\n\ndef equation(x, y):\n    x_1, y_1 = -1, 2\n    x_2, y_2 = 3, 0\n    x_3, y_3 = 9, 0\n\n    a = (y_1 - y_2) * (x - x_2) + (x_1 - x_2) * (y - y_2)\n    b = (y_2 - y_3) * (x - x_3) + (x_2 - x_3) * (y - y_3)\n    c = (y_3 - y_1) * (x - x_1) + (x_3 - x_1) * (y - y_1)\n\n    return a*x + b*y + c\n\n\nsol = solve(equation(h, k), (h, k))\n\nprint(floor(sol[0][0] + sol[0][1]))"
  },
  {
    "example_id": 203,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "-1.0",
      "0.75"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\nf = (4*x + 1)/3\nf_inv = 3/4/x - 1\nf_inv_inv = 1/(f_inv)\nprint(f_inv_inv)"
  },
  {
    "example_id": 204,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "17.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "p, q = symbols('p q')\neq = (q+4)*(p+3) - (q+2)*(p+1) - 44\nsolution = solve(eq, p)\np_value = solution[0]\nprint(p_value)"
  },
  {
    "example_id": 205,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "125.5"
    ],
    "annotated_answers": [
      "125.5"
    ],
    "solution": "mean = (1 + 250) / 2\nprint(mean)"
  },
  {
    "example_id": 206,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "from sympy import solve, pprint\nx = symbols('x')\nsolution = solve(x**2 - 4*x - 14, x)\npprint(solution)"
  },
  {
    "example_id": 207,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = (3 + 1/x) - 7/x\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 208,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.999999999999987"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "f = lambda x: (1 + x) / (1 - x)\ng = lambda x: -2 / (x + 1)\n\nresult = g(f(g(f(g(f(g(f(g(f(12))))))))))\nprint(result)"
  },
  {
    "example_id": 209,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-3.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "x = symbols('x')\neq = (x+3)*(x-1) - x*(x+2)\nsolution = simplify(eq)\nprint(solution)"
  },
  {
    "example_id": 210,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.65019891163267"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\nd = symbols('d')\ne = symbols('e')\nf = symbols('f')\ng = symbols('g')\nh = symbols('h')\ni = symbols('i')\nj = symbols('j')\nk = symbols('k')\nl = symbols('l')\nm = symbols('m')\nn = symbols('n')\no = symbols('o')\np = symbols('p')\nq = symbols('q')\nr = symbols('r')\ns = symbols('s')\nt = symbols('t')\nu = symbols('u')\nv = symbols('v')\nw = symbols('w')\nx = symbols('x')\ny = symbols('y')\nz = symbols('z')\n\neq = (((4**(1/2))/24) + ((3456**(1/2))/9) + (6**(1/2))/6)**(1/2)\nsimplify_eq = simplify(eq)\nprint(simplify_eq)"
  },
  {
    "example_id": 211,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = 2\nprint(x)"
  },
  {
    "example_id": 212,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0000000025474194"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "x = symbols('x')\na = (4**5) + (4**5) + (4**5) + (4**5)\nb = a**(1/3)\nc = b**2\nd = c**(1/2)\ne = d**(1/3)\nf = e**(1/2)\ng = f**(1/3)\nh = g**(1/2)\ni = h**(1/3)\nj = i**(1/2)\nk = j**(1/3)\nl = k**(1/2)\nm = l**(1/3)\nn = m**(1/2)\no = n**(1/3)\np = o**(1/2)\nq = p**(1/3)\nr = q**(1/2)\ns = r**(1/3)\nt = s**(1/2)\nu = t**(1/3)\nv = u**(1/2)\nw = v**(1/3)\nx = w**(1/2)\ny = x**(1/3)\nz = y**(1/2)\na_value = z**(1/3)\nprint(a_value)"
  },
  {
    "example_id": 213,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "A = 4\nB = 3\nC = -2"
  },
  {
    "example_id": 214,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "a = (0, 0)\nb = (2, 2)\nc = (5, 0)\nd = (6, 2)\nm = (b[1]-a[1])/(b[0]-a[0])\nm1 = (d[1]-c[1])/(d[0]-c[0])\nprint(m)\nprint(m1)"
  },
  {
    "example_id": 215,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "1.0"
    ],
    "solution": ""
  },
  {
    "example_id": 216,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\neq = log(10 - 2*x, x - 1) - 2\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 217,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": ""
  },
  {
    "example_id": 218,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "0.0"
    ],
    "annotated_answers": [
      "288.0"
    ],
    "solution": "a, b = symbols('a, b')\neq1 = 2*a*b - 12\neq2 = 8*a**2*b**2\nsolution1 = solve(eq1, a)\nsolution2 = solve(eq2, a)\na_value = solution1[0]\nb_value = solution2[0]\nprint(a_value)\nprint(b_value)"
  },
  {
    "example_id": 219,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.000244140624999997"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "a = symbols('a')\neq = (16*a**(1/3))**(1/3) - 1\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 220,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "2.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "# Define variables\nx1, y1, x2, y2 = symbols('x1, y1, x2, y2')\n\n# Define the segment\nsegment = (x1, y1, x2, y2)\n\n# Find the midpoint\nmidpoint = ((x1 + x2)/2, (y1 + y2)/2)\n\n# Find the sum of the coordinates of the midpoint\nsum_of_coordinates = (midpoint[0] + midpoint[1])\n\nprint(sum_of_coordinates)"
  },
  {
    "example_id": 221,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "20.0",
      "12.0",
      "12.0",
      "20.0",
      "24.0"
    ],
    "annotated_answers": [
      "32.0"
    ],
    "solution": "# Define variables\nx, y = symbols('x, y')\n\n# Define equations\neq1 = x**2 - 24*x + y**2 - 32*y + 384\neq2 = x**2 + 24*x + y**2 + 32*y + 384\n\n# Define solution variables\nsol1 = solve(eq1, x, y)\nsol2 = solve(eq2, x, y)\n\n# Define distance\ndistance = abs(sol1[0][0] - sol2[0][0])\n\n# Find the shortest distance\nshortest_distance = floor(simplify(distance))\n\nprint(shortest_distance)"
  },
  {
    "example_id": 222,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x = symbols('x')\neq = (66-2**x)/(2**x+3) - (4-2**x)/(2**(x+1)+6)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 223,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-29.0"
    ],
    "annotated_answers": [
      "29.0"
    ],
    "solution": "x = symbols('x')\neq1 = 3*x + 1.24\neq2 = 5*x + 1.82\nsolution = solve((eq1 - eq2), x)\npencil = solution[0]\nprint(floor(pencil*100))"
  },
  {
    "example_id": 224,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "4.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nm = symbols('m')\neq = (a/4 + b/12 - 1)\nsolution = solve(eq, a, b, m)\na_value = solution[0][0]\nb_value = solution[0][1]\nm_value = solution[0][2]\nprint(a_value + b_value + m_value)"
  },
  {
    "example_id": 225,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0"
    ],
    "annotated_answers": [
      "22.0"
    ],
    "solution": "import numpy as np\n\ndef parabola(x):\n    return 2 * x ** 2 + 8 * x + 4\n\ndef area(a, b):\n    return (b - a) ** 2\n\ndef solve(a, b):\n    x1 = np.real(np.roots([1, -2 * a, a ** 2 - 7 ** 2]))\n    x2 = np.real(np.roots([1, 2 * b, b ** 2 - 7 ** 2]))\n    return area(x1, x2)\n\nprint(solve(0, 1))"
  },
  {
    "example_id": 226,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "p, q = symbols('p q')\neq = p/q - 28/7\nsolution = solve(eq, p)\np_value = solution[0]\nprint(p_value)"
  },
  {
    "example_id": 227,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "7.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x = symbols('x')\neq = (x-4)**2 - 9\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 228,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "n = symbols('n')\neq = (9**n*3**(2*n+1))/81 - 243\nsolution = solve(eq, n)\nn_value = solution[0]\nprint(n_value)"
  },
  {
    "example_id": 229,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "a = symbols('a')\neq = (4+sqrt(16+16*a))**(1/2) + (1+sqrt(1+a))**(1/2) - 6\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 230,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "-1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x1, y1 = 2, 4\nx2, y2 = 0, -2\nx3, y3 = 5, 1\nx4, y4 = 1, 5\n\nslope1 = (y2-y1)/(x2-x1)\nslope2 = (y4-y3)/(x4-x3)\n\nprint(slope1, slope2)"
  },
  {
    "example_id": 231,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\nexpr = (x**2 - 5*x + 7) - (x - 3)*(x - 2)\nsolution = expand(expr)\nprint(solution)"
  },
  {
    "example_id": 232,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.284475790733563",
      "54.0",
      "0.010564588079846919"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "# Solve the equation x^2 - mx + n = 0\nm = 29\nn = 37\n\n# Find the two solutions of the equation\nsol1 = (-m + (m**2 - 4*n)**(1/2))/2\nsol2 = (-m - (m**2 - 4*n)**(1/2))/2\n\n# Print the value of m^n + n^m + k^t + t^k\nprint(m**n + n**m + sol1**sol2 + sol2**sol1)"
  },
  {
    "example_id": 233,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "son_age = 30 - 5*5\nprint(son_age)"
  },
  {
    "example_id": 234,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4950.0"
    ],
    "annotated_answers": [
      "4950.0"
    ],
    "solution": "sum = 0\nfor i in range(100, 200):\n    if i % 3 == 0:\n        sum += i\nprint(sum)"
  },
  {
    "example_id": 235,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.06"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "a = symbols('a')\neq = (1000*(1+a)**3)-1225\nsolution = solve(eq, a)\na_value = solution[0]\na_value = expand(a_value)\na_value = simplify(a_value)\na_value = floor(a_value*100)\na_value = int(a_value)\na_value = a_value/100\nprint(a_value)"
  },
  {
    "example_id": 236,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "f = {1: 2, 2: 6, 3: 5}\nf_inv = {2: 1, 6: 2, 5: 3}\nprint(f_inv[f_inv[6]])"
  },
  {
    "example_id": 237,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "8281.0"
    ],
    "annotated_answers": [
      "8281.0"
    ],
    "solution": "print(91**2)"
  },
  {
    "example_id": 238,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "12.0",
      "2.0",
      "9.0"
    ],
    "annotated_answers": [
      "-27.0"
    ],
    "solution": "g = symbols('g')\nexpr = g**4 + 12*g**2 + 9\nc = 3\np = 4\nq = -18\nprint(expr.subs(g**2 + p, c*(g**2 + p)))"
  },
  {
    "example_id": 239,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "3.0",
      "25.0",
      "2.0",
      "38.0",
      "17.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "# Create symbols\nx = symbols('x')\nf = x**4 + x**3 - 25*x**2 + 38*x - 17\n# degree\ndeg = floor(log(f, x))\nprint(deg)"
  },
  {
    "example_id": 240,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "3.5"
    ],
    "solution": "t = symbols('t')\neq = -6*t**2 + 43*t\nsolution = solve(eq, t)\nt_value = solution[0]\nprint(t_value)"
  },
  {
    "example_id": 241,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "144.0",
      "7.0",
      "108.0",
      "6.0",
      "114.0",
      "5.0",
      "84.0",
      "4.0",
      "15.0",
      "3.0",
      "20.0",
      "2.0",
      "43.0",
      "20.0"
    ],
    "annotated_answers": [
      "-15.0"
    ],
    "solution": "from sympy import symbols, simplify, expand\nx = symbols('x')\neq = (24*x**4 + 6*x**3 + 4*x**2 - 7*x - 5)*(6*x**3 + 3*x**2 + 3*x + 4)\neq = simplify(eq)\neq = expand(eq)\nprint(eq)"
  },
  {
    "example_id": 242,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "1.0",
      "0.0",
      "0.0",
      "2.0",
      "0.0"
    ],
    "annotated_answers": [
      "96.0"
    ],
    "solution": "for a in range(6):\n    for b in range(6):\n        for c in range(6):\n            if a**2*b + b**2*c + c**2*a - a*b**2 - b*c**2 - c*a**2 == 0:\n                print((a, b, c))"
  },
  {
    "example_id": 243,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "# Write your solution here"
  },
  {
    "example_id": 244,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x = symbols('x')\neq = 2/3 - (4/(x-5))\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 245,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "2.2"
    ],
    "solution": "import numpy as np\n\na, b, c = -1, 3, -2\n\n# Find the discriminant of the quadratic\nD = b**2 - 4*a*c\n\n# The roots of the quadratic are the solutions of the quadratic equation\n# so we can find the roots by solving the equation\nx1 = (-b + np.sqrt(D)) / (2*a)\nx2 = (-b - np.sqrt(D)) / (2*a)\n\n# Find the greater root of the quadratic\nroot_n = np.max([x1, x2])\n\n# The greater root is the one that is greater than 1\n# so we can find the value of n by subtracting 1 from the root\nn = root_n - 1\n\nprint(n)"
  },
  {
    "example_id": 246,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "from sympy import Symbol, sqrt, solve\nx = Symbol('x')\nf = (sqrt(x-1))/(x-2)\nx_value = solve(f, x)[0]\nprint(x_value)"
  },
  {
    "example_id": 247,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "153.0"
    ],
    "annotated_answers": [
      "129.0"
    ],
    "solution": "n = symbols('n')\na = 0\nb = 1\ni = 1\n\nwhile a <= 125:\n    a = a + b\n    b = b * (i + 1)\n    i = i + 1\n\nprint(a)"
  },
  {
    "example_id": 248,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "48001.0",
      "2.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "# Define variables\nx = symbols('x')\n\n# Define equation\neq = (x**2 - x) - 12000\n\n# Find solution\nsolution = solve(eq)\n\n# Get solution in seconds\nsolution_in_seconds = solution[0]\n\n# Print solution\nprint(solution_in_seconds)"
  },
  {
    "example_id": 249,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "6.0",
      "5.0",
      "3.0",
      "4.0",
      "3.0",
      "25.0",
      "2.0",
      "38.0",
      "17.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "from sympy import solve\nfrom sympy.abc import x\nf = x**2-1\neq = (5*x**6-x**5+3*x**4+x**3 - 25*x**2 +38*x -17)/f\ndegree = solve(eq, x)\nprint(degree)"
  },
  {
    "example_id": 250,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "12.0",
      "102.0"
    ],
    "annotated_answers": [
      "54.0"
    ],
    "solution": "x = symbols('x')\nc = 66\nb = -6\nq = (x+b)**2 + c\ns = expand(q)\ns = simplify(s)\nprint(s)"
  },
  {
    "example_id": 251,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-9.0",
      "2.0"
    ],
    "annotated_answers": [
      "0.75"
    ],
    "solution": "t = symbols('t')\ny = -16*t**2 - 60*t + 54\nsolution = solve(y, t)\ntime = solution[0]\nprint(time)"
  },
  {
    "example_id": 252,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.0",
      "3.0",
      "5.0"
    ],
    "annotated_answers": [
      "30.0"
    ],
    "solution": "# Calculate the number of houses that each worker can paint in a day\nhouses_per_worker_day = 4 / 5\n\n# Calculate the number of days it would take to paint 12 houses with 5 workers\ndays_to_paint_12_houses = 12 / houses_per_worker_day / 5\n\n# Calculate the number of workers needed to paint 12 houses in 3 days\nworkers_needed = 5 * 3 / days_to_paint_12_houses\n\n# Print the result\nprint(\"To paint 12 houses in 3 days, you will need {} workers.\".format(workers_needed))"
  },
  {
    "example_id": 253,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.25",
      "0.16",
      "9.0",
      "2.0",
      "0.16",
      "5.0",
      "2.0",
      "1.0",
      "2.0",
      "0.0256",
      "6.0",
      "2.0",
      "3.0",
      "2.0",
      "49.0",
      "2.0"
    ],
    "annotated_answers": [
      "7.5"
    ],
    "solution": "from sympy import symbols, sqrt\nx, y = symbols('x, y')\nc1 = (x-9)**2 + (y-5)**2 - 6.25\nc2 = (x+6)**2 + (y+3)**2 - 49\nsolution = sqrt(c1**2 + c2**2)\nprint(solution)"
  },
  {
    "example_id": 254,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = (1/(x-1)) + (2*x)/(x-1) - 5\nsolution = solve(eq)\nprint(solution)"
  },
  {
    "example_id": 255,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x1, y1 = 5, 4\nx2, y2 = -9, 8\nx_mid, y_mid = (x1 + x2)/2, (y1 + y2)/2\nprint(x_mid + y_mid)"
  },
  {
    "example_id": 256,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "t = symbols('t')\neq = (t+2)*(t+1) - (t+1)*(t-3)\nprint(eq.subs(t,t+1))"
  },
  {
    "example_id": 257,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "4.0",
      "5.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = 2*x - y - 3\neq2 = x + y - 1\nsolution1 = solve(eq1, x)\nsolution2 = solve(eq2, y)\nx_value = solution1[0]\ny_value = solution2[0]\nprint(8*x_value - 7*y_value)"
  },
  {
    "example_id": 258,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "print(ceiling(8.8)+ceiling(-8.8))"
  },
  {
    "example_id": 259,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "from sympy import sqrt, S\n\na = 1\nb = 1\n\nwhile True:\n    # Find the next point on the graph\n    x = sqrt(a)\n    y = (x**2 - 3) / sqrt(2)\n\n    # Check if the point is closest\n    if y < 0:\n        break\n\n    # Update the distance\n    a += 1\n    b = sqrt(a)\n\n# Return the final value\nprint(a + b)"
  },
  {
    "example_id": 260,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "from sympy import symbols, solve\nx = symbols('x')\neq = (x-2)/(x**2 - 7*x + 10)\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 261,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = 3\nprint(x)"
  },
  {
    "example_id": 262,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "4.0",
      "0.0",
      "6.0",
      "0.0",
      "9.0",
      "0.0",
      "10.0",
      "0.0",
      "14.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "from math import sqrt\n\ndef prime_factors(n):\n    i = 2\n    factors = []\n    while i * i <= n:\n        if n % i:\n            i += 1\n        else:\n            n //= i\n            factors.append(i)\n    if n > 1:\n        factors.append(n)\n    return factors\n\ndef possible_values(m, n):\n    count = 0\n    for i in range(2, m + 1):\n        if n % i == 0:\n            count += 1\n    return count\n\nfor m in range(1, 20 + 1):\n    print('m =', m)\n    for n in range(1, 100 + 1):\n        factors = prime_factors(n)\n        if len(factors) == 2:\n            print('  n =', n, '->', possible_values(m, n))"
  },
  {
    "example_id": 263,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "15.222222222222221"
    ],
    "annotated_answers": [
      "27.0"
    ],
    "solution": "n = 15\nw = 2/9\ng = w + n\nprint(g)"
  },
  {
    "example_id": 264,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "2.0",
      "2.0",
      "2.0",
      "11.0",
      "2.0",
      "0.5"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "def f(x):\n    return x**2 + 2*x - 6\n\ndef dist(x, y):\n    return ((x - y[0])**2 + (f(x) - y[1])**2)**0.5\n\nx = symbols('x')\ny = (4, 5)\nprint(dist(x, y))"
  },
  {
    "example_id": 265,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "402.0"
    ],
    "annotated_answers": [
      "402.0"
    ],
    "solution": "n = 100\nd = 4\na = 6\n\nt = a + (n - 1) * d\nprint(t)"
  },
  {
    "example_id": 266,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "12.0"
    ],
    "solution": ""
  },
  {
    "example_id": 267,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-6.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "denali = 16\nnate = 12\nx = symbols('x')\neq = (denali - (denali + x)) / (nate - x) - (denali - nate) / nate\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 268,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "2.0",
      "5.0",
      "2.0"
    ],
    "annotated_answers": [
      "22.0"
    ],
    "solution": "from sympy import sqrt, simplify, fraction\n\nx = (sqrt(5) + sqrt(2)) / (sqrt(5) - sqrt(2))\ny = fraction(simplify(x))\nprint(y)"
  },
  {
    "example_id": 269,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0",
      "2.0",
      "7.0",
      "-2.0",
      "7.0",
      "4.0"
    ],
    "annotated_answers": [
      "28.0"
    ],
    "solution": "from sympy import symbols, solve\nx = symbols('x')\neq = -x**2 - 8*x + 12\nsolution = solve(eq)\nprint(solution)"
  },
  {
    "example_id": 270,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "4.0",
      "3.0",
      "23.0",
      "4.0"
    ],
    "annotated_answers": [
      "26.0"
    ],
    "solution": "t = symbols('t')\neq = 2*t**2 - 5*t + 29\nsolution = solve(eq, t)\nt_value = solution[0]\nprint(t_value)"
  },
  {
    "example_id": 271,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "48.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "f = lambda x: 2*x + 48\nsolution = f(0)\nprint(solution)"
  },
  {
    "example_id": 272,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x, y = symbols('x y')\neq = 3*x + 2*y - 12\nsolution = solve(eq, y)\nb_value = solution[0]\nprint(b_value)"
  },
  {
    "example_id": 273,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "510.0"
    ],
    "annotated_answers": [
      "150.0"
    ],
    "solution": "bricks_per_hour_alan = 30\nbricks_per_hour_david = bricks_per_hour_alan/3\nbricks_total = 600\nbricks_david = bricks_total - (bricks_per_hour_alan * 3)\nprint(bricks_david)"
  },
  {
    "example_id": 274,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x0, y0 = 7, -1\nx1, y1 = -1, 7\nm = (y1-y0)/(x1-x0)\nb = y0 - m*x0\nprint(m + b)"
  },
  {
    "example_id": 275,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "22.0"
    ],
    "annotated_answers": [
      "42.0"
    ],
    "solution": "dad_age = 53 - 31\nprint(dad_age)"
  },
  {
    "example_id": 276,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "9.0"
    ],
    "annotated_answers": [
      "-8.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq1 = x + y - 7\neq2 = x - y - 9\nsolution1 = solve(eq1, x)\nsolution2 = solve(eq2, y)\nx_value = solution1[0]\ny_value = solution2[0]\nprint(x_value*y_value)"
  },
  {
    "example_id": 277,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.39008452377145",
      "122.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\neq = (((x**(1/4))**(1/4))**(1/4))**(1/4) - 3\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 278,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "def f(x):\n    return int(pow(-5/8, x))\n\nprint(len(set(f(x) for x in range(0, 100))))"
  },
  {
    "example_id": 279,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0",
      "3.0",
      "1.0",
      "3.0"
    ],
    "annotated_answers": [
      "-120.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\nA = -x + 2\nB = 3 - y\nC = -A - B + 6\neq = x**2 + y**2 + A*x + B*y + C\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 280,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\neq = (3*x-5)**(1/2) - 2\nsolution = solve(eq, x)\nx_values = solution\nprint(x_values)"
  },
  {
    "example_id": 281,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\neq = a**b + c**d - 12\nsolution = solve(eq, b)\nb_value = solution[0]\nprint(b_value)"
  },
  {
    "example_id": 282,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "5.0",
      "2.0",
      "101.0",
      "2.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "from sympy import sqrt\na = sqrt(45)\nb = sqrt(101)\nx = (a + b) / 2\nprint(x)"
  },
  {
    "example_id": 283,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "123.0"
    ],
    "annotated_answers": [
      "123.0"
    ],
    "solution": "print(123123/1001)"
  },
  {
    "example_id": 284,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0"
    ],
    "annotated_answers": [
      "-10.0"
    ],
    "solution": "A = 4\nB = 5\nC = 6\n\nresult = A * (B - C)\n\nprint(result)"
  },
  {
    "example_id": 285,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2500.0"
    ],
    "annotated_answers": [
      "2500.0"
    ],
    "solution": "x = symbols('x')\neq = 3*x**2 - 2*(x**2 + 4) - 42\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value**4)"
  },
  {
    "example_id": 286,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "f = lambda x: x**3 + 2*x + 1\ng = lambda x: x - 1\nprint(f(g(1)))"
  },
  {
    "example_id": 287,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "60.0"
    ],
    "annotated_answers": [
      "4800.0"
    ],
    "solution": "rate = 4\ntime = 12\nmidnight = time + rate * time\nprint(midnight)"
  },
  {
    "example_id": 288,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "376.0"
    ],
    "annotated_answers": [
      "-102.0"
    ],
    "solution": "S = set()\nfor alpha in range(100):\n    if (alpha + 7) % 12 == 0:\n        S.add(alpha)\nprint(sum(S))"
  },
  {
    "example_id": 289,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "166.0",
      "15.0",
      "2.0",
      "5.0",
      "7.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x, y = symbols('x y')\neq = 10*x*y + 14*x + 15*y - 166\nsolution = solve(eq, x, y)\nx_value = solution[0][0]\ny_value = solution[0][1]\nprint(x_value + y_value)"
  },
  {
    "example_id": 290,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "16.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x = symbols('x')\nexpr = (x*x**3)**4\nprint(expr)"
  },
  {
    "example_id": 291,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "2.0",
      "6.0",
      "3.0",
      "108.0",
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\nf = x**2 + y**2 - 1\ng = x**2 + y**2 - 4\neq = f*g - (x-2)**2 - (y-5)**2\nsolution = solve(eq, (x, y))\nprint(solution)"
  },
  {
    "example_id": 292,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": ""
  },
  {
    "example_id": 293,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "9.0",
      "2.0",
      "8.0",
      "3.0"
    ],
    "annotated_answers": [
      "23.0"
    ],
    "solution": "from sympy import sqrt, simplify\n\na = sqrt(2) + 1/sqrt(2) + sqrt(3) + 1/sqrt(3)\nb = simplify(a.as_numer_denom()[0])\nc = simplify(a.as_numer_denom()[1])\n\nprint(b+c)"
  },
  {
    "example_id": 294,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "12296.0",
      "8.0"
    ],
    "annotated_answers": [
      "32736.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\neq = (a**2 + b**2 + c**2) - 12296\nsolution = solve(eq, [a, b, c])\na_value = solution[0][0]\nb_value = solution[0][1]\nc_value = solution[0][2]\nprint(a_value * b_value * c_value / 8)"
  },
  {
    "example_id": 295,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "19.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "for i in range(10, 100):\n    if i % 10 == 5:\n        continue\n    a, b = i // 10, i % 10\n    if a * b == i // 2:\n        print(i)\n        break"
  },
  {
    "example_id": 296,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-4.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "g = lambda x: 3*x-4\nprint(g(0))"
  },
  {
    "example_id": 297,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "234.0"
    ],
    "annotated_answers": [
      "81.0"
    ],
    "solution": "n = 27\nk = n//2\nsum_of_k_consecutive = (k*(k+1))//2\nsum_of_n = n*(n+1)//2\nmedian = (sum_of_k_consecutive + sum_of_n)//2\nprint(median)"
  },
  {
    "example_id": 298,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "69.0"
    ],
    "annotated_answers": [
      "81.0"
    ],
    "solution": "import math\n\ndef inside_circle(x, y):\n    x_c = 0\n    y_c = 0\n    r = 5\n    distance = math.sqrt((x - x_c)**2 + (y - y_c)**2)\n    if distance < r:\n        return True\n    else:\n        return False\n\ncount = 0\nfor x in range(-10, 10):\n    for y in range(-10, 10):\n        if inside_circle(x, y):\n            count += 1\n\nprint(count)"
  },
  {
    "example_id": 299,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "0.0"
    ],
    "solution": ""
  },
  {
    "example_id": 300,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-9.0"
    ],
    "annotated_answers": [
      "81.0"
    ],
    "solution": "x = symbols('x')\nx_and = x + 5\nx_hash = x**2\nx_and_hash = x_and**2\neq = x_and_hash - (4**2)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 301,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-2.0",
      "1.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "x = symbols('x')\neq = (3*x + 6)**(1/2) - (x + 2)\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 302,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = 3\ny = 2\nexpression = (4*x**2)/(9*y**2)\nprint(expression)"
  },
  {
    "example_id": 303,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "p = lambda x: 3\nq = lambda x: 4*x + 7\n\nprint(q(-1))"
  },
  {
    "example_id": 304,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0"
    ],
    "annotated_answers": [
      "225.0"
    ],
    "solution": "a = 45\nb = 5\nt = 0\n\nwhile a!= 0:\n    t += 1\n    a -= b\nprint(t)"
  },
  {
    "example_id": 305,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.006"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "popularity = 15\ncost = 1500\ncost2 = 2500\n\n# Daniel's theory\ncustomers = popularity / cost\ncustomers2 = popularity / cost2\n\nprint(customers2)"
  },
  {
    "example_id": 306,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2450.0"
    ],
    "annotated_answers": [
      "2450.0"
    ],
    "solution": "total_earnings = (1200 + 25000 * 0.05)\nprint(total_earnings)"
  },
  {
    "example_id": 307,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "x = 8 / 3\nz = 15 / 5\nxz = x * z\nprint(xz)"
  },
  {
    "example_id": 308,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "sqrt_64 = 8\ncubic_root_64 = 4\nprint(sqrt_64 - cubic_root_64)"
  },
  {
    "example_id": 309,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "345.0",
      "345.0"
    ],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "AMC10 = 12342\nAMC12 = 12342\n\nA = int(AMC10 / 10000)\nM = int((AMC10 % 10000) / 1000)\nC = int(AMC10 % 1000)\n\nA12 = int(AMC12 / 10000)\nM12 = int((AMC12 % 10000) / 1000)\nC12 = int(AMC12 % 1000)\n\nprint(A + M + C)\nprint(A12 + M12 + C12)"
  },
  {
    "example_id": 310,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "1.8"
    ],
    "solution": "x = round(4.8-2)\nprint(x)"
  },
  {
    "example_id": 311,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "6.0"
    ],
    "annotated_answers": [
      "144.0"
    ],
    "solution": "x = symbols('x')\neq = 192*x**2 - 16\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 312,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "from math import sqrt\n\na, b, c = -2, 4, 1\n\nx = (b**2-4*a*c)/(4*a)\n\nprint(x)"
  },
  {
    "example_id": 313,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1001.0"
    ],
    "annotated_answers": [
      "2003.0"
    ],
    "solution": "def even_counting_numbers(n):\n    return sum([x for x in range(0, n, 2)])\n\ndef odd_counting_numbers(n):\n    return sum([x for x in range(1, n, 2)])\n\nprint(even_counting_numbers(2003) - odd_counting_numbers(2003))"
  },
  {
    "example_id": 314,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "255.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "# Odd numbers between 255 and 256\nprint([i for i in range(255, 257) if i % 2!= 0])"
  },
  {
    "example_id": 315,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "13225.0"
    ],
    "annotated_answers": [
      "13225.0"
    ],
    "solution": "print(115**2)"
  },
  {
    "example_id": 316,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "20.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "a = symbols('a')\nb = a + 1\neq = 2*a - 3*b + 23\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 317,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "26000.0"
    ],
    "annotated_answers": [
      "26000.0"
    ],
    "solution": "print(513**2 - 487**2)"
  },
  {
    "example_id": 318,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "-3.0",
      "2.0",
      "10.0",
      "1.0",
      "2.0",
      "5.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq1 = (a**2 + b**2 + c**2) - 13\neq2 = a*b + b*c + c*a - 6\nsolution = solve([eq1, eq2], [a, b, c])\nprint(solution)"
  },
  {
    "example_id": 319,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "16.0",
      "64.0",
      "27.0",
      "8.0"
    ],
    "annotated_answers": [
      "108.0"
    ],
    "solution": "horse1 = 16\nhorse2 = 64\nrevolutions1 = 27\nrevolutions2 = 8\n\ndef revolutions(distance):\n    return 360 * distance / 5280\n\ndef distance(revolutions):\n    return 5280 * revolutions / 360\n\nprint(distance(revolutions(horse1)))\nprint(distance(revolutions(horse2)))\nprint(revolutions(distance(revolutions1)))\nprint(revolutions(distance(revolutions2)))"
  },
  {
    "example_id": 320,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "125.0",
      "5.0",
      "5.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "from sympy import log\nfrom sympy import sqrt\nfrom sympy import symbols\n\nx = symbols('x')\nresult = log(125*sqrt(5), sqrt(5))\nprint(result)"
  },
  {
    "example_id": 321,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "13.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "a = 3\nb = 2\nx = 2\ny = a + b*x\nprint(y)\n\nx = 5\ny = a + b*x\nprint(y)"
  },
  {
    "example_id": 322,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "15.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "a = symbols('a')\neq = 5 - (25 / a) - 50 / a\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 323,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "45.0"
    ],
    "solution": "x = 3**2 + 1\nprint(x)"
  },
  {
    "example_id": 324,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "import math\n\nrobert = (4,3)\nlucy = (6,1)\nliz = (1,7)\n\ndef distance(person1, person2):\n    x1, y1 = person1\n    x2, y2 = person2\n    return math.sqrt((x2 - x1)**2 + (y2 - y1)**2)\n\nprint(distance(robert, liz))"
  },
  {
    "example_id": 325,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "degree_f = 2\ndegree_g = 3\nmax_degree = degree_f + degree_g\nprint(max_degree)"
  },
  {
    "example_id": 326,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "def percentage(n):\n    return n/100\n\ndef get_twenty_percent(n):\n    return n*percentage(20)\n\ndef get_fifty_percent(n):\n    return n*percentage(50)\n\ndef get_eighty_percent(n):\n    return n*percentage(80)\n\ndef get_twenty_percent_of_fifty_percent_of_eighty(n):\n    return get_twenty_percent(get_fifty_percent(get_eighty_percent(n)))\n\nprint(get_twenty_percent_of_fifty_percent_of_eighty(100))"
  },
  {
    "example_id": 327,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "13.6"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "A = 6\nB = 3/5\nC = 6\n\n# Four years ago, Chris was the same age as Amy is now\nC_4_ago = C + 4\nA_4_ago = C_4_ago\n\n# In four years, Ben's age will be 3/5 of Amy's age at that time\nA_now = A\nB_now = B * A_now\n\n# Chris is now\nC_now = C_4_ago + B_now\n\nprint(C_now)"
  },
  {
    "example_id": 328,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "5.0",
      "5.0",
      "5.0",
      "5.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "from sympy import symbols, solve, sqrt, simplify, cos, pi, Matrix\nfrom sympy.abc import x, y\n\na, b, c, d, e = symbols('a b c d e')\n\nAB = (x - a)/(b - a)\nBC = (x - b)/(c - b)\nCD = (x - c)/(d - c)\nDE = (x - d)/(e - d)\nEA = (x - e)/(a - e)\n\nABCD = [AB, BC, CD, DE, EA]\n\nABCD_sum = sum(ABCD)\n\nmid = ABCD_sum / 5\n\nprint(mid)"
  },
  {
    "example_id": 329,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0",
      "0.0",
      "-3.0"
    ],
    "annotated_answers": [
      "-120.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq1 = a + b - 8\neq2 = b + c + 3\neq3 = a + c - 5\neqs = [eq1, eq2, eq3]\nsolution = solve(eqs, [a, b, c])\nprint(solution)"
  },
  {
    "example_id": 330,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-56.0"
    ],
    "annotated_answers": [
      "-56.0"
    ],
    "solution": "discriminant = 8**2 - 4 * 2 * 15\nprint(discriminant)"
  },
  {
    "example_id": 331,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "22.0"
    ],
    "annotated_answers": [
      "52.0"
    ],
    "solution": "x = -6\ny = -15\na = 8\nb = 3\n\n# distance from x-axis\nd_x = abs(x)\n# distance from point (a,b)\nd_ab = sqrt((x-a)**2 + (y-b)**2)\n\nn = d_ab**2 - d_x**2\nn = n**0.5\nprint(n)"
  },
  {
    "example_id": 332,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "x = 6\nprint(x - 3)"
  },
  {
    "example_id": 333,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "102.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "A = 6\nB = 17\nAB = A*B\nprint(AB)"
  },
  {
    "example_id": 334,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "f = lambda x: 3 * (2 * x - 7)**(1/2) - 8\nprint(f(8))"
  },
  {
    "example_id": 335,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-3.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "x = symbols('x')\neq = (9-4*x)/(x+6) - 7\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 336,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-0.6666666666666666"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "red = 0\nyellow = 0\norange = 0\nwhite = 0\n\nred = (yellow - 2) / 3\norange = red / 3\nwhite = 3 + orange\n\nprint(red)"
  },
  {
    "example_id": 337,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1456.0"
    ],
    "annotated_answers": [
      "364.0"
    ],
    "solution": "a = 40 - 12\nb = 40 + 12\nprint(a*b)"
  },
  {
    "example_id": 338,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "65.0"
    ],
    "annotated_answers": [
      "65.0"
    ],
    "solution": "volume = (30 * 6.5) / 3\nprint(volume)"
  },
  {
    "example_id": 339,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3969.0",
      "4.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "x = symbols('x')\neq = (63 - sqrt(x))**2 - x\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 340,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\neq = x/(2 - x)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 341,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-65.0",
      "-5.0",
      "2.0",
      "105.0",
      "2.0",
      "2.0",
      "-5.0",
      "2.0",
      "105.0",
      "2.0",
      "2.0",
      "20.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = (x + y)**2 - 105\neq2 = x**2 + y**2 - 65\nsolution = solve([eq1, eq2], [x, y])\nxy_value = solution[0][0] * solution[0][1]\nprint(xy_value)"
  },
  {
    "example_id": 342,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-9.0",
      "3.0",
      "1.0",
      "4.0",
      "5.0",
      "1.0",
      "2.0",
      "7.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "from sympy import symbols, poly\n\nx = symbols('x')\nf = 3*x**4 + 5*x**2 - 9*x - 2\ng = f.subs(x, x - 1)\nprint(g)"
  },
  {
    "example_id": 343,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "81.0",
      "2.0"
    ],
    "annotated_answers": [
      "93.0"
    ],
    "solution": "a = symbols('a')\nd = 1\nn = 98\na1 = a + (n-1)*d\na2 = a + (n-2)*d\nsum = (a1 + a2)/2\neq = sum - 137\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 344,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "101.0"
    ],
    "annotated_answers": [
      "549.0"
    ],
    "solution": "a = 1\nb = 100\n\nwhile b - a!= 99:\n    if (b - a) % 2 == 0:\n        b += 1\n    else:\n        a += 1\n\nprint(a + b)"
  },
  {
    "example_id": 345,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "f = lambda x: x + 2\ng = lambda x: 1 / f(x)\nprint(g(f(-3)))"
  },
  {
    "example_id": 346,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "2.0",
      "28.0",
      "45.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "s = symbols('s')\nc = 4\np = 28\nq = 45\neq = c*s**2 + p*s + q\nprint(eq)"
  },
  {
    "example_id": 347,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.5",
      "0.5",
      "36.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "x, y = symbols('x y')\neq = (x/y) - 1/2\nsolution = solve(eq, x)\nx_value = solution[0]\ny_value = x_value + 36\nprint(x_value)\nprint(y_value)"
  },
  {
    "example_id": 348,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "f = lambda x: 2*x/(x**2-5*x-14)\na = -2\nb = -5\nc = 7\nprint(a + b + c)"
  },
  {
    "example_id": 349,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "13.0",
      "2.0",
      "73.0",
      "2.0",
      "2.0",
      "73.0",
      "2.0",
      "13.0",
      "2.0",
      "2.0",
      "0.5"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = x + y - 13\neq2 = x*y - 24\nsolution = solve((eq1, eq2), (x, y))\nx_value, y_value = solution[0]\ndistance = ((x_value)**2 + (y_value)**2)**0.5\nprint(distance)"
  },
  {
    "example_id": 350,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "-3.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\nf = ((x-2)**2-9)/3\nf_x = diff(f, x)\neq_x_intercept = Eq(f_x, 0)\nsolution_x_intercept = solve(eq_x_intercept, x)\nx_intercept_values = [x_intercept.subs(x, 2) for x_intercept in solution_x_intercept]\nx_intercept_values = [x_intercept_value.evalf() for x_intercept_value in x_intercept_values]\ny_intercept_value = f.subs(x, 2)\nprint(x_intercept_values)\nprint(y_intercept_value)"
  },
  {
    "example_id": 351,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "1.0"
    ],
    "solution": ""
  },
  {
    "example_id": 352,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.5"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "a = symbols('a')\neq = 35/5 - 2*a\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 353,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = 0\nwhile (1**x + 2**x + 5**x) < 642:\n    x += 1\nprint(x)"
  },
  {
    "example_id": 354,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "14.0",
      "14.0",
      "2.0",
      "2.0",
      "16.0",
      "0.0"
    ],
    "annotated_answers": [
      "-8192.0"
    ],
    "solution": "a = symbols('a')\neq = a**2 - 2*a + 16 - 14*a**14\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 355,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = 2**(2*x) - 256**(1/2)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 356,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "388071.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = 12\ny = 11\neq = 2*x**2*y**3 + 4*y**3 - (149 + 3*x**2)\nprint(eq)"
  },
  {
    "example_id": 357,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "# Number of rides = Total cost / (Entry fee + cost per ride)\nrides = 12.75 / 4.25\nprint(rides)"
  },
  {
    "example_id": 358,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-9.0"
    ],
    "annotated_answers": [
      "-9.0"
    ],
    "solution": "def find_midpoint_product(p1, p2):\n    x1, y1 = p1\n    x2, y2 = p2\n    midpoint_x = (x1 + x2) / 2\n    midpoint_y = (y1 + y2) / 2\n    product = midpoint_x * midpoint_y\n    return product\n\np1 = (1, 1)\np2 = (-7, 5)\nprint(find_midpoint_product(p1, p2))"
  },
  {
    "example_id": 359,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "15.0",
      "15.0",
      "15.0",
      "27.0"
    ],
    "annotated_answers": [
      "-56.0"
    ],
    "solution": "a, b, c = 3, 3, 3\n\n# a*3 + b + c = -3\n# a + 3b + c = 9\n# a + b + 3c = 19\n\nprint(a*3 + b + c)\nprint(a + 3*b + c)\nprint(a + b + 3*c)\n\n# abc = -3 + 9 + 19 = 29\nprint(a*b*c)"
  },
  {
    "example_id": 360,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "90.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "# Number of people\nn = 12\n\n# Number of people joining\nm = 3\n\n# Total number of people\ntotal = n + m\n\n# Daily shares\ndaily = total / n\n\n# Total days\ndays = 10\n\n# Total supplies\ntotal_supplies = total * days\n\n# Remaining supplies\nremaining = total_supplies - (daily * days * m)\n\n# Number of days remaining\nprint(int(remaining / daily))"
  },
  {
    "example_id": 361,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "24.0",
      "16.0"
    ],
    "annotated_answers": [
      "128.0"
    ],
    "solution": "from sympy import symbols, solve\nfrom sympy.abc import y, k\neq = y**2 + 24*y + 16 + k\nsolution = solve(eq, k)\nk_value = solution[0]\nprint(k_value)"
  },
  {
    "example_id": 362,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "64.0"
    ],
    "annotated_answers": [
      "64.0"
    ],
    "solution": "a = 3\nb = 5\nx = a**2 + 2*a*b + b**2\nprint(x)"
  },
  {
    "example_id": 363,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 + 4*x + 4\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 364,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "102.0"
    ],
    "annotated_answers": [
      "54.0"
    ],
    "solution": "# Total miles\ntotal_miles = 26 + (12*2) + (12*2) + 28\nprint(total_miles)"
  },
  {
    "example_id": 365,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "n = symbols('n')\neq = n**2 - 5*n - 14\nsolution = solve(eq, n)\nn_value = solution[0]\nprint(n_value)"
  },
  {
    "example_id": 366,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "729.0",
      "731.0",
      "727.0",
      "725.0",
      "128.0",
      "21199.0"
    ],
    "annotated_answers": [
      "-48.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq1 = 725*x + 727*y - 1500\neq2 = 729*x + 731*y - 1508\nsolution1 = solve(eq1, x)\nsolution2 = solve(eq2, y)\nx_value = solution1[0]\ny_value = solution2[0]\nprint(x_value - y_value)"
  },
  {
    "example_id": 367,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "import math\n\ndef right_triangles(leg_length):\n    count = 0\n    for i in range(1, leg_length + 1):\n        j = int(math.sqrt(leg_length ** 2 - i ** 2))\n        if i + j > leg_length:\n            break\n        count += 1\n    return count\n\nprint(right_triangles(162))"
  },
  {
    "example_id": 368,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "3.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "from sympy import solve\nx = symbols('x')\neq = 6*x**2 + x - 2\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 369,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "a, b, c = symbols('a b c')\nx, m, n = symbols('x m n')\neq = a*x**2 + b*x + c\nsolution = solve([eq.subs(x, m) - eq.subs(x, n)], m - n)\nprint(solution)"
  },
  {
    "example_id": 370,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "105.0",
      "6.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "m = 2\nn = 3\na = symbols('a')\neq = (16*a**2 + 36*a + 56) - (m*a + n)**2\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 371,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "from sympy import symbols, solve\nx = symbols('x')\nf = 10 - x/2\ng = 8 + x/2\neq = f - g\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 372,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "horses = 10\nprint(horses)"
  },
  {
    "example_id": 373,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\neq = (a**2 - 5*a + 9) - (b**2 - 5*b + 9)\nsolution = solve(eq, a, b)\na_value = solution[0][0]\nb_value = solution[0][1]\nprint((a_value - 1)*(b_value - 1))"
  },
  {
    "example_id": 374,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "# Solve for e\ne = (17 - 8) / 2\ne = 9 / 2\ne = 4.5\n\n# Solve for d\nd = (e * 2) + 9\nd = (4.5 * 2) + 9\nd = 9.5 + 9\nd = 18.5"
  },
  {
    "example_id": 375,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-99.0",
      "3.0",
      "889.0",
      "-99.0",
      "3.0",
      "889.0",
      "198.0"
    ],
    "annotated_answers": [
      "900.0"
    ],
    "solution": "x1 = -99 + sqrt(8001)\nx2 = -99 - sqrt(8001)\nc = (x1*x2)/(x1 + x2)\nprint(c)"
  },
  {
    "example_id": 376,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-5.0"
    ],
    "annotated_answers": [
      "-5.0"
    ],
    "solution": "b = symbols('b')\neq = b**2 + 2*b - 15\nsolution = solve(eq, b)\nb_value = solution[0]\nprint(b_value)"
  },
  {
    "example_id": 377,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "288.0"
    ],
    "annotated_answers": [
      "288.0"
    ],
    "solution": "expression = (2*(-3))**5 / (-3)**3\nprint(expression)"
  },
  {
    "example_id": 378,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "26.0"
    ],
    "solution": "n = 0\nwhile (n*(n+1))/2 < 26:\n    n += 1\nprint(n)"
  },
  {
    "example_id": 379,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "f = lambda x: (x-1)*(x-3)*(x-7)*(x-9)\nprint(f(6) - f(4))"
  },
  {
    "example_id": 380,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "10404.0",
      "6.0",
      "10930.7025"
    ],
    "annotated_answers": [
      "10455.0"
    ],
    "solution": "P = 10000\nr1 = 0.04 / 2\nr2 = 0.05 / 2\n\n# 6 months in the first CD\nP = P * (1 + r1) ** 2\nprint(\"6 months in the first CD:\", P)\n\n# 6 months in the second CD\nP = P * (1 + r2) ** 2\nprint(\"6 months in the second CD:\", P)"
  },
  {
    "example_id": 381,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.74596669241483"
    ],
    "annotated_answers": [
      "60.0"
    ],
    "solution": "from sympy import sqrt\n\nn = 12 * 20 * 15 * 60\nroot = sqrt(n)\nroot_3 = root**(1/3)\nprint(root_3)"
  },
  {
    "example_id": 382,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "4.0",
      "8.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "from sympy import Min\nfrom sympy.abc import x, y\n\nexpr = x**2 + y**2 + 2*x - 4*y + 8\nprint(Min(expr))"
  },
  {
    "example_id": 383,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "14400.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x = symbols('x')\neq = (120 - sqrt(x))**(1/2)\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 384,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.333333333333333"
    ],
    "annotated_answers": [
      "-23.5"
    ],
    "solution": "x1 = (2*5 - 1)/3\nx2 = (2*7 - 1)/3\nprint(x1 + x2)"
  },
  {
    "example_id": 385,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq1 = 3*x + y - 17\neq2 = 5*y + z - 14\neq3 = 3*x + 5*z - 41\nsolution = solve([eq1, eq2, eq3], [x, y, z])\nx_value = solution[x]\ny_value = solution[y]\nz_value = solution[z]\nsum = x_value + y_value + z_value\nprint(sum)"
  },
  {
    "example_id": 386,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.5",
      "30.0"
    ],
    "annotated_answers": [
      "5400.0"
    ],
    "solution": "from sympy import symbols, solve\nx, y = symbols('x y')\neq = y - 1.5*x - 30\nsolution = solve(eq, y)\ny_value = solution[0]\nprint(y_value)"
  },
  {
    "example_id": 387,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "16.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "print(4/3 * 6/4 * 8/5 * 10/6 * 12/7 * 14/8)"
  },
  {
    "example_id": 388,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "15.0",
      "15.0",
      "297.0",
      "2.0"
    ],
    "annotated_answers": [
      "73.0"
    ],
    "solution": "a, b = symbols('a b')\neq = (9*a*b)/2 + 5*(9*a*b) + 15*a + 15*b\neq = eq.subs(a*b, 3)\nprint(eq.simplify())"
  },
  {
    "example_id": 389,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "from sympy import solve\nx = symbols('x')\neq = x**2 - 2*x - 3\np = solve(eq, x)[0]\nq = solve(eq, x)[1]\nprint((p+1)*(q+1))"
  },
  {
    "example_id": 390,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "def A_and_B(A, B):\n    return (A+B)/2\n\nA = 3\nB = 5\nC = A_and_B(A, B)\nD = 8\nE = A_and_B(C, D)\nprint(E)"
  },
  {
    "example_id": 391,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "7.0"
    ],
    "annotated_answers": [
      "78.0"
    ],
    "solution": "x, y = symbols('x y')\neq = (1/x) + (1/y) - (1/7)\nsolution = solve(eq, (x, y))\nx_values = [solution[i][0] for i in range(len(solution))]\nprint(sum(x_values))"
  },
  {
    "example_id": 392,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "2.0"
    ],
    "solution": ""
  },
  {
    "example_id": 393,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "0.0"
    ],
    "solution": ""
  },
  {
    "example_id": 394,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "3.0"
    ],
    "solution": ""
  },
  {
    "example_id": 395,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "print((2**10 - 2**8) / (2**7 - 2**6))"
  },
  {
    "example_id": 396,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-5.0"
    ],
    "annotated_answers": [
      "-5.0"
    ],
    "solution": "x = symbols('x')\neq = (x+2)/3 - (4/(x+1))\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 397,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "-4.0",
      "2.0",
      "2.0",
      "2.0",
      "-2.0",
      "-4.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "2.5"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\nx = symbols('x')\n\n# 1. Vertical line of symmetry\neq = (x-2)**2 - x + 1\nsolution = solve(eq, x)\nx1, x2 = solution[0], solution[1]\n\n# 2. Two real roots\neq = a*x**2 + b*x + c\nsolution = solve(eq, x)\nx1, x2 = solution[0], solution[1]\n\n# 3. Greater root is $\\sqrt{n}+2$\nroot1 = (x1 - 2)**2\nroot2 = (x2 - 2)**2\nn = root2 - root1\n\nprint(n)"
  },
  {
    "example_id": 398,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0",
      "2.0",
      "10.0",
      "6.0",
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "d = symbols('d')\nc = symbols('c')\neq1 = d-6*c - 4\neq2 = 2*d - 9*c - 20\neq1_solution = solve(eq1, c)\neq2_solution = solve(eq2, d)\nc_value = eq1_solution[0]\nd_value = eq2_solution[0]\nprint(d_value/c_value)"
  },
  {
    "example_id": 399,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.029196908285418044",
      "0.029196951182683326",
      "0.0291969511891908",
      "0.0291969511891908"
    ],
    "annotated_answers": [
      "0.015"
    ],
    "solution": "a = 3\nn = 103\nd = 2\nk = 1\nterm = a/n**k\nresult = term\nwhile abs(term) >= 10**-10:\n    k += 1\n    n *= d\n    term = a/n**k\n    result += term\n    print(result)\nprint(result)"
  },
  {
    "example_id": 400,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "560.0",
      "53.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "# x = symbols('x')\nx = symbols('x')\n# y = -265*x + 2800\ny = -265*x + 2800\n# solve for x\nsol = solve(y, x)\n# print the result\nprint(sol)"
  },
  {
    "example_id": 401,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-9.0",
      "6.0",
      "3.0",
      "-9.0",
      "6.0",
      "3.0",
      "2.0",
      "-162.0",
      "108.0",
      "3.0",
      "-162.0",
      "-9.0",
      "6.0",
      "3.0",
      "2.0",
      "108.0",
      "3.0"
    ],
    "annotated_answers": [
      "117.0"
    ],
    "solution": "# Solve for x\nx = symbols('x')\neq = x**2 + 18*x - 27\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)\n\n# Find positive solution\na = x_value**2\nb = x_value*18\nprint(a)\nprint(b)\n\n# Calculate a+b\na_plus_b = a + b\nprint(a_plus_b)"
  },
  {
    "example_id": 402,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "n_candies = 15\nn_chocolate = 3\nn_vanilla = 3\nn_peppermint = 2\nn_lemon = 2\n\nn_total = n_chocolate + n_vanilla + n_peppermint + n_lemon\n\nn_peppermint_and_lemon = n_peppermint + n_lemon\nn_chocolate_and_vanilla = n_chocolate + n_vanilla\n\nn_peppermint_and_lemon_double = 2*n_chocolate_and_vanilla\n\nn_peppermint_more_lemon = n_peppermint_and_lemon - n_lemon\n\nn_lemon = n_peppermint_more_lemon\n\nprint(n_lemon)"
  },
  {
    "example_id": 403,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "print(math.ceil(math.pow(25, 1/3)))"
  },
  {
    "example_id": 404,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "h = lambda x: sqrt((x + 3)/2)\nh_value = h(-1)\nprint(h_value)"
  },
  {
    "example_id": 405,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "18.0",
      "2.0"
    ],
    "annotated_answers": [
      "26.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\nx = (4*a**2 + 9)/(2*a*c)\neq = x - (a + sqrt(b))/c\nsolution = solve(eq, [a, b, c])\na_value = solution[0][0]\nb_value = solution[0][1]\nc_value = solution[0][2]\nprint(a_value + b_value + c_value)"
  },
  {
    "example_id": 406,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "f = lambda x: 3*x+1 if x%2==1 else x//2\nprint(f(14))"
  },
  {
    "example_id": 407,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "17.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "def coefficient_of_x(expression):\n    return expression.coeff(x)\n\nexpression = (7+8*x)-3*(2+6*x+2*x**2)+9*(1+3*x+4*x**2+12*x**3)-9*(7-x**2-8*x**3+13*x**4)\nprint(coefficient_of_x(expression))"
  },
  {
    "example_id": 408,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = [1-7, 1+7]\nprint(sum(x))"
  },
  {
    "example_id": 409,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "3.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "from sympy import symbols, limit\nx = symbols('x')\ny = (2/(x**2+x-6))\ny_at_x = limit(y, x, 0)\nprint(y_at_x)"
  },
  {
    "example_id": 410,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\nexpression = (b-c)**2 + a*(b+c)\nsolution = expand(expression)\nsolution = simplify(solution)\nprint(solution)"
  },
  {
    "example_id": 411,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "import numpy as np\n\ndef quadratic_function(x):\n    return x ** 2 - 7 * x + 7\n\ndef line_function(x):\n    return -3\n\ndef find_intersection(f, g):\n    x_values = np.roots(np.array([1, -f(0), g(0)]))\n    return np.sum(x_values)\n\nprint(find_intersection(quadratic_function, line_function))"
  },
  {
    "example_id": 412,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "1.0",
      "2.0",
      "0.5",
      "3.0",
      "2.0",
      "0.5"
    ],
    "annotated_answers": [
      "112.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\nz = symbols('z')\na = (2/(1+2*I**0.5)) + (3/(2-I**0.5))\na_value = a.expand()\nprint(a_value)"
  },
  {
    "example_id": 413,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "630.0"
    ],
    "solution": "# Define variables\nn = symbols('n')\n\n# Define the sum of the first 20 positive multiples of 5\nsum_of_multiples = 5*((n**2 + n)//2)\n\n# Define the sum of the first 20 positive, even integers\nsum_of_even_integers = (n*(n+1))//2\n\n# Find the positive difference\npositive_difference = simplify(sum_of_multiples - sum_of_even_integers)\n\n# Print the positive difference\nprint(positive_difference)"
  },
  {
    "example_id": 414,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "18213.0",
      "18.0",
      "15.0",
      "2.0",
      "1.0"
    ],
    "annotated_answers": [
      "16384.0"
    ],
    "solution": "from sympy import symbols, solve\nk = symbols('k')\neq = k*(k+1)*(k+2) - 15\nsolution = solve(eq, k)\nk_value = solution[0]\nprint(k_value)"
  },
  {
    "example_id": 415,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-9.0",
      "12.0",
      "13.0",
      "5.0",
      "-14.0",
      "12.0",
      "1.0",
      "5.0",
      "-9.0",
      "12.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "x1, y1, x2, y2 = symbols('x1, y1, x2, y2')\n\neq = (x1 - x2)**2 + (y1 - y2)**2\n\nsolution = solve([eq.subs(x1, -4), eq.subs(x2, 1), eq.subs(y1, 1), eq.subs(y2, 13)], (x1, y1, x2, y2))\n\n# x1, y1, x2, y2 = solution[0]\n# print(x1, y1, x2, y2)\n\nprint(solution)"
  },
  {
    "example_id": 416,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "9.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "for i in range(10):\n    if (i**2) % 10 == 1:\n        print(i)"
  },
  {
    "example_id": 417,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x = symbols('x')\neq = (12 / (x * x)) * (x**4 / (14 * x)) * (35 / (3 * x))\nsolution = simplify(eq)\nprint(solution)"
  },
  {
    "example_id": 418,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-5.5"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "m = 4\nb = -7\na = 1 / m\nx = 6\ny = a * x + b\nprint(y)"
  },
  {
    "example_id": 419,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "41.0"
    ],
    "solution": "import sympy\n\nx = sympy.Symbol('x')\nf = sympy.Function('f')(x)\na = sympy.Symbol('a')\nb = sympy.Symbol('b')\n\ng = f + a * x\nh = f + b * x\n\neq1 = sympy.diff(g, x)\neq2 = sympy.diff(h, x)\n\nsol1 = sympy.solve(eq1, a)\nsol2 = sympy.solve(eq2, b)\n\na_value = sol1[0]\nb_value = sol2[0]\n\nprint(a_value**2 + b_value**2)"
  },
  {
    "example_id": 420,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "0.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\ny_x_4 = x**4\ny_5x_2_6 = 5*x**2 - 6\neq_x_4 = y_x_4.diff(x)\neq_5x_2_6 = y_5x_2_6.diff(x)\neq = eq_x_4 - eq_5x_2_6\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)\nm = x_value.subs(x, 1)\nn = x_value.subs(x, -1)\nprint(m - n)"
  },
  {
    "example_id": 421,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = 3\neq = (x**4 - x**3) / (x**3 - x**2)\nprint(eq)"
  },
  {
    "example_id": 422,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\nf = (x-5)/(x**2-9)\nsolution = solve(f, x)\nprint(solution)"
  },
  {
    "example_id": 423,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.25"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "# define P and Q\nP, Q = symbols('P Q')\n\n# define the operation\ndef mul(a, b):\n    return (a+b)/2\n\n# calculate 3*6*8\nresult = mul(mul(3, 6), 8)\n\n# simplify the result\nprint(simplify(result))"
  },
  {
    "example_id": 424,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "33.0",
      "2.0",
      "3.0",
      "2.0",
      "33.0",
      "2.0",
      "3.0",
      "2.0",
      "33.0",
      "2.0",
      "3.0",
      "2.0",
      "33.0",
      "2.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = x + y - 3\neq2 = (x - y)**2 - 33\nsol = solve([eq1, eq2], [x, y])\nprint(sol)"
  },
  {
    "example_id": 425,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-10.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "z = symbols('z')\neq = 2*z**2 + 13*z + 21\nsolution = solve(eq, z)\na = solution[0]\nb = solution[1]\nprint(2*a + b)"
  },
  {
    "example_id": 426,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "a = 9 - 2*3\nb = 9 - 2*3\n\ndef f(x):\n    if x <= 3:\n        return 9 - 2*x\n    else:\n        return a*x + b\n\nprint(f(f(3)))"
  },
  {
    "example_id": 427,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "x, y, c = symbols('x y c')\nf = x*y**2 + y + c\n\n# Find the range of the function\nx_range = expand(f.subs(y, 0))\ny_range = expand(f.subs(x, 0))\n\n# Find the values of a, b, and c\na = simplify(x_range)\nb = simplify(y_range)\nc = simplify(f.subs(x, 0).subs(y, 0))\n\n# Find the sum of a, b, and c\nsum_of_ab_c = a + b + c\nprint(sum_of_ab_c)"
  },
  {
    "example_id": 428,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "1.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0",
      "1.0",
      "2.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "32.0"
    ],
    "solution": "x1, y1 = symbols('x1, y1')\nx2, y2 = symbols('x2, y2')\nslope = (y2-y1)/(x2-x1)\ny_intercept = y2 - slope * x2\nsum_slope_y_intercept = slope + y_intercept\nprint(sum_slope_y_intercept)"
  },
  {
    "example_id": 429,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-28.5"
    ],
    "annotated_answers": [
      "22.0"
    ],
    "solution": "smallest = 14\nlarge = smallest + 14\nsum = smallest + large + (smallest + large) / 2\n\n# calculate the value of the original smallest term\nvalue = (sum - 120) / 2\n\nprint(value)"
  },
  {
    "example_id": 430,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "def letter_count(n):\n    if 0 <= n <= 20:\n        return len(str(n))\n    else:\n        return None\n\nnum_in_domain = 0\nnum_in_range = 0\nfor i in range(21):\n    num_in_domain += 1\n    num_in_range += 1 if letter_count(i) else 0\nprint(num_in_domain - num_in_range)"
  },
  {
    "example_id": 431,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "50.0"
    ],
    "annotated_answers": [
      "50.0"
    ],
    "solution": "x = symbols('x')\neq = (sqrt(12*x) + 12)*(sqrt(3*x) - 6) - (4*(x + 3) + x - 34)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 432,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\nexpr = x**2 - 6*x + 13\nsolution = solve(expr, x)\nprint(solution)"
  },
  {
    "example_id": 433,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "6.0",
      "2.0",
      "-21.0",
      "6.0",
      "6.0",
      "2.0",
      "-3.0",
      "6.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x = symbols('x')\ny = -2*x**2 - 12*x - 15\nsolution = solve(y, x)\nvertex = (solution[0], -y.subs(x, solution[0]))\nprint(vertex)"
  },
  {
    "example_id": 434,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "4.0",
      "2.0",
      "6.0",
      "36.0",
      "0.5"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x, y = symbols('x y')\neq = (x**2 - 4*x + y**2 - 6*y - 36)\nr = (eq**0.5).expand()\nprint(r)"
  },
  {
    "example_id": 435,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "f = lambda x: 2*x - 3\ng = lambda x: x + 1\nprint(g(f(5) - 1))"
  },
  {
    "example_id": 436,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "107.0"
    ],
    "annotated_answers": [
      "107.0"
    ],
    "solution": "n = 9951\np = 2\nwhile p**2 <= n:\n    if n % p == 0:\n        n = n // p\n    else:\n        p += 1\nprint(n)"
  },
  {
    "example_id": 437,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-10.0",
      "3.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "x = symbols('x')\neq = (3*x**2 + 14*x + 8)\nsolution = solve(eq, x)\na = solution[0]\nb = solution[1]\nprint(a - b)"
  },
  {
    "example_id": 438,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "498.33000000000004",
      "473.41350000000006",
      "473.41350000000006"
    ],
    "annotated_answers": [
      "228.3"
    ],
    "solution": "# set up variables and constants\nbase_height = 452\ngrowth_rate = 5\ndays = 2\n\n# solve for height\nheight = base_height * (1 + (growth_rate/100))**days\nprint(height)\n\n# solve for height two weeks ago\nheight_two_weeks_ago = height - (height/100 * growth_rate)\nprint(height_two_weeks_ago)\n\n# solve for height two weeks ago\nprint(height_two_weeks_ago)"
  },
  {
    "example_id": 439,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "4.0",
      "127.0",
      "3.0",
      "128.0",
      "2.0",
      "128.0",
      "12288.0",
      "0.0",
      "5.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "from sympy import symbols, solve, S, sqrt\n\nx = symbols('x')\nf = (1/(x-64)) + (1/(x**2-64)) + (1/(x**3-64))\nsolution = solve(f, x)\nprint(solution)"
  },
  {
    "example_id": 440,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "25.0"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "n = 5\nk = 1\ni = 1\nsum_ = 0\nwhile i <= n:\n    sum_ += k\n    i += 1\n    k += 2\nprint(sum_)"
  },
  {
    "example_id": 441,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq = (y-x)**2/(y-z)*(z-x) + (z-y)**2/(z-x)*(x-y) + (x-z)**2/(x-y)*(y-z)\nsolution = solve(eq, (x, y, z))\nprint(solution)"
  },
  {
    "example_id": 442,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "# Define variables\nA, B, C = symbols('A B C')\n\n# Define the expression\nexpr = (A*sqrt(B))/(C) - 9/(2*sqrt(3))\n\n# Define the equation\neq = expr - 0\n\n# Define the condition\ncond = (A*C).is_prime and (B*C).is_prime\n\n# Solve the equation\nsol = solve(eq, A, B, C, condition=cond)\n\n# Extract the solutions\nsolutions = list(sol)\n\n# Print the solutions\nprint(solutions)"
  },
  {
    "example_id": 443,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "10.0",
      "7.0",
      "812.0",
      "3.0",
      "2.0",
      "10.0",
      "7.0",
      "35.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq = 6*x*y*z + 30*x*y + 21*x*z + 2*y*z + 105*x + 10*y + 7*z - 812\nsolution = solve(eq, x, y, z)\nx_value, y_value, z_value = solution[0]\nprint(x_value + y_value + z_value)"
  },
  {
    "example_id": 444,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "2.0",
      "45.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "217.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq1 = x + y - 7\neq2 = 3*x + y - 45\nsol1 = solve(eq1, x)\nsol2 = solve(eq2, y)\nx_value = sol1[0]\ny_value = sol2[0]\nprint(x_value**2 - y_value**2)"
  },
  {
    "example_id": 445,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "14.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "a = 25 - 11\nb = 11\nif a > b:\n    print(a)\nelse:\n    print(b)"
  },
  {
    "example_id": 446,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "29.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = y == abs(x)\neq2 = y == -x**2 + 35/4\n\n# Find points on boundary\nboundary_points = solve(eq1, x)\n\n# Find points inside region\ninside_points = solve(eq1 & eq2, x)\n\n# Find total number of points\ntotal_points = len(boundary_points) + len(inside_points)\n\n# Find number of lattice points\nlattice_points = 0\nfor i in range(0, total_points):\n    if floor(boundary_points[i]) == boundary_points[i] and floor(inside_points[i]) == inside_points[i]:\n        lattice_points += 1\nprint(lattice_points)"
  },
  {
    "example_id": 447,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "16.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "def star(a, b):\n    return (a + b) * b\n\nprint(star(3, 5) - star(5, 3))"
  },
  {
    "example_id": 448,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "18.0",
      "18.0",
      "7.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "x = symbols('x')\nf = 9*x**2 + 18*x + 7\ndf = f.diff(x)\nprint(df)\nprint(f.subs(x, 0))"
  },
  {
    "example_id": 449,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "540.0",
      "43.0",
      "-60.0",
      "43.0",
      "240.0",
      "43.0",
      "1440.0",
      "43.0"
    ],
    "annotated_answers": [
      "28.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\neq1 = a + b + c + d - (3*a + 3*b + 3*c)\neq2 = a + b + c - (4*b + 4*c)\neq3 = a + b - (2*c)\neq4 = 8*a + 10*b + 6*c - 120\nsol = solve([eq1, eq2, eq3, eq4], [a, b, c, d])\nprint(sol)"
  },
  {
    "example_id": 450,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "-7.0"
    ],
    "solution": "b = symbols('b')\nc = symbols('c')\nx = symbols('x')\neq = x**2 + b*x + c\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 451,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "15.999999999999996"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "def f(x):\n    if x >= 0:\n        return -x**(1/3)\n    else:\n        return x**2\n\nprint(f(f(f(f(512)))))"
  },
  {
    "example_id": 452,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "40.0"
    ],
    "annotated_answers": [
      "21.0"
    ],
    "solution": "A = symbols('A')\nB = symbols('B')\nC = symbols('C')\nx = symbols('x')\ny = symbols('y')\n\neq = A*x**2 + 2*y**2 + B*x + C*y - 40\n\nr = simplify(expand(eq)).args[0]\n\nprint(A+B+C+r)"
  },
  {
    "example_id": 453,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "125.0"
    ],
    "annotated_answers": [
      "125.0"
    ],
    "solution": "from sympy import symbols, sqrt\n\nx = symbols('x')\neq = 5**5 + 5**5 + 5**5 + 5**5 + 5**5\nsolution = sqrt(eq)\nprint(solution)"
  },
  {
    "example_id": 454,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-8.0"
    ],
    "annotated_answers": [
      "41.0"
    ],
    "solution": "# John's age\nj_age = 27\n# father's age\nf_age = 100 - j_age\n# sum of digits in John's age\nj_sum = 0\nfor i in str(j_age):\n    j_sum += int(i)\n# sum of digits in father's age\nf_sum = 0\nfor i in str(f_age):\n    f_sum += int(i)\n# difference between ages\ndifference = f_age - j_age\n# positive difference between ages\npos_difference = abs(difference)\n# number of years in father's age\nf_age_num = pos_difference // 27\n# number of years in John's age\nj_age_num = f_age_num - j_sum\n# print(j_age_num)\nprint(j_age_num)"
  },
  {
    "example_id": 455,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "def f(n):\n    if n % 2 == 0:\n        return n**2 - 3*n + 1\n    else:\n        return n**2 + 1\n\ndef g(n):\n    return f(f(f(f(f(f(n))))))\n\nprint(g(2))"
  },
  {
    "example_id": 456,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "2.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "from sympy import sqrt, simplify\n\na = sqrt(2) + sqrt(8) + sqrt(32)\na = simplify(a)\na = a.as_numer_denom()\na = a[0] / a[1]\nprint(a)"
  },
  {
    "example_id": 457,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.24573093961552",
      "1.04",
      "3.0",
      "0.45",
      "-0.5",
      "3.0",
      "0.2"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\neq = (3/x**(1/5)) + (1/x**(1/2))\nsolution = simplify(expand(eq))\na = solution.args[0]\nb = solution.args[1]\nprint(a**2*b**(1/5) + b*a**(1/2))\nprint(floor(a) + floor(b))"
  },
  {
    "example_id": 458,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\neq = (3/4)**x - 81/256\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 459,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-20.0",
      "4.0",
      "4.0",
      "3.0",
      "9.0",
      "2.0",
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "a = symbols('a')\neq = (1+2*a)-2*(1+2*a+3*a**2)+3*(1+2*a+3*a**2+4*a**3)-4*(1+2*a+3*a**2+4*a**3+5*a**4)\nsimplify_eq = simplify(eq)\nprint(simplify_eq)"
  },
  {
    "example_id": 460,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "def f(x):\n    if x == 0:\n        return 0\n    elif x == 1:\n        return 0\n    elif x == 2:\n        return 1\n    elif x == 3:\n        return 3\n    elif x == 4:\n        return 6\n\ndef g(x):\n    return f(x) - x\n\nprint(len(set(g(x) for x in range(5))))"
  },
  {
    "example_id": 461,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "208.0"
    ],
    "solution": "b = 3\na = (2*b-1) // 5\nprint(a*b)"
  },
  {
    "example_id": 462,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-49.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "n = symbols('n')\neq = expand((1 + 2 + 3 + 4 + 5 + 6 + n)**2) - (1**3 + 2**3 + 3**3 + 4**3 + 5**3 + 6**3 + 7**3)\nsolution = solve(eq, n)\nn_value = solution[0]\nprint(n_value)"
  },
  {
    "example_id": 463,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "# Define the function\nx = symbols('x')\nf = (2-x)**2 - 9\n\n# Find the solutions\nsolutions = solve(f, x)\n\n# Sum the solutions\nsum_solutions = 0\nfor solution in solutions:\n    sum_solutions += solution\n\nprint(sum_solutions)"
  },
  {
    "example_id": 464,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0",
      "2.0",
      "14.0"
    ],
    "annotated_answers": [
      "81.0"
    ],
    "solution": "# Set up variables\nx = symbols('x')\n\n# Calculate the maximum value\nmax_value = floor(simplify(expand((4*x + 7)*(2 - x))))\n\nprint(max_value)"
  },
  {
    "example_id": 465,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "78.0"
    ],
    "solution": "# Define the function\ndef f(x):\n    return x**2 - 3*x + 2\n\n# Find the roots of the function\nroots = solve(f(x), x)\n\n# Print the roots\nprint(roots)"
  },
  {
    "example_id": 466,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "81.0"
    ],
    "solution": "# Define function f(x)\nf = lambda x: floor(x) + 2\n\n\n# Find f(3)\nf_3 = f(3)\nprint(f_3)\n\n\n# Find f(3x)\nf_3x = f(3*x)\nprint(f_3x)\n\n\n# Find f(x) = 11\nf_11 = f(11)\nprint(f_11)\n\n\n# Find f(x) = 11\nf_11_inv = f_11**(-1)\nprint(f_11_inv)\n\n\n# Find x\nx = solve(f_11_inv - 11, x)\nprint(x)"
  },
  {
    "example_id": 467,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.676124733643991",
      "77"
    ],
    "annotated_answers": [
      "45.0"
    ],
    "solution": "x = symbols('x')\nf = lambda x: floor(x) + floor(x**2) + floor(x**3) + floor(x**4) + floor(x**5) + floor(x**6) + floor(x**7) + floor(x**8) + floor(x**9)\nf_value = simplify(f(f(1))) + simplify(f(f(2))) + simplify(f(f(3))) + simplify(f(f(4))) + simplify(f(f(5))) + simplify(f(f(6))) + simplify(f(f(7))) + simplify(f(f(8))) + simplify(f(f(9)))\nprint(f_value)"
  },
  {
    "example_id": 468,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x = 8*(6**2 - 3*(11))/8 + 3\nprint(x)"
  },
  {
    "example_id": 469,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "from sympy import symbols, solve, sqrt\nx = symbols('x')\nf = (2*sqrt(x-6))/(x-3)\nsolution = solve(f, x)\nprint(solution)"
  },
  {
    "example_id": 470,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "# define the function\nf = lambda x: abs(x - 3) + abs(3 - x) - 1\n\n# define the range\nx_range = range(-100, 100)\n\n# find the value of x for which f(x) = 3\nx_value = [x for x in x_range if f(x) == 3][0]\n\n# print the answer\nprint(x_value)"
  },
  {
    "example_id": 471,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-6.0"
    ],
    "annotated_answers": [
      "-6.0"
    ],
    "solution": "x = symbols('x')\ny = (2*x-4)**(1/3)\nz = (x+4)**(1/3)\neq = (y/z) - 2\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 472,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "82.0",
      "7.0"
    ],
    "annotated_answers": [
      "89.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 + 14*x - 33\nsolution = solve(eq, x)\na_value = solution[0]\nb_value = solution[1]\na = a_value.args[0]\nb = b_value.args[1]\nprint(a + b)"
  },
  {
    "example_id": 473,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "1.0",
      "3.0",
      "2.0",
      "3.0",
      "2.0",
      "1.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x, y = symbols('x y')\nexpr = expand(sqrt(x**3 - 2**y))\nsolution = solve(expr, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 474,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-7.0",
      "2.0",
      "57.0",
      "2.0",
      "2.0",
      "57.0",
      "2.0",
      "7.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "53.0"
    ],
    "solution": "from sympy import *\n\nx = Symbol(\"x\")\n\nexpr = x**2 + 7*x - 2\n\nalpha, beta = solve(expr, x)\n\nprint(alpha**2 + beta**2)"
  },
  {
    "example_id": 475,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "9.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "print(5 * 1 + 4)"
  },
  {
    "example_id": 476,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8282.0"
    ],
    "annotated_answers": [
      "15554.0"
    ],
    "solution": "term = 2222\nfor i in range(6):\n    term = term + 1010\nprint(term)"
  },
  {
    "example_id": 477,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "31.0",
      "8.0",
      "337.0",
      "8.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\neq = (4*x - 7)*(x - 6) - 3\nsolution = solve(eq, x)\nprint(solution[0])"
  },
  {
    "example_id": 478,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "60.0",
      "60.0"
    ],
    "annotated_answers": [
      "3600.0"
    ],
    "solution": "A = symbols('A')\nB = symbols('B')\n\n# Area of a square\nS = A**2\n\n# Area of the square after the length is decreased by 60 and the width is increased by 60\nS_new = (A-60)*(B+60)\n\n# Difference in areas\ndiff = S_new - S\n\n# Simplify the expression\nsimplify_diff = simplify(diff)\n\n# Print the answer\nprint(simplify_diff)"
  },
  {
    "example_id": 479,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "2.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\ny1 = x**4\ny2 = 7*x**2 - 10\neq1 = y1 - y2\nsolution = solve(eq1, x)\nm = solution[0]\nn = solution[1]\nprint(m - n)"
  },
  {
    "example_id": 480,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "200.0"
    ],
    "annotated_answers": [
      "200.0"
    ],
    "solution": "print((15 + 5) * (15 - 5))"
  },
  {
    "example_id": 481,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.6"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "x = symbols('x')\nf = (2/(x+1))\nf_inv = f**(-1)\nf_inv_value = f_inv.subs(x, 1/5)\nprint(f_inv_value)"
  },
  {
    "example_id": 482,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "-7.0"
    ],
    "solution": "from sympy import *\nx,y = symbols('x y')\nf = x**2 + 6*x + y**2 + 8*y\nf = f.subs(x, 0)\nf = f.subs(y, 0)\nprint(f)"
  },
  {
    "example_id": 483,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x, y = symbols('x y')\neq = 4*x - 3*y\nprint((2*x + y)/(3*x - 2*y))"
  },
  {
    "example_id": 484,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "2.0"
    ],
    "annotated_answers": [
      "-15.0"
    ],
    "solution": "x, y = symbols('x y')\neq = (x**2 + y**2 - 5)\nsolution = solve(eq, y)\ny_value = solution[0]\nprint(y_value)"
  },
  {
    "example_id": 485,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "print(floor(abs(23/9)))"
  },
  {
    "example_id": 486,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "2.0",
      "2.0",
      "7.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x, y = symbols('x y')\neq = (7*(1/x) + 14*(1/y)) - 4\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 487,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "a = 4\nb = 13\nprint(b-a)"
  },
  {
    "example_id": 488,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "20.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "f = lambda x: (2*x - 1)**2 - 2*x + 1\nprint(f(3))"
  },
  {
    "example_id": 489,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.888888888888889"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "c, d = symbols('c d')\neq = c/d - 9/8\nsolution = solve(eq, d)\nd_value = solution[0]\nprint(d_value)"
  },
  {
    "example_id": 490,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "9.0",
      "2.0",
      "17.0",
      "2.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "n = symbols('n')\neq = (n - 2)*(n + 8) - (n)*(2*n - 3)\nsolution = solve(eq, n)\nn_value = solution[0]\nprint(n_value)"
  },
  {
    "example_id": 491,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0128205128205128"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "n = symbols('n')\nf = 10000\nm = 650\ns = 1200\n\neq = f/s - m*n\nsolution = solve(eq, n)\nn_value = solution[0]\nprint(n_value)"
  },
  {
    "example_id": 492,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "1.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "(x_mid, y_mid) = ((3+5)/2, (1+1)/2)\nprint(x_mid, y_mid)"
  },
  {
    "example_id": 493,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.61803398874989",
      "1.61803398874989",
      "1.61803398874989",
      "1.61803398874989",
      "1.61803398874989",
      "1.61803398874989",
      "1.61803398874989",
      "1.61803398874989",
      "1.61803398874989"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "x = symbols('x')\nexpr = expand(((x+1)**(1/2)) - x)\nsolution = solve(expr, x)\nx_value = solution[0]\nprint(x_value)\na, b, c = symbols('a b c')\nexpr = expand((x+1)**(1/2) - x)\nsolution = solve(expr, x)\nx_value = solution[0]\nprint(x_value)\na, b, c = symbols('a b c')\nexpr = expand((x+1)**(1/2) - x)\nsolution = solve(expr, x)\nx_value = solution[0]\nprint(x_value)\na, b, c = symbols('a b c')\nexpr = expand((x+1)**(1/2) - x)\nsolution = solve(expr, x)\nx_value = solution[0]\nprint(x_value)\na, b, c = symbols('a b c')\nexpr = expand((x+1)**(1/2) - x)\nsolution = solve(expr, x)\nx_value = solution[0]\nprint(x_value)\na, b, c = symbols('a b c')\nexpr = expand((x+1)**(1/2) - x)\nsolution = solve(expr, x)\nx_value = solution[0]\nprint(x_value)\na, b, c = symbols('a b c')\nexpr = expand((x+1)**(1/2) - x)\nsolution = solve(expr, x)\nx_value = solution[0]\nprint(x_value)\na, b, c = symbols('a b c')\nexpr = expand((x+1)**(1/2) - x)\nsolution = solve(expr, x)\nx_value = solution[0]\nprint(x_value)\na, b, c = symbols('a b c')\nexpr = expand((x+1)**(1/2) - x)\nsolution = solve(expr, x)\nx_value = solution[0]\nprint(x_value)\na"
  },
  {
    "example_id": 494,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-783.0"
    ],
    "annotated_answers": [
      "-9.0"
    ],
    "solution": "x = symbols('x')\nf = 24*x**2 - 19*x - 35\ng = expand(f)\nA, B, C = symbols('A B C')\nh = g.as_poly(x).all_coeffs()\ni = h[0]*h[2] - 3*h[1]\nprint(i)"
  },
  {
    "example_id": 495,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "14.0",
      "3.0",
      "8.0"
    ],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "# Solve the system of linear equations\nimport sympy\n\nx, y, z = sympy.symbols('x y z')\neq1 = 3*x + 4*y - 12*z - 10\neq2 = -2*x - 3*y + 9*z + 4\nsol = sympy.solve((eq1, eq2), (x, y, z))\nprint(sol)"
  },
  {
    "example_id": 496,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0",
      "1.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\nz = symbols('z')\nw = symbols('w')\n\nlog_x = log(x, y)\nlog_y = log(y, z)\nlog_z = log(z, w)\n\nlog_x_solution = solve(log_x, x)\nlog_y_solution = solve(log_y, y)\nlog_z_solution = solve(log_z, z)\n\nlog_x_value = log_x_solution[0]\nlog_y_value = log_y_solution[0]\nlog_z_value = log_z_solution[0]\n\nprint(log_x_value)\nprint(log_y_value)\nprint(log_z_value)"
  },
  {
    "example_id": 497,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-31.0"
    ],
    "annotated_answers": [
      "-13.5"
    ],
    "solution": "p = -14\nq = -17\nprint(p + q)"
  },
  {
    "example_id": 498,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0"
    ],
    "annotated_answers": [
      "48.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\nz = symbols('z')\nn = symbols('n')\n\nf1 = (x**(1/n))/(y**(1/n)) - 1\nf2 = (x**(1/n))/(z**(1/n)) - 1\n\nsolution1 = solve(f1, x)\nsolution2 = solve(f2, x)\n\nf1_value = solution1[0]\nf2_value = solution2[0]\n\nprint(f1_value)\nprint(f2_value)"
  },
  {
    "example_id": 499,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x, a, d, e = symbols('x a d e')\neq = -2*x**2 - 20*x - 53\neq = a*(x+d)**2 + e\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 500,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2000.0",
      "3.3010299956639813"
    ],
    "annotated_answers": [
      "-6.5"
    ],
    "solution": "wavelength = 7*10**(-7)\nenergy = 2000*wavelength\na = energy/wavelength\nb = log10(a)\nprint(a, b)"
  },
  {
    "example_id": 501,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "5.0",
      "2.0",
      "4.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "2.0",
      "1.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0",
      "2.0",
      "3.0",
      "2.0",
      "4.0",
      "2.0",
      "5.0"
    ],
    "annotated_answers": [
      "1056.0"
    ],
    "solution": "n = symbols('n')\nk = symbols('k')\np = (n*k)\nq = (n*(k-1))\nr = (n*(k+1))\ns = (n*(k-2))\nt = (n*(k+2))\nu = (n*(k-3))\nv = (n*(k+3))\nw = (n*(k-4))\nx = (n*(k+4))\ny = (n*(k-5))\nz = (n*(k+5))\nA = (p*q)\nB = (p*r)\nC = (p*s)\nD = (p*t)\nE = (p*u)\nF = (p*v)\nG = (p*w)\nH = (p*x)\nI = (p*y)\nJ = (p*z)\nans = Min(A,B,C,D,E,F,G,H,I,J)\nprint(ans)"
  },
  {
    "example_id": 502,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x = symbols('x')\neq = (x+1)/(x-1) - (x-2)/(x+2)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 503,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "234.0"
    ],
    "annotated_answers": [
      "360.0"
    ],
    "solution": "V = 30 + 180 + 24\nprint(V)"
  },
  {
    "example_id": 504,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "23.0"
    ],
    "solution": "b = symbols('b')\nx = symbols('x')\neq = x**2 + b*x + b + 3\nroots = solve(eq, x)\nfor root in roots:\n    if root.has(b):\n        m = b - root\n        n = b + root\n        print(m + n)"
  },
  {
    "example_id": 505,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "5.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "# Define x\nx = symbols('x')\n\n# Define the problem\nproblem = 5*x - 3\n\n# Define the solution\nsolution = solve(problem, x)\n\n# Print the solution\nprint(solution)"
  },
  {
    "example_id": 506,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.5"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "# If 12 friends order 1 meal each and share, they have enough food for 12 people\n# If 12 friends order 1 meal each and share, they have enough food for 18 people\n# Therefore, 12 friends should have ordered 18/12 = 1.5 meals each\nprint(18/12)"
  },
  {
    "example_id": 507,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "5.0"
    ],
    "annotated_answers": [
      "3.2"
    ],
    "solution": "x = symbols('x')\nf = x**2 + 2*x + 1\nf_shift = f.subs(x, x + 2)\nf_scale = f.subs(x, x/2)\nf_shift_scale = f_shift.subs(x, x/2)\nprint(f_shift_scale)\n\n\nprint(f_shift_scale.subs(x, 10))"
  },
  {
    "example_id": 508,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "49.0",
      "1.0"
    ],
    "annotated_answers": [
      "-18.0"
    ],
    "solution": "x, y = symbols('x y')\neq = (x**2 + y**2) - (14*x + 48*y)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 509,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "1024.0"
    ],
    "solution": "x = symbols('x')\nf = x**3\nf_inverse = (8**(1/3))\nf_inverse_div_f = f_inverse / f**(-1)\nprint(f_inverse_div_f)"
  },
  {
    "example_id": 510,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "# create symbols\nx = symbols('x')\n\n# solve the equation\nsolution = solve(x - (1/(2 + (1/(x - 2)))), x)\n\n# print the solution\nprint(solution[0])"
  },
  {
    "example_id": 511,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "25.0"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "print(ceiling(sqrt(20))**2)"
  },
  {
    "example_id": 512,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "18.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "f = lambda x: 5*x**2 + 3*x + 4\nprint(f(-2))"
  },
  {
    "example_id": 513,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x = 30\ny = 20\np = 120\nq = 130\n\np_x = p * x / 100\nq_y = q * y / 100\n\nprint(p_x - q_y)"
  },
  {
    "example_id": 514,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "144.0"
    ],
    "annotated_answers": [
      "144.0"
    ],
    "solution": "print((13+5)*(13-5))"
  },
  {
    "example_id": 515,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "10.0",
      "-2.0",
      "10.0",
      "-2.0",
      "10.0",
      "10.0",
      "2.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\ny = (x + 2)**4 - 100\nf = lambda x: (x + 2)**4 - 100\nsolution = solve(y, x)\nprint(solution)"
  },
  {
    "example_id": 516,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "3.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "from sympy import sqrt, simplify\n\ndenominator = 1/(1 + sqrt(2) - sqrt(3))\nrationalized = simplify(denominator)\nprint(rationalized)"
  },
  {
    "example_id": 517,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 + 36**2 - 100**2\nsolution = solve(eq)\nprint(sum(solution))"
  },
  {
    "example_id": 518,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "4.0",
      "7.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "# Define symbols\nx = symbols('x')\nb = symbols('b')\n\n# Define equations\ny1 = x**2 + 2*x + 7\ny2 = 6*x + b\n\n# Solve for b\nsolution = solve(y1 - y2, b)\n\n# Print result\nprint(solution)"
  },
  {
    "example_id": 519,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "6.0",
      "8.0",
      "2.0",
      "6.0",
      "8.0"
    ],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq = y - (x + 2)*(x + 4)/(x - 2)/(x - 4)\nsolution = solve(eq, y)\ny_value = solution[0]\nprint(y_value)"
  },
  {
    "example_id": 520,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "4.5"
    ],
    "solution": "# Define the region\nx, y = symbols('x, y')\nregion = And(y >= abs(x), y <= -abs(x) + 3)\n\n\n# Calculate the area\narea = integrate(1, region)\n\n\n# Simplify the area\narea = simplify(area)\n\n\n# Print the area\nprint(area)"
  },
  {
    "example_id": 521,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "-15.0"
    ],
    "solution": "sum = 0\nfor i in range(-7, 7):\n    if abs(i) + 1 > 7:\n        continue\n    if abs(i+1) <= 7:\n        sum += i\nprint(sum)"
  },
  {
    "example_id": 522,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-46.0",
      "22.0",
      "44.0",
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "f = lambda x: x**2 - 14*x + 3\nx = optimize.fmin(f, 1)\nprint(x)"
  },
  {
    "example_id": 523,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "5.0",
      "11670.0"
    ],
    "annotated_answers": [
      "2300.0"
    ],
    "solution": "feathers = 8\ngold = 2\nfeathers_price = 932\ngold_price = 1402\n\n# Five pounds of feathers and five ounces of gold\nfeathers = 5\ngold = 5\n\n# Calculate total cost\ntotal_cost = feathers_price * feathers + gold_price * gold\n\nprint(f'The cost of {feathers} pounds of feathers and {gold} ounces of gold is {total_cost}.')"
  },
  {
    "example_id": 524,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "8.0",
      "5.0"
    ],
    "annotated_answers": [
      "-8.0"
    ],
    "solution": "k = symbols('k')\nx = symbols('x')\ny = x**2 - 8*x + 5\neq = y - k\nsolution = solve(eq, k)\nk_value = solution[0]\nprint(k_value)"
  },
  {
    "example_id": 525,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "8.0",
      "3.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "# Define the variables\nn = symbols('n')\nm = symbols('m')\n\n# Define the equations\neq1 = (n + (n + 2) + (n + 4) + (n + 6)) - 4\neq2 = (n + 1 + 3 + 5 + 7)\n\n# Define the solution\nsolution = solve((eq1 - eq2).expand(), n)\n\n# Find the smallest even integer\nprint(solution[0])"
  },
  {
    "example_id": 526,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "1.0",
      "3.0",
      "2.0",
      "1.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq = (2*x**3 - 3*y**2)/6\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 527,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "14.0",
      "2.0",
      "19.0",
      "2.0"
    ],
    "annotated_answers": [
      "158.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq1 = (x+y)/2 - 7\neq2 = x*y - 19**(1/2)\nsolution1 = solve(eq1, x)\nsolution2 = solve(eq2, y)\nx_value = solution1[0]\ny_value = solution2[0]\nprint(x_value**2 + y_value**2)"
  },
  {
    "example_id": 528,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "30.0"
    ],
    "solution": "x = symbols('x')\neq = 40\neq2 = 3*x - 4*x\nsolution = solve(eq2, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 529,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "3.0",
      "2.5",
      "3.5"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "a = 1\nb = 2\nc = 3\navg_a_b = (a + 2*b) / 2\navg_a_c = (a + 2*c) / 2\navg_a_b_value = 7\navg_a_c_value = 8\n\nprint(a)\nprint(b)\nprint(c)\nprint(avg_a_b)\nprint(avg_a_c)"
  },
  {
    "example_id": 530,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "4.0",
      "5.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x = symbols('x')\nf = -2*x**2 + 4*x + 5\na, h, k = symbols('a h k')\nf_a = a*(x-h)**2 + k\nsol = solve(f_a - f, k)\nk_value = sol[0]\nprint(k_value)"
  },
  {
    "example_id": 531,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "10.0",
      "3.0",
      "1.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\nm = (y + 3) / (x - 1)\np = (y - 7) / (x - 4)\nq = (y - 3) / (x - 19)\nx0 = (1 + 19) / 2\ny0 = (2 + 4) / 2\nx1 = 20\ny1 = m * (x1 - x0) + y0\nprint(y1)"
  },
  {
    "example_id": 532,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.3333320617675781"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "n = 10\nS = 0\nfor i in range(n):\n    S += (1/4)**i\n\nprint(S)"
  },
  {
    "example_id": 533,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "800000.0"
    ],
    "annotated_answers": [
      "800000.0"
    ],
    "solution": "print((1002**2 - 502**2 + 298**2 - 202**2))"
  },
  {
    "example_id": 534,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "1320.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq1 = x + y - z - 8\neq2 = x - y + z - 18\neq3 = -x + y + z - 30\n[solve(eq1, x), solve(eq1, y), solve(eq1, z)]\n[solve(eq2, x), solve(eq2, y), solve(eq2, z)]\n[solve(eq3, x), solve(eq3, y), solve(eq3, z)]"
  },
  {
    "example_id": 535,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "m = 7\nn = 10\nseq = [1]\nfor i in range(n-1):\n    seq.append(seq[i] * (m/7))\nprint(seq)"
  },
  {
    "example_id": 536,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "84.0"
    ],
    "solution": "m, n, p = symbols('m n p')\neq = (x**2 - 7*x) - 3\nsolutions = solve(eq, x)\n\n# m + n + p\nm_n_p = 0\nfor solution in solutions:\n    m_n_p += solution.subs(x, 0).expand().simplify()\nprint(m_n_p)"
  },
  {
    "example_id": 537,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "60.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "a = symbols('a')\neq = (100 - a) / 5 - (1.5 * a) / 5 - (2 * (100 - a - (1.5 * a))) / 5 - 10\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 538,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "40000.0"
    ],
    "annotated_answers": [
      "2500.0"
    ],
    "solution": "area = 200 ** 2\nprint(area)"
  },
  {
    "example_id": 539,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.79583152331272"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "# Create a symbolic expression\nexpr = -sqrt(23)\n\n# Evaluate the expression\nvalue = expr.evalf()\n\n# Print the value\nprint(value)"
  },
  {
    "example_id": 540,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "def f(x):\n    if x >= 3:\n        return 2*x - 5\n    else:\n        return -x + 5\n\nfor x in range(10):\n    if f(f(x)) == 3:\n        print(x)"
  },
  {
    "example_id": 541,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0"
    ],
    "annotated_answers": [
      "1023.0"
    ],
    "solution": "def consecutive_odd_squares(n):\n    odds = []\n    for i in range(1, n + 1, 2):\n        odds.append(i**2)\n    return odds\n\nodds = consecutive_odd_squares(100)\ndiff = odds[1] - odds[0]\nproduct = odds[0] * odds[1]\nprint(product)"
  },
  {
    "example_id": 542,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "857.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "n = symbols('n')\na = 1000\nb = 987\nc = 974\nd = 961\ne = a + (b-a) + (c-b) + (d-c)\nf = e + (d-b)\ng = f + (c-a)\nh = g + (b-a)\ni = h + (a-b)\nj = i + (c-b)\nk = j + (d-c)\nl = k + (e-d)\nm = l + (f-e)\nn_value = floor(m)\nprint(n_value)"
  },
  {
    "example_id": 543,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "n = symbols('n')\neq = (9**(18*n)) - (27**(24))\nsolution = solve(eq, n)\nn_value = solution[0]\nprint(n_value)"
  },
  {
    "example_id": 544,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "20.0",
      "39.0",
      "2.0",
      "20.0",
      "38.0",
      "3.0",
      "20.0",
      "37.0",
      "4.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "import math\n\ndef is_distinct_triangle(a, b, c):\n    if a == b == c:\n        return False\n    if a == b!= c:\n        return False\n    if a == c!= b:\n        return False\n    if b == c!= a:\n        return False\n    return True\n\ndef is_integer(x):\n    return x % 1 == 0\n\ndef is_arithmetic_sequence(a, b, c):\n    return (b - a) == (c - b)\n\ndef has_integer_side_lengths(a, b, c):\n    return is_integer(a) and is_integer(b) and is_integer(c)\n\ndef has_distinct_sides(a, b, c):\n    return is_distinct_triangle(a, b, c)\n\ndef has_integer_perimeter(a, b, c):\n    return is_integer(a + b + c)\n\ndef has_distinct_non_equilateral_triangles_with_integer_side_lengths(a, b, c):\n    return (is_arithmetic_sequence(a, b, c) and has_integer_side_lengths(a, b, c) and has_distinct_sides(a, b, c) and has_integer_perimeter(a, b, c))\n\ndef get_distinct_non_equilateral_triangles_with_integer_side_lengths(n):\n    for a in range(1, n):\n        for b in range(a, n):\n            c = n - a - b\n            if has_distinct_non_equilateral_triangles_with_integer_side_lengths(a, b, c):\n                yield a, b, c\n\nfor a, b, c in get_distinct_non_equilateral_triangles_with_integer_side_lengths(60):\n    print(f'a = {a}, b = {b}, c = {c}')"
  },
  {
    "example_id": 545,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "a, b = symbols('a b')\neq = a * b - 2 * a - 3 * b\nsolution = solve(eq, a, b)\na_value, b_value = solution[0]\nprint(4 * 3)"
  },
  {
    "example_id": 546,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1500.0",
      "750.0",
      "76.1",
      "75.0",
      "75.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "n = symbols('n')\nd = 10\nn_dimes = 11\ntotal = 75\nvalue_dime = d/100\nvalue_nickel = 5/100\nnickels = floor(total/value_nickel)\ndimes = floor(total/value_dime)\nsubtotal_dimes = dimes*value_dime\nsubtotal_nickels = nickels*value_nickel\ntotal_coins = n_dimes*value_dime + nickels*value_nickel\nprint(\"Hillary has\", nickels, \"nickels\")\nprint(\"Hillary has\", dimes, \"dimes\")\nprint(\"Total coins =\", total_coins)\nprint(\"Subtotal of dimes =\", subtotal_dimes)\nprint(\"Subtotal of nickels =\", subtotal_nickels)"
  },
  {
    "example_id": 547,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "20.0",
      "3.0"
    ],
    "annotated_answers": [
      "75.0"
    ],
    "solution": "# Assign weight of 3 dogs to variable\nx = symbols('x')\n# Define equation\neq = (x + x + x) - 20\n# Solve for x\nsolution = solve(eq, x)\n# Print result\nprint(solution)"
  },
  {
    "example_id": 548,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "def f(n):\n    if n % 2 == 0:\n        return n**2 - 4 * n - 1\n    else:\n        return n**2\n\ndef ff(n):\n    return f(f(n))\n\ndef fff(n):\n    return f(ff(n))\n\ndef ffff(n):\n    return f(fff(n))\n\nprint(f(ffff(4)))"
  },
  {
    "example_id": 549,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "21.0"
    ],
    "annotated_answers": [
      "21.0"
    ],
    "solution": "print(int(11.1) + 2 * int(0.5 * 11.1))"
  },
  {
    "example_id": 550,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = 1\nprint(x)"
  },
  {
    "example_id": 551,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "t_g_16 = 3 - (16)**0.5\nprint(t_g_16)"
  },
  {
    "example_id": 552,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "# define x\nx = symbols('x')\n\n# define equation\neq = (17**6 - 17**5) / 16 - 17**x\n\n# solve for x\nsolution = solve(eq, x)\n\n# print solution\nprint(solution)"
  },
  {
    "example_id": 553,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "6.0",
      "5.0",
      "15.0",
      "4.0",
      "16.0",
      "3.0",
      "17.0",
      "2.0",
      "191.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "from sympy import symbols, solve\n\nx = symbols('x')\nf = (1/(x**2 - 7)) + (1/(x**3 - 8)) + (1/(x**4 - 9))\nf_solution = solve(f, x)\nf_sum = 0\nfor i in f_solution:\n    f_sum += i\nprint(f_sum)"
  },
  {
    "example_id": 554,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "print(ceil(sqrt(10)) + floor(sqrt(10)))"
  },
  {
    "example_id": 555,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "250.0"
    ],
    "annotated_answers": [
      "4000.0"
    ],
    "solution": "liters_in_a_liter = 1000\nnumber_of_drips_in_a_liter = liters_in_a_liter / 4\nprint(number_of_drips_in_a_liter)"
  },
  {
    "example_id": 556,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-11.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "x = symbols('x')\n\n# Define the equation\neq = 27 - x - 5 + 4 - 4 + 3*x\n\n# Solve for x\nsolution = solve(eq, x)\n\n# Print the value of x\nprint(solution[0])"
  },
  {
    "example_id": 557,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "680.0"
    ],
    "annotated_answers": [
      "368.0"
    ],
    "solution": "# Define the variable\nhp = 500\n# Define the power conversion factor\nk = 1.36\n# Calculate the result\nresult = hp * k\n# Round the result to the nearest kilowatt\nresult_rounded = round(result, 2)\nprint(result_rounded)"
  },
  {
    "example_id": 558,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0",
      "2.0",
      "2.0",
      "3.0",
      "5.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "triangle, square, diamond, clubsuit = symbols('triangle square diamond clubsuit')\n\neq1 = triangle + square - clubsuit\neq2 = triangle + triangle - diamond - diamond - diamond - diamond - diamond\neq3 = triangle + triangle - clubsuit - diamond\n\nsolve_eq1 = solve(eq1, square)\nsolve_eq2 = solve(eq2, diamond)\nsolve_eq3 = solve(eq3, triangle)\n\nsolution = solve_eq1[0] + solve_eq2[0] + solve_eq3[0]\n\nprint(solution)"
  },
  {
    "example_id": 559,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "210.0"
    ],
    "annotated_answers": [
      "210.0"
    ],
    "solution": "f = lambda x: x**2 - 1\ng = lambda x: x + 7\nprint(f(g(7)) + g(f(3)))"
  },
  {
    "example_id": 560,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "8.0",
      "5.0",
      "3.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\nexpr = x*(3*x-4) - (6*x**2 - 3*x + 5)/10\nsolution = solve(expr, x)\nprint(solution)"
  },
  {
    "example_id": 561,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "11.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x = symbols('x')\nf = x**2 - 8*x - 33\nsolution = solve(f, x)\nprint(solution)"
  },
  {
    "example_id": 562,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "3.0",
      "2.0",
      "12.0",
      "1.0",
      "2.0",
      "3.0",
      "-27.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "M = symbols('M')\nm = symbols('m')\neq = (m**2 - M**2) + (2*m*M)/(m + M) - (m**2 - M**2)**2/((m + M)**2*(m + M))\nsolution = solve(eq, m)\nm_value = solution[0]\nprint(m_value)"
  },
  {
    "example_id": 563,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "16.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "print(ceiling(pow(7/4, 2))**2)"
  },
  {
    "example_id": 564,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10000.0",
      "4.5",
      "2.0",
      "10920.25"
    ],
    "annotated_answers": [
      "920.25"
    ],
    "solution": "deposit = 10000\nrate = 0.045\nn_years = 2\nfuture_value = deposit * (1 + rate)**n_years\nprint(\"The deposit of $\\${:.2f}$ at {:.2f}% interest compounded annually for {} years will earn $\\${:.2f}$ in interest.\".format(deposit, rate*100, n_years, future_value))"
  },
  {
    "example_id": 565,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0",
      "2.0",
      "1.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "135.0"
    ],
    "solution": "n1, n2 = symbols('n1, n2')\ns = n1 + (n2 - n1) * (floor(log(n2, 2)) - floor(log(n1, 2)) - 1)\ns = expand(s)\ns = simplify(s)\ns = floor(s)\nprint(s)"
  },
  {
    "example_id": 566,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "5.0"
    ],
    "solution": ""
  },
  {
    "example_id": 567,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.3333333333333333"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "time = 20/60\nprint(time)"
  },
  {
    "example_id": 568,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "2.0",
      "3.0",
      "1.0"
    ],
    "annotated_answers": [
      "26.0"
    ],
    "solution": "a, b = symbols('a b')\nexpr = a*b - 2*a - 5*b + 5*a*b\nsolution = solve(expr, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 569,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "720.0"
    ],
    "solution": "a = 1\nb = 2\nc = 3\nx = a * b * c\nprint(x)"
  },
  {
    "example_id": 570,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "78.0"
    ],
    "annotated_answers": [
      "50.0"
    ],
    "solution": "x = symbols('x')\neq = 5 + 500*x - 110*x\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 571,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "37.5",
      "40.5"
    ],
    "annotated_answers": [
      "75.0"
    ],
    "solution": "# Define points\nA = (0, 7)\nB = (1, 0)\nC = (12, -2)\nD = (7, 8)\n\n# Define diagonals\nAB = (B[0] - A[0], B[1] - A[1])\nBC = (C[0] - B[0], C[1] - B[1])\nCD = (D[0] - C[0], D[1] - C[1])\nDA = (A[0] - D[0], A[1] - D[1])\n\n# Define area of the kite\nkite_area = (AB[0] * BC[1] - AB[1] * BC[0]) / 2\n\n# Define the area of the quadrilateral\nquadrilateral_area = (AB[0] * BC[1] + BC[0] * CD[1] + CD[0] * DA[1] + DA[0] * AB[1]) / 4\n\n# Print results\nprint(\"The area of the kite is: \", kite_area)\nprint(\"The area of the quadrilateral is: \", quadrilateral_area)"
  },
  {
    "example_id": 572,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0",
      "7.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "# Define variables\nm = symbols('m')\nn = symbols('n')\n\n# Define the equation\neq1 = (m*n) - 7\neq2 = (m+n) - 8\n\n# Solve the equations\nsol1 = solve(eq1, m)\nsol2 = solve(eq2, n)\n\n# Calculate the difference\ndiff = abs(sol1[0] - sol2[0])\nprint(diff)"
  },
  {
    "example_id": 573,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "24.0",
      "32.0",
      "18.0",
      "32.0",
      "18.0",
      "24.0"
    ],
    "annotated_answers": [
      "49.0"
    ],
    "solution": "x, y = symbols('x y')\neq = (x**2 + y**2) - (14*x + 48*y)\nsolution = solve(eq, y)\nprint(solution)"
  },
  {
    "example_id": 574,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.3",
      "0.953939201416946"
    ],
    "annotated_answers": [
      "3.21"
    ],
    "solution": "x = symbols('x')\na = 2.6\nb = 3.6\nc = 1\neq = x**2 + a*x + b - c\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 575,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "1.0",
      "16.0",
      "2.0",
      "2.0",
      "24.0",
      "2.0",
      "89.0",
      "4.0",
      "7.0",
      "4.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x1, x2 = symbols('x1, x2')\neq = 2*x1**2 + 3*x1 - 5 - 2*x2**2 - 3*x2 - 5\nsolution = solve(eq, [x1, x2])\nd = solution[0][0]\ne = solution[0][1]\nprint((d-1)*(e-1))"
  },
  {
    "example_id": 576,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.032"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\nz = symbols('z')\n\n# expand the expression\nexp_1 = 2**(1/4)\nexp_2 = 4**(3/8)\nexp_3 = exp_1**2/5\nexp_4 = exp_2**2/25\n\n# simplify the expression\nsolution = simplify(exp_3*exp_4)\n\nprint(solution)"
  },
  {
    "example_id": 577,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "35400.0",
      "454.0"
    ],
    "annotated_answers": [
      "33840.0"
    ],
    "solution": "a = 100\nb = 454 - a\nc = a + b\nd = a*b\nprint(d)\nprint(c)"
  },
  {
    "example_id": 578,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-24.0"
    ],
    "annotated_answers": [
      "24.0"
    ],
    "solution": "print(2*6 + 4*3 - 8*(3+3))"
  },
  {
    "example_id": 579,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "-4.0",
      "2.0",
      "4.0",
      "25.0",
      "2.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = x-y-1\neq2 = x**2+y**2-7\neq3 = eq1**3 - eq2**3\nsolution = solve(eq3, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 580,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "5.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "a = symbols('a')\neq = (3*5**2) - (4*(5-a)**2)\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 581,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x = 4\neq = (3*x - 2) * (4*x + 1) - (3*x - 2) * 4*x + 1\nprint(eq)"
  },
  {
    "example_id": 582,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "y = symbols('y')\neq = (19+3*y)**0.5 - 7\nsolution = solve(eq, y)\ny_value = solution[0]\nprint(y_value)"
  },
  {
    "example_id": 583,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "5.0",
      "3.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x, y = symbols('x y')\neq = x**2 + y**2 - 6 + 6*x + 2*y\nsolution = solve(eq)\nradius = simplify(solution[0])\nprint(radius)"
  },
  {
    "example_id": 584,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "70.0"
    ],
    "annotated_answers": [
      "70.0"
    ],
    "solution": "f = lambda x: x**2 - 4*x**0.5 + 1\nprint(f(f(4)))"
  },
  {
    "example_id": 585,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5050.0"
    ],
    "annotated_answers": [
      "5050.0"
    ],
    "solution": "sum = 0\nfor i in range(1, 101):\n    sum += i\nprint(sum)"
  },
  {
    "example_id": 586,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "f_degree = 4\ng_degree = 2\nf_g_degree = f_degree - g_degree\nprint(f_g_degree)"
  },
  {
    "example_id": 587,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1600.0"
    ],
    "annotated_answers": [
      "1600.0"
    ],
    "solution": "x = 441 + 2 * 21 * 19 + 361\nprint(x)"
  },
  {
    "example_id": 588,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1218.0"
    ],
    "annotated_answers": [
      "-42.0"
    ],
    "solution": "f = lambda x: x**3 - 6*x**2 + 3*x - 4\ng = lambda x: x**3 + 5*x**2 + 9*x - 2\nh = lambda x: f(g(x))\nprint(h(1))"
  },
  {
    "example_id": 589,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "14.6150007098532",
      "-0.00468168638976119",
      "2.0",
      "0.140450591692836",
      "1.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "x, y = symbols('x y')\neq = (x - 5)**2 + (y - 15)**2 - (130)**0.5\nsolution = solve(eq, x, y)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 590,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-16.0"
    ],
    "annotated_answers": [
      "-8.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 + 24*x + 128\nsolution = floor(solve(eq, x)[0])\nprint(solution)"
  },
  {
    "example_id": 591,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "g = lambda x: 3\nprint(g(2))"
  },
  {
    "example_id": 592,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "9.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "x = solve_quadratic(2, 13, 6)\nprint(x[0] ** 2 * x[1] ** 2)"
  },
  {
    "example_id": 593,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2005.0",
      "1.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "k = symbols('k')\nS_k = expand((1+k*x)**k)\nterm = S_k.subs(x, 2005)\nterm_expression = expand(term)\nterm_value = simplify(term_expression)\nprint(term_value)"
  },
  {
    "example_id": 594,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "600.0"
    ],
    "annotated_answers": [
      "600.0"
    ],
    "solution": "print(31**2 - 19**2)"
  },
  {
    "example_id": 595,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "6.0"
    ],
    "solution": ""
  },
  {
    "example_id": 596,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "44.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "# number of quarters in the first pile\nn1 = 20 - 3\n\n# number of quarters in the second pile\nn2 = 20 + 2\n\n# number of quarters in the third pile\nn3 = 20\n\n# number of quarters in the fourth pile\nn4 = 2 * n2\n\nprint(n4)"
  },
  {
    "example_id": 597,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "p = 2\nq = 3\nprint(p-1, q-1)"
  },
  {
    "example_id": 598,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "9.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\nf = x**2 + 2*x + 1\nf_inv = (x - 1)/(x + 1)\nf_inv_2 = f_inv**2\nf_inv_2_value = f_inv_2.subs(x, 2)\nprint(f_inv_2_value)"
  },
  {
    "example_id": 599,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "t = symbols('t')\neq = simplify(t**(1/2) - 2)\nsolution = solve(eq, t)\n\nt_values = []\nfor t_value in solution:\n    if floor(t_value) == t_value:\n        t_values.append(t_value)\n\nprint(len(t_values))"
  },
  {
    "example_id": 600,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "-2.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "from sympy import symbols, solve\nx, y = symbols('x y')\neq1 = 2*x - 3*y - 8\neq2 = 4*x + 3*y + 2\nsolution = solve([eq1, eq2], [x, y])\nprint(solution)"
  },
  {
    "example_id": 601,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "162.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "a, b, c, d = symbols('a b c d')\neq = a*b*c*d - 162\nsolution = solve(eq, [a, b, c, d])\nprint(solution)"
  },
  {
    "example_id": 602,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "7.0",
      "2.0",
      "2.0",
      "7.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "from sympy import sqrt, simplify\nn = 3\nx = sqrt(4)/(sqrt(4) + sqrt(32))\ny = simplify(x)\nprint(y)"
  },
  {
    "example_id": 603,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3125.0"
    ],
    "annotated_answers": [
      "3125.0"
    ],
    "solution": "print(5**3 * 5**2)"
  },
  {
    "example_id": 604,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0"
    ],
    "annotated_answers": [
      "41.0"
    ],
    "solution": "for a in range(1, 2009):\n    for b in range(a+1, 2009):\n        if (b-a)%a == 0:\n            print(a)"
  },
  {
    "example_id": 605,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "350.0"
    ],
    "solution": "a, b, c = symbols('a b c')\n\neq = (a + b + c + 200) - (a + 2*b + 3*c + 200)\n\nsolution = solve(eq, c)\n\nc_value = solution[0]\n\nprint(c_value)"
  },
  {
    "example_id": 606,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\nf = (x-3)/(2*x**2 - 8*x + 7)\nsolution = solve(f, x)\nprint(solution)"
  },
  {
    "example_id": 607,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "3.0",
      "3.0",
      "3.0",
      "3.0",
      "3.0",
      "-3.0",
      "3.0",
      "13.0",
      "2.0"
    ],
    "annotated_answers": [
      "143.0"
    ],
    "solution": "# Define the variables\nx = symbols('x')\ny = symbols('y')\n\n# Define the equations\neq1 = (x + y)**2 - 13*x - 13*y\neq2 = x*y - 27\n\n# Solve for x and y\nsolution = solve([eq1, eq2], [x, y])\n\n# Print the solution\nprint(solution)\n\n# Print the sum of the original number and the number with its digits reversed\nprint(solution[0][0] + solution[0][1])"
  },
  {
    "example_id": 608,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "52.0"
    ],
    "solution": "x1, y1 = 1, -2\nx2, y2 = -4, 10\np = (x1**2 + y1**2 + x2**2 + y2**2)**0.5\nprint(p)"
  },
  {
    "example_id": 609,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "6.0",
      "7.0"
    ],
    "annotated_answers": [
      "-16.0"
    ],
    "solution": "a = symbols('a')\nf = a**2 + 6*a - 7\nf_min = Min(f)\nprint(f_min)"
  },
  {
    "example_id": 610,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "81.0"
    ],
    "annotated_answers": [
      "-120.0"
    ],
    "solution": "k = symbols('k')\neq = (2/3)*k + 5 - (2/3)*k + 5\narea = eq**2\nsum = 0\nfor i in range(floor(log(20, 3)), ceil(log(20, 3))):\n    sum += expand((3**i)**2).subs(k, simplify(3**i)).evalf()\nprint(sum)"
  },
  {
    "example_id": 611,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "63.0"
    ],
    "solution": "lugs = 80\nligs = 7\nlags = 4\n\nprint(lugs // ligs)"
  },
  {
    "example_id": 612,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "51.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x, y = symbols('x, y')\nf = x**2 + y**2 - 6*x + 8*y - 24\nd = expand(f).subs(x, -3).subs(y, -12)\nprint(d)"
  },
  {
    "example_id": 613,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "x = symbols('x')\neq = abs(4*x + 2) - 10\n\nif eq.subs(x, -1):\n    x_value = -1\nelse:\n    x_value = solve(eq, x)[0]\n\nprint(x_value)"
  },
  {
    "example_id": 614,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.6034165586355513"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "import math\na = math.sqrt(61) / 3\nprint(a)"
  },
  {
    "example_id": 615,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "51.0"
    ],
    "annotated_answers": [
      "23.0"
    ],
    "solution": "a, b, c = 3, -24, 72\nprint(a+b+c)"
  },
  {
    "example_id": 616,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "n = 12\nprint(n)"
  },
  {
    "example_id": 617,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "5.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "a, b = symbols('a b')\neq1 = a*b - 7\neq2 = a + b - 5\nsolution = solve([eq1, eq2], [a, b])\na_value = solution[0][0]\nb_value = solution[0][1]\nprint(a_value**2 + b_value**2)"
  },
  {
    "example_id": 618,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "220.0"
    ],
    "annotated_answers": [
      "221.0"
    ],
    "solution": "weight_beginning = 244\nweight_end = 244*0.99\nfor i in range(1, 10):\n    weight_end = weight_end * 0.99\nprint(floor(weight_end))"
  },
  {
    "example_id": 619,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "800.0"
    ],
    "annotated_answers": [
      "800.0"
    ],
    "solution": "print(102**2 - 98**2)"
  },
  {
    "example_id": 620,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0",
      "5.0",
      "5.0",
      "5.0",
      "5.0",
      "5.0",
      "5.0",
      "5.0",
      "5.0",
      "5.0",
      "5.0",
      "5.0",
      "5.0",
      "5.0",
      "5.0",
      "5.0",
      "0.0",
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "# define variables\na = symbols('a')\nb = symbols('b')\nc = symbols('c')\nd = symbols('d')\n\n# define equation\neq = (a*b) + (c*d) - 5*(a+b+c+d)\n\n# solve for a\nsolution = solve(eq, a)\na_value = solution[0]\n\n# solve for b\nsolution = solve(eq, b)\nb_value = solution[0]\n\n# solve for c\nsolution = solve(eq, c)\nc_value = solution[0]\n\n# solve for d\nsolution = solve(eq, d)\nd_value = solution[0]\n\n# print solution\nprint(f\"a = {a_value}\")\nprint(f\"b = {b_value}\")\nprint(f\"c = {c_value}\")\nprint(f\"d = {d_value}\")\n\n# check if a, b, c, and d are integer values\nif (floor(a_value) == a_value) and (floor(b_value) == b_value) and (floor(c_value) == c_value) and (floor(d_value) == d_value):\n    print(\"There are {} distinct rectangles with integer side lengths such that the numerical value of area of the rectangle in square units is equal to 5 times the numerical value of the perimeter in units.\".format(1))\nelse:\n    print(\"There are {} distinct rectangles with integer side lengths such that the numerical value of area of the rectangle in square units is equal to 5 times the numerical value of the perimeter in units.\".format(0))"
  },
  {
    "example_id": 621,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.5"
    ],
    "annotated_answers": [
      "90.0"
    ],
    "solution": "x = symbols('x')\nb = symbols('b')\nc = symbols('c')\neq = x**2 + 18*x - 9\neq_expand = expand(eq)\neq_expand_sqrt = eq_expand**0.5\neq_expand_sqrt_expand = expand(eq_expand_sqrt)\nb_value = eq_expand_sqrt_expand.args[0]\nc_value = eq_expand_sqrt_expand.args[1]\nprint(c_value)"
  },
  {
    "example_id": 622,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-14.0",
      "8.0"
    ],
    "annotated_answers": [
      "-6.0"
    ],
    "solution": "x = symbols('x')\neq = (x+3)**2 - 121\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 623,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "64.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "from sympy import symbols, sqrt\nx = symbols('x')\nexpr = (4**5) + (4**5) + (4**5) + (4**5)\nsolution = sqrt(expr, 3)\nprint(solution)"
  },
  {
    "example_id": 624,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = 1.5\nprint(abs(x - 1) + abs(x - 1.5) + abs(x - 2))"
  },
  {
    "example_id": 625,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "16.0"
    ],
    "annotated_answers": [
      "-128.0"
    ],
    "solution": "x_values = [x for x in range(1000) if abs(x - 4) - 10 == 2]\nprint(x_values)"
  },
  {
    "example_id": 626,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "17.0",
      "2.0",
      "17.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq = x**2 - y**2 - 17\nsolution = solve(eq, (x, y))\nprint(solution)"
  },
  {
    "example_id": 627,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "50.0",
      "2410.0",
      "2410.0",
      "50.0"
    ],
    "annotated_answers": [
      "350.0"
    ],
    "solution": "# Declare variables\nx = symbols('x')\ny = symbols('y')\nz = symbols('z')\n\n# Define function\ndef f(x):\n    return 500 * x - 5 * x**2\n\n# Define equation\neq = f(x) - 450\n\n# Find maximum\nmax_x = solve(eq, x)\n\n# Print result\nprint(max_x)"
  },
  {
    "example_id": 628,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "cookies_to_cupcakes = 10\ncookies_cost = 6\nbrownies_cost = 4\n\nbrownies_to_cupcakes = cookies_cost/brownies_cost\n\neighteen_cookies = 18\neighteen_cupcakes = eighteen_cookies/brownies_to_cupcakes\n\nprint(eighteen_cupcakes)"
  },
  {
    "example_id": 629,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "years = 36 / 18\nprint(years)"
  },
  {
    "example_id": 630,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "81.0",
      "9.0",
      "2.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "a, b, x = symbols('a b x')\nf = a*x**4 - b*x**2 + x + 5\nf_value = f.subs(x, -3)\nprint(f_value)"
  },
  {
    "example_id": 631,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "3.0",
      "5.0",
      "4.0",
      "1.0",
      "4.0",
      "4.0",
      "3.0",
      "5.0",
      "4.0"
    ],
    "annotated_answers": [
      "-5.0"
    ],
    "solution": "k = symbols('k')\nx = symbols('x')\ny = symbols('y')\n\neq1 = y - 2*x**2 - k*x - 6\neq2 = y + x - 4\n\nsol = solve((eq1, eq2), (x, y))\n\nfor x, y in sol:\n    print(\"x:\", x, \"y:\", y)"
  },
  {
    "example_id": 632,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.4",
      "60.0"
    ],
    "annotated_answers": [
      "174.0"
    ],
    "solution": "a = symbols('a')\nA = 2/5\nB = 60/a\nC = A + B\nC = expand(C)\nC = floor(C)\nC = simplify(C)\nprint(C)"
  },
  {
    "example_id": 633,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0"
    ],
    "annotated_answers": [
      "30.0"
    ],
    "solution": "# Define the operation\ndef multiply(a, b):\n    return a**b + b\n\n# Test the operation\nprint(multiply(1, 2)*3)"
  },
  {
    "example_id": 634,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "4.0",
      "3.0",
      "2.0",
      "3.0",
      "12.0",
      "2.0",
      "2.0",
      "-3.0",
      "2.0",
      "4.0",
      "3.0",
      "2.0",
      "3.0",
      "12.0",
      "2.0"
    ],
    "annotated_answers": [
      "697.0"
    ],
    "solution": "# define variables\na = symbols('a')\nb = symbols('b')\nc = symbols('c')\n\n# define equations\neq1 = a**4 + b**4 + c**4 - 4*a**3 - 4*b**3 - 4*c**3\neq2 = a + b + c - 5*a - 5*b - 5*c\n\n# solve for a, b, and c\nsolution = solve((eq1, eq2), (a, b, c))\n\n# extract values\na_value = solution[0][0]\nb_value = solution[0][1]\nc_value = solution[0][2]\n\n# print the solution\nprint(f\"The greatest three-digit number 'abc' is {a_value}{b_value}{c_value}\")"
  },
  {
    "example_id": 635,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "55.0"
    ],
    "annotated_answers": [
      "55.0"
    ],
    "solution": "def f(x):\n    return x - floor(sqrt(x))**2\n\ndef sum_f(start, end):\n    return sum(f(i) for i in range(start, end + 1))\n\nprint(sum_f(101, 110))"
  },
  {
    "example_id": 636,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "80.0"
    ],
    "annotated_answers": [
      "363.0"
    ],
    "solution": "x = symbols('x')\nN = 5\nM = 3\n\ndef recurrence(n, m):\n    if n == 0:\n        return 1\n    else:\n        return m * recurrence(n - 1, m)\n\ndef solve_for_x(n, m):\n    return simplify(expand(recurrence(n, m) - 1))\n\nfor i in range(N):\n    x = solve_for_x(i, M)\n\nprint(x)"
  },
  {
    "example_id": 637,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "8.0",
      "2.0",
      "16.0"
    ],
    "annotated_answers": [
      "-128.0"
    ],
    "solution": "x = symbols('x')\neq = (x-2)**2 * (x+2)**2\nsolution = expand(eq)\nprint(solution)"
  },
  {
    "example_id": 638,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "56.0",
      "8.0",
      "10.0",
      "7.0",
      "79.0",
      "6.0",
      "28.0",
      "5.0",
      "32.0",
      "4.0",
      "37.0",
      "3.0",
      "43.0",
      "2.0",
      "29.0",
      "4.0"
    ],
    "annotated_answers": [
      "37.0"
    ],
    "solution": "from sympy import expand, simplify\nfrom sympy.abc import x\n\nf = 7*x**4 - 3*x**3 - 3*x**2 - 8*x + 1\ng = 8*x**4 + 2*x**3 - 7*x**2 + 3*x + 4\n\neq = expand(f*g)\n\nprint(simplify(eq))"
  },
  {
    "example_id": 639,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-7.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\nf = x**3 - 9*x + 3\nf_value = f.subs(x, 2)\nprint(f_value)"
  },
  {
    "example_id": 640,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "72.0"
    ],
    "solution": "x = symbols('x')\neq = (9**2 - x)**0.5 - 9\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 641,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-15.0"
    ],
    "annotated_answers": [
      "-9.0"
    ],
    "solution": "f = lambda x: 2*x - 3\ng = lambda y: 5-4*f(y)\nprint(g(4))"
  },
  {
    "example_id": 642,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-25.0"
    ],
    "annotated_answers": [
      "-25.0"
    ],
    "solution": "f_of_x = 3*(-10) + 5\nprint(f_of_x)"
  },
  {
    "example_id": 643,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "-13.0"
    ],
    "solution": "x = symbols('x')\na = 5\nb = -1\nn = 12\neq = x - (a + (n-1)*(b-a)/(n-1))\nsolution = solve(eq, x)\ntwelfth_term = solution[0]\nprint(twelfth_term)"
  },
  {
    "example_id": 644,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "192.0",
      "2.0",
      "2.0",
      "2.0",
      "192.0",
      "2.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "b = symbols('b')\nx = symbols('x')\neq = x**2 + b*x + 48\nsolution = solve(eq, x)\nx1 = solution[0]\nx2 = solution[1]\nprint(x1/x2)"
  },
  {
    "example_id": 645,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "4.0",
      "120.0"
    ],
    "annotated_answers": [
      "567.0"
    ],
    "solution": "x = symbols('x')\nterms = [7, 14, 21, 28, 35, 42, 49, 5103]\n\ndef find_nth_term(terms, n):\n    nth = terms[0]\n    for i in range(1, n):\n        nth = nth * x / (i + 1)\n    return nth\n\nnth = find_nth_term(terms, 5)\nprint(nth)"
  },
  {
    "example_id": 646,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "3.0",
      "3.0",
      "6.0",
      "6.0",
      "3.0",
      "3.0",
      "3.0",
      "6.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq = (a*sqrt(2) + b*sqrt(3) + c*sqrt(6))**3\nsolution = solve(eq, a, b, c)\na_value = solution[0][0]\nb_value = solution[0][1]\nc_value = solution[0][2]\nprint(a_value + b_value + c_value)"
  },
  {
    "example_id": 647,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "from math import sqrt\n\na = 8\nb = 3*sqrt(2)\nc = 2\n\na_value = int(a/c)\nb_value = int(b/c)\n\nprint(a_value, b_value)"
  },
  {
    "example_id": 648,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "import math\n\n# Find the longest side of the triangle\nmax_side = max(math.sqrt((11-2)**2 + (1-3)**2), math.sqrt((11-3)**2 + (1-7)**2))\n\n# Print the number of units in the length of the longest side\nprint(int(max_side))"
  },
  {
    "example_id": 649,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "495.0"
    ],
    "annotated_answers": [
      "495.0"
    ],
    "solution": "n = symbols('n')\nodd_integers = [i for i in range(46, 65) if i%2!= 0]\nsum = sum(odd_integers)\nprint(sum)"
  },
  {
    "example_id": 650,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "10.0",
      "3.0",
      "7.0",
      "10.0",
      "3.0",
      "8.0",
      "2.0",
      "3.0",
      "1.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "from sympy import symbols, Poly, expand\nx = symbols('x')\npoly = 3*(x**10 - x**7 + 2*x**3 - x + 7) + 4*(x**3 - 2*x**2 - 5)\nprint(expand(poly))"
  },
  {
    "example_id": 651,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "from sympy import solve\nfrom sympy.abc import x, y\neq = x + y**2 - 4*y + 4\nsolution = solve(eq, y)\nprint(len(solution))"
  },
  {
    "example_id": 652,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0",
      "9.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\neq1 = 5*a + (-4*b + 5)\neq2 = 3*a + (-2*b + 3)\nsolution1 = solve(eq1, a)\nsolution2 = solve(eq2, b)\na_value = solution1[0]\nb_value = solution2[0]\nprint(6*b_value)"
  },
  {
    "example_id": 653,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "t = abs(-3+2*(-4))\nprint(t)"
  },
  {
    "example_id": 654,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "23.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = 12\ny = 35\nprint(y - x)"
  },
  {
    "example_id": 655,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "31500.0"
    ],
    "annotated_answers": [
      "1050.0"
    ],
    "solution": "# Define variables\ncalories = 150\nminutes = 30\nday = 1\nweek = 7\n\n# Define function\ndef shoot_hoops(calories, minutes):\n    return calories * minutes\n\n# Calculate total calories\ntotal_calories = shoot_hoops(calories, minutes) * day * week\n\n# Print result\nprint(total_calories)"
  },
  {
    "example_id": 656,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = 4*y - 4*x**2 - 1\neq2 = 4*x - 4*y**2 - 1\nsolution = solve([eq1, eq2], [x, y])\nx_value, y_value = solution[0]\nprint(x_value)\nprint(y_value)"
  },
  {
    "example_id": 657,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "90.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "j, k, l = symbols('j k l')\n\n# 1. find the value of jk\njk = 24\n\n# 2. find the value of jl\njl = 48\n\n# 3. find the value of kl\nkl = 18\n\n# 4. find the value of j+k+l\njkl = jk + jl + kl\nprint(jkl)"
  },
  {
    "example_id": 658,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "79.0"
    ],
    "solution": ""
  },
  {
    "example_id": 659,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "a = -4\nb = 8\nprint(a + b)"
  },
  {
    "example_id": 660,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "0.0"
    ],
    "annotated_answers": [
      "26.0"
    ],
    "solution": "x = symbols('x')\neq1 = 3/x > 1/3\neq2 = 3/x < 3/4\nsolution = solve(eq1, x)\nsolution = solve(eq2, x)\nprint(solution)"
  },
  {
    "example_id": 661,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "220.0"
    ],
    "annotated_answers": [
      "220.0"
    ],
    "solution": "import math\nn = 480\nx = 11\ny = 24\nr = x/y\nprint(r * n)"
  },
  {
    "example_id": 662,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "258.0",
      "257.0",
      "256.0",
      "255.0",
      "254.0",
      "253.0",
      "252.0",
      "251.0",
      "250.0",
      "249.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "i = symbols('i')\neq = 0\nfor k in range(259):\n    eq += i**k\nprint(eq)"
  },
  {
    "example_id": 663,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.5",
      "0.007692307692307693",
      "-0.2",
      "-9.969171597633135"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\nf = symbols('f')\nh = symbols('h')\n\n# define the function\nf = lambda x: x**2 + 4*x - 10\n\n# define the inverse function\nh = lambda x: f(x)**(-1)\n\n# find h(2)\nprint(h(2))\n\n# find h(10)\nprint(h(10))\n\n# find h(1)\nprint(h(1))\n\n# find f(f(10))\nprint(f(h(10)))"
  },
  {
    "example_id": 664,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\nf = x**2 - 3\nt = 9 + 2*f\nsolution = t.subs(f, -2)\nprint(solution)"
  },
  {
    "example_id": 665,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-62.0"
    ],
    "annotated_answers": [
      "66.0"
    ],
    "solution": "x = symbols('x')\neq = (x**2 - 4*x + 4)**(1/3) - 16\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 666,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "8.0",
      "4.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq = (x**2 + y**2) - 4*x - 8*y\ndistance = solve(eq, x)[0]\nprint(distance)"
  },
  {
    "example_id": 667,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "# Annie's coordinates\na_x = 3\na_y = 5\n\n# Barbara's coordinates\nb_x = -6\nb_y = 2\n\n# Barbara's coordinates with the wrong information\nb_x_wrong = -10\nb_y_wrong = 4\n\n# Midpoint between Annie and Barbara\nmidpoint_x = (a_x + b_x_wrong)/2\nmidpoint_y = (a_y + b_y_wrong)/2\n\n# Print the positive difference in the x-coordinates\nprint(abs(midpoint_x - (a_x + b_x)/2))"
  },
  {
    "example_id": 668,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "6.0",
      "13.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\ny = x**2 - 6*x + 13\nprint(floor(Min(y)))"
  },
  {
    "example_id": 669,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "400.0"
    ],
    "annotated_answers": [
      "400.0"
    ],
    "solution": "print(19**2 + 2*19 + 1)"
  },
  {
    "example_id": 670,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "11.0",
      "3.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "n, m = symbols('n m')\neq1 = 3*n + m - 14\neq2 = n + m - 1\nsol1 = solve(eq1, n)\nsol2 = solve(eq2, m)\nn_value = sol1[0]\nm_value = sol2[0]\nprint(n_value - m_value)"
  },
  {
    "example_id": 671,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0",
      "2.0",
      "4.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "from sympy import symbols, solve\n\nx, y = symbols('x, y')\neq = x**2 + 8*x + y**2 - 6*y\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 672,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "35.0"
    ],
    "annotated_answers": [
      "324.0"
    ],
    "solution": "n = symbols('n')\np = (n**2 - 1)**2\neq = p - 35\nsolution = solve(eq, n)\nn_value = solution[0]\nprint(n_value)"
  },
  {
    "example_id": 673,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-7.0"
    ],
    "annotated_answers": [
      "-7.0"
    ],
    "solution": "p = lambda x: 2-x**2\nq = lambda x: 6/x\nprint(p(q(2)))"
  },
  {
    "example_id": 674,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "a, r, k = symbols('a r k')\nexpr = a * r**(k-1)\nexpr_expand = expand(expr)\nexpr_simplify = simplify(expr_expand)\n\n# Find the largest value of k\nk_values = []\nfor i in range(1, 100):\n    if expr_simplify.has(k**i):\n        k_values.append(i)\n\nk_max = max(k_values)\nprint(k_max)"
  },
  {
    "example_id": 675,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.4142135623731",
      "0.5",
      "1.0",
      "1.0",
      "2.43669858620224",
      "0.168421052631579",
      "2.0",
      "1.0",
      "1.75"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x1, y1 = symbols('x1, y1')\nx2, y2 = symbols('x2, y2')\n\neq1 = y1 - (x1**2 + 4*x1 + 6)\neq2 = y2 - (x2**2 + 1/2*x2 + 6)\n\nsolution = solve([eq1, eq2], [x1, x2])\n\nx1_value = solution[0][0]\nx2_value = solution[0][1]\n\na = x1_value\nc = x2_value\n\nprint(c - a)"
  },
  {
    "example_id": 676,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "f = {1: 2, 4: 3, 7: 4}\nf_inv = {2: 1, 3: 4, 4: 1}\nprint(f_inv[f_inv[3]])"
  },
  {
    "example_id": 677,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "50.0"
    ],
    "solution": "n = symbols('n')\ni = symbols('i')\neq = (floor(sqrt(i)) for i in range(1, 20))\nsolution = sum(solve(eq, i))\nprint(solution)"
  },
  {
    "example_id": 678,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "5.0"
    ],
    "annotated_answers": [
      "21.0"
    ],
    "solution": "a, b = symbols('a b')\neq = (x**2 - 5) - y\nsolution = solve(eq, y)\nsolution_value = solution[0]\nprint(solution_value)"
  },
  {
    "example_id": 679,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "3.0",
      "4.0",
      "3.0",
      "4.0",
      "3.0"
    ],
    "annotated_answers": [
      "56.0"
    ],
    "solution": "# Define variables\nn, x, y, z = symbols('n, x, y, z')\n\n# Define equation\neq = x**2 + y**2 - 2*x*y - 2*x*z - 2*y*z - 2*z**2\n\n# Solve for x\nsolution = solve(eq, x)\n\n# Print the answer\nprint(solution)\n\n# Print the value of x\nprint(solution[0])"
  },
  {
    "example_id": 680,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "15.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "a, b = symbols('a b')\nh = a*x + b\neq1 = h.subs(x, 1) - 5\neq2 = h.subs(x, -1) - 1\nsol = solve((eq1, eq2), (a, b))\nh_value = h.subs(sol)\nprint(h_value.evalf(subs={x: 6}))"
  },
  {
    "example_id": 681,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "49.0",
      "2.0"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = x + y - 3\neq2 = x - y - 4\neq = eq1 + eq2\nsolution = solve(eq, [x, y])\nx_value = solution[0][0]\ny_value = solution[0][1]\nprint(2 * (x_value)**2 + 2 * (y_value)**2)"
  },
  {
    "example_id": 682,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "# Define variables\ntrack_length = 400\nnew_track_length = 250\nlaps_run = 10\n\n# Define variables\nlaps_needed = (new_track_length / track_length) * laps_run\n\n# print result\nprint(int(laps_needed))"
  },
  {
    "example_id": 683,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "3.0",
      "4.0",
      "68.0",
      "6.0",
      "2.0",
      "3.0",
      "3.0",
      "3.0"
    ],
    "annotated_answers": [
      "51.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq = a + b + c - 0\neq2 = a**3 + b**3 + c**3 - 17\nsolution = solve((eq, eq2), (a, b, c))\nprint(solution)"
  },
  {
    "example_id": 684,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "15.0",
      "4.0",
      "2.0",
      "15.0"
    ],
    "annotated_answers": [
      "-22.0"
    ],
    "solution": "# Declare x as a symbol\nx = symbols('x')\n# Solve for x\nsolution = solve(2*x**2 - 10*x + 5, x)\n# Declare a and b\na, b = solution\n# Calculate (2a-3)(4b-6)\nresult = (2*a-3)*(4*b-6)\nprint(result)"
  },
  {
    "example_id": 685,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "f = lambda x: (3*x)**(1/2) + 2\nf_0 = f(0)\nf_3 = f(3)\nprint(f_0 + f_3)"
  },
  {
    "example_id": 686,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "125.0"
    ],
    "annotated_answers": [
      "125.0"
    ],
    "solution": "x = symbols('x')\nexpr = (x**1 * x**2 * x**3 * x**4 * x**5 * x**6 * x**7 * x**8 * x**9) / (x**2 * x**4 * x**6 * x**8 * x**10 * x**12)\nprint(expr.subs(x, 5))"
  },
  {
    "example_id": 687,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-5.0"
    ],
    "annotated_answers": [
      "-5.0"
    ],
    "solution": "x = symbols('x')\nf = 2*x + 1\ng = -3\nf_value = f.subs(x, g)\nprint(f_value)"
  },
  {
    "example_id": 688,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "1.0",
      "8.0",
      "3.0",
      "2.0",
      "3.0",
      "8.0",
      "3.0",
      "3.0",
      "1.0",
      "3.0",
      "8.0",
      "0.333333333333333"
    ],
    "annotated_answers": [
      "98.0"
    ],
    "solution": "x = symbols('x')\neq = 8*x**3 - 3*x**2 - 3*x - 1\nroots = solve(eq, x)\nroot = roots[0]\na = root**(1/3)\nb = root**(1/3)\nc = 1\nprint(a+b+c)"
  },
  {
    "example_id": 689,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "600.0"
    ],
    "annotated_answers": [
      "600.0"
    ],
    "solution": "x = 25\nz = 24\ny = symbols('y')\neq = (1/x) + (1/y) - (1/z)\nsolution = solve(eq, y)\ny_value = solution[0]\nprint(y_value)"
  },
  {
    "example_id": 690,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "115.0",
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "x, y = symbols('x y')\neq = 3*x + 2*y + x*y - 115\nsolution = solve(eq, [x, y])\nx_value = solution[0][0]\ny_value = solution[0][1]\nprint(x_value + y_value)"
  },
  {
    "example_id": 691,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "4624.0"
    ],
    "solution": "# Find the next even perfect square\ndef next_even_perfect_square(n):\n    return int(n * 2**(math.ceil(log(n, 2))/2))\n\n# Find the previous even perfect square\ndef previous_even_perfect_square(n):\n    return int(n * 2**(math.floor(log(n, 2))/2))\n\n# Find the difference between two consecutive perfect squares\ndef consecutive_perfect_squares_difference(n):\n    return (next_even_perfect_square(n) - previous_even_perfect_square(n))\n\n# Compute the larger of the two squares\ndef larger_of_two_squares(n):\n    if consecutive_perfect_squares_difference(n) == 268:\n        return previous_even_perfect_square(n)\n    elif consecutive_perfect_squares_difference(n) == 268:\n        return next_even_perfect_square(n)\n    else:\n        return -1\n\nprint(larger_of_two_squares(1))"
  },
  {
    "example_id": 692,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "first_term = 8 - (8 - 4)\nprint(first_term)"
  },
  {
    "example_id": 693,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "40.0"
    ],
    "solution": "a, b, c = symbols('a b c')\ns = a*b*c\neq = s - (a+b+c)**2\nsolution = solve(eq, s)\ns_value = solution[0]\nprint(s_value)"
  },
  {
    "example_id": 694,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "78.0"
    ],
    "solution": "a = 3\nb = 2\nc = 1\nabc = a*b*c\nprint(abc)"
  },
  {
    "example_id": 695,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-8.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "a = 1\nb = -8\nc = 49\nab = a*b\nprint(ab)"
  },
  {
    "example_id": 696,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-17.0",
      "6.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\nd = symbols('d')\neq = 6*a**2 - a - 51\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 697,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "degree = max(6, 5, 3, 2)\nprint(degree)"
  },
  {
    "example_id": 698,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "255.0"
    ],
    "solution": "import itertools\n\ndef columns(matrix):\n    return zip(*matrix)\n\ndef sum_column(matrix, column):\n    return sum(row[column] for row in matrix)\n\nmatrix = list(itertools.islice(itertools.product(range(1, 51), repeat=5), 5))\nprint(matrix)\nprint(columns(matrix))\nprint(sum_column(matrix, 4))"
  },
  {
    "example_id": 699,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "print(ceiling(sqrt(27)) - floor(sqrt(26)))"
  },
  {
    "example_id": 700,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "6.0",
      "36.0",
      "1.0",
      "6.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\nx = symbols('x')\ny = a * x**2 + b * x + c\n\n# Vertex\nv = solve((y - 3).subs(x, 2), a)\n\n# Slope\nm = solve((y - 3).subs(x, 4), a)\n\n# Contains (4,4)\nc = solve((y - 4).subs(x, 4), a)\n\n# Slope at x=6\nm_6 = solve((y - 6).subs(x, 6), a)\n\n# Print\nprint(\"Value of y when x = 6: \", m_6)"
  },
  {
    "example_id": 701,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-6.0"
    ],
    "annotated_answers": [
      "-6.0"
    ],
    "solution": "f = lambda x: (x**2 + 2*x + 3) / x\ng = lambda x: x**3 + 2\nprint(g(f(-3)))"
  },
  {
    "example_id": 702,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5808.0"
    ],
    "annotated_answers": [
      "96.8"
    ],
    "solution": "# Convert miles per hour to feet per second\nmiles_per_hour = 66\nfeet_per_second = miles_per_hour * 88\nprint(feet_per_second)"
  },
  {
    "example_id": 703,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "108.0"
    ],
    "annotated_answers": [
      "108.0"
    ],
    "solution": "dist = 9 * 12\nprint(dist)"
  },
  {
    "example_id": 704,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "21.0"
    ],
    "annotated_answers": [
      "21.0"
    ],
    "solution": "x = symbols('x')\ny = 2*x - 13\neq = 3*x + y - 92\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 705,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2010.0",
      "1.0",
      "3.0",
      "-2.0",
      "3.0",
      "2010.0",
      "1.0",
      "3.0",
      "3.0",
      "-1.0",
      "2010.0",
      "1.0",
      "3.0",
      "2.0",
      "-1.0",
      "2010.0",
      "1.0",
      "3.0",
      "3.0"
    ],
    "annotated_answers": [
      "2010.0"
    ],
    "solution": "x = symbols('x')\nf = x**3 + 3*x**2 + 3*x + 1\nf_inv = solve(f - 2010, x)\nf_inv_value = f_inv[0]\nprint(f_inv_value)\nf_value = f.subs(x, f_inv_value)\nprint(f_value)"
  },
  {
    "example_id": 706,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "V_1 = 3.67\nV_2 = 1.835\nP_1 = 4\nP_2 = V_2 * P_1 / V_1\nprint(P_2)"
  },
  {
    "example_id": 707,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-72.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "# Define symbols\nx, y, k = symbols('x y k')\n# Define equation\neq = 3*x - 7*y - 65\n# Find K\nk_value = eq.subs(x, 7).subs(y, 4).n()\n# print(k_value)\nprint(k_value)"
  },
  {
    "example_id": 708,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-7.0"
    ],
    "annotated_answers": [
      "-7.0"
    ],
    "solution": "x = symbols('x')\neq = (2*x-1)/(2*x+2) - (x-3)/(x-1)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 709,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "12.0",
      "30.0",
      "4.0",
      "3.0"
    ],
    "annotated_answers": [
      "-40.0"
    ],
    "solution": "x, y, a = symbols('x y a')\neq1 = 2*x + 5*y + (-8)\neq2 = 6*x + (16 + a - 15*y)\nsolution = solve([eq1, eq2], [x, y])\nprint(solution)"
  },
  {
    "example_id": 710,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "15.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "degrees_per_hour = 360 / 24\nprint(degrees_per_hour)"
  },
  {
    "example_id": 711,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "n = symbols('n')\neq = 49 - 7*n\nsolution = solve(eq, n)\nsmallest = solution[0]\nprint(smallest)"
  },
  {
    "example_id": 712,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "16.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "# Declare variables\na = symbols('a')\nb = symbols('b')\n\n# Define the expression\nexpression = (2**3)**(4/3)\n\n# Evaluate the expression\nanswer = expand(expression)\n\n# Print the answer\nprint(answer)"
  },
  {
    "example_id": 713,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\neq = 6**x + 6**x + 6**x + 6**x + 6**x + 6**x - 6**6\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 714,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "x = symbols('x')\ny = 2*x**(-1) - 1\nsolution = solve(y, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 715,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0"
    ],
    "annotated_answers": [
      "28.0"
    ],
    "solution": "# number of tours per day\ntours_per_day = 4\n\n# time of first tour\nfirst_tour = 9\n\n# time of last tour\nlast_tour = 18\n\n# time of each tour\ntime_of_tour = (last_tour - first_tour) / tours_per_day\n\n# number of tours per hour\ntours_per_hour = time_of_tour * tours_per_day\n\nprint(tours_per_hour)"
  },
  {
    "example_id": 716,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "50.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "a, b, c, d, e, f = symbols('a b c d e f')\nexpr = (a + b + c + d + e + f) - 25\neq = (expr.expand() - 25).simplify()\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 717,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "243.0",
      "3.0",
      "243.0",
      "243.0",
      "1.0",
      "4.0",
      "243.0",
      "2.0",
      "243.0",
      "243.0",
      "1.0",
      "4.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "x, y = symbols('x y')\ns = [243, 81, x, y, 3]\na = symbols('a')\n\nfor i in range(1, len(s)):\n    s[i] = s[i-1] * a\n\nsolution = solve(s[-1] - (x + y), a)\na_value = solution[0]\n\nx_value = s[2] / a_value\ny_value = s[3] / a_value\n\nprint(x_value + y_value)"
  },
  {
    "example_id": 718,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "6.0",
      "61.0",
      "6.0",
      "2.0"
    ],
    "annotated_answers": [
      "104.0"
    ],
    "solution": "a = symbols('a')\neq = 3*a**2 - 5*a - 3\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value**2)"
  },
  {
    "example_id": 719,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "48.0"
    ],
    "solution": "flicks = 12\nflecks = 8\nflocks = 6\n\nflicks_per_fleck = flicks / flecks\nflecks_per_flock = flecks / flocks\n\nequivalent_flocks = flicks_per_fleck * flecks_per_flock\n\nprint(equivalent_flocks)"
  },
  {
    "example_id": 720,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\nlog_eq = log(expand((x - 1)**2), 3**2) - 1\nsolution = solve(log_eq, x)\nx_value = simplify(solution[0])\nx_value = floor(x_value)\nprint(x_value)"
  },
  {
    "example_id": 721,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "a = symbols('a')\neq_1 = a*x - (x**2 + a)\neq_2 = a*x - x\nsolution = solve(eq_1 - eq_2, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 722,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "2.0",
      "8.0",
      "5.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "x = symbols('x')\nexpr = 10*x**2 - x - 24\nsolution = solve(expr, x)\nprint(solution)"
  },
  {
    "example_id": 723,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "12.0",
      "0.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "y = 0\nprint(y + 6, 12, y)"
  },
  {
    "example_id": 724,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "15.5"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "r = 15.5\nprint(r)"
  },
  {
    "example_id": 725,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "2.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x1, x2 = symbols('x1, x2')\ny1, y2 = symbols('y1, y2')\n\nx = (x1 + x2)/2\ny = (y1 + y2)/2\n\nprint(x + y)"
  },
  {
    "example_id": 726,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "print(36 // 7)"
  },
  {
    "example_id": 727,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq = (6*x**2 - 19*x - 7)/(2*x - 7) - (4*x - 3)\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 728,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0",
      "76.0",
      "2.0",
      "20.0",
      "20.0",
      "280.0",
      "10.0",
      "2.0",
      "5.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "a, b, c = symbols('a,b,c')\neq = a*x**2 + b*x + c - 5*x**2 - 10*x - 19\nsolution = solve(eq, x)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 729,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "# Define symbolic variables\nx, y, D, E, F = symbols('x y D E F')\n\n# Define the equation of the smaller circle\neq = x**2 + y**2 + D*x + E*y + F\n\n# Solve for D + E + F\nd_e_f = solve(eq, [D, E, F])[0]\n\n# Print the value of D + E + F\nprint(d_e_f)"
  },
  {
    "example_id": 730,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "f = lambda x: x + 1\ng = lambda x: 2 * x\n\nf_inv = lambda x: x - 1\ng_inv = lambda x: x / 2\n\nprint(f(g_inv(f_inv(f_inv(g(f(5)))))))"
  },
  {
    "example_id": 731,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "f = lambda x: x**3 - 8\nf_inv = lambda y: (y + 8)**(1/3)\nprint(f_inv(f(f_inv(19))))"
  },
  {
    "example_id": 732,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "2.0",
      "2.0",
      "2.0",
      "79.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "n = symbols('n')\ns = n**2 - 2**n + 1\nt = 2*s - s**2\neq = t.subs(s, 9)\nprint(eq)"
  },
  {
    "example_id": 733,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.761904761904762"
    ],
    "annotated_answers": [
      "24.0"
    ],
    "solution": "j, k = symbols('j k')\neq = j/k - 16/21\nsolution = solve(eq, j)\nj_value = solution[0]\nprint(j_value)"
  },
  {
    "example_id": 734,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x = symbols('x')\nf = x**2 + 9\nf_x = 3*x - 8\nsolution = solve(f - 10, x)\na, b = solution[0], solution[1]\nif a >= -5:\n    a_value = simplify(a)\nelse:\n    a_value = floor(a)\nif b >= -5:\n    b_value = simplify(b)\nelse:\n    b_value = floor(b)\nprint(a_value + b_value)"
  },
  {
    "example_id": 735,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "x = symbols('x')\n\n# Find common difference\nd = 91 - 1\n\n# Find all possible terms\nterms = [i*d + 1 for i in range(0, 1000)]\n\n# Find all possible sequences\nsequences = []\nfor i in range(0, len(terms)):\n    if len(terms[i:]) >= 3:\n        sequences.append(terms[i:i+3])\n\n# Find all possible arithmetic sequences\narithmetic_sequences = []\nfor sequence in sequences:\n    if (sequence[1] - sequence[0]) == (sequence[2] - sequence[1]):\n        arithmetic_sequences.append(sequence)\n\n# Find all possible arithmetic sequences that are integers\ninteger_arithmetic_sequences = []\nfor sequence in arithmetic_sequences:\n    if all(isinstance(x, int) for x in sequence):\n        integer_arithmetic_sequences.append(sequence)\n\n# Find all possible arithmetic sequences that are integers and have 3 terms\ninteger_arithmetic_sequences_3_terms = []\nfor sequence in integer_arithmetic_sequences:\n    if len(sequence) == 3:\n        integer_arithmetic_sequences_3_terms.append(sequence)\n\n# Find all possible arithmetic sequences that are integers and have 3 terms\n# that have common difference of 1\ninteger_arithmetic_sequences_3_terms_d1 = []\nfor sequence in integer_arithmetic_sequences_3_terms:\n    if (sequence[1] - sequence[0]) == 1:\n        integer_arithmetic_sequences_3_terms_d1.append(sequence)\n\n# Find the number of possible arithmetic sequences that are integers and have 3 terms\n# that have common difference of 1\nprint(len(integer_arithmetic_sequences_3_terms_d1))"
  },
  {
    "example_id": 736,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "15.0"
    ],
    "annotated_answers": [
      "27.0"
    ],
    "solution": "groom_age = 51 - (51 - 15)\nprint(groom_age)"
  },
  {
    "example_id": 737,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0",
      "365.0",
      "1.0",
      "4.0"
    ],
    "annotated_answers": [
      "89.0"
    ],
    "solution": "x1, y1 = symbols('x1, y1')\nslope = (y1 - 365)/(x1 - 4)\nslope = simplify(slope)\nslope = floor(slope)\nslope_min = Min(slope, 1, 9)\nslope_min = simplify(slope_min)\nprint(slope_min)"
  },
  {
    "example_id": 738,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "m = symbols('m')\nn = 28\n\n# polynomial equation\npolynomial = x**2 + m*x + n\n\n# solving for roots\nroots = solve(polynomial, x)\n\n# positive roots\npositive_roots = [root for root in roots if root.is_positive]\n\n# positive integer roots\npositive_integer_roots = [root for root in positive_roots if root.is_integer]\n\n# number of positive integer roots\nnumber_of_positive_integer_roots = len(positive_integer_roots)\n\nprint(number_of_positive_integer_roots)"
  },
  {
    "example_id": 739,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "1.0",
      "3.0",
      "6.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x1, y1 = symbols('x1, y1')\nx2, y2 = symbols('x2, y2')\nf = lambda x: 3*x**2 + 1\neq = f(2*x1) - y1\nsolution = solve(eq, x1)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 740,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "7.0"
    ],
    "annotated_answers": [
      "-7.0"
    ],
    "solution": "x = symbols('x')\ny = x**2 - 7\nprint(Min(y))"
  },
  {
    "example_id": 741,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "f = lambda x: 5*x+3\ng = lambda x: x**2 - 2\nprint(g(f(-1)))"
  },
  {
    "example_id": 742,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "representatives_8th = 18 / 2\nprint(representatives_8th)"
  },
  {
    "example_id": 743,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-6.4377516497364",
      "5.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "log_5_1_625 = log(1/625, 5)\nprint(log_5_1_625)"
  },
  {
    "example_id": 744,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "n = 80\na = symbols('a')\nb = symbols('b')\nc = symbols('c')\nd = symbols('d')\ne = symbols('e')\nf = symbols('f')\ng = symbols('g')\nh = symbols('h')\ni = symbols('i')\nj = symbols('j')\nk = symbols('k')\nl = symbols('l')\nm = symbols('m')\nn = symbols('n')\no = symbols('o')\np = symbols('p')\nq = symbols('q')\nr = symbols('r')\ns = symbols('s')\nt = symbols('t')\nu = symbols('u')\nv = symbols('v')\nw = symbols('w')\nx = symbols('x')\ny = symbols('y')\nz = symbols('z')\n\neq = (a**2 + b**2 + c**2 + d**2 + e**2 + f**2 + g**2 + h**2 + i**2 + j**2 + k**2 + l**2 + m**2 + n**2 + o**2 + p**2 + q**2 + r**2 + s**2 + t**2 + u**2 + v**2 + w**2 + x**2 + y**2 + z**2) - 81\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 745,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "# define symbols\na, b, c, d, e, f = symbols('a, b, c, d, e, f')\n\n# find the solution\nsolution = solve(a*b*c*d*e*f, [a, b, c, d, e, f])\n\n# print the solution\nprint(solution)"
  },
  {
    "example_id": 746,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "cookies = 10 * 12 / 20\nprint(cookies)"
  },
  {
    "example_id": 747,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "-3.0",
      "2.0",
      "113.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "24.0"
    ],
    "solution": "# Define variables\nl = symbols('l')\nh = 3\n\n# Calculate surface area\nsa = 2 * (l * h + l * l)\n\n# Calculate volume\nv = l * l * h\n\n# Express volume in terms of surface area\neq = sa - 52\n\n# Solve for l\nsolution = solve(eq, l)\n\n# Find the integer solution with the smallest volume\nl_value = solution[0]\nvolume = l_value * l_value * h\nprint(volume)"
  },
  {
    "example_id": 748,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0"
    ],
    "annotated_answers": [
      "-9.0"
    ],
    "solution": "x = symbols('x')\neq = (x**2 - 16)**(1/2)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 749,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0",
      "10.0"
    ],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "# Define variables\nA = symbols('A')\nB = symbols('B')\nC = symbols('C')\n\n# Define equation\neq = A + (B - A) + (C - B)\n\n# Define equation\neq = 3*A + 2*B + C - 10\n\n# Define equation\neq = A + B + C - 10\n\n# Simplify equation\neq = simplify(eq)\n\n# Solve equation\nsolution = solve(eq, C)\n\n# Print solution\nprint(solution)\n\n# Get value of C\nC_value = solution[0]\n\n# Print C value\nprint(C_value)"
  },
  {
    "example_id": 750,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = 3**(x+8) - 9**(x+3)\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 751,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "140.0"
    ],
    "annotated_answers": [
      "140.0"
    ],
    "solution": "print((7+5)**2-(7-5)**2)"
  },
  {
    "example_id": 752,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0",
      "2.0",
      "5.0",
      "2.0"
    ],
    "annotated_answers": [
      "47.0"
    ],
    "solution": "a, b = symbols('a b')\neq = a*b - 9*a - 2*b + a*b - 5\nsolution = solve(eq, a*b)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 753,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-7.0",
      "15.0",
      "-22.0"
    ],
    "annotated_answers": [
      "-8.0"
    ],
    "solution": "x, y, z, a = symbols('x y z a')\neq1 = log(x) - log(y) - a\neq2 = log(y) - log(z) - 15\neq3 = log(z) - log(x) - 7\nsolution = solve([eq1, eq2, eq3], [x, y, z, a])\nprint(solution)"
  },
  {
    "example_id": 754,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "3.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\nf = x**2 - 8*x + 15\neq = f - 2\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 755,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "18000.0",
      "3.0",
      "2.0",
      "54000000000.0",
      "54000000.0",
      "18000000000000.0",
      "3.0",
      "81000.0",
      "5.0",
      "2.0"
    ],
    "annotated_answers": [
      "900.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq = simplify((sqrt(1000000) - sqrt(x))**3 - (sqrt(1000000) - sqrt(y))**3)\nsolution = solve(eq, x, y)\nprint(solution)"
  },
  {
    "example_id": 756,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "225.0"
    ],
    "annotated_answers": [
      "600.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq = y/sqrt(x) - 15\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 757,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "p = symbols('p')\neq = 128-4*p - 12*p\nsolution = solve(eq, p)\np_value = solution[0]\nprint(p_value)"
  },
  {
    "example_id": 758,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "891.0",
      "4.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "from sympy import Symbol, Add\nx = Symbol('x')\nf = Piecewise((3-x, x <= 3), (x**3 - 2*x**2 + 3*x, x > 3))\nf_inverse = f.integrate()\nf_inverse_0 = f_inverse.subs(x, 0)\nf_inverse_6 = f_inverse.subs(x, 6)\nprint(Add(f_inverse_0, f_inverse_6))"
  },
  {
    "example_id": 759,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "22.0"
    ],
    "solution": "# Define the function f(x) = 2x + 1\nf = lambda x: 2*x + 1\n\n# Define the function g(x) = f(2x) - 3\ng = lambda x: f(2*x) - 3\n\n# Define the value of x = 2\nx = 2\n\n# Calculate the value of g(x)\ng_value = g(x)\n\n# Print the result\nprint(g_value)"
  },
  {
    "example_id": 760,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "10.0",
      "4.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = x**2 + y - 4\neq2 = x**4 + y**2 - 10\nx_sol = solve(eq1, x)\ny_sol = solve(eq2, y)\nx_val = x_sol[0]\ny_val = y_sol[0]\nx2y = x_val**2*y_val\nprint(x2y)"
  },
  {
    "example_id": 761,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "18.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "a = symbols('a')\neq = (3-a)*(6+2*a)\nsolution = simplify(eq)\nprint(solution)"
  },
  {
    "example_id": 762,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-6.0"
    ],
    "annotated_answers": [
      "-6.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 - x - 6\nsolution = solve(eq, x)\nsolution_product = solution[0] * solution[1]\nprint(solution_product)"
  },
  {
    "example_id": 763,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "-1.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x = symbols('x')\nf = (x**2 + 2*x + 1)/(x**2 + 2*x - 1)\nf_max = f.subs(x, 1)\nf_min = f.subs(x, 6)\nf_max_inv = 1/f_max\nf_min_inv = 1/f_min\nf_max_inv_x = x\nf_min_inv_x = x\nf_max_inv_y = f_max_inv\nf_min_inv_y = f_min_inv\nf_max_inv_x_y = f_max_inv_x*f_max_inv_y\nf_min_inv_x_y = f_min_inv_x*f_min_inv_y\n\ndef find_min_inverse(x, y):\n    if y == 1:\n        return 1\n    elif y == 6:\n        return 6\n    else:\n        return floor(log(y, 2))\n\nf_min_inv_x_y_max = find_min_inverse(f_min_inv_x, f_min_inv_y)\nf_max_inv_x_y_min = find_min_inverse(f_max_inv_x, f_max_inv_y)\n\nprint(f_min_inv_x_y_max)\nprint(f_max_inv_x_y_min)"
  },
  {
    "example_id": 764,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.4444444444444444"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "camille = 0\nalex = 7\nbob = 9\ndanielle = 11\n\n# The sum of Alex, Bob, and Danielle's ages is fourteen times Camille's age\n# Alex + Bob + Danielle = 14 * Camille\ncamille = (alex + bob + danielle) / 14\n\n# The sum of Alex and Bob's ages is six times Camille's age\n# Alex + Bob = 6 * Camille\nsix_times_camille = alex + bob\nsix_times_camille = six_times_camille / 6\n\n# Bob's age is two years less than the difference in ages of Danielle and Alex\n# Bob = Danielle - Alex - 2\nbob = danielle - alex - 2\n\n# Solve for Camille\ncamille = six_times_camille\ncamille = camille / 6\n\n# Print the result\nprint(camille)"
  },
  {
    "example_id": 765,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0",
      "1.0",
      "2.0",
      "1.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\nA = symbols('A')\nB = symbols('B')\neq = (A/x-1 + B/(x+1) - (x+2)/(x**2-1))\nsolution = solve(eq, A, B)\nA_value = solution[0][0]\nB_value = solution[0][1]\nprint(A_value - B_value)"
  },
  {
    "example_id": 766,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.111111111111111"
    ],
    "annotated_answers": [
      "49.0"
    ],
    "solution": "p = symbols('p')\nq = symbols('q')\nm = 7\nn = 30\np_value = 10\nq_value = 21\n\nresult = (m)/(n) * (p)/(q)\nresult_value = result.subs(p, p_value).subs(q, q_value)\n\n# print(result_value)\nprint(result_value)"
  },
  {
    "example_id": 767,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9997.0",
      "9997.0"
    ],
    "annotated_answers": [
      "99940009.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq1 = x**2 - 9997\neq2 = y**2 - 9997\nsol1 = solve(eq1, x)\nsol2 = solve(eq2, y)\nx_value = sol1[0]\ny_value = sol2[0]\nprint(x_value)\nprint(y_value)"
  },
  {
    "example_id": 768,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2107.0"
    ],
    "annotated_answers": [
      "2107.0"
    ],
    "solution": "def multiples_of_7(n):\n    return [x for x in range(n) if x % 7 == 0]\n\nprint(sum(multiples_of_7(200)) - sum(multiples_of_7(100)))"
  },
  {
    "example_id": 769,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "2.0",
      "6.0",
      "1.0",
      "2.0",
      "2.0",
      "2.0",
      "6.0",
      "2.0"
    ],
    "annotated_answers": [
      "35.0"
    ],
    "solution": "k = symbols('k')\nx1 = symbols('x1')\nx2 = symbols('x2')\neq = x1**2 - 12*x1 + k - x2**2 + 12*x2 + k\nsol = solve(eq, k)\nprint(sol)"
  },
  {
    "example_id": 770,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-15.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "d = -210 / (15 - 1)\nprint(d)"
  },
  {
    "example_id": 771,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "106.0"
    ],
    "solution": "# g(x) = f(x+1)\n# g(x) = (x+1)^7 - 3(x+1)^3 + 2\n# g(x) = x^7 + 7x^6 + 11x^5 + 21x^4 + 35x^3 + 21x^2 + 7x + 2\n# g(x) = x^7 - 3x^3 + 2"
  },
  {
    "example_id": 772,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "256.0"
    ],
    "annotated_answers": [
      "256.0"
    ],
    "solution": "f = lambda x: 2**x\neq = f(f(f(f(1))))\nsolution = eq**(1/2)\nprint(solution)"
  },
  {
    "example_id": 773,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "18.0",
      "3.0",
      "25.0",
      "2.0",
      "269.0",
      "1225.0",
      "0.0",
      "5.0",
      "18.0"
    ],
    "annotated_answers": [
      "49.0"
    ],
    "solution": "# Given that x is an integer such that x*sqrt(x)-5*x-9*sqrt(x)=35, find x\n# Define variables\nx = symbols('x')\n# Define equation\neq = x*x*sqrt(x) - 5*x - 9*sqrt(x) - 35\n# Find solution\nsolution = solve(eq, x)\n# Print solution\nprint(solution)"
  },
  {
    "example_id": 774,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "def star(k, l):\n    return (k+l)*(k-l)\n\nprint(star(6, 5))"
  },
  {
    "example_id": 775,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "print(ceiling(-7/4))"
  },
  {
    "example_id": 776,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "25.0",
      "154.0",
      "5.0",
      "8.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq1 = 6*x + 5*y - 2*z - 4\neq2 = 4*x + 5*y + 12*z - 54\nsolution = solve((eq1, eq2), (x, y, z))\nprint(solution)"
  },
  {
    "example_id": 777,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "44.0",
      "5.0",
      "2.0"
    ],
    "annotated_answers": [
      "1736.0"
    ],
    "solution": "# define variables\nx1, x2 = symbols('x1 x2')\ny1, y2 = symbols('y1 y2')\n\n# define equations\neq1 = y1 - (x1**2 - 8)\neq2 = y2**2 - 5*x2 + 44\n\n# solve equations\nsol1 = solve(eq1, y1)\nsol2 = solve(eq2, y2)\n\n# find all solutions\nsolutions = []\nfor i in sol1:\n    for j in sol2:\n        if (i, j) not in solutions:\n            solutions.append((i, j))\n\n# find product of y-coordinates\nproduct = 1\nfor i in solutions:\n    product *= i[1]\n\nprint(product)"
  },
  {
    "example_id": 778,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x = 117\ny = 250\n\nsum = 0\nfor i in range(1, x+1):\n    for j in range(1, y+1):\n        if i*13 + j*9 == y*x:\n            sum += i*j\n\nprint(sum)"
  },
  {
    "example_id": 779,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "from math import floor\nfrom math import ceil\n\nx = symbols('x')\n\neq = abs(x-2) <= 5.6\nsolution = solve(eq, x)\n\nlower_bound = floor(2-5.6)\nupper_bound = ceil(2+5.6)\n\nprint(upper_bound-lower_bound)"
  },
  {
    "example_id": 780,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "n = symbols('n')\neq = n**2 - 3*n + 2\neq_solution = solve(eq, n)\nprint(eq_solution)"
  },
  {
    "example_id": 781,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "181.0"
    ],
    "annotated_answers": [
      "181.0"
    ],
    "solution": "expression = 3*7**2 + 5*7 - 1\nprint(expression)"
  },
  {
    "example_id": 782,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "y_intercepts = [1, -4]\nprint(len(y_intercepts))"
  },
  {
    "example_id": 783,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "10.0"
    ],
    "annotated_answers": [
      "-5.0"
    ],
    "solution": "x = symbols('x')\nb = -4\neq = x**2 + b*x - 36\nsolution = solve(eq, x)\nb_value = solution[0]\nprint(b_value)"
  },
  {
    "example_id": 784,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "9901.0"
    ],
    "solution": "x = symbols('x')\nn = 99\neq = x**2 + x + 1\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 785,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "1.0",
      "2.0",
      "3.0",
      "2.0",
      "1.0",
      "3.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = x - (1 + x/(1 + x/(1 + x/(1 + x))))\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 786,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "231.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "N = symbols('N')\nn = 1\nx = 121\ns = 0\nwhile x > 0:\n    s += n\n    if n % 2 == 1:\n        x -= n\n    n += 1\nprint(s)"
  },
  {
    "example_id": 787,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "3.0",
      "3.0",
      "-3.0",
      "3.0",
      "3.0"
    ],
    "annotated_answers": [
      "108.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = x - y - 6\neq2 = x**2 + y**2 - 24\neq3 = x**3 - y**3\nsolutions = solve([eq1, eq2], [x, y])\nx_value = solutions[0][0]\ny_value = solutions[0][1]\nprint(eq3.subs([(x, x_value), (y, y_value)]))"
  },
  {
    "example_id": 788,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "169.0"
    ],
    "solution": "x = symbols('x')\neq = x**6\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 789,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "13.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "A = 19 - 2 - 4\nprint(A)"
  },
  {
    "example_id": 790,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "20.0",
      "1.0",
      "20.0",
      "2.0",
      "20.0",
      "3.0",
      "20.0",
      "4.0"
    ],
    "annotated_answers": [
      "600.0"
    ],
    "solution": "# Set the range of consecutive integers\nn1, n2, n3, n4 = symbols('n1, n2, n3, n4')\n\n# Create a set of consecutive integers\nintegers = [n1, n2, n3, n4]\n\n# Sum of the consecutive integers\nsum_of_integers = 22\n\n# Increase each integer by 2\nincreased_integers = [n1 + 2, n2 + 2, n3 + 2, n4 + 2]\n\n# Multiply each integer by 20\nmultiplied_integers = [n1*20, n2*20, n3*20, n4*20]\n\n# Sum of the increased and multiplied integers\nsum_of_increased_multiplied_integers = sum(multiplied_integers)\n\n# Print the solution\nprint(sum_of_increased_multiplied_integers)"
  },
  {
    "example_id": 791,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "2.0",
      "1.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nx = symbols('x')\nf = a*x + b\ng = 3*x + 2\neq = g - f**(-1)\nsolution = solve(eq, a, b)\nprint(solution)"
  },
  {
    "example_id": 792,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "26.0"
    ],
    "annotated_answers": [
      "22.0"
    ],
    "solution": "red = 26\nblack = 26\na = 6\nb = 1\n\na_red = a * black\nb_red = b * black\n\nprint(b_red)"
  },
  {
    "example_id": 793,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "2.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = 5*y - 2*x\neq2 = 3*x - 4*y - 7\nz = solve((eq1, eq2), (x, y))\nprint('z =', z)"
  },
  {
    "example_id": 794,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\n\neq = a**2 + 4*a + c\neq2 = b**2 - 4*b*c\n\nratio = simplify((eq2.subs(b, a))/eq.subs(c, a))\n\nif ratio == 1:\n    print('The constant terms are equal.')\nelse:\n    constant_terms = a.subs(eq, 0) + b.subs(eq2, 0)\n    print('The sum of the constant terms is:', constant_terms)"
  },
  {
    "example_id": 795,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "27.0",
      "2.0",
      "3.0",
      "41.0",
      "2.0",
      "2.0",
      "27.0",
      "2.0",
      "3.0",
      "41.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "369.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq1 = x**2 + y**2 - 180\neq2 = 2*x + 2*y - 54\nsolution = solve([eq1, eq2], [x, y])\nx_value = solution[0][0]\ny_value = solution[0][1]\nprint(x_value**2)\nprint(y_value**2)"
  },
  {
    "example_id": 796,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4190.0"
    ],
    "annotated_answers": [
      "69.0"
    ],
    "solution": "# Create a symbol for tickets\nt = symbols('t')\n\n# Express the cost for each ticket\ncost_per_ticket = 70\n\n# Express the cost for each additional ticket\nadditional_ticket_cost = 1\n\n# Express the total cost\ntotal_cost = cost_per_ticket + (additional_ticket_cost * (t - 60))\n\n# Express the profit\nprofit = 4200\n\n# Express the equation\neq = profit - total_cost\n\n# Solve for t\nsolution = solve(eq, t)\n\n# Find the largest value of t\nmax_t = solution[0]\n\n# Print the solution\nprint(max_t)"
  },
  {
    "example_id": 797,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "105.0"
    ],
    "annotated_answers": [
      "105.0"
    ],
    "solution": "# Define the subsets\nsubsets = [(1,2), (1,3), (1,4), (1,5), (1,6), (2,3), (2,4), (2,5), (2,6), (3,4), (3,5), (3,6), (4,5), (4,6), (5,6)]\n\n# Define a function to compute the sum of the elements of a given subset\ndef compute_sum(subset):\n    return sum(subset)\n\n# Compute the sum of each of the 15 two-element subsets\nsubset_sums = [compute_sum(subset) for subset in subsets]\n\n# Compute the sum of the 15 sums\ntotal_sum = sum(subset_sums)\n\n# Print the result\nprint(total_sum)"
  },
  {
    "example_id": 798,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.3304121311619"
    ],
    "annotated_answers": [
      "49.0"
    ],
    "solution": "x = symbols('x')\neq = (x**(1/3)*x**(1/2)) - 7\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 799,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-5.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "# define f(x)\nf = lambda x: 3*x**2 + 2*x - 11\n\n# find the point on the graph of f(x) that is on the graph of f(-x)\npoint_on_graph = (2, f(2))\npoint_on_graph_on_reflected_graph = (-point_on_graph[0], f(-point_on_graph[0]))\n\n# print the sum of the coordinates of the point\nprint(point_on_graph_on_reflected_graph[0] + point_on_graph_on_reflected_graph[1])"
  },
  {
    "example_id": 800,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "f = lambda x: x**2 - 2*x + 1\ng = lambda x: x**0.5 + 1\nprint(f(g(4)) - g(f(3)))"
  },
  {
    "example_id": 801,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "n = symbols('n')\neq = (n + 5)/(n - 3) - 2\nsolution = solve(eq, n)\nn_value = solution[0]\nprint(n_value)"
  },
  {
    "example_id": 802,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-0.25"
    ],
    "solution": "a = 1"
  },
  {
    "example_id": 803,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "54.0"
    ],
    "solution": "x, y = symbols('x y')\na = (x + 4)*(2*y + 1)\nb = (x)*(2*y)\nif (a - b) == 1:\n    print('Product of my numbers is', a)\nelse:\n    print('Product of my numbers is', b)"
  },
  {
    "example_id": 804,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "17.0",
      "2.0",
      "-4.0",
      "1.0",
      "2.0",
      "44.0",
      "1.0",
      "63.0",
      "2.0",
      "1.0",
      "17.0",
      "2.0",
      "-4.0",
      "2.0",
      "2.0",
      "44.0",
      "2.0",
      "63.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x1, y1 = symbols('x1 y1')\nx2, y2 = symbols('x2 y2')\neq1 = (7 - x1)*(10 - x1) + (9 - y1)*(2 - y1)\neq2 = (7 - x2)*(10 - x2) + (9 - y2)*(2 - y2)\nsolution = solve((eq1, eq2), (x1, y1, x2, y2))\nx1_value = solution[0][0]\ny1_value = solution[0][1]\nx2_value = solution[0][2]\ny2_value = solution[0][3]\nprint(x1_value)\nprint(y1_value)\nprint(x2_value)\nprint(y2_value)"
  },
  {
    "example_id": 805,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-32.0",
      "95.0",
      "32.0",
      "94.0",
      "95.0",
      "-32.0",
      "95.0",
      "32.0",
      "94.0",
      "95.0",
      "2.0",
      "1.0",
      "-32.0",
      "95.0",
      "32.0",
      "94.0",
      "95.0"
    ],
    "annotated_answers": [
      "47.0"
    ],
    "solution": "# define variables\nh = symbols('h')\nn = symbols('n')\n\n# define equation\neq = (h**2)/2 + 16 + h + (h**2)/2 + (h**2)/4 + (h**2)/8 + (h**2)/16 + (h**2)/32 + (h**2)/64\n\n# solve for h\nsolution = solve(eq, h)\n\n# print solution\nprint(solution)\n\n# get the value of h\nh_value = solution[0]\n\n# calculate the 6th bounce\nh_6 = h_value/2**(n-1)\n\n# print the solution\nprint(h_6)"
  },
  {
    "example_id": 806,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "20.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\neq = a - 3*b - 20\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 807,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-11.6189500386223",
      "1.0",
      "5.4",
      "2.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\neq1 = a*b**2 - 27/5\neq2 = a**2*b - 135\na_value = solve(eq1, a)[0]\nb_value = solve(eq1, b)[0]\nprint(a_value + 5*b_value)"
  },
  {
    "example_id": 808,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "x = 5 ** 2\nprint(x)"
  },
  {
    "example_id": 809,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "20.0",
      "5.0",
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a, b = symbols('a b')\neq1 = (4*a + 3*b)/(a - 2*b)\neq2 = eq1.subs({a: 5})\nprint(eq2)"
  },
  {
    "example_id": 810,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "6.0"
    ],
    "annotated_answers": [
      "-9.0"
    ],
    "solution": "x, y = symbols('x y')\nA = (x, y)\nB = (x + 2, y - 6)\nM = (x + 1, y - 6)\n\n# Find the midpoint of AB\nM = (x + 1, y - 6)\n\n# Find the sum of the coordinates of B\nsum_x = x + 2\nsum_y = y - 6\n\nprint(sum_x)\nprint(sum_y)"
  },
  {
    "example_id": 811,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "64.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "x = symbols('x')\nm = symbols('m')\nb = symbols('b')\neq = (x**2+b*x+1) - (x+m)**2 + 63\nsolution = solve(eq, b)\nb_value = solution[0]\nprint(b_value)"
  },
  {
    "example_id": 812,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "24.0"
    ],
    "solution": "c = symbols('c')\nx = symbols('x')\neq = 3*x**2 + 7*x + c\n\n# Find all real roots\nroots = solve(eq, x)\n\n# Check if all roots are real\nif len(roots) == 2 and all(root.is_real for root in roots):\n    # Find the product of all positive integer values of c\n    positive_c_values = []\n    for root in roots:\n        if root.is_real and root.is_positive:\n            positive_c_values.append(root)\n\n    # Multiply all positive integer values of c\n    product = 1\n    for c_value in positive_c_values:\n        product *= c_value\n    print(product)\nelse:\n    print('No real roots')"
  },
  {
    "example_id": 813,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "-6.0"
    ],
    "solution": "x1 = 3\ny1 = 9\nx2 = x1 + (1 - x1)\ny2 = y1 + (2 - y1)\nprint(x2, y2)"
  },
  {
    "example_id": 814,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "41.0"
    ],
    "annotated_answers": [
      "156.0"
    ],
    "solution": "# Create variables\na = symbols('a')\nb = symbols('b')\nc = symbols('c')\n\n# Calculate $42^2$\neq1 = a**2\neq2 = eq1 + 164\neq3 = eq1 - b**2\n\n# Solve equations\nsolution1 = solve(eq1, a)\nsolution2 = solve(eq2, a)\nsolution3 = solve(eq3, a)\n\n# Calculate b and c\nb_value = solution2[0]\nc_value = solution3[0]\n\n# Print answers\nprint(b_value)\nprint(c_value)"
  },
  {
    "example_id": 815,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-10.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "b = 1 - 3 * 1^4 + 7 * 1^3 - 2 * 1^2\nprint(b)"
  },
  {
    "example_id": 816,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0",
      "2.0",
      "6.0",
      "2.0",
      "0.5"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "# Define the point (x, y)\nx, y = symbols('x,y')\n\n# Define the distance formula\ndistance = ((x+8)**2 + (y-6)**2)**0.5\n\n# Find the number of units\nnum_units = floor(distance)\n\n# Print the number of units\nprint(num_units)"
  },
  {
    "example_id": 817,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "5.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "x = symbols('x')\na = 1\nb = 4\nc = 5\nd = a*(x - b)**2 + c\nsolution = solve(d, x)\nh = solution[0]\nprint(h)"
  },
  {
    "example_id": 818,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "19.0",
      "4.358898943540674",
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "a = 2\nsum = 4 + 12/a + 36/a**2\nprint(sum)\nprint(sum**0.5)\nprint(a)"
  },
  {
    "example_id": 819,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "for x in range(1, 10):\n    if x**2 + 4*x + 4 < 20:\n        print(x)"
  },
  {
    "example_id": 820,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0",
      "0.0",
      "0.0",
      "0.0",
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "n1 = symbols('n1')\nn2 = symbols('n2')\nn3 = symbols('n3')\nn4 = symbols('n4')\nn5 = symbols('n5')\neq = n1*n2*n3*n4*n5\neq_sol = solve(eq, n1)\nn1_sol = eq_sol[0]\neq_sol_2 = solve(eq, n2)\nn2_sol = eq_sol_2[0]\neq_sol_3 = solve(eq, n3)\nn3_sol = eq_sol_3[0]\neq_sol_4 = solve(eq, n4)\nn4_sol = eq_sol_4[0]\neq_sol_5 = solve(eq, n5)\nn5_sol = eq_sol_5[0]\nn1_val = n1_sol.evalf()\nn2_val = n2_sol.evalf()\nn3_val = n3_sol.evalf()\nn4_val = n4_sol.evalf()\nn5_val = n5_sol.evalf()\nprint(n1_val)\nprint(n2_val)\nprint(n3_val)\nprint(n4_val)\nprint(n5_val)"
  },
  {
    "example_id": 821,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "8.0",
      "56.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "age = symbols('age')\ngrandfather_age = 8*age\nborn_age = 56\nnow_age = grandfather_age - born_age\nprint(now_age)"
  },
  {
    "example_id": 822,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "72.0",
      "2.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "from sympy import solve\nx = symbols('x')\nb = symbols('b')\neq = x**2 + b*x + 18\nsolution = solve(eq, x)\nx_solution = solution[0]\nprint(x_solution)"
  },
  {
    "example_id": 823,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-88.0",
      "88.0",
      "0.0",
      "0.0",
      "0.0",
      "88.0"
    ],
    "annotated_answers": [
      "40.0"
    ],
    "solution": "a, b, c = symbols('a, b, c')\neq = a + b + c - 88\neq1 = eq - a\neq2 = eq + b\neq3 = eq * c\nsolution = solve((eq1, eq2, eq3), (a, b, c))\nprint(solution)"
  },
  {
    "example_id": 824,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-4.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "x0, y0 = 2, -3\nslope = 1/2\ny_intercept = y0 - slope * x0\ny_value = y_intercept\nprint(y_value)"
  },
  {
    "example_id": 825,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\neq = 18 + 5*x**2 - 20*x\nsolutions = solve(eq, x)\na = floor(solutions[0])\nb = floor(solutions[1])\nresult = a*b\nprint(result)"
  },
  {
    "example_id": 826,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "18.0",
      "1.0",
      "3.0"
    ],
    "annotated_answers": [
      "-36.0"
    ],
    "solution": "y = symbols('y')\neq = (y**2)*(2*y) - 36\nsolution = solve(eq, y)\ny_value = solution[0]\nprint(y_value)"
  },
  {
    "example_id": 827,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "5.0",
      "2.0",
      "7.0",
      "2.0",
      "1.0",
      "7.0",
      "2.0",
      "3.0",
      "5.0",
      "2.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 + 1 - 7*x\nsolution = solve(eq, x)\nx_value = solution[0]\nreciprocal_x = 1/x_value\nprint(x_value + reciprocal_x)"
  },
  {
    "example_id": 828,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "print(math.floor(6.7) + math.floor(-6.7))"
  },
  {
    "example_id": 829,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "144.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "import math\n\n# Delta is the ones digit of the quotient\ndelta = 144 / 10**(1-1)\n\n# 1 is the tens digit of the quotient\nquotient = 144 / 10**(1-1)\n\n# Check if the quotient is divisible by 10\nif quotient % 10 == 0:\n    print(\"The tens digit is 1\")\n\n# Check if the quotient is divisible by 100\nif quotient % 100 == 0:\n    print(\"The ones digit is 0\")\n\n# If the quotient is not divisible by 10 or 100\n# then the tens digit is 1 and the ones digit is delta\nelse:\n    print(\"The tens digit is 1\")\n    print(\"The ones digit is\", delta)"
  },
  {
    "example_id": 830,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "print(math.log(64, 2))"
  },
  {
    "example_id": 831,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "20.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "def f(n):\n    return n**2 + n + 17\n\nprint(f(10) - f(9))"
  },
  {
    "example_id": 832,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "print(2**3 + 4)"
  },
  {
    "example_id": 833,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "h = x**5 - 7*x**4 + 10*x**3\ng = x**2 - 7*x + 10\nhg = h.as_poly(g)\nb = len(hg.args) - 1\nprint(b)"
  },
  {
    "example_id": 834,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "import math\n\ndef power(base, exponent):\n    return base ** exponent\n\nx = math.log(1080, 6) - 1\nx = round(x)\nprint(x)"
  },
  {
    "example_id": 835,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0",
      "2.0"
    ],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "p = symbols('p')\nq = symbols('q')\nr = p*q\ndeg = floor(log(simplify(expand(r)), I)/log(I))\nprint(deg)"
  },
  {
    "example_id": 836,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "14.0",
      "2.0",
      "4.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "a, b = symbols('a, b')\nline1 = 2*a - 10\nline2 = b + (a - 7)*(9 - a)\neq = line1 - line2\nsolution = solve(eq, a)\na_value = solution[0]\nb_value = solve(eq, b)\nb_value = solution[0]\nprint(a_value + b_value)"
  },
  {
    "example_id": 837,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "515.0"
    ],
    "annotated_answers": [
      "672.0"
    ],
    "solution": "# 500 dollars\nA = 500\n\n# 3 percent interest per year\nr = 0.03\n\n# 10 years\nn = 10\n\n# Compound interest\na = A * (1 + r/n)**(n*1)\n\n# Round to nearest dollar\na = floor(a)\n\nprint(a)"
  },
  {
    "example_id": 838,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "97.0",
      "2.0",
      "97.0",
      "2.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "78.0"
    ],
    "solution": "# Define variables\nn = symbols('n')\n\n# Define equation\neq = n*n + n - 24\n\n# Solve equation\nsol = solve(eq, n)\n\n# Display solution\nprint(sol)"
  },
  {
    "example_id": 839,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-39.0"
    ],
    "annotated_answers": [
      "-39.0"
    ],
    "solution": "a = -1\nb = 5\neq = -a - b**2 + 3*a*b\nprint(eq)"
  },
  {
    "example_id": 840,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "13.0",
      "2.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "m, n = symbols('m, n')\neq1 = 3*m+4*n-47\neq2 = m+n-15\nsolution = solve([eq1, eq2], [m, n])\nprint(solution)"
  },
  {
    "example_id": 841,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "84.0",
      "6.0",
      "1.0",
      "18.3303027798234",
      "0.0714285714285714",
      "1.0",
      "0.5",
      "14.0",
      "0.0714285714285714",
      "1.0",
      "0.5",
      "0.654653670707977",
      "2.0",
      "20.0"
    ],
    "annotated_answers": [
      "-150.0"
    ],
    "solution": "k = symbols('k')\nx = symbols('x')\na = 6\nb = 12\nc = -8\n\neq = k - a*x**2 - b*x - c\n\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)\n\neq_with_x = eq.subs(x, x_value)\n\nk_value = eq_with_x.evalf()\nprint(k_value)"
  },
  {
    "example_id": 842,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "96.0"
    ],
    "annotated_answers": [
      "33.0"
    ],
    "solution": "x = symbols('x')\ny = 2**3 + I*3**(1/2)\nz = x**3\n\neq = 3*z*y/2\neq = eq.expand()\neq = eq.simplify()\neq = eq.subs(x, 2)\neq = eq.simplify()\neq = eq.subs(I, 0)\neq = eq.simplify()\neq = eq.subs(x, 2)\neq = eq.simplify()\n\nprint(eq)"
  },
  {
    "example_id": 843,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25.0"
    ],
    "annotated_answers": [
      "31.0"
    ],
    "solution": "new_cans = 125 / 5\nprint(new_cans)"
  },
  {
    "example_id": 844,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "50.0",
      "100.0",
      "38.0",
      "5.0",
      "253.0",
      "50.0"
    ],
    "annotated_answers": [
      "22.8"
    ],
    "solution": "# Assign variables\nx = symbols('x')\nr = 15.2\nb = 2*x\nw = 3*r\n\n# Calculate weight of blue box\nb_weight = b/2\n\n# Calculate weight of red box\nr_weight = r\n\n# Calculate weight of both boxes\ntotal_weight = b_weight + r_weight\n\n# Calculate weight of one blue box\none_b_weight = total_weight/2\n\n# Calculate weight of one red box\none_r_weight = r_weight/3\n\n# Print solutions\nprint('One blue box weighs:', floor(one_b_weight*100)/100, 'ounces.')\nprint('One red box weighs:', floor(one_r_weight*100)/100, 'ounces.')"
  },
  {
    "example_id": 845,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-21.0"
    ],
    "annotated_answers": [
      "21.0"
    ],
    "solution": "x = symbols('x')\na, b = symbols('a b', nonnegative=True)\neq = x**2 + 18*x - 63\nexp = expand(eq)\nsolution = solve(exp, x)\nx_value = solution[0]\nprint(x_value)\nprint(b)"
  },
  {
    "example_id": 846,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "5.0",
      "5.0",
      "2.0"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 + 2*x*(5-x) + (5-x)**2\nprint(eq)"
  },
  {
    "example_id": 847,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "c = symbols('c')\nk, l, m, n = symbols('k, l, m, n', integer=True)\nf = (3/(2*c-3))\nf_inverse = f**(-1)\neq = (f_inverse*c*f).expand()\nsolution = solve(eq, c)\nc_value = solution[0]\nprint(c_value)"
  },
  {
    "example_id": 848,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "2.0",
      "5.0",
      "2.0"
    ],
    "annotated_answers": [
      "47.0"
    ],
    "solution": "x = symbols('x')\neq = (x**2 + (1/x**2) - 7)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 849,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "27.0"
    ],
    "annotated_answers": [
      "27.0"
    ],
    "solution": "num_criminals_in_4_5_hours = 4.5 * 6\nprint(num_criminals_in_4_5_hours)"
  },
  {
    "example_id": 850,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "19.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "x = 4\ny = 3\nprint(24 - (2*x - y))"
  },
  {
    "example_id": 851,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "16384.0",
      "-2.0",
      "4.0",
      "2.0",
      "9.0",
      "52.0",
      "7.378697629483821",
      "19",
      "524288.0",
      "2.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq1 = 2**(x+1) - 4**(x-7)\neq2 = 8**(3*y) - 16**(y-13)\neq = eq1 + eq2\nsolution = solve(eq, x, y)\nx_value = solution[0][0]\ny_value = solution[0][1]\nprint(x_value + y_value)"
  },
  {
    "example_id": 852,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "50.0"
    ],
    "solution": "from math import sqrt\n\ndef smallest_perimeter(n):\n    for i in range(1, n + 1):\n        perimeter = 4 * i\n        area = perimeter * (perimeter - 2 * i)\n        if area % 3 == 0:\n            return i\n    return -1\n\nn = 100\nprint(smallest_perimeter(n))"
  },
  {
    "example_id": 853,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "a = symbols('a')\nn = symbols('n')\n\nseq = [a, a**2, a**3, a**4, a**5, a**6, a**7, a**8, a**9]\n\n# Find the common ratio\nr = (seq[8] / seq[7]) - 1\n\n# Find the third term\nt = seq[2]\n\n# Find the ninth term\nninth = seq[8]\n\n# Find the seventh term\nseventh = seq[6]\n\n# Find the seventh term\nseventh = simplify(seq[6])\n\nprint(seventh)"
  },
  {
    "example_id": 854,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.5",
      "2.0",
      "9.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "x = symbols('x')\ny = (1/2)*x**2 - 9\na = abs(y)\na_value = a.evalf()\nprint(a_value)"
  },
  {
    "example_id": 855,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "49.0"
    ],
    "annotated_answers": [
      "2000.0"
    ],
    "solution": "daily_caloric_requirement = 2000\npeach_calories = 40\npercentage = 2\npeach_calories_per_person = peach_calories * (1 + (percentage/100))\n\n# Calculate the number of peaches that fulfill a person's daily caloric requirement\nnumber_of_peaches = floor(daily_caloric_requirement / peach_calories_per_person)\n\nprint(number_of_peaches)"
  },
  {
    "example_id": 856,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "13.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "first_sequence = 0, 1, 2, 3, 4\nsecond_sequence = 1, 3, 5, 7, 9\n\nfirst_sequence_5th = first_sequence[4]\nsecond_sequence_5th = second_sequence[4]\n\nfirst_sequence_5th_plus_second_sequence_5th = first_sequence_5th + second_sequence_5th\n\nprint(first_sequence_5th_plus_second_sequence_5th)"
  },
  {
    "example_id": 857,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "-9.0",
      "0.0"
    ],
    "annotated_answers": [
      "136.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\n\n# Equation\neq = (x + y) - 9\n\n# Product\neq2 = x*y\n\n# Solve\nsolution = solve([eq, eq2], [x, y])\n\n# Extract solution\nsolution = solution[0]\nx_value = solution[0]\ny_value = solution[1]\n\n# Print the solution\nprint('The sum of two numbers is', eq.subs(x, x_value).subs(y, y_value))\nprint('Their difference is', eq.subs(x, x_value).subs(y, y_value) - 9)\nprint('Their product is', eq2.subs(x, x_value).subs(y, y_value))"
  },
  {
    "example_id": 858,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "# Define f(x)\nf = symbols('f')\n\n\n# Define x\nx = symbols('x')\n\n\n# Define f(f(x))\nffx = f(f(x))\n\n\n# Define f(x) - f(f(x))\ndffx = f(x) - f(ffx)\n\n\n# Find the solution\nsolution = solve(dffx - x, f(x))\n\n\n# Print the solution\nprint(solution)"
  },
  {
    "example_id": 859,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "values = [3**(-2), 9**(-2), 27**(-2/3), 9*81**(-1), 243**(-4/5)]\nprint(len(set(values)))"
  },
  {
    "example_id": 860,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-0.5"
    ],
    "annotated_answers": [
      "7.5"
    ],
    "solution": "from math import ceil\ny = 15.5 - ceil(15.5)\nprint(y)"
  },
  {
    "example_id": 861,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "4.0",
      "4.0",
      "2.0",
      "2.0",
      "2.0",
      "4.0",
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "n = symbols('n')\nm = symbols('m')\neq = (x**2) + m*x + (m+n)\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 862,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "print(ceil((7/4)**2))"
  },
  {
    "example_id": 863,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x = symbols('x')\ny = -2*x + 18\n\n# number of lattice points\ndef lattice_points(line):\n    # check for integer values\n    if line.subs(x, 0) % 1 == 0 and line.subs(y, 0) % 1 == 0:\n        return 1\n    else:\n        return 0\n\n# check for integer values\nif y % 1 == 0 and x % 1 == 0:\n    print(lattice_points(y))\nelse:\n    print(0)"
  },
  {
    "example_id": 864,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "coupon = 0.25\nticket_price = 20\nticket_quantity = 4\ndiscount = coupon * ticket_price\ntotal_cost = ticket_quantity * (ticket_price - discount)\n\ncoupon = 0.30\nticket_quantity = 5\ndiscount = coupon * ticket_price\ntotal_cost_pam = ticket_quantity * (ticket_price - discount)\n\nprint(total_cost_pam - total_cost)"
  },
  {
    "example_id": 865,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25.0",
      "2.0",
      "5.0",
      "25.0",
      "2.0",
      "5.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "k = symbols('k')\nf = k*x**2+10*x+k\nrational_solutions = solve(f, x, rational=True)\nprint(rational_solutions)"
  },
  {
    "example_id": 866,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "def f(x):\n    return x**2\n\ndomain = [0,1,2,3,4,5,6,7,8,9]\nmax_points = len(domain)\nprint(max_points)"
  },
  {
    "example_id": 867,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "144.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "area = 12 ** 2\nprint(area)"
  },
  {
    "example_id": 868,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "41.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "regular_packs = 166 // 4\nprint(regular_packs)"
  },
  {
    "example_id": 869,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "13.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "h = lambda x: sqrt((x**3 + 72)/2) + 1\nprint(h(6))"
  },
  {
    "example_id": 870,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1160.2216733575829"
    ],
    "annotated_answers": [
      "1160.0"
    ],
    "solution": "# Initialize variables\na = 1000\nr = 0.075\nt = 0.25\nn = 1/t\n\n# Calculate the value of the savings account at age 2\nA = a*(1 + r/n)**(2*n)\nprint(A)"
  },
  {
    "example_id": 871,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "630.0",
      "13.0",
      "163.0",
      "13.0"
    ],
    "annotated_answers": [
      "120.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\n\np1 = -3\np2 = 1\np3 = 0\n\neq = (p1*a*p1**2 + p1*b*p1 + c) + (p2*a*p2**2 + p2*b*p2 + c) + (p3*a*p3**2 + p3*b*p3 + c)\n\nsolution = solve(eq, a, b, c)\n\na_value = solution[0][0]\nb_value = solution[0][1]\nc_value = solution[0][2]\n\nprint(100*a_value + 10*b_value + c_value)"
  },
  {
    "example_id": 872,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "47.0"
    ],
    "annotated_answers": [
      "78.0"
    ],
    "solution": "def g(x):\n    return 4 * x**2 - 3 * x + 2\n\nprint(g(-3))"
  },
  {
    "example_id": 873,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "18.0",
      "2.0",
      "1296.0",
      "18.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "n = symbols('n')\neq = 9*x**2+n*x+36\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 874,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "17.0"
    ],
    "solution": ""
  },
  {
    "example_id": 875,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "100.0"
    ],
    "solution": "import math\na = 2\nb = 6\n\n# a * b = a^b + b^a\n\n# a^b + b^a = a * b\n\n# a * b = a^b + b^a\n\nprint(a * b)"
  },
  {
    "example_id": 876,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1100.0",
      "3.0",
      "3.0",
      "3.0",
      "3.0",
      "3.0",
      "3.0",
      "3.0",
      "3.0",
      "3.0",
      "3.0",
      "3.0",
      "3.0",
      "3.0",
      "3.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\na = symbols('a')\nb = symbols('b')\nc = symbols('c')\nd = symbols('d')\ne = symbols('e')\nf = symbols('f')\ng = symbols('g')\nh = symbols('h')\ni = symbols('i')\nj = symbols('j')\nk = symbols('k')\nl = symbols('l')\nm = symbols('m')\nn = symbols('n')\np = symbols('p')\nq = symbols('q')\nr = symbols('r')\ns = symbols('s')\nt = symbols('t')\nu = symbols('u')\nv = symbols('v')\nw = symbols('w')\nz = symbols('z')\n\n# Equation\neq = (a + b + c + d + e + f + g + h + i + j + k + l + m + n) / (p + q + r + s + t + u + v + w + x + y + z) - 3\n\n# Solve for p\nsolution = solve(eq, p)\np_value = solution[0]\n\n# Cost of pencil\npencil_cost = 11 / p_value\n\n# Cost in cents\npencil_cost_in_cents = pencil_cost * 100\n\n# Print cost\nprint(floor(pencil_cost_in_cents))"
  },
  {
    "example_id": 877,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "0.0",
      "0.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\nz = symbols('z')\n\n# 50% of 200% of 10\neq1 = 0.5 * (2 * x) * 10\n\n# 50% of 200% of 10\neq2 = 0.5 * (2 * y) * 10\n\n# 50% of 200% of 10\neq3 = 0.5 * (2 * z) * 10\n\nsolution1 = solve(eq1, x)\nsolution2 = solve(eq2, y)\nsolution3 = solve(eq3, z)\n\nx_value = solution1[0]\ny_value = solution2[0]\nz_value = solution3[0]\n\nprint(x_value)\nprint(y_value)\nprint(z_value)"
  },
  {
    "example_id": 878,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "b = -4"
  },
  {
    "example_id": 879,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "60000.0"
    ],
    "annotated_answers": [
      "60000.0"
    ],
    "solution": "sum = 0\nfor i in range(501, 700, 2):\n    sum += i\nprint(sum)"
  },
  {
    "example_id": 880,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "124.0"
    ],
    "annotated_answers": [
      "128.0"
    ],
    "solution": "first_day = 248 / 2\nprint(first_day)"
  }
]