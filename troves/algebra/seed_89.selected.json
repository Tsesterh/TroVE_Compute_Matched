[
  {
    "example_id": 0,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "16.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "n = 4\nd = 5\na = 1\nans = a + (n-1)*d\nprint(ans)"
  },
  {
    "example_id": 1,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-2.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "a = symbols('a')\neq = (8**(-1))/(4**(-1)) - a**(-1) - 1\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 2,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "4.0"
    ],
    "annotated_answers": [
      "268.0"
    ],
    "solution": "# Define diameter\nd = symbols('d')\n# Define area\nA = symbols('A')\n# Define equation\neq = (d/2)**2 - A\n# Define initial conditions\nic = [A == 16, d == 16]\n# Solve for A\nsolution = solve(eq, A, dict=True)\n# Extract solution\nA_value = solution[0][A]\nprint(A_value)"
  },
  {
    "example_id": 3,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7945.0"
    ],
    "annotated_answers": [
      "7945.0"
    ],
    "solution": "rent = 5000\nelectricity = 1.45\ntotal_cost = 16520.25\nelectricity_used = (total_cost - rent) / electricity\nprint(electricity_used)"
  },
  {
    "example_id": 4,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.5"
    ],
    "annotated_answers": [
      "7.5"
    ],
    "solution": "x = symbols('x')\n\n# 1.5 cups flour for 2 pound cake\neq = x - 1.5\n\n# 2 five pound cakes\neq = eq * 2\n\n# solve\nsolution = solve(eq, x)\n\n# print solution\nprint(solution)"
  },
  {
    "example_id": 5,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "164.0"
    ],
    "solution": "# define variables\nn = symbols('n')\n\n# define equation\neq = (3/4) - (n/4)\n\n# solve for n\nsolution = solve(eq, n)\n\n# print the largest possible value of n\nprint(solution[0])"
  },
  {
    "example_id": 6,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "60.0",
      "2.0",
      "2.0",
      "2.0",
      "60.0",
      "2.0"
    ],
    "annotated_answers": [
      "30.0"
    ],
    "solution": "# Define the variables and the equation\nx1 = symbols('x1')\nx2 = symbols('x2')\neq = x1**2 - x2**2 - 60\n\n# Solve the equation\nsolution = solve(eq, x1, x2)\n\n# Print the solution\nprint(solution)"
  },
  {
    "example_id": 7,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "8.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq1 = x/y - 2\neq2 = z/x - 4\nsolution = solve([eq1, eq2], [x, y, z])\nprint(solution)"
  },
  {
    "example_id": 8,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = x+y-12\neq2 = x-y-8\nsolution = solve([eq1, eq2], [x, y])\nprint(2*x - x*y)"
  },
  {
    "example_id": 9,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.333333333333333"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "K = 7 - (4*7) / (6*7)\nprint(K)"
  },
  {
    "example_id": 10,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-10.7331556974643",
      "5.36657784873214",
      "9.18697302812561",
      "5.36657784873214",
      "9.18697302812561"
    ],
    "annotated_answers": [
      "1545.0"
    ],
    "solution": "x = symbols('x')\nf = lambda x: 2/3*x - x**3/3\nsolution = solve(f(x) - 405, x)\nprint(solution)"
  },
  {
    "example_id": 11,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "1.0"
    ],
    "annotated_answers": [
      "81.0"
    ],
    "solution": "# Setup\nx = symbols('x')\n\n# Define the equation\neq = (x - 1/x)**4\n\n# Solve for x\nsolution = solve(eq)\n\n# Print the solution\nprint(solution)"
  },
  {
    "example_id": 12,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "125.0"
    ],
    "solution": "m, n = 1, 1\nsum = 0\nwhile sum < 2000:\n    sum += m/n\n    m, n = n, m*n\nprint(m+n)"
  },
  {
    "example_id": 13,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3702.0"
    ],
    "annotated_answers": [
      "3702.0"
    ],
    "solution": "def floor(x):\n    return int(x)\n\nN = 1/3\nprint(floor(10*N) + floor(100*N) + floor(1000*N) + floor(10000*N))"
  },
  {
    "example_id": 14,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "n = symbols('n')\nx = symbols('x')\ny = symbols('y')\n\n# Lattice points\neq = (x**2 + y**2 - n**2)\nsolution = solve(eq, n)\n\n# Count the number of solutions with n=25\ncount = 0\nfor i in solution:\n    if i == 25:\n        count += 1\n\nprint(count)"
  },
  {
    "example_id": 15,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "10.0",
      "2.0",
      "6.0"
    ],
    "annotated_answers": [
      "33.0"
    ],
    "solution": "x, y, c = symbols('x y c')\neq = x**2 - 10*x + y**2 + 6*y + c\nsolution = solve(eq, c)\nc_value = solution[0]\nprint(c_value)"
  },
  {
    "example_id": 16,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "from sympy import *\n\nx,y = symbols('x y')\n\ncircle = x**2 + y**2 + 2*x + 3*y + 1\n\nA = circle.coeff(x**2)\nB = circle.coeff(x)\nC = circle.coeff(y**2)\nD = circle.coeff(y)\n\nprint(A + B + C + D)"
  },
  {
    "example_id": 17,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "22.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "n = 66\na = n//3\nb = a + 1\nc = b + 1\nprint(a)"
  },
  {
    "example_id": 18,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "a = 25 - 11\nb = 25 - a\nprint(min(a, b))"
  },
  {
    "example_id": 19,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "64.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "print(sqrt(8**4, 12))"
  },
  {
    "example_id": 20,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "444.444444444444"
    ],
    "annotated_answers": [
      "445.0"
    ],
    "solution": "# Define variables\nn_widgets = symbols('n_widgets')\n# Define equation\neq = (n_widgets * 2.75) - (n_widgets * 0.50) - 1000\n# Solve equation\nsolution = solve(eq)\n# Print solution\nprint(solution)"
  },
  {
    "example_id": 21,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x = 0.5 * (1/3) * 36\nprint(x)"
  },
  {
    "example_id": 22,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "2.0",
      "3.0",
      "5.0",
      "2.0"
    ],
    "annotated_answers": [
      "48.0"
    ],
    "solution": "x = symbols('x')\neq = (x + 1/x) - 7\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 23,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "14.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "# Minimum degree of $f(x)$\nn = 7\n# Maximum degree of $g(x)$\nm = 7\n# Maximum degree of $f(x) + g(x)$\ndeg = n + m\n# Minimum degree of $f(x) + g(x)$\ndeg_min = n + m\nprint(deg_min)"
  },
  {
    "example_id": 24,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "512.0"
    ],
    "annotated_answers": [
      "512.0"
    ],
    "solution": "x = symbols('x')\nexpr = x**(x + 1)**x\nexpr_value = expr.subs(x, 2)\nprint(expr_value)"
  },
  {
    "example_id": 25,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "65536.0"
    ],
    "annotated_answers": [
      "64.0"
    ],
    "solution": "n = 2\nfor i in range(15):\n    n *= 2\nprint(n)"
  },
  {
    "example_id": 26,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-9.0"
    ],
    "annotated_answers": [
      "-9.0"
    ],
    "solution": "y = symbols('y')\neq = y**2 - 81\nsolution = solve(eq, y)\ny_value = solution[0]\nprint(y_value)"
  },
  {
    "example_id": 27,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1120.0"
    ],
    "annotated_answers": [
      "1120.0"
    ],
    "solution": "print(43**2 - 27**2)"
  },
  {
    "example_id": 28,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "print(math.log(27, 3))"
  },
  {
    "example_id": 29,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1472.0"
    ],
    "annotated_answers": [
      "194.0"
    ],
    "solution": "a = 2\nd = 30\nn = 50\n\nprint((n-1)*d + a)"
  },
  {
    "example_id": 30,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0",
      "8.0",
      "8.0",
      "7.0",
      "7.0",
      "6.0",
      "6.0",
      "5.0",
      "5.0",
      "4.0",
      "4.0",
      "3.0",
      "3.0",
      "2.0",
      "2.0",
      "1.0",
      "0.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "from sympy import symbols, solve\nx = symbols('x')\neq = 2*x + 3*x**2 + 4*x**3 + 5*x**4 + 6*x**5 + 7*x**6 + 8*x**7 + 9*x**8 - 1\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 31,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-312.50000000000017",
      "-541.2658773652738"
    ],
    "annotated_answers": [
      "625.0"
    ],
    "solution": "print(pow(-125, 4/3))"
  },
  {
    "example_id": 32,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-4.0",
      "-2.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "x = symbols('x')\neq = (x**2 + 3*x - 4) + (x**2 + 9*x + 20)\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 33,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-3.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "x1, y1 = 7, -6\nx2, y2 = -3, -4\n\ncenter_x = (x1 + x2) / 2\ncenter_y = (y1 + y2) / 2\n\nprint(center_x + center_y)"
  },
  {
    "example_id": 34,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "a = symbols('a')\nf = 1/(1-a)\nf_inv = 1/(a*f)\na_value = solve(f_inv - a*f, a)[0]\nprint(a_value)"
  },
  {
    "example_id": 35,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\nsolutions = solve((x+1)*(x+2) - x-3, x)\nm = floor(solutions[0])\nn = floor(solutions[1])\nprint(m+n)"
  },
  {
    "example_id": 36,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "3.0",
      "4.0",
      "33.0",
      "4.0",
      "1.0",
      "3.0",
      "4.0",
      "33.0",
      "4.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "from sympy import solve\nx = Symbol('x')\nsol = solve(2*x**2 - 7*x + 2, x)\na = sol[0]\nb = sol[1]\nprint(1/(a-1) + 1/(b-1))"
  },
  {
    "example_id": 37,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "3.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\nd = symbols('d')\n\neq1 = (9-4*a) - (-3-4*b)\neq2 = (9+4*c) - (-3+4*d)\n\nsolution = solve([eq1, eq2], [a, b, c, d])\n\nprint(solution)"
  },
  {
    "example_id": 38,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-55.0"
    ],
    "annotated_answers": [
      "-55.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\neq1 = a*(-1)**2 + b*(-1) + c - 0\neq2 = a*0**2 + b*0 + c - 5\neq3 = a*5**2 + b*5 + c - 0\nsolution = solve([eq1, eq2, eq3], [a, b, c])\na_value = solution[a]\nb_value = solution[b]\nc_value = solution[c]\nprint(100*a_value + 10*b_value + c_value)"
  },
  {
    "example_id": 39,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "839808.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "x, y = symbols('x y')\neq = 12**2*18**3 - 2**x*3**y\nsolution = solve(eq, x, y)\nx_value, y_value = solution[0]\nprint(x_value + y_value)"
  },
  {
    "example_id": 40,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "103.0"
    ],
    "solution": "# Define variables\na = symbols('a')\nb = symbols('b')\nc = symbols('c')\nd = symbols('d')\n\n# Define the equation\neq = (a**2 + b**2 - c**2 - d**2)\n\n# Solve for the second largest angle\nsolution = solve(eq, a)\n\n# Print the solution\nprint(solution)"
  },
  {
    "example_id": 41,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq = x - sqrt(12-x)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 42,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1001.0",
      "2.0",
      "1002005.0",
      "4.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "575.0"
    ],
    "solution": "from sympy import symbols, solve, sqrt\nx, n = symbols('x n')\neq = (x**2 - 1001*x + n**2 - 1)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 43,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8192.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "n = symbols('n')\na = 1024/2**n\nb = 0.125*2**n\nc = a/b\nprint(c)"
  },
  {
    "example_id": 44,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "7.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "# Define the variables\ny = symbols('y')\nb = symbols('b')\n\n# Define the equations\neq1 = (4*b)/(3*y) - 1\neq2 = (7*b)/(3*y) - 1\n\n# Solve for the value of b\nsolution = solve(eq2, b)\n\n# Print the result\nprint(solution[0])"
  },
  {
    "example_id": 45,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "2.0",
      "1.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "x1, y1, x2, y2 = symbols('x1 y1 x2 y2')\ns = sqrt((x2 - x1)**2 + (y2 - y1)**2)\nf = solve(s, x2 - x1, y2 - y1)\nprint(f)"
  },
  {
    "example_id": 46,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "9.0"
    ],
    "annotated_answers": [
      "-10.0"
    ],
    "solution": "x = 6 + 1\ny = 8 + 1\nprint(x, y)"
  },
  {
    "example_id": 47,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a = 4\nb = -1\nc = -1\nprint(a + b + c)"
  },
  {
    "example_id": 48,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "200.0"
    ],
    "annotated_answers": [
      "286.0"
    ],
    "solution": "x = symbols('x')\nn = 13\nd = 10\nm = 20\ny = 2008\ne = (m - n)/d\nprint(floor((y - n)/d + 1))"
  },
  {
    "example_id": 49,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "28.0"
    ],
    "annotated_answers": [
      "28.0"
    ],
    "solution": "print(int(14.6) - int(-14.6))"
  },
  {
    "example_id": 50,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "3.0",
      "2.0",
      "4.0",
      "2.0",
      "3.0",
      "2.0",
      "3.0",
      "2.0",
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\nb = symbols('b')\neq = (3/x)+(x/3) - b\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 51,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5000.0"
    ],
    "annotated_answers": [
      "5000.0"
    ],
    "solution": "print(255**2 - 245**2)"
  },
  {
    "example_id": 52,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x1, y1 = 2, 3\nx2, y2 = 4, 3\n\nb = (y1-y2)/(x1-x2)\nc = y1 - b*x1\n\nprint(c)"
  },
  {
    "example_id": 53,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x = symbols('x')\neq = 7**(log(49,x)) - 49\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 54,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "3.0",
      "3.0",
      "5.0",
      "2.0",
      "3.0",
      "5.0",
      "3.0",
      "1.0",
      "2.0",
      "5.0",
      "5.0",
      "2.0",
      "3.0",
      "5.0",
      "3.0",
      "1.0",
      "2.0",
      "5.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq1 = 125**b - 5\neq2 = 27**b - c\nsolution = solve([eq1, eq2], [a, b, c])\nprint(solution)"
  },
  {
    "example_id": 55,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "8.0",
      "3.0",
      "2.0",
      "24.0",
      "62.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "from sympy import symbols, Min\nx, y = symbols('x y')\nexpr = 2*x**2 + 3*y**2 + 8*x - 24*y + 62\nsolution = Min(expr)\nprint(solution)"
  },
  {
    "example_id": 56,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "60.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "# Define variables\nnum_days_in_month = 30\nnum_miles_walked_per_day = 4\n\n# Define fewest number of miles she can walk in February\nfewest_miles_walked = num_miles_walked_per_day * (num_days_in_month/2)\n\n# Print fewest number of miles she can walk in February\nprint(fewest_miles_walked)"
  },
  {
    "example_id": 57,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "s = 1\nwhile True:\n    if is_integer(sqrt(s*s/2 + s/2)):\n        print(s)\n    else:\n        break\n    s += 1"
  },
  {
    "example_id": 58,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-5.0",
      "13.0",
      "-12.0",
      "13.0",
      "5.0",
      "13.0",
      "12.0",
      "13.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq1 = a - 7*b + 8*c - 4\neq2 = 8*a + 4*b - c - 7\neq3 = eq1**2 + eq2**2\nsolution = solve(eq3, a, b, c)\na_value = solution[0][0]\nb_value = solution[0][1]\nc_value = solution[0][2]\nprint('a = ', a_value)\nprint('b = ', b_value)\nprint('c = ', c_value)"
  },
  {
    "example_id": 59,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.6",
      "-2.0",
      "12.0",
      "5.0",
      "2.0",
      "30.0",
      "12.0",
      "5.0",
      "2.0",
      "30.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "a, b, c, d = symbols('a, b, c, d')\neq1 = (a/b) - (3/5)\neq2 = (b/c) - (15/6)\neq3 = (c/d) - 6\neq4 = (a/d) - (eq1*eq2*eq3)\nsolution = solve(eq4, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 60,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2035.7520395261859",
      "0.0",
      "0.0"
    ],
    "annotated_answers": [
      "216.0"
    ],
    "solution": "r1 = 3*3\nr2 = 1\nh1 = 24\nh2 = 0\nV1 = (1/3)*math.pi*r1**2*h1\nV2 = (1/3)*math.pi*r2**2*h2\n\nprint(V1, V2)\n\ndef find_height(V):\n    return (V/(math.pi*r2**2))**(1/3)\n\nheight = find_height(V2)\nprint(height)"
  },
  {
    "example_id": 61,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "9.0",
      "2.0",
      "32.0",
      "2.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "x, y = symbols('x, y')\neq = y**2 - 3*x*y + 8\nsolution = solve(eq, y)\ny_value = solution[0]\nprint(y_value)"
  },
  {
    "example_id": 62,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0",
      "6.0",
      "7.0",
      "3.0",
      "7.0",
      "6.0",
      "7.0",
      "6.0",
      "7.0",
      "3.0",
      "7.0",
      "6.0",
      "7.0",
      "3.0",
      "7.0",
      "6.0",
      "7.0",
      "6.0",
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x, y, a, b, c = symbols('x y a b c')\n\n# define the equations\neq1 = a*x + b*y + c - x - 7\neq2 = a + b*x + c*y - 2*x - 6*y\neq3 = a*y + b + c*x - 4*x - y\n\n# solve for a\na = (eq1 - eq2)/(b*c - a)\n\n# solve for b\nb = (eq1 - eq3)/(a*c - b)\n\n# solve for c\nc = (a*b - eq1)/(a*b - c)\n\n# solve for the sum\nsum = a + b + c\n\nprint(sum)"
  },
  {
    "example_id": 63,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "165.0"
    ],
    "annotated_answers": [
      "165.0"
    ],
    "solution": "# Write your solution here\nsum = 0\nfor i in range(1, 11):\n    sum += i * 3\nprint(sum)"
  },
  {
    "example_id": 64,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "4005.0"
    ],
    "solution": "n = 2003\nsequence = [1, 3, 5, 7]\nprint(sequence[n%4])"
  },
  {
    "example_id": 65,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "0.0"
    ],
    "solution": ""
  },
  {
    "example_id": 66,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "15.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "# Define variables\npints_first_mile = 1.5\npints_per_mile = 1.5\npints_total = 0\n\n# Calculate total pints\nfor i in range(10):\n    pints_total += pints_per_mile\n\n# Print the total pints\nprint(pints_total)"
  },
  {
    "example_id": 67,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "1.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a, b = symbols('a b')\neq = (a*b) - (a - b)\nsolution = solve(eq, a, b)\na_value = solution[0][0]\nb_value = solution[0][1]\nprint(a_value/b_value)"
  },
  {
    "example_id": 68,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-15.0",
      "8.0"
    ],
    "annotated_answers": [
      "3.5"
    ],
    "solution": "t = symbols('t')\neq = (-16*t**2 + 26*t + 105)\nsolution = solve(eq, t)\nt_value = solution[0]\nprint(t_value)"
  },
  {
    "example_id": 69,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "4003997.0",
      "4006.0",
      "1.0",
      "2.0",
      "1.0",
      "1.0",
      "2.0",
      "4003997.0",
      "4006.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "# Define the equation\nx = symbols('x')\neq = (2003*x + 1)/(2004*x - 1) - 1/x\n\n# Find the roots of the equation\nroots = solve(eq, x)\n\n# Find the sum of the reciprocals of the roots\nsum_reciprocals = 0\nfor root in roots:\n    sum_reciprocals += 1/root\n\nprint(sum_reciprocals)"
  },
  {
    "example_id": 70,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "5.4"
    ],
    "solution": "x = 3"
  },
  {
    "example_id": 71,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-10.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "n = symbols('n')\neq = (n**2 - n) / 2 - 55\nsolution = solve(eq, n)\nn_value = solution[0]\nprint(n_value)"
  },
  {
    "example_id": 72,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "4.0",
      "233.0",
      "4.0",
      "1.0",
      "4.0",
      "233.0",
      "4.0"
    ],
    "annotated_answers": [
      "0.5"
    ],
    "solution": "x = symbols('x')\neq = (2*x+5)*(x-3) - 14\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 73,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-5.0",
      "3.0",
      "15.0",
      "2.0",
      "62.0",
      "56.0",
      "2.0",
      "3.0",
      "4.0"
    ],
    "annotated_answers": [
      "-5.0"
    ],
    "solution": "x = symbols('x')\na = symbols('a')\neq1 = (x**2 - 3*x + 4)*(2*x**2 + a*x + 7) - 2*x**4 + 11*x**3 - 30*x**2 - 41*x + 28\nsolution = solve(eq1, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 74,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "6.0",
      "2.0",
      "2.0",
      "6.0",
      "2.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\nsolutions = solve(2*x**2 + 4*x - 1, x)\nsum_of_squares = 0\nfor solution in solutions:\n    sum_of_squares += solution**2\nprint(sum_of_squares)"
  },
  {
    "example_id": 75,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "1.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0",
      "2.0",
      "1.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "x1, y1, x2, y2 = symbols('x1 y1 x2 y2')\neq = (x2 - x1)**2 + (y2 - y1)**2\nsolution = solve(eq, (x1, y1, x2, y2))\nprint(solution)"
  },
  {
    "example_id": 76,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0",
      "10.0",
      "10.0",
      "10.0",
      "950.0"
    ],
    "annotated_answers": [
      "40.0"
    ],
    "solution": "# Define Variables\nwells = symbols('wells')\nted = symbols('ted')\nvino = symbols('vino')\n\n# Define Cost per hour\ncents_per_hour = 10\n\n# Define Total Hours Used\ntotal_hours = 105\n\n# Define Free Hours\nfree_hours = 10\n\n# Define Extra Hours\nextra_hours = total_hours - free_hours\n\n# Define Cost for Extra Hours\ncost_extra_hours = extra_hours * cents_per_hour\n\n# Calculate Wells and Ted's Cost\nwells_cost = wells * cents_per_hour\nted_cost = ted * cents_per_hour\n\n# Calculate Vino's Cost\nvino_cost = vino * cents_per_hour\n\n# Calculate Total Cost\ntotal_cost = wells_cost + ted_cost + vino_cost + cost_extra_hours\n\n# Print Results\nprint(\"The number of cents charged for each extra hour is:\")\nprint(cents_per_hour)\nprint(\"The total cost is:\")\nprint(total_cost)"
  },
  {
    "example_id": 77,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "24.0"
    ],
    "annotated_answers": [
      "73.5"
    ],
    "solution": "k = 56\nj = 42\n\nk_value = 32\n\n# find the value of j when k = k_value\nj_value = (j/k) * k_value\n\nprint(j_value)"
  },
  {
    "example_id": 78,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "43.0"
    ],
    "annotated_answers": [
      "43.0"
    ],
    "solution": "x = 5 ** 2 + 18\nprint(x)"
  },
  {
    "example_id": 79,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0"
    ],
    "annotated_answers": [
      "2015.0"
    ],
    "solution": "b = symbols('b')\nx = symbols('x')\nTb = (b*(b+1))/2\nTx = (x*(x+1))/2\neq = Tb+1 - Tb - Tx\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 80,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "350.0"
    ],
    "annotated_answers": [
      "350.0"
    ],
    "solution": "print(113+276-13-26)"
  },
  {
    "example_id": 81,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "625.0"
    ],
    "annotated_answers": [
      "400.0"
    ],
    "solution": "width = 100 / 4\narea = width * width\nprint(area)"
  },
  {
    "example_id": 82,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = (2**x - 2)*(5*2**x + 10) - 3*4**x - 12\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 83,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = (2**(x+1))**3*4**x - 8192\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 84,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "x = symbols('x')\neq = 2**(x) - 81\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 85,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "36.0",
      "3.0",
      "35.0",
      "5.0",
      "34.0",
      "2.0",
      "33.0",
      "3.0",
      "32.0",
      "4.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x = symbols('x')\nf = x**6 + 2*x**5 - 5*x**4 + 4*x**3 - 11*x**2 + 12*x + 7\ng = x**3 - 2*x**2 + 3*x - 4\nh = x**36 + 3*x**35 - 5*x**34 + 2*x**33 - 3*x**32 + 4*x**31 - 3*x**30 + 2*x**29 - 3*x**28 + 2*x**27 - 3*x**26 + 2*x**25 - 3*x**24 + 2*x**23 - 3*x**22 + 2*x**21 - 3*x**20 + 2*x**19 - 3*x**18 + 2*x**17 - 3*x**16 + 2*x**15 - 3*x**14 + 2*x**13 - 3*x**12 + 2*x**11 - 3*x**10 + 2*x**9 - 3*x**8 + 2*x**7 - 3*x**6 + 2*x**5 - 3*x**4 + 2*x**3 - 3*x**2 + 2*x - 3\nprint(f + g + h)"
  },
  {
    "example_id": 86,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "-15.0"
    ],
    "solution": "def f(x):\n    return x & (7-x) & (x - 7)\n\nprint(f(15))"
  },
  {
    "example_id": 87,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "from sympy import floor, ceiling, sqrt, pi\n\ndef f(n):\n    if n >= 4:\n        return floor(n)\n    else:\n        return ceiling(n)\n\nprint(f(pi/3) + f(sqrt(45)) + f(8**(2/3)))"
  },
  {
    "example_id": 88,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "42.0",
      "48.0",
      "5.0",
      "28.0",
      "5.0"
    ],
    "annotated_answers": [
      "38.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = 5*x - 2*y - 7\neq2 = 3*x + y - 2\n\n# Solve for x\nx_value = solve(eq1, x)[0]\n\n# Solve for y\ny_value = solve(eq2, y)[0]\n\n# Calculate the value of 24x - 14y\nresult = 24*x_value - 14*y_value\nprint(result)"
  },
  {
    "example_id": 89,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\ny = (x-3)/(x**2+7*x-30)\n\n# Find vertical asymptotes\nvert_asymptotes = []\n\n# Check for vertical asymptotes in the denominator\ndenominator = y.args[1]\nasymptotes = []\nfor i in range(len(denominator.args)):\n    if denominator.args[i] == 0:\n        asymptotes.append(i)\n\n# Add vertical asymptotes to list\nfor i in asymptotes:\n    vert_asymptotes.append(denominator.args[i])\n\n# Check for vertical asymptotes in the numerator\nnumerator = y.args[0]\nasymptotes = []\nfor i in range(len(numerator.args)):\n    if numerator.args[i] == 0:\n        asymptotes.append(i)\n\n# Add vertical asymptotes to list\nfor i in asymptotes:\n    vert_asymptotes.append(numerator.args[i])\n\n# Print number of vertical asymptotes\nprint(len(vert_asymptotes))"
  },
  {
    "example_id": 90,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "75.0"
    ],
    "annotated_answers": [
      "75.0"
    ],
    "solution": "import math\n\n# 600 / 8 = 75\n# 75 / 1 = 75\n# 75 * 1 = 75\n\n# 75 / 75 = 1\n# 1 * 1 = 1\n\nprint(75)"
  },
  {
    "example_id": 91,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "print(531**2 - 2*531*530 + 530**2)"
  },
  {
    "example_id": 92,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "1.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x = symbols('x')\nf = x**(-1) - x\nsolution = solve(f, x)\nprint(solution)"
  },
  {
    "example_id": 93,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "T = symbols('T')\nS = symbols('S')\nG = symbols('G')\nt = symbols('t')\ns = symbols('s')\ng = symbols('g')\n\neq1 = (3*T)/(2*S) - (1*G)/(1*t) - 1\neq2 = (2*T)/(1*S) - (1*G)/(1*t) - 1\neq3 = (1*T)/(1*S) - (1*G)/(1*t) - 1\n\nsolution = solve([eq1, eq2, eq3], [T, S, G])\n\nT_value = solution[0][0]\nS_value = solution[0][1]\nG_value = solution[0][2]\n\nprint(T_value)\nprint(S_value)\nprint(G_value)"
  },
  {
    "example_id": 94,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-22.0",
      "3.0",
      "2.0",
      "241.0",
      "3.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "# Solve for x\nx = symbols('x')\neq = (3*x)/(5*x) - 4/(x) + 8/(x+8)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 95,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "0.5",
      "25.0",
      "2.0",
      "0.5"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "from sympy import symbols, solve\nx = symbols('x')\neq = (25 - x**2)**(1/2) + (-(x - 2))**(1/2)\nprint(eq)"
  },
  {
    "example_id": 96,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "83.33333333333333"
    ],
    "annotated_answers": [
      "187.5"
    ],
    "solution": "# Declare variables\nvitamin_water_calories = 125\nfluid_ounces_in_a_bottle = 8\nfluid_ounces_in_a_12_fluid_ounce_bottle = 12\n\n# Calculate the number of calories in a 12 fluid ounce bottle\ncalories_in_12_fluid_ounce_bottle = (fluid_ounces_in_a_bottle/fluid_ounces_in_a_12_fluid_ounce_bottle) * vitamin_water_calories\n\n# Print the result\nprint(calories_in_12_fluid_ounce_bottle)"
  },
  {
    "example_id": 97,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "k = symbols('k')\neq = (3**k)**6 - 3**6\nsolution = solve(eq, k)\nk_value = solution[0]\nprint(k_value)"
  },
  {
    "example_id": 98,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "print(2 * (-2) ** 2 + 3 * (-2) + 4)"
  },
  {
    "example_id": 99,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "243.0"
    ],
    "annotated_answers": [
      "243.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\neq1 = 2**a - 32\neq2 = a**b - 125\n\nsolution = solve([eq1, eq2], [a, b])\n\na_value = solution[0][0]\nb_value = solution[0][1]\n\nprint(b_value**a_value)"
  },
  {
    "example_id": 100,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "20.0",
      "4809.0",
      "20.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "p = symbols('p')\neq = 120 - 3*p - 10*p**2\nsolution = solve(eq, p)\np_value = solution[0]\nprint(p_value)"
  },
  {
    "example_id": 101,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "4.0",
      "2.0",
      "2.0",
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "a = symbols('a')\nx = symbols('x')\neq = a*x**2 + 8*x + 4\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 102,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "3310.0",
      "2.0",
      "3.0",
      "331.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "# Define symbols\nr = symbols('r')\nn = 3\n\n# Define equation\neq = (20000/((1+r)**n)) - 66200\n\n# Solve for r\nsolution = solve(eq, r)\n\n# Print result\nprint(solution[0])"
  },
  {
    "example_id": 103,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "80.0"
    ],
    "annotated_answers": [
      "80.0"
    ],
    "solution": "print(34-10+20-9+55-10)"
  },
  {
    "example_id": 104,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "700.0"
    ],
    "annotated_answers": [
      "700.0"
    ],
    "solution": "print(32**2 - 18**2)"
  },
  {
    "example_id": 105,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "print(ceil(3/2)**2 + ceil(pow(3/2, 2)))"
  },
  {
    "example_id": 106,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "15.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "from sympy import primefactors\n\ndef solution(n):\n    for i in range(2, n):\n        if (n-i) % i == 0:\n            return i + (n-i) / i\n    return -1\n\nn = 39\nprint(solution(n))"
  },
  {
    "example_id": 107,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a = 6\nb = symbols('b')\nc = 4\nd = 3\neq = a**b + c*d - 48\nsolution = solve(eq, b)\nb_value = solution[0]\nprint(b_value)"
  },
  {
    "example_id": 108,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "def f(n):\n    if n > 1:\n        return n**3 + 2*n - 1\n    elif n <= 1:\n        return n - 1\n\nprint(f(0) + f(1) + f(2))"
  },
  {
    "example_id": 109,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "2.0"
    ],
    "solution": ""
  },
  {
    "example_id": 110,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "13.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "x = symbols('x')\ns = symbols('s')\neq = (2*x + 2*s) - sqrt(13)\nsolution = solve(eq, s)\ns_value = solution[0]\nprint(s_value**2)"
  },
  {
    "example_id": 111,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-33.0"
    ],
    "annotated_answers": [
      "27.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 - 6*x + 2 - 29\nsolution = solve(eq, x)\na, b = solution\nprint(2*a - 3*b)"
  },
  {
    "example_id": 112,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "20.0",
      "2.0",
      "2.0",
      "20.0",
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "a = symbols('a')\nx = symbols('x')\neq = x**2 + a*x + 5*a\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 113,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-0.225"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\neq = (5/8) + a/b - 0.4\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 114,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-6.0"
    ],
    "annotated_answers": [
      "-6.0"
    ],
    "solution": "from math import sin, pi\n\ndef f1(x):\n    return -6*sin(x*pi/6)\n\nprint(f1(f1(-1)))"
  },
  {
    "example_id": 115,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "c = 1"
  },
  {
    "example_id": 116,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "1.0"
    ],
    "solution": ""
  },
  {
    "example_id": 117,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\neq = (sqrt(5*x))*(sqrt(10*x))*(sqrt(18*x)) - 30\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 118,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "m = symbols('m')\neq = (3*m)**2 + 12 - 3*(m)**2\nsolution = solve(eq, m)\nm_value = solution[0]\nprint(m_value)"
  },
  {
    "example_id": 119,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\neq = 2*x*(x-10) + 50\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 120,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\neq = 2**8 - 4**x\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 121,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "34.0"
    ],
    "annotated_answers": [
      "34.0"
    ],
    "solution": "y = 8 - 5 * (-2) + 4 * (-2) ** 2\nprint(y)"
  },
  {
    "example_id": 122,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "x = symbols('x')\neq = abs(2-abs(x)) - 1\neq1 = eq.subs(x, 0)\neq2 = eq.subs(x, -1)\neq3 = eq.subs(x, 1)\nsolution = solve((eq1, eq2, eq3), x)\nprint(solution)"
  },
  {
    "example_id": 123,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "2.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "import math\n\n# y - A = m(x - A)\n# y - 1 = m(x - 9)\n# y = 1 + m(x - 9)\n# y = 1 + mx - 9m\n\n# y - B = m(x - B)\n# y - k = m(x - 19)\n# y = k + mx - 19m\n\n# y - C = m(x - C)\n# y = 0 + mx - 7m\n\n# 2 equations, 3 variables\n# m1 = m2 = m3\n\n# y = mx - 7m + k\n# y = m(x - 7) + k\n\n# y = mx - 7m\n# y = 19 - 7k\n\n# 19 = 7k\n# k = 19/7\n# k = 2\n\n# y = m(x - 7) + 2\n# y = mx - 7m + 2\n\nprint(\"y = mx - 7m + 2\")"
  },
  {
    "example_id": 124,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12793.247935728949"
    ],
    "annotated_answers": [
      "74726.0"
    ],
    "solution": "# initial investment\nA = 10000\n# interest rate\nr = 0.06\n# time\nt = 5\n# future value\nFV = 100000\n# present value\nPV = A * (1+r)**t\n# difference\nd = FV - PV\n# discount rate\ndr = (d/PV)\n# years\ny = t/dr\n# investment\nI = PV / (1 + r)**y\nprint(I)"
  },
  {
    "example_id": 125,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "x = symbols('x')\nf = x**2 - 5*x - 36\nf_x = solve(f, x)\nf_x_value = f_x[0]\nprint(f_x_value)"
  },
  {
    "example_id": 126,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "print(math.log(1, 2))"
  },
  {
    "example_id": 127,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "24.0"
    ],
    "annotated_answers": [
      "24.0"
    ],
    "solution": "x = symbols('x')\neq = (2**3)**(2**3) - 2**x\nsolution = solve(eq, x)\nN = solution[0]\nprint(N)"
  },
  {
    "example_id": 128,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "35.0",
      "245.0",
      "5.0",
      "951.0",
      "951.0",
      "5.0",
      "35.0",
      "1.0",
      "35.0",
      "34236.0",
      "5.0",
      "35.0"
    ],
    "annotated_answers": [
      "93.0"
    ],
    "solution": "from sympy import sqrt, simplify, factor, gcd, nsimplify\n\na = symbols('a')\nb = symbols('b')\nc = symbols('c')\n\ndenominator = simplify((6/sqrt(245)) + (3*sqrt(125)) + (4*sqrt(45)))\nnumerator = factor(denominator).as_numer_denom()\n\nA, B = numerator\nC = denominator\n\nprint(nsimplify(A/C))\nprint(nsimplify(B/C))\nprint(nsimplify(gcd(A, C)))\nprint(nsimplify(gcd(B, C)))\nprint(nsimplify(A+B+C))"
  },
  {
    "example_id": 129,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "14.0"
    ],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "u = symbols('u')\neq = (u+4)*(u-1) - (u-3)*(u+6)\nsolution = simplify(eq)\nprint(solution)"
  },
  {
    "example_id": 130,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "13.5"
    ],
    "annotated_answers": [
      "13.5"
    ],
    "solution": "a = 0.25\nb = -0.5\ndifference = abs(18*a - 18*b)\nprint(round(difference, 1))"
  },
  {
    "example_id": 131,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-3.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "f = lambda x: (4-x)/2\ng = lambda x: 2*x-4\nprint(f(g(1))*g(f(1)))"
  },
  {
    "example_id": 132,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "a, b = 2, 3\nx = 20\n\n# left side\nleft = (a * x + b) * (2 * x + 3)\n\n# right side\nright = 2 * x ** 2 + 44 * x + 21\n\n# check if left and right are equal\nprint(left == right)\n\n# value of a + b\nprint(a + b)"
  },
  {
    "example_id": 133,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "6.0",
      "2.0",
      "2.0",
      "8.0",
      "2.0",
      "2.0",
      "6.0",
      "2.0",
      "2.0",
      "2.0",
      "8.0",
      "2.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "a, b, c, d, m, n = symbols('a b c d m n')\n\nA = (a, b)\nB = (c, d)\nM = (m, n)\n\nA_new = (a+14, b+20)\nB_new = (c-2, d-4)\n\nM_new = ((A_new[0] + B_new[0])/2, (A_new[1] + B_new[1])/2)\n\nprint(M_new)\n\ndistance = (M_new[0] - M[0])**2 + (M_new[1] - M[1])**2\nprint(distance)"
  },
  {
    "example_id": 134,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "20.0",
      "10.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "m = symbols('m')\nn = symbols('n')\neq1 = 70 + m + n - 20 - 80\neq2 = 2*n - m\nsolution = solve([eq1, eq2], [m, n])\nprint(solution)"
  },
  {
    "example_id": 135,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "5.0",
      "4.0",
      "4.0",
      "5.0",
      "1.0",
      "1.0",
      "5.0",
      "4.0",
      "4.0",
      "5.0",
      "1.0",
      "1.0",
      "5.0",
      "4.0",
      "4.0",
      "5.0",
      "48.0"
    ],
    "annotated_answers": [
      "125.0"
    ],
    "solution": "x = 4/(sqrt(5)+1)*(sqrt(5)+1)*(sqrt(5)+1)*(sqrt(5)+1)\nprint(x)\n\nx_plus_one = x + 1\nprint(x_plus_one)\n\nx_plus_one_pow_48 = x_plus_one**48\nprint(x_plus_one_pow_48)"
  },
  {
    "example_id": 136,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "f = lambda x: x + 1\ng = lambda x: x**2 + 3\nprint(f(g(2)))"
  },
  {
    "example_id": 137,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-3.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "print(ceil(3.6**2) - ceil(3.6)**2)"
  },
  {
    "example_id": 138,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "121.0"
    ],
    "annotated_answers": [
      "121.0"
    ],
    "solution": "# Solve for n\nn = symbols('n')\neq = sqrt(400) - sqrt(81) - sqrt(n)\nsolution = solve(eq, n)\nn_value = solution[0]\nprint(n_value)"
  },
  {
    "example_id": 139,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "49.0",
      "2.0",
      "14.0",
      "19.0",
      "7.0",
      "19.0",
      "7.0",
      "2.0"
    ],
    "annotated_answers": [
      "361.0"
    ],
    "solution": "x = symbols('x')\neq = 49*x**2 + 14*x*(19-7*x) + (19-7*x)**2\nprint(eq)"
  },
  {
    "example_id": 140,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a, b = symbols('a b')\neq1 = 5*a + 2*b - 0\neq2 = a*b - 10\nsolutions = solve([eq1, eq2], [a, b])\na_value = solutions[0][0]\nprint(a_value)"
  },
  {
    "example_id": 141,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "# Define variables\nn = 15\nm = 15\n\n# Define function to calculate number of days\ndef days_to_paint(n):\n    count = 0\n    while n > 1:\n        count += 1\n        n = int(n/2)\n    return count\n\n# Calculate number of days\ndays = days_to_paint(n)\n\n# Print solution\nprint('It took Zeno', days, 'days to paint the entire floor.')"
  },
  {
    "example_id": 142,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "5.0",
      "2.0",
      "3.0",
      "5.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = (x**2 - x - 1)\nx_value = solve(eq, x)[0]\nx_value_3 = x_value**3 - 2*x_value + 1\nprint(x_value_3)"
  },
  {
    "example_id": 143,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "x = symbols('x')\neq = 6 + x + (1/(2 + x + (1/(6 + x + (1/(2 + x + (1/(6 + x))))))))\nsolution = solve(eq, x)\nx_value = solution[0]\na_value = eq.subs(x, x_value)\nb_value = a_value.subs(x, x_value)\nc_value = b_value.subs(x, x_value)\na_plus_b_plus_c = simplify(a_value + b_value + c_value)\nprint(a_plus_b_plus_c)"
  },
  {
    "example_id": 144,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "270.0"
    ],
    "annotated_answers": [
      "180.0"
    ],
    "solution": "abby_bart = 160\nbart_cindy = 180\ncindy_damon = 200\n\nabby_bart_weight = abby_bart / 2\nbart_cindy_weight = bart_cindy / 2\ncindy_damon_weight = cindy_damon / 2\n\nabby_damon_weight = abby_bart_weight + bart_cindy_weight + cindy_damon_weight\n\nprint(abby_damon_weight)"
  },
  {
    "example_id": 145,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "5.0",
      "2.0",
      "11.0",
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "# define symbols\nx = symbols('x')\ny = symbols('y')\n\n# define equations\neq1 = 3*y - x\neq2 = 2*x + 5*y - 11\n\n# solve equations\nsol1 = solve(eq1, y)\nsol2 = solve(eq2, x)\n\n# find coordinates of point A\nx_val = sol1[0]\ny_val = sol2[0]\n\n# find sum of coordinates of point A\nsum_coord = x_val + y_val\nprint(sum_coord)"
  },
  {
    "example_id": 146,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "3.0",
      "6.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "from sympy import simplify\n\nx = simplify(1 + sqrt(2)) / (2 + sqrt(3))\n\nA = x.as_numer_denom()[0]\nB = x.as_numer_denom()[1]\nC = B.as_numer_denom()[0]\nD = B.as_numer_denom()[1]\n\nprint(A + B + C + D)"
  },
  {
    "example_id": 147,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\np = a**2 + a*b + b\neq = (p.subs(a, 2*a) - p.subs(b, b)).factor()\neq = eq.expand()\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 148,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "m = 2\nn = 3\np = 4\nmnp = 24"
  },
  {
    "example_id": 149,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "from sympy import I, Symbol, expand_mul\n\nz = Symbol('z')\nf = (z**2) if not z.is_real else (z + 2)\nf_i = f.subs(z, I)\nf_1 = f.subs(z, 1)\nf_m1 = f.subs(z, -1)\nf_mi = f.subs(z, -I)\nf_val = (f_i + f_1 + f_m1 + f_mi).expand().subs(I, expand_mul(I))\nprint(f_val)"
  },
  {
    "example_id": 150,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-5.0",
      "55.0",
      "55.0",
      "5.0"
    ],
    "annotated_answers": [
      "-114.0"
    ],
    "solution": "x = symbols('x')\neq = (x**2 + 10*x - 30)\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 151,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "433.0",
      "2.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x = symbols('x')\neq = x + x**2 - 108\nsolution = solve(eq, x)\na = solution[0]\nprint(a)\n\n\n# The number of pans of cookies made by Walter and Gretel\nprint(floor(a/15))\n\n\n# The number of cookies made by Walter and Gretel\nprint(floor(a/15)*15)\n\n\n# The number of cookies made by Bonnie\nprint(108 - floor(a/15)*15)\n\n\n# The number of cookies left over\nprint(floor(a/15)*15 - 108)\n\n\n# The number of cookies left over\nprint(floor(a/15)*15 - 108)\n\n\n# The number of cookies left over\nprint(floor(a/15)*15 - 108)\n\n\n# The number of cookies left over\nprint(floor(a/15)*15 - 108)\n\n\n# The number of cookies left over\nprint(floor(a/15)*15 - 108)\n\n\n# The number of cookies left over\nprint(floor(a/15)*15 - 108)\n\n\n# The number of cookies left over\nprint(floor(a/15)*15 - 108)\n\n\n# The number of cookies left over\nprint(floor(a/15)*15 - 108)\n\n\n# The number of cookies left over\nprint(floor(a/15)*15 - 108)\n\n\n# The number of cookies left over\nprint(floor(a/15)*15 - 108)\n\n\n# The number of cookies left over\nprint(floor(a/15)*15 - 108)\n\n\n# The number of cookies left over\nprint(floor(a/15)*15 - 108)"
  },
  {
    "example_id": 152,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-9.0",
      "31.0",
      "2.0",
      "7.0",
      "31.0",
      "2.0",
      "31.0",
      "3.0",
      "1.0",
      "3.0",
      "2.0",
      "100.0",
      "9.0",
      "31.0",
      "3.0",
      "1.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "64.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = (2*x + 3*y)**2 - 4\neq2 = x*y + 5\nsolution = solve([eq1, eq2], [x, y])\nx_value = solution[0][0]\ny_value = solution[0][1]\nprint(4*x_value**2 + 9*y_value**2)"
  },
  {
    "example_id": 153,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "# define variables\nx = symbols('x')\n\n# define expression\nexp = (x - 3)/(x**2 - 10*x + 16)\n\n# find undefined values\nundefined = solve(exp, x)\n\n# print results\nprint(undefined)"
  },
  {
    "example_id": 154,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\neq = (x+1)/(x**2-2*x+1)\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 155,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "26.0"
    ],
    "annotated_answers": [
      "26.0"
    ],
    "solution": "def h(x):\n    return (x-0.5)*(x-2.5)*(x-6.5)*(x-7.5)/16+x\n\nsum = 0\nfor x in range(9):\n    if h(x) > x:\n        sum += x\nprint(sum)"
  },
  {
    "example_id": 156,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "# a = symbols('a')\na = symbols('a')\n# eq = (8**(-1))/(4**(-1)) - a**(-1) - 1\neq = (8**(-1))/(4**(-1)) - a**(-1) - 1\n# solution = solve(eq, a)\nsolution = solve(eq, a)\n# a_value = solution[0]\na_value = solution[0]\n# print(a_value)\nprint(a_value)"
  },
  {
    "example_id": 157,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "f = lambda x: 5*x + 2\ng = lambda x: 3*x**2 - 4*x\nprint(f(f(1)) - g(g(2)))"
  },
  {
    "example_id": 158,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "9.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "x = (13 + (-16) + 6) / 3\ny = (8) ** (1/3)\nprint(x**2 + y**3)"
  },
  {
    "example_id": 159,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-11.0"
    ],
    "annotated_answers": [
      "-11.0"
    ],
    "solution": "x = symbols('x')\neq = (x - 9) / (x + 1) - 2\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 160,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "913.0",
      "2.0",
      "913.0",
      "2.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "1710.0"
    ],
    "solution": "n = symbols('n')\na = 28\nb = 86\nsum = (n*(n+1))/2\nresult = solve(sum - a - b, n)\nprint(result)"
  },
  {
    "example_id": 161,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "from sympy import symbols, solve\n\na = symbols('a')\nx = symbols('x')\nf = a*x**2 + a*x + 2*a\n\nsolution = solve(f, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 162,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "g_degree = 8 - 4\nprint(g_degree)"
  },
  {
    "example_id": 163,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "3.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\nm = (3*x**2 - 4*x + 1) / (x - 1)\nsolution = solve(m, x)\nx_values = solution[0]\nprint(x_values)"
  },
  {
    "example_id": 164,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "4.0",
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x = symbols('x')\ny = 3*(x - 4) + 2*(x**2 - x + 7) - 5*(x - 1)\ny_simplified = simplify(y)\nprint(y_simplified)"
  },
  {
    "example_id": 165,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "64.0"
    ],
    "annotated_answers": [
      "64.0"
    ],
    "solution": "y = 3\nprint((1+y)**y)"
  },
  {
    "example_id": 166,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "100.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "R = symbols('R')\nV = 100\nI = 40\nR0 = 3\n\n# Calculate I for R = 20 ohms\nI2 = V/R\n\n# Print I2\nprint(I2)"
  },
  {
    "example_id": 167,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-4.0",
      "-4.0",
      "3.0215734278848",
      "-4.0",
      "3.0215734278848"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "# Define x\nx = symbols('x')\n\n# Define equation\neq = 2**12 - (1/8)**x\n\n# Solve for x\nsolution = solve(eq, x)\n\n# Print result\nprint(solution)"
  },
  {
    "example_id": 168,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "print(log(5**4, 5**2))"
  },
  {
    "example_id": 169,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\nf = 4*x**3 + 1\nf_inv = 33\nf_inv_x = solve(f - f_inv, x)[0]\nprint(f_inv_x)"
  },
  {
    "example_id": 170,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "-0.833333333333333",
      "1.0",
      "0.48",
      "0.5",
      "0.833333333333333",
      "2.0",
      "0.833333333333333",
      "1.0",
      "0.48",
      "0.5",
      "0.833333333333333",
      "1.0",
      "-1.66666666666667",
      "2.0",
      "0.0",
      "-122.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "from sympy import symbols, solve, sqrt\n\nx = symbols('x')\nk = symbols('k')\n\neq = 3*x**2 + 5*x + k\n\nsolution = solve(eq, x)\n\nroot1 = solution[0]\nroot2 = solution[1]\n\n# roots are complex numbers\nroot1_value = root1.evalf()\nroot2_value = root2.evalf()\n\n# roots are real numbers\nroot1_value_real = root1.evalf(subs={k:0})\nroot2_value_real = root2.evalf(subs={k:0})\n\nprint('root1:', root1_value)\nprint('root2:', root2_value)\nprint('root1 (real):', root1_value_real)\nprint('root2 (real):', root2_value_real)"
  },
  {
    "example_id": 171,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0",
      "10.0",
      "2.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "z = symbols('z')\nw = (2-2*z) * (5+5*z)\nprint(simplify(w))"
  },
  {
    "example_id": 172,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.5"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "# Define variables\nn_seats = 450\nn_rows = 5\nseats_per_row = 10\n\n# Calculate number of seats in each row\nn_seats_per_row = seats_per_row * n_rows\n\n# Calculate number of seats in the auditorium\nn_seats_in_auditorium = n_seats_per_row - (3 * n_rows)\n\n# Calculate the number of rows\nn_rows = n_seats_in_auditorium / seats_per_row\n\nprint(n_rows)"
  },
  {
    "example_id": 173,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "23.0"
    ],
    "solution": "# define function f(x)\nf = lambda x: 2*x+1\n\n# define function f^-1(x)\nf_inverse = lambda x: floor(fmod(x-1, 4))\n\n# find f^-1(17)\nf_inverse_17 = f_inverse(17)\n\n# print the result\nprint(f_inverse_17)"
  },
  {
    "example_id": 174,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "43.333333333333336"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "a = (5*16) / (10-7)\nb = (5*10) / (10-7)\nc = a + b\nprint(c)"
  },
  {
    "example_id": 175,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\neq = 2**(x + 2) - 32\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 176,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "def P(x):\n    return 4*x**3 - 2*x**2 + 7*x - 1\n\ndef Q(x):\n    return P(x)**2\n\nprint(Q(0))"
  },
  {
    "example_id": 177,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "1929.0",
      "2.0"
    ],
    "annotated_answers": [
      "23.0"
    ],
    "solution": "n = symbols('n')\neq = (n*(n+1))/2 - 241\nsolution = solve(eq, n)\nn_value = solution[0]\nprint(n_value)"
  },
  {
    "example_id": 178,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "17.0"
    ],
    "annotated_answers": [
      "79.0"
    ],
    "solution": "# floor of 52/3\nf = floor(52/3)\nprint(f)\n\n\n# 5/23\ng = 5/23\nprint(g)\n\n\n# f/g\nh = f/g\nprint(h)\n\n\n# fmod\nfmod(f, g)\n\n\n# ceil of f/g\nce = ceil(f/g)\nprint(ce)"
  },
  {
    "example_id": 179,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-5.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "x = symbols('x')\neq = (x-5)*(x+5)\nsolution = solve(eq, x)\nsolution = solution[0]\nprint(solution)"
  },
  {
    "example_id": 180,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\ny = - (x + 1)**2 + 1\n\n# find zeros\nzeros = solve(y, x)\n\n# sort zeros\na, b = sorted(zeros)\n\n# check if b >= a\nif b < a:\n    b, a = a, b\n\n# print answer\nprint(b - a)"
  },
  {
    "example_id": 181,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "1.0",
      "3.0",
      "1.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nS = symbols('S')\neq1 = a + b + a*b + b**2 + a**2\neq2 = b + a + b*a + 1/S + a**2/S**2\nsolution1 = solve(eq1, a)\nsolution2 = solve(eq2, b)\na_value = solution1[0]\nb_value = solution2[0]\nprint(a_value + b_value)"
  },
  {
    "example_id": 182,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "# define the sequence\na = symbols('a')\n\n# define the ratio\nr = (a**4)/(a**2)\n\n# define the equation\neq = r - 3\n\n# solve for a_5/a_3\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 183,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "978121.0"
    ],
    "annotated_answers": [
      "978121.0"
    ],
    "solution": "print(989**2)"
  },
  {
    "example_id": 184,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "9.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "# create symbols\nx, c = symbols('x c')\n\n# define the equation\neq = x**2 + c*x + 9*c\n\n# solve for c\nsolution = solve(eq, c)\n\n# find c\nc_value = solution[0]\n\n# print the result\nprint(c_value)"
  },
  {
    "example_id": 185,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "-10.0"
    ],
    "solution": "y_intercept = 4 * 0 + 6\nprint(y_intercept)"
  },
  {
    "example_id": 186,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "8.0",
      "2.0",
      "4.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x, y, c = symbols('x y c')\neq = x**2 + 8*x + y**2 + 4*y + c\nsolution = solve(eq, c)\nc_value = solution[0]\nprint(c_value)"
  },
  {
    "example_id": 187,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "log_8_2938 = 3.535\na = 3\nb = 4\nprint(a+b)"
  },
  {
    "example_id": 188,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.5"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "quarts = 2/4\nteaspoons = 2\nprint(quarts)"
  },
  {
    "example_id": 189,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "f = lambda x: 2*x - 4\ng = lambda x: x**2 + 3\nprint(f(g(2)))"
  },
  {
    "example_id": 190,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "49.0",
      "16.0",
      "2.0",
      "256.0",
      "2.0",
      "1.0",
      "4.0",
      "2.0",
      "-16.0",
      "49.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\nk = symbols('k')\n\n# Define the polynomial\np = 4*x**2 + 7*x + k\n\n# Find the roots\nroots = solve(p, x)\n\n# Find the values of the roots\nroot1 = roots[0]\nroot2 = roots[1]\n\n# Find the real and imaginary parts of the roots\nroot1_real = root1.as_real_imag()[0]\nroot1_imag = root1.as_real_imag()[1]\nroot2_real = root2.as_real_imag()[0]\nroot2_imag = root2.as_real_imag()[1]\n\n# Find the value of k\nk_value = (root1_real*root2_imag - root2_real*root1_imag)/(root1_real**2 + root1_imag**2)\nprint(k_value)"
  },
  {
    "example_id": 191,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "4.0",
      "2.0",
      "2.0",
      "4.0",
      "4.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\ny = 2*x**2 - 4*x + 4\ndydx = y.diff(x)\nvertex = (dydx, y)\nprint(vertex)"
  },
  {
    "example_id": 192,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "28.0"
    ],
    "solution": "shoe_size = symbols('shoe_size')\nAdina_size = 6\nLynn_size = 9\nshoe_size_Adina = Adina_size + (Lynn_size - Adina_size)\nshoe_size_Adina = shoe_size_Adina * 0.25\nshoe_size_Adina = int(shoe_size_Adina)\nprint(shoe_size_Adina)"
  },
  {
    "example_id": 193,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "28.0"
    ],
    "solution": "# define a and b\na, b = symbols('a, b')\n\n\n# define function\nf = (a/b)*(x) if x <= -4 else ab*x**2 if x > -4 else 0\n\n\n# define f(-4) and f(4)\nf_4 = f(4)\nf_m4 = f(-4)\n\n\n# solve for a and b\neq1 = f_4 - 3120\neq2 = f_m4 - (-60)/13\nsolution = solve((eq1, eq2), (a, b))\n\n\n# extract solution\na_value = solution[0][0]\nb_value = solution[0][1]\n\n\n# print a+b\nprint(a_value+b_value)"
  },
  {
    "example_id": 194,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "# define variables\na = 81\nb = 3\n\n# evaluate log\nlog_a_b = log(a, b)\nprint(log_a_b)"
  },
  {
    "example_id": 195,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.14285714285714"
    ],
    "annotated_answers": [
      "0.43"
    ],
    "solution": "t = symbols('t')\ny = -4.9*t**2 - 3.5*t + 2.4\nsolution = solve(y, t)\nt_value = solution[0]\nprint(t_value)"
  },
  {
    "example_id": 196,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "44.0"
    ],
    "annotated_answers": [
      "44.0"
    ],
    "solution": "print((4**3 + 2**3) - (3**3 + 1**3))"
  },
  {
    "example_id": 197,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "x = 24\ny = 24\nx_sq = x**2\ny_sq = y**2\ndifference = x - y\nsquare_difference = difference**2\nprint(square_difference)"
  },
  {
    "example_id": 198,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "# Define function D\ndef D(a, b, c):\n    return (a * b * c) / (a + b + c)\n\n# Find D(2,4,6)\nprint(D(2, 4, 6))"
  },
  {
    "example_id": 199,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "8000.0"
    ],
    "annotated_answers": [
      "8000.0"
    ],
    "solution": "print((26**2 - 24**2 - 10)**2 - 10**2)"
  },
  {
    "example_id": 200,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "153.0",
      "2.0"
    ],
    "annotated_answers": [
      "27.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq = (x + y) - (153)\nsolution = solve(eq, y)\ny_value = solution[0]\nx_value = y_value - x\nprint(x_value)"
  },
  {
    "example_id": 201,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "20.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "x = 1\nwhile x < 21:\n    y = 20\n    while y < 41:\n        if x / (1 / y) == 20:\n            print(x, y)\n        y += 1\n    x += 1"
  },
  {
    "example_id": 202,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "11.0",
      "130.0",
      "408.407044966673",
      "-6.28318530717959",
      "130.0",
      "-2.0",
      "130.0",
      "-6.28318530717959",
      "130.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "# Solving the equation\n# Circle center\nh, k = symbols('h, k')\n# Circle radius\nr = symbols('r')\n# Circle equation\neq1 = (h-(-1))**2 + (k-2)**2 - r**2\neq2 = (h-3)**2 + (k-0)**2 - r**2\neq3 = (h-9)**2 + (k-0)**2 - r**2\n# Solving the system\nsol = solve([eq1, eq2, eq3], [h, k, r])\n# Circle center\nh = sol[0][0]\nk = sol[0][1]\n# Circle center coordinates\nprint(h, k)\n# Circle radius\nr = sol[0][2]\n# Circle radius\nprint(r)\n# Circle area\nprint(math.pi * r**2)\n# Circle perimeter\nprint(2 * math.pi * r)\n# Circle diameter\nprint(2 * r)\n# Circle circumference\nprint(2 * math.pi * r)\n# Circle semi-perimeter\nprint(r + (h + k) / 2)\n# Circle apothem\nprint(sqrt(r**2 - (h - k)**2) / 2)\n# Circle inradius\nprint(sqrt(r**2 - (h - k)**2) / 2)\n# Circle eccentricity\nprint((sqrt(r**2 - (h - k)**2) / r) - 1)\n# Circle area using formula\nprint(math.pi * r**2 / 4)\n# Circle perimeter using formula\nprint(2 * math.pi * r)\n# Circle diameter using formula\nprint(2 * r)\n# Circle circumference using formula\nprint(2 * math.pi * r)\n# Circle semi-perimeter using formula\nprint(r + (h + k) / 2)\n# Circle apothem using formula\nprint(sqrt(r**2 - (h - k)**2) / 2)\n# Circle inradius using formula\nprint(sqrt(r**2 - (h - k)**2) / 2)\n# Circle eccentricity using formula"
  },
  {
    "example_id": 203,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "3.0",
      "1.0",
      "3.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\nf = 4*x + 1\nf_inv = 3/f\nf_inv_inv = f_inv**(-1)\nprint(f_inv_inv)"
  },
  {
    "example_id": 204,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "17.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "p = symbols('p')\nq = symbols('q')\neq = (q + 4) * (p + 3) - (q + 2) * (p + 1) - 44\nsolution = solve(eq, p)\np_value = solution[0]\nprint(p_value)"
  },
  {
    "example_id": 205,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "125.5"
    ],
    "annotated_answers": [
      "125.5"
    ],
    "solution": "sum = 0\nfor i in range(1, 251):\n    sum += i\nprint(sum / 250)"
  },
  {
    "example_id": 206,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "13.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 - 4*x - 14 - 3*x - 16\nsolution = solve(eq, x)\npositive_difference = solution[1] - solution[0]\nprint(positive_difference)"
  },
  {
    "example_id": 207,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = 3 + 1/x - 7/x\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 208,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.999999999999987",
      "-0.6119402985074627"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "f = lambda x: (1+x)/(1-x)\ng = lambda x: -2/(x+1)\n\nf_of_g = g(f(g(f(g(f(g(f(g(f(12))))))))))\ng_of_f = f(g(f(g(f(g(f(g(f(g(12))))))))))\n\nprint('f_of_g:', f_of_g)\nprint('g_of_f:', g_of_f)"
  },
  {
    "example_id": 209,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-3.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "x = symbols('x')\nexpr = (x+3)*(x-1) - x*(x+2)\nprint(simplify(expr))"
  },
  {
    "example_id": 210,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "3.0",
      "4.0",
      "3.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "# Define the expression\nexpr = sqrt((4/sqrt(24)) + (sqrt(3456)/9) + sqrt(6))/sqrt(6)\n\n# Simplify the expression\nexpr_simplified = simplify(expr)\n\n# Print the simplified expression\nprint(expr_simplified)"
  },
  {
    "example_id": 211,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.13337179766974"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\neq = (x**(-1))*(x**(1/2)) - (x**2 + x - 6)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 212,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "4.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "n = symbols('n')\nx = 4**n + 4**n + 4**n + 4**n\nsolution = simplify(sqrt(x))\nprint(solution)"
  },
  {
    "example_id": 213,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "A = 4\nB = 3\nC = 2\nprint(A + B + C)"
  },
  {
    "example_id": 214,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "slope_first_segment = (2 - 0) / (2 - 0)\nslope_second_segment = (6 - 0) / (2 - 0)\nslope_midpoint_first_segment = (0 + 2) / 2\nslope_midpoint_second_segment = (0 + 2) / 2\nslope_midpoint = (slope_midpoint_first_segment + slope_midpoint_second_segment) / 2\nprint(slope_midpoint)"
  },
  {
    "example_id": 215,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\n\n# Calculate the largest value of x\nlargest_value = 5*x-1-x-3\n\n# Find the largest value of x\nlargest_x = solve(largest_value, x)\nlargest_x = largest_x[0]\n\nprint(largest_x)"
  },
  {
    "example_id": 216,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\neq = log((10-2*x), (x-1)) - 2\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 217,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": ""
  },
  {
    "example_id": 218,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10368.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "288.0"
    ],
    "solution": "a, b = symbols('a b')\neq = 2*a*b - 12\na_value = solve(eq, a)[0]\nb_value = solve(eq, b)[0]\nprint(8*a_value**2*b_value**2)"
  },
  {
    "example_id": 219,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.039684199579492"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "a = 8\nb = 16 * math.sqrt(a**2)\nc = b**(1/3)\nprint(c)"
  },
  {
    "example_id": 220,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "2.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "x1, y1 = symbols('x1, y1')\nx2, y2 = symbols('x2, y2')\n\n# Define midpoint\nmid = (x1 + x2)/2, (y1 + y2)/2\n\n# Print the coordinates of the midpoint\nprint(mid)"
  },
  {
    "example_id": 221,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2304.0",
      "2.0",
      "4096.0",
      "2.0"
    ],
    "annotated_answers": [
      "32.0"
    ],
    "solution": "from sympy import symbols, sqrt\n\nx, y = symbols('x, y')\neq1 = x**2 - 24*x + y**2 - 32*y + 384\neq2 = x**2 + 24*x + y**2 + 32*y + 384\n\nd = sqrt((eq1.subs(x, 0) - eq2.subs(x, 0))**2 + (eq1.subs(y, 0) - eq2.subs(y, 0))**2)\nprint(d)"
  },
  {
    "example_id": 222,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x = symbols('x')\neq = (66 - 2**x)/(2**x + 3) - (4 - 2**x)/(2**(x + 1) + 6)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 223,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.588",
      "0.8000000000000114"
    ],
    "annotated_answers": [
      "29.0"
    ],
    "solution": "p1 = 1.24\np2 = 1.82\np3 = 1.24\np4 = 1.82\ne = 1.82\n\n# Cost of a pencil in cents\npencil_cost = (p1*100 + p2*100 + p3*100 + p4*100 + e*100)/5\n\n# Cost of a pencil in dollars\npencil_cost_dollars = pencil_cost/100\n\n# Cost of a pencil in cents\npencil_cost_cents = pencil_cost - floor(pencil_cost)\n\nprint(pencil_cost_dollars, \"dollars\", pencil_cost_cents, \"cents\")"
  },
  {
    "example_id": 224,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "4.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nm = symbols('m')\neq = (a/4) + (b/12) - 1\nsolution = solve(eq, a, b, m)\na_value = solution[0][0]\nb_value = solution[0][1]\nm_value = solution[0][2]\nprint(a_value + b_value + m_value)"
  },
  {
    "example_id": 225,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "8.0",
      "4.0",
      "2.0",
      "49.0"
    ],
    "annotated_answers": [
      "22.0"
    ],
    "solution": "# Define the variables\nx = symbols('x')\n\n# Define the functions\nf = 2*x**2 + 8*x + 4\ng = 7\n\n# Find the area of the square\narea = f**2 - (g**2 - f**2)\n\n# Print the area\nprint(area)"
  },
  {
    "example_id": 226,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "196.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "p = symbols('p')\nq = symbols('q')\neq = p/q - 28/7\nsolution = solve(eq, p)\np_value = solution[0]\np_value = p_value.subs(q, 49)\nprint(p_value)"
  },
  {
    "example_id": 227,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "7.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "# Define variables\nx = symbols('x')\na = 4\nb = 9\n\n# Define inequality\neq = (x-a)**2 <= b\n\n# Define solution\nsolution = solve(eq, x)\n\n# Print solution\nprint(solution)"
  },
  {
    "example_id": 228,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "n = symbols('n')\neq = (9**n * 3**(2*n + 1)) / 81 - 243\nsolution = solve(eq, n)\nn_value = solution[0]\nprint(n_value)"
  },
  {
    "example_id": 229,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "a = symbols('a')\neq = sqrt(4+sqrt(16+16*a))+sqrt(1+sqrt(1+a)) - 6\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 230,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "slope_1 = (4 - (-2)) / (2 - 0)\nslope_2 = (1 - 5) / (1 - 5)\nprint(slope_1)\nprint(slope_2)"
  },
  {
    "example_id": 231,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "5.0",
      "3.0",
      "2.0",
      "7.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\nexpression = (x**2 - 5*x + 7) - (x - 3)*(x - 2)\nprint(expression)"
  },
  {
    "example_id": 232,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1024.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "from math import sqrt\n\ndef prime_factors(n):\n    factors = []\n    while n % 2 == 0:\n        factors.append(2)\n        n /= 2\n    for i in range(3, int(sqrt(n)) + 1, 2):\n        while n % i == 0:\n            factors.append(i)\n            n /= i\n    if n > 2:\n        factors.append(n)\n    return factors\n\ndef sum_of_powers(n, m, k, t):\n    factors = prime_factors(n)\n    result = 0\n    for factor in factors:\n        if factor == m:\n            result += k**t\n        elif factor == n:\n            result += t**k\n    return result\n\nprint(sum_of_powers(24, 3, 4, 5))"
  },
  {
    "example_id": 233,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "30.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "son_age = symbols('son_age')\nfather_age = 5 * son_age\nson_age_three_years_ago = 30 - father_age\nthree_years_ago = son_age_three_years_ago + father_age\ncurrent_age = three_years_ago + son_age\nprint(current_age)"
  },
  {
    "example_id": 234,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5083.0"
    ],
    "annotated_answers": [
      "4950.0"
    ],
    "solution": "sum = 0\nfor i in range(100, 200, 3):\n    sum += i\nprint(sum)"
  },
  {
    "example_id": 235,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "22.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "annual_interest_rate = (1225 - 1000) / 1000 * 100\nprint(round(annual_interest_rate))"
  },
  {
    "example_id": 236,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "f = {}\nf[1] = 2\nf[2] = 6\nf[3] = 5\n\ndef f_inverse(x):\n    if x == 2:\n        return 1\n    elif x == 6:\n        return 2\n    elif x == 5:\n        return 3\n    else:\n        return None\n\nprint(f_inverse(f_inverse(6)))"
  },
  {
    "example_id": 237,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "8281.0"
    ],
    "annotated_answers": [
      "8281.0"
    ],
    "solution": "print(91**2)"
  },
  {
    "example_id": 238,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "12.0",
      "2.0",
      "9.0"
    ],
    "annotated_answers": [
      "-27.0"
    ],
    "solution": "g = symbols('g')\nexpression = g**4 + 12*g**2 + 9\nc = 1\np = 12\nq = 9\nc_expression = c*(g**2 + p)**2 + q\n\nprint(c_expression)"
  },
  {
    "example_id": 239,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "3.0",
      "4.0",
      "3.0",
      "25.0",
      "2.0",
      "38.0",
      "17.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\nf = (x-1)*(3*x**4 + x**3 - 25*x**2 + 38*x - 17)\nprint(f)\n\n\ndegree = len(f.args) - 1\nprint(degree)"
  },
  {
    "example_id": 240,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "2.0"
    ],
    "annotated_answers": [
      "3.5"
    ],
    "solution": "t = symbols('t')\ny = -6*t**2 + 43*t\ny_val = 77\nt_val = solve(y - y_val, t)[0]\nprint(t_val)"
  },
  {
    "example_id": 241,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-42.0",
      "3.0",
      "21.0",
      "2.0",
      "21.0",
      "24.0",
      "6.0",
      "3.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "-15.0"
    ],
    "solution": "from sympy import symbols, expand, collect\n\nx = symbols('x')\neq = 24*x**4 + 6*x**3 + 4*x**2 - 7*x - 5\neq2 = 6*x**3 + 3*x**2 + 3*x + 4\n\nresult = eq.subs(x, eq2)\nprint(result)"
  },
  {
    "example_id": 242,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "96.0"
    ],
    "solution": "a,b,c = symbols('a,b,c', integer=True, positive=True)\neq = a**2*b + b**2*c + c**2*a - a*b**2 - b*c**2 - c*a**2\nsolution = solve(eq, [a,b,c])\nprint(len(solution))"
  },
  {
    "example_id": 243,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "# if x is negative, then |{-x+3}| = -(-x+3) = x-3\n# if x is positive, then |{-x+3}| = -(x-3) = -x + 3\nx = 4\nprint(x)"
  },
  {
    "example_id": 244,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x = symbols('x')\neq = (2/3) - (4/(x-5))\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 245,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "3.0",
      "-1.0",
      "8.0",
      "3.0"
    ],
    "annotated_answers": [
      "2.2"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\neq1 = a*(-1)**2 + b*(-1) + c - 3\neq2 = a*2**2 + b*2 + c - (-2)\neq3 = a*1**2 + b*1 + c - 1\neq4 = a*1**2 + b*1 + c - 1\nsolution = solve([eq1, eq2, eq3, eq4], [a, b, c])\nprint(solution)"
  },
  {
    "example_id": 246,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\nf = (sqrt(x - 1))/(x - 2)\nsolution = solve(f, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 247,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "126.0"
    ],
    "annotated_answers": [
      "129.0"
    ],
    "solution": "n = 0\nwhile n <= 125:\n    n = n + 1\nelse:\n    print(n)"
  },
  {
    "example_id": 248,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "7.0",
      "6.0",
      "42.0",
      "5.0",
      "210.0",
      "4.0",
      "840.0",
      "3.0",
      "2520.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "t = symbols('t')\nf = 100*t + 100*t**2/2 + 100*t**3/6 + 100*t**4/24 + 100*t**5/120 + 100*t**6/720 + 100*t**7/5040\nsol = solve(f-12000, t)\nprint(sol)"
  },
  {
    "example_id": 249,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\nf = x**2 - 1\neq = f*x**6 - 5*x**5 + 3*x**4 + x**3 - 25*x**2 + 38*x - 17\ndegree = 6\n\n\nsolution = solve(eq, f)\nf_value = solution[0]\nprint(f_value)"
  },
  {
    "example_id": 250,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "70.0"
    ],
    "annotated_answers": [
      "54.0"
    ],
    "solution": "x = symbols('x')\n\n# quadratic formula\nx2 = x**2\nx1 = x**1\n\n# constants\nb = 2\nc = 66\n\n# (x+b)^2 + c\neq = x2 + 2*x*b + b**2 + c\n\n# simplify\neq = simplify(eq)\n\n# b+c\nsolution = eq.subs([(x, 0)])\nprint(solution)"
  },
  {
    "example_id": 251,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.5"
    ],
    "annotated_answers": [
      "0.75"
    ],
    "solution": "# Define variables\nt = symbols('t')\ny = -16*t**2 - 60*t + 54\n\n# Solve for t\nsolution = solve(y, t)\n\n# Print solution rounded to nearest hundredth\nprint(round(solution[0], 2))"
  },
  {
    "example_id": 252,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "30.0"
    ],
    "solution": "# number of days to paint 12 houses in three days\ndays_to_paint_12_houses = 3\n\n# number of houses painted per day\nhouses_per_day = 4\n\n# number of houses to paint\nhouses_to_paint = 12\n\n# number of workers\nworkers = 5\n\n# number of days to paint all houses\ndays_to_paint_all_houses = houses_to_paint / houses_per_day\n\n# number of workers needed\nworkers_needed = workers * days_to_paint_all_houses / days_to_paint_12_houses\n\n# print the result\nprint(workers_needed)"
  },
  {
    "example_id": 253,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "2.0",
      "3.0",
      "2.0",
      "49.0",
      "9.0",
      "4.33012701892219",
      "-0.0533333333333333",
      "2.0",
      "0.533333333333333",
      "1.0"
    ],
    "annotated_answers": [
      "7.5"
    ],
    "solution": "from sympy import symbols, sqrt, solve\nx = symbols('x')\ny = symbols('y')\nc1 = (x-9)**2 + (y-5)**2 - 6.25\nc2 = (x+6)**2 + (y+3)**2 - 49\nd = solve(c1, c2, x, y)[0]\nprint(d)"
  },
  {
    "example_id": 254,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = (1/(x-1)) + (2*x)/(x-1) - 5\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 255,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "2.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x1, y1 = symbols('x1, y1')\nx2, y2 = symbols('x2, y2')\n\n# calculate the coordinates of the midpoint\nx_mid, y_mid = (x1 + x2)/2, (y1 + y2)/2\n\n# calculate the sum of the coordinates of the midpoint\nsum_mid = x_mid + y_mid\n\nprint(sum_mid)"
  },
  {
    "example_id": 256,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "t = symbols('t')\neq1 = (t + 2) * (t + 1)\neq2 = (t + 2) * (t + 3)\nsub = eq1 - eq2\nprint(sub)"
  },
  {
    "example_id": 257,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "4.0",
      "5.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "# Create variables\nx, y = symbols('x y')\n\n# Create equations\neq1 = 2*x - y - 3\neq2 = x + y - 1\n\n# Solve equations\nsol1 = solve(eq1, x)\nsol2 = solve(eq2, y)\n\n# Compute 8x - 7y\nresult = 8*sol1[0] - 7*sol2[0]\nprint(result)"
  },
  {
    "example_id": 258,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\nz = symbols('z')\n\nresult = floor(8.8) + floor(-8.8)\nprint(result)"
  },
  {
    "example_id": 259,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "x = symbols('x')\ny = (1/sqrt(2))*(x**2 - 3)\ndistance = sqrt((x-0)**2 + y**2)\na = (distance**2)/(y**2)\nb = distance/sqrt(y**2)\nsolution = solve(a+b, a+b)\na_plus_b = solution[0]\nprint(a_plus_b)"
  },
  {
    "example_id": 260,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\ny = (x-2)/(x**2-7*x+10)\nsolution = solve(y, x)\nprint(solution)"
  },
  {
    "example_id": 261,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "# x = symbols('x')\nx = symbols('x', integer=True)\n\n# eq = x**6 - 2*x**5 + 2*x**3 - 2*x + 1 - 292\neq = x**6 - 2*x**5 + 2*x**3 - 2*x + 1 - 292\n\n# solution = solve(eq, x)\nsolution = solve(eq, x)\n\n# x_value = solution[0]\nx_value = solution[0]\n\n# print(x_value)\nprint(x_value)"
  },
  {
    "example_id": 262,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "import math\n\ndef num_roots(m, n):\n    if m >= 20:\n        return 0\n    return 2\n\ndef count_values_of_n(m):\n    count = 0\n    for n in range(1, m):\n        if num_roots(m, n) == 2:\n            count += 1\n    return count\n\nprint(count_values_of_n(20))"
  },
  {
    "example_id": 263,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "15.222222222222221"
    ],
    "annotated_answers": [
      "27.0"
    ],
    "solution": "# Number of games won this season\nn_won = 2/9\n# Number of games lost\nn_lost = 15\n# Number of games played\nn_games = n_won + n_lost\nprint(n_games)"
  },
  {
    "example_id": 264,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "2.0",
      "18.0",
      "2.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "x, y = symbols('x, y')\nf = x**2 + 2*x - 6\ndistance = sqrt( (y - f.subs(x, 4))**2 + (x - 4)**2 )\nprint(distance)"
  },
  {
    "example_id": 265,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "402.0"
    ],
    "annotated_answers": [
      "402.0"
    ],
    "solution": "# 100th term of an arithmetic sequence\n# nth term = a + (n-1)d\n\n# Given sequence is 6, 10, 14, 18,...\n# a = 6\n# d = 4\n\n# nth term = a + (n-1)d\nnth_term = 6 + (100 - 1) * 4\nprint(nth_term)"
  },
  {
    "example_id": 266,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-12.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "a = 7\nb = -12\nprint(b)"
  },
  {
    "example_id": 267,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "denali_dogs = 16\nnate_dogs = 12\nx = symbols('x')\neq = (denali_dogs + 4*x)/denali_dogs - (nate_dogs - x)/nate_dogs\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 268,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "2.0",
      "5.0",
      "2.0"
    ],
    "annotated_answers": [
      "22.0"
    ],
    "solution": "from sympy import sqrt, simplify\n\na = (sqrt(5) + sqrt(2)) / (sqrt(5) - sqrt(2))\na = simplify(a)\nprint(a)"
  },
  {
    "example_id": 269,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "8.0",
      "12.0"
    ],
    "annotated_answers": [
      "28.0"
    ],
    "solution": "from sympy import symbols, Max\nx = symbols('x')\nf = -x**2 - 8*x + 12\nprint(Max(f, x))"
  },
  {
    "example_id": 270,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "5.0",
      "29.0"
    ],
    "annotated_answers": [
      "26.0"
    ],
    "solution": "t = symbols('t')\nh = 2*t**2 - 5*t + 29\nm = Min(h)\nprint(m)"
  },
  {
    "example_id": 271,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "24.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "first_practice = 48 / 2\nprint(first_practice)"
  },
  {
    "example_id": 272,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x, y = symbols('x y')\na = 4\neq = 3*x + 2*y - 12\nsolution = solve(eq, x)\nb_value = solution[0]\nprint(b_value)"
  },
  {
    "example_id": 273,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-70.0"
    ],
    "annotated_answers": [
      "150.0"
    ],
    "solution": "# Define variables\nx = symbols('x')\na = 30\nd = 3*a\ntotal = 600\n\n# Solve equation\neq = (x + d)*a - total\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 274,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x1 = 7\ny1 = -1\nx2 = -1\ny2 = 7\n\nm = (y2-y1)/(x2-x1)\nb = y1 - m*x1\n\nprint(m + b)"
  },
  {
    "example_id": 275,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "22.0"
    ],
    "annotated_answers": [
      "42.0"
    ],
    "solution": "dad_age = 53 - 31\nprint(dad_age)"
  },
  {
    "example_id": 276,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "9.0"
    ],
    "annotated_answers": [
      "-8.0"
    ],
    "solution": "x, y = symbols('x y')\n\neq1 = x + y - 7\neq2 = x - y - 9\n\nsol1 = solve(eq1, x)\nsol2 = solve(eq2, y)\n\nx_value = sol1[0]\ny_value = sol2[0]\n\nproduct = x_value * y_value\n\nprint(product)"
  },
  {
    "example_id": 277,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0",
      "3.0",
      "1.0",
      "15.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "# define the function\ndef sqrt_x_sqrt_x_sqrt_x_sqrt_x(x):\n    return sqrt(x*sqrt(x*sqrt(x*sqrt(x))))\n\n# define x\nx = symbols('x')\n\n# define the equation\neq = sqrt_x_sqrt_x_sqrt_x_sqrt_x(x) - 3\n\n# solve for x\nsolution = solve(eq, x)\n\n# print the solution\nprint(solution)"
  },
  {
    "example_id": 278,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "-1.0",
      "0.0",
      "-1.0",
      "0.0",
      "-1.0",
      "0.0",
      "-1.0",
      "0.0",
      "-1.0",
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "# Find the distinct values in the range of f(x)\ndistinct_values = []\nfor x in range(10):\n    fx = floor((-5/8)**x)\n    distinct_values.append(fx)\nprint(distinct_values)\n\n# Count the number of distinct values in the range of f(x)\ndistinct_values = set(distinct_values)\nprint(len(distinct_values))"
  },
  {
    "example_id": 279,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "3.0"
    ],
    "annotated_answers": [
      "-120.0"
    ],
    "solution": "x, y = symbols('x y')\nA, B, C = symbols('A B C')\neq = x**2 + y**2 + A*x + B*y + C\neq_1 = eq.subs([(-1, 6)])\neq_2 = eq_1.subs([(2, 3)])\nsolution = solve(eq_2, [A, B, C])\nprint(solution)"
  },
  {
    "example_id": 280,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\nexpr = sqrt(3*x - 5)\nsolution = solve(expr - 2, x)\nprint(solution)"
  },
  {
    "example_id": 281,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "a, b, c, d = symbols('a, b, c, d')\nf = a**b + c**d\neq = f.subs([(a, 4), (c, 2), (d, 3)]) - 12\nb_solutions = solve(eq, b)\nb_value = b_solutions[0]\nprint(b_value)"
  },
  {
    "example_id": 282,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "5.0",
      "2.0",
      "101.0",
      "2.0",
      "101.0",
      "2.0",
      "3.0",
      "5.0",
      "2.0",
      "101.0",
      "10.0",
      "10.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\nz = symbols('z')\nn = symbols('n')\n\nx_value = (sqrt(45) + sqrt(101))/2\ny_value = (sqrt(45) - sqrt(101))/2\n\nprint('x_value: ', x_value)\nprint('y_value: ', y_value)\nprint('x_value - y_value: ', x_value - y_value)\nprint('int(x_value - y_value): ', int(x_value - y_value))\n\n# find the integer between x_value and y_value\nprint('The integer between x_value and y_value is: ', floor(x_value - y_value))"
  },
  {
    "example_id": 283,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "123.0"
    ],
    "annotated_answers": [
      "123.0"
    ],
    "solution": "print(123123//1001)"
  },
  {
    "example_id": 284,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0"
    ],
    "annotated_answers": [
      "-10.0"
    ],
    "solution": "# calculate least possible result\nresult = 4 * (5 - 6)\nprint(result)"
  },
  {
    "example_id": 285,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-5.0",
      "2.0"
    ],
    "annotated_answers": [
      "2500.0"
    ],
    "solution": "x = symbols('x')\neq = 3*x**2 - 2*(x**2 + 4) - 42\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 286,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "f = lambda x: x**3 + 2*x + 1\ng = lambda x: x - 1\nprint(f(g(1)))"
  },
  {
    "example_id": 287,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2400.0"
    ],
    "annotated_answers": [
      "4800.0"
    ],
    "solution": "bacteria = symbols('bacteria')\nnoon = 600\nfour_hours = 4\nmidnight = 24 - 12\neq = (bacteria/four_hours) + noon\nsolution = solve(eq, bacteria)\nbacteria_midnight = solution[0]\nprint(bacteria_midnight)"
  },
  {
    "example_id": 288,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "-102.0"
    ],
    "solution": "from sympy import symbols, Eq, solve\nx, alpha = symbols('x alpha')\nf = (x**2 + 5*x + alpha) / (x**2 + 7*x - 44)\neq = Eq(f, 0)\nsolution = solve(eq, alpha)\nprint(sum(solution))"
  },
  {
    "example_id": 289,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "166.0",
      "15.0",
      "2.0",
      "5.0",
      "7.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq = 10*x*y + 14*x + 15*y - 166\nsolution = solve(eq, x, y)\nx_value = solution[0][0]\ny_value = solution[0][1]\nprint(x_value + y_value)"
  },
  {
    "example_id": 290,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x = symbols('x')\ny = x*sqrt(x**3)\ny_exp = y.as_base_exp()[1]\nprint(y_exp)"
  },
  {
    "example_id": 291,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0",
      "1.0",
      "1.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0",
      "3.0",
      "3.0",
      "1.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "# circle 1\nx1 = symbols('x1')\ny1 = symbols('y1')\neq1 = ((x1-4)**2 + (y1-0)**2 - 1)\n\n# circle 2\nx2 = symbols('x2')\ny2 = symbols('y2')\neq2 = ((x2+4)**2 + (y2-0)**2 - 1)\n\n# circle 3\nx3 = symbols('x3')\ny3 = symbols('y3')\neq3 = ((x3-0)**2 + (y3-5)**2 - 1)\n\n# tangent circles\neq4 = eq1*eq2*eq3\nsolution = solve(eq4, [x1, y1, x2, y2, x3, y3])\nprint(solution)"
  },
  {
    "example_id": 292,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-24.0",
      "8.0",
      "2.0",
      "16.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "# create symbols\nt = symbols('t')\na = symbols('a')\nb = symbols('b')\n\n# define the two functions\nf1 = 3*t**2 + 5*t + a\nf2 = 4*t**2 + b*t - 2\n\n# multiply the two functions\nproduct = f1*f2\n\n# simplify the product\nproduct = simplify(product)\n\n# evaluate the product\nproduct = product.subs(t, 1)\n\n# solve for a\na = (-12*product + 26*t**3 - 8*t**2 - 16*t + 6)/(t**4)\na = a.subs(t, 1)\n\n# solve for b\nb = (-12*product + 26*t**3 - 8*t**2 - 16*t + 6)/(t**4)\nb = b.subs(t, 1)\n\n# print the solution\nprint(a+b)"
  },
  {
    "example_id": 293,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "23.0"
    ],
    "solution": "from sympy import sqrt, gcd\n\na = 1\nb = 1\nc = 2\n\nans = (a*sqrt(2) + b*sqrt(3))/c\nprint(ans)"
  },
  {
    "example_id": 294,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "12296.0",
      "2.0",
      "2.0",
      "12296.0",
      "8.0"
    ],
    "annotated_answers": [
      "32736.0"
    ],
    "solution": "# Define the variables\na, b, c = symbols('a b c')\n\n# Define the equation\neq = (a**2 + b**2 + c**2) - 12296\n\n# Find the product of the three numbers\nproduct = a*b*c\n\n# Find the solution\nsolution = solve(eq, [a, b, c])\n\n# Print the solution\nprint(solution)\n\n# Print the product of the three numbers\nprint(product/8)"
  },
  {
    "example_id": 295,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "for i in range(10, 100):\n    if i % 10 == 5 and i // 10 == 2:\n        print(i)\n        break"
  },
  {
    "example_id": 296,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-4.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "g = lambda x: 3*x - 4\nprint(g(0))"
  },
  {
    "example_id": 297,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.5"
    ],
    "annotated_answers": [
      "81.0"
    ],
    "solution": "n = 27\nk = int(math.log(n, 3))\nm = n / 3 ** k\nx = (k * (k + 1)) / 2\ny = (m * (m + 1)) / 2\nz = (m * k) / 2\nprint(z)"
  },
  {
    "example_id": 298,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25.0",
      "2.0",
      "25.0",
      "2.0"
    ],
    "annotated_answers": [
      "81.0"
    ],
    "solution": "# Define the circle\n(x,y) = symbols('x,y')\n\n# Define the radius\nr = 5\n\n# Define the center\nc = (0,0)\n\n# Define the equation of the circle\neq = (x-c[0])**2 + (y-c[1])**2 - r**2\n\n# Find the solution\nsol = solve(eq)\n\n# Print the solution\nprint(sol)"
  },
  {
    "example_id": 299,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.3333333333333333"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "def f(x):\n    return 2*x - 15\n\ndef g(x):\n    return f(x)**-1\n\nprint(g(9))"
  },
  {
    "example_id": 300,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "2.0"
    ],
    "annotated_answers": [
      "81.0"
    ],
    "solution": "x = symbols('x')\nx_plus_5 = x + 5\nx_squared = x**2\n\n# Calculate #(x+5)\nx_plus_5_squared = x_plus_5**2\n\n# Calculate #(x+5)\nanswer = x_plus_5_squared\n\nprint(answer)"
  },
  {
    "example_id": 301,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "x = 1\nwhile True:\n    if math.sqrt(3*x+6) == x+2:\n        print(x)\n    else:\n        break\n    x += 1"
  },
  {
    "example_id": 302,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "print(4 * (3 ** 2) / (9 * (2 ** 2)))"
  },
  {
    "example_id": 303,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "-4.0",
      "1.0",
      "4.0",
      "7.0",
      "-13.0",
      "6.0",
      "263.0",
      "6.0",
      "-13.0",
      "6.0",
      "263.0",
      "6.0",
      "-1.0",
      "-2.0",
      "2.0",
      "-2.0",
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\np = x**2 + 3*x - 1\nq = x**2 + 4*x + 7\n\n# 1. Find the value of x when p(x) = 3\n# using the fact that p(2) = 3\nsol1 = solve(p - 3, x)\n\n# 2. Find the value of x when p(x) = 4x + 7\n# using the fact that p(q(x)) = 4x + 7 for all x\nsol2 = solve(p - (4*q + 7), x)\n\n# 3. Find the value of q(-1)\n# using the fact that q(-1) = -1 and q(2) = 3\nsol3 = solve(q - (-1), x)\n\n# Print the answers\nprint(\"The value of x when p(x) = 3 is:\", sol1)\nprint(\"The value of x when p(x) = 4x + 7 is:\", sol2)\nprint(\"The value of q(-1) is:\", sol3)"
  },
  {
    "example_id": 304,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "40.0",
      "35.0",
      "30.0",
      "25.0",
      "20.0",
      "15.0",
      "10.0",
      "5.0",
      "0.0"
    ],
    "annotated_answers": [
      "225.0"
    ],
    "solution": "distance = 45\nwhile distance > 0:\n    distance -= 5\n    print(distance)"
  },
  {
    "example_id": 305,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "customers = 15 / (1500 / 2500)\nprint(customers)"
  },
  {
    "example_id": 306,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2450.0"
    ],
    "annotated_answers": [
      "2450.0"
    ],
    "solution": "# Define variables\nbase_salary = 1200\ncommission_rate = 0.05\nsales_amount = 25000\n\n# Calculate total earnings\ntotal_earnings = base_salary + (sales_amount * commission_rate)\n\nprint(total_earnings)"
  },
  {
    "example_id": 307,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "13.0",
      "3.0",
      "5.0",
      "5.0",
      "13.0",
      "15.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\nz = symbols('z')\neq1 = 3*x - 8*y\neq2 = 5*y - 15*z\neq12 = eq1 - eq2\nsolution = solve(eq12, x)\nx_value = solution[0]\nsolution = solve(eq12, z)\nz_value = solution[0]\nprint(x_value/z_value)"
  },
  {
    "example_id": 308,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "64.0",
      "8.0",
      "64.0",
      "4.0",
      "64.0",
      "64.0",
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq1 = x**2 - 64\neq2 = x**3 - 64\nsol1 = solve(eq1, x)\nsol2 = solve(eq2, x)\nsol3 = solve(eq2, y)\n\n# print(sol1[0])\n# print(sol2[0])\n# print(sol3[0])\n\nsqrt64 = 8\ncube_root64 = 4\n\nprint(\"The positive square root of 64 is\", sqrt64)\nprint(\"The cube root of 64 is\", cube_root64)\n\ndiff = sqrt64 - cube_root64\nprint(\"The difference between the positive square root of 64 and the cube root of 64 is\", diff)"
  },
  {
    "example_id": 309,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0",
      "100.0"
    ],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "# define variables\na = symbols('a')\nb = symbols('b')\nc = symbols('c')\n\n# define equation\neq = a*100000 + b*10000 + c*1000 + 123422 - 123422\n\n# solve equation\nsolution = solve(eq, a, b, c)\n\n# print solution\nprint(solution)"
  },
  {
    "example_id": 310,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.4"
    ],
    "annotated_answers": [
      "1.8"
    ],
    "solution": "x = 4.8 - (1+1+4.8)/2\nprint(x)"
  },
  {
    "example_id": 311,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "6.0"
    ],
    "annotated_answers": [
      "144.0"
    ],
    "solution": "x = symbols('x')\neq = 192*x**2 - 16\nx_value = solve(eq, x)[0]\nprint(x_value)"
  },
  {
    "example_id": 312,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a = -2\nb = 4\nc = 1\n\nprint(a+b+c)"
  },
  {
    "example_id": 313,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "2003.0"
    ],
    "solution": "def sum_even_numbers(n):\n    return sum(i for i in range(1, n + 1, 2))\n\ndef sum_odd_numbers(n):\n    return sum(i for i in range(1, n + 1, 2))\n\neven_sum = sum_even_numbers(2003)\nodd_sum = sum_odd_numbers(2003)\n\nprint(even_sum - odd_sum)"
  },
  {
    "example_id": 314,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "# Find the greater number\nx = symbols('x')\ny = symbols('y')\nexpr = (x*x + x + 1)*(y*y + y + 1)\nsol = solve(expr, x, y)\nprint(sol[0])"
  },
  {
    "example_id": 315,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "13225.0"
    ],
    "annotated_answers": [
      "13225.0"
    ],
    "solution": "print(115**2)"
  },
  {
    "example_id": 316,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "23.0",
      "2.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "# Define a and b as symbols\na, b = symbols('a, b')\n\n# Define the equation\neq = 2*a - 3*b - 23\n\n# Find the value of a\nsolution = solve(eq, a)\n\n# Print the value of a\nprint(solution[0])"
  },
  {
    "example_id": 317,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "26000.0"
    ],
    "annotated_answers": [
      "26000.0"
    ],
    "solution": "print(513**2 - 487**2)"
  },
  {
    "example_id": 318,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "-3.0",
      "2.0",
      "10.0",
      "1.0",
      "2.0",
      "5.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "a, b, c = symbols('a b c')\n\neq1 = a**2 + b**2 + c**2 - 13\neq2 = a*b + b*c + c*a - 6\n\nsolution = solve((eq1, eq2), (a, b, c))\n\nprint(solution)"
  },
  {
    "example_id": 319,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "27.0"
    ],
    "annotated_answers": [
      "108.0"
    ],
    "solution": "distance = 64\nrevolutions = 27\n\n# distance = 16\nrevolutions_16_feet = distance * revolutions / distance\nprint(revolutions_16_feet)"
  },
  {
    "example_id": 320,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "125.0",
      "5.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "from sympy import log, sqrt\nlog125 = log(125, sqrt(5))\nprint(log125)"
  },
  {
    "example_id": 321,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "15.0",
      "7.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "x = symbols('x')\na = 15 - 2*x\nb = 3 - 5*x\na_b = a + b\neq = a_b - 3\nsol = solve(eq, x)\nx_value = sol[0]\nprint(x_value)"
  },
  {
    "example_id": 322,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "Alice_speed = 100 / 5\nBeatrice_speed = 100 / 25\n\ntime_to_run_50m = 50 / Alice_speed\ntime_to_run_50m = simplify(time_to_run_50m)\n\ntime_to_run_50m = time_to_run_50m - time_to_run_50m * Beatrice_speed / Alice_speed\ntime_to_run_50m = simplify(time_to_run_50m)\n\nprint(time_to_run_50m)"
  },
  {
    "example_id": 323,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "72.0"
    ],
    "annotated_answers": [
      "45.0"
    ],
    "solution": "x = (3**4) - (3**2)\nprint(x)"
  },
  {
    "example_id": 324,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "import math\n\ndef distance(p1, p2):\n    return math.sqrt((p1[0] - p2[0]) ** 2 + (p1[1] - p2[1]) ** 2)\n\nd_robert_lucy = distance((4, 3), (6, 1))\nd_robert_liz = distance((4, 3), (1, 7))\nprint(max(d_robert_lucy, d_robert_liz))"
  },
  {
    "example_id": 325,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0",
      "0.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\nf = x**2 + x + 1\ng = x**3 + x**2 - x - 1\n\nf_degree = floor(log(f.as_poly().degree(), 2))\ng_degree = floor(log(g.as_poly().degree(), 2))\n\nprint(f_degree)\nprint(g_degree)\n\ndegree = f_degree - g_degree\nprint(degree)"
  },
  {
    "example_id": 326,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.805608"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "# Define the percent function\ndef percent(x, p):\n    return x * (1 + p/100)\n\n# Define the 20%\np20 = 0.20\n\n# Define the 50%\np50 = 0.50\n\n# Define the 80%\np80 = 0.80\n\n# Compute 20% of 50% of 80%\nresult = percent(percent(p80, p50), p20)\nprint(result)"
  },
  {
    "example_id": 327,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "# Define variables\nA = 6\nB = 6\nC = 6\n\n# Define variables\nx = symbols('x')\n\n# Define equations\neq1 = (A + B + C)/3 - x\neq2 = (C - x)\n\n# Solve for x\nsolution = solve(eq1, x)\nx_value = solution[0]\n\n# Define new variables\nA_old = x_value\nB_old = 4*x_value\nC_old = A_old\n\n# Define new equations\neq3 = (A_old + B_old + C_old)/3 - C_old\neq4 = (B_old - C_old)\n\n# Solve for C_old\nsolution2 = solve(eq3, C_old)\nC_old_value = solution2[0]\n\n# Define new variables\nA_old = C_old_value\nB_old = 4*C_old_value\nC_old = A_old\n\n# Define new equations\neq5 = (A_old + B_old + C_old)/3 - C_old\neq6 = (B_old - C_old)\n\n# Solve for C_old\nsolution3 = solve(eq5, C_old)\nC_old_value = solution3[0]\n\n# Define new variables\nA_old = C_old_value\nB_old = 4*C_old_value\nC_old = A_old\n\n# Define new equations\neq7 = (A_old + B_old + C_old)/3 - C_old\neq8 = (B_old - C_old)\n\n# Solve for C_old\nsolution4 = solve(eq7, C_old)\nC_old_value = solution4[0]\n\n# Print the result\nprint(C_old_value)"
  },
  {
    "example_id": 328,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "a,b,c,d,e = symbols('a b c d e')\nL = [3, 5, 6, 7, 9]\nA = [(0, 10), (5.9, -8.1), (-9.5, 3.1), (9.5, 3.1), (-5.9, -8.1)]\nline_sums = [a+b, c+d, e+a]\n\ndef is_arithmetic_sequence(line_sums):\n    if len(line_sums) < 2:\n        return False\n    diff = line_sums[1] - line_sums[0]\n    return all(diff == line_sums[i+1] - line_sums[i] for i in range(1, len(line_sums)))\n\ndef middle_term(line_sums):\n    if not is_arithmetic_sequence(line_sums):\n        return None\n    return simplify(line_sums[1])\n\nresult = middle_term(line_sums)\nprint(result)"
  },
  {
    "example_id": 329,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0",
      "5.0",
      "3.0"
    ],
    "annotated_answers": [
      "-120.0"
    ],
    "solution": "a, b, c = symbols('a b c')\neq1 = a + b - 8\neq2 = b + c - (-3)\neq3 = a + c - (-5)\n\neq1_solution = solve(eq1, a)\neq2_solution = solve(eq2, b)\neq3_solution = solve(eq3, c)\n\na_value = eq1_solution[0]\nb_value = eq2_solution[0]\nc_value = eq3_solution[0]\n\nprint(a_value * b_value * c_value)"
  },
  {
    "example_id": 330,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-8.0",
      "2.0",
      "32.0",
      "2.0",
      "2.0",
      "8.0",
      "15.0",
      "2.0",
      "59.0"
    ],
    "annotated_answers": [
      "-56.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nx = symbols('x')\ny = symbols('y')\nz = symbols('z')\n\nx = (2*x**2) - 8*x + 15\ndisc = x**2 - 4*x + 1\nprint(disc)"
  },
  {
    "example_id": 331,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-464.0",
      "73.0",
      "12.0",
      "46.0",
      "73.0",
      "-174.0",
      "73.0",
      "32.0",
      "46.0",
      "73.0",
      "-464.0",
      "73.0",
      "12.0",
      "46.0",
      "73.0",
      "-174.0",
      "73.0",
      "32.0",
      "46.0",
      "73.0"
    ],
    "annotated_answers": [
      "52.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\nd_x_axis = 6\nd_point = 15\nd_origin = sqrt(x**2 + y**2)\neq_x_axis = x**2 + y**2 - d_x_axis**2\neq_point = (x - 8)**2 + (y - 3)**2 - d_point**2\neq_origin = d_origin**2 - (x**2 + y**2)\nsolution = solve([eq_x_axis, eq_point, eq_origin], [x, y])\nprint(solution)"
  },
  {
    "example_id": 332,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "3.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "x = symbols('x')\nsolutions = solve((x + 3)**2 - 6*x - 36, x)\npositive_difference = abs(solutions[0] - solutions[1])\nprint(positive_difference)"
  },
  {
    "example_id": 333,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "6.0",
      "2.0",
      "17.0",
      "5.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "a, b = symbols('a, b')\neq = (6*a**2 + 17*a + 5)*(b*a + 5)\nresult = simplify(eq)\nA = result.args[0]\nB = result.args[1]\nAB = A*B\nprint(AB)"
  },
  {
    "example_id": 334,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "# create a function\ndef f(x):\n    return 3*sqrt(2*x - 7) - 8\n\n# compute f(8)\nx = 8\ny = f(x)\nprint(y)"
  },
  {
    "example_id": 335,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-3.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "x = symbols('x')\neq = (9-4*x)/(x+6) - 7\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 336,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "# Assign variables\nn_red = symbols('n_red')\nn_yellow = symbols('n_yellow')\nn_orange = symbols('n_orange')\nn_white = symbols('n_white')\n\n# Define equation\neq = (n_red/2) - n_yellow + (n_orange/3) + (3*n_white/3) - n_red\n\n# Solve for n_red\nsolution = solve(eq, n_red)\nn_red_value = solution[0]\n\n# Print result\nprint(n_red_value)"
  },
  {
    "example_id": 337,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "2.0",
      "6.0",
      "2.0",
      "6.0",
      "2.0",
      "6.0",
      "2.0"
    ],
    "annotated_answers": [
      "364.0"
    ],
    "solution": "# Define variables\na, b = symbols('a, b')\n\n# Define the equation\neq = a + b - 12\n\n# Define the constraint\nconstraint = a*b - 40\n\n# Solve for a and b\nsolution = solve([eq, constraint], [a, b])\n\n# Print the solution\nprint(solution)"
  },
  {
    "example_id": 338,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "65.0"
    ],
    "annotated_answers": [
      "65.0"
    ],
    "solution": "V = (30*6.5)/3\nprint(V)"
  },
  {
    "example_id": 339,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3969.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "x = symbols('x')\neq = (63 - (x**(1/2)))**2\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 340,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "4.0",
      "3.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "# initialize variables\nx = symbols('x')\nh = symbols('h')\n\n# solve for x\neq = x - (1/(2 - (1/(2 - (1/(2 - (1/h)))))))\nsolution = solve(eq, x)\n\n# solve for h\neq = x - (1/(2 - (1/(2 - (1/(2 - (1/h)))))))\nsolution = solve(eq, h)\n\n# print solution\nprint(solution)"
  },
  {
    "example_id": 341,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "65.0",
      "2.0",
      "105.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq1 = (x + y)**2 - 105\neq2 = x**2 + y**2 - 65\nsol1 = solve(eq1, x)\nsol2 = solve(eq2, y)\nsolution = sol1[0] * sol2[0]\nprint(solution)"
  },
  {
    "example_id": 342,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-2.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "x = symbols('x')\nf = 3*x**4 + 5*x**2 - 9*x - 2\ng = f.subs(x, x-1)\nsum_of_coefficients = 0\nfor i in range(0, 5):\n    sum_of_coefficients += g.coeff(x, i)\nprint(sum_of_coefficients)"
  },
  {
    "example_id": 343,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4714.0"
    ],
    "annotated_answers": [
      "93.0"
    ],
    "solution": "n = 98\na = symbols('a')\nd = 1\ns = (n*(n+1))/2\neq = s + a*d - 137\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 344,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "99.0",
      "2.0"
    ],
    "annotated_answers": [
      "549.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\neq = (a**2) + (b**2) - 99\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 345,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "f = lambda x: x + 2\ng = lambda x: 1/f(x)\nprint(g(f(-3)))"
  },
  {
    "example_id": 346,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "28.0",
      "2.0",
      "45.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "s = symbols('s')\ncs = 4*s\np = 28\nq = 45\neq = (cs + p)**2 + q\nprint(eq)"
  },
  {
    "example_id": 347,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.5",
      "2.0",
      "36.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "x, y = symbols('x y')\nratio = 1/2\neq = (x/y) - ratio\nsolution = solve(eq, x)\nx_value = solution[0]\ny_value = 4*x_value - 36\nprint(x_value)\nprint(y_value)"
  },
  {
    "example_id": 348,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0",
      "81.0",
      "2.0",
      "20.0",
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "f = lambda x: 2*x/(x**2-5*x-14)\na, b, c = symbols('a b c')\neq_a = f(a) - c\neq_b = f(b) - c\neq_c = f(c) - c\nsol_a = solve(eq_a, a)\nsol_b = solve(eq_b, b)\nsol_c = solve(eq_c, c)\na_value = sol_a[0]\nb_value = sol_b[0]\nc_value = sol_c[0]\nprint(a_value + b_value + c_value)"
  },
  {
    "example_id": 349,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "13.0",
      "2.0",
      "73.0",
      "2.0",
      "73.0",
      "2.0",
      "13.0",
      "2.0",
      "73.0",
      "2.0",
      "13.0",
      "2.0",
      "13.0",
      "2.0",
      "73.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "# declare the variables\nx, y = symbols('x y')\n\n# calculate the distance from the origin\ndistance = sqrt((x - 0)**2 + (y - 0)**2)\n\n# find the solution\nsolution = solve((x + y - 13, x*y - 24), (x, y))\n\n# print the solution\nprint(solution)\n\n# print the distance\nprint(distance)"
  },
  {
    "example_id": 350,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "-1.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\ny = (x-2)**2 - 9\neq = y/3\nsolution = solve(eq, x)\nx_value = solution[0]\ny_value = eq.subs(x, x_value)\nprint(y_value)\nprint(x_value)"
  },
  {
    "example_id": 351,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "0.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 + x\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 352,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "14.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "# Initialize variables\nx = 35\ny = 2/5\n\n# Calculate\nz = x * y\n\n# Print\nprint(z)"
  },
  {
    "example_id": 353,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "635.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = 0\nwhile 1^x + 2^x + 5^x < 642:\n    x += 1\nprint(x)"
  },
  {
    "example_id": 354,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "-8192.0"
    ],
    "solution": "# first term\na = symbols('a')\n\n# second term\nb = -2\n\n# fifth term\nc = 16\n\n# fourteenth term\nd = 14\n\n# equation\neq = a + (a*b)/(a-1) + (a*b*b)/(a-2) + (a*b*b*b)/(a-3) + (a*b*b*b*b)/(a-4) + (a*b*b*b*b*b)/(a-5) + (a*b*b*b*b*b*b)/(a-6) + (a*b*b*b*b*b*b*b)/(a-7) + (a*b*b*b*b*b*b*b*b)/(a-8) + (a*b*b*b*b*b*b*b*b*b)/(a-9) + (a*b*b*b*b*b*b*b*b*b*b)/(a-10) + (a*b*b*b*b*b*b*b*b*b*b*b)/(a-11) + (a*b*b*b*b*b*b*b*b*b*b*b*b)/(a-12) + (a*b*b*b*b*b*b*b*b*b*b*b*b*b)/(a-13) + (a*b*b*b*b*b*b*b*b*b*b*b*b*b*b)/(a-14)\n\n# solve for a\nsolution = solve(eq, a)\n\n# value of a\na_value = solution[0]\n\n# print the fourteenth term\nprint(a_value**d)"
  },
  {
    "example_id": 355,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = 2**(2*x) - 256**(1/2)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 356,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "2.0",
      "2.0",
      "4.0",
      "149.0",
      "2.0",
      "2.0",
      "4.0",
      "1.0",
      "3.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq = (2*x**2*y**3 + 4*y**3) - 149 - 3*x**2\nsolution = solve(eq, y)\ny_value = solution[0]\nprint(y_value)"
  },
  {
    "example_id": 357,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "total_cost = 12.75\nentry_fee = 2.25\nride_cost = 1.50\nrides = (total_cost - entry_fee) / ride_cost\nprint(rides)"
  },
  {
    "example_id": 358,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "2.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "-9.0"
    ],
    "solution": "x1, y1, x2, y2 = symbols('x1, y1, x2, y2')\nmidpoint_x = (x1 + x2)/2\nmidpoint_y = (y1 + y2)/2\nproduct = midpoint_x * midpoint_y\nprint(product)"
  },
  {
    "example_id": 359,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-6.0"
    ],
    "annotated_answers": [
      "-56.0"
    ],
    "solution": "a = -1\nb = 3\nc = 2\n\n# a+b+c = 19\n# a+3b+c = 9\n# 3a + b + c = -3\n\nprint(a * b * c)"
  },
  {
    "example_id": 360,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "5.0",
      "6.0",
      "0.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "# Assign variables\nx = symbols('x')\ny = symbols('y')\nz = symbols('z')\n\n# Define the equation\neq = (12*x) + (3*y) + (12*z) - 10\n\n# Solve for the variables\nsolution = solve([eq], [x, y, z])\n\n# Print the variables\nprint(solution)\n\n# Print the value of the equation\nprint(eq.subs(solution))"
  },
  {
    "example_id": 361,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "2.0",
      "7.0",
      "3.0"
    ],
    "annotated_answers": [
      "128.0"
    ],
    "solution": "from sympy import sqrt\n\nk = (16 + sqrt(16**2 + 4*24*16)) / 24\nprint(k)"
  },
  {
    "example_id": 362,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "64.0"
    ],
    "annotated_answers": [
      "64.0"
    ],
    "solution": "a = 3\nb = 5\nx = a**2 + 2*a*b + b**2\nprint(x)"
  },
  {
    "example_id": 363,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "4.0",
      "5.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "for x in range(1, 26):\n    if (x**2 + 4*x + 4) > 10 and (x**2 + 4*x + 4) < 50:\n        print(x)"
  },
  {
    "example_id": 364,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "114.0",
      "82.0",
      "114.0"
    ],
    "annotated_answers": [
      "54.0"
    ],
    "solution": "# Define variables\nx = symbols('x')\ny = symbols('y')\nz = symbols('z')\n\n# Define equations\neq1 = (26 + 12*2 + 12*3 + 28) - x\neq2 = (22 + 12*2 + 12*3) - y\neq3 = (26 + 12*2 + 12*3 + 28) - z\n\n# Solve equations\nsol = solve((eq1, eq2, eq3), (x, y, z))\n\n# Print solution\nprint(sol)"
  },
  {
    "example_id": 365,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "n = symbols('n')\neq = n**2 - 5*n - 14\nsolution = solve(eq, n)\nn_value = solution[0]\nprint(n_value)"
  },
  {
    "example_id": 366,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "-2.0"
    ],
    "annotated_answers": [
      "-48.0"
    ],
    "solution": "x = 725\ny = 727\na = 729\nb = 731\n\nx_y = x - y\na_b = a - b\n\nprint(x_y)\nprint(a_b)"
  },
  {
    "example_id": 367,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "# Define variables\ns = symbols('s')\nt = symbols('t')\n\n# Define equation\neq = (s**2 + t**2 - 162**2)\n\n# Find the number of non-congruent right triangles\nsolution = solve(eq, s)\n\n# Print the result\nprint(len(solution))"
  },
  {
    "example_id": 368,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x = symbols('x')\nf = 6*x**2 + x - 2\nf_value = f.subs(x, 0)\nprint(f_value)\nif f_value < 0:\n    print('The function is negative')\n    f_root = sqrt(-f_value)\n    f_root_value = f_root.subs(x, 0)\n    print(f_root_value)\n    f_root_value_2 = f_root.subs(x, -1)\n    print(f_root_value_2)\n    f_root_value_3 = f_root.subs(x, -2)\n    print(f_root_value_3)\n    f_root_value_4 = f_root.subs(x, -3)\n    print(f_root_value_4)\n    f_root_value_5 = f_root.subs(x, -4)\n    print(f_root_value_5)\n    f_root_value_6 = f_root.subs(x, -5)\n    print(f_root_value_6)\n    f_root_value_7 = f_root.subs(x, -6)\n    print(f_root_value_7)\n    f_root_value_8 = f_root.subs(x, -7)\n    print(f_root_value_8)\n    f_root_value_9 = f_root.subs(x, -8)\n    print(f_root_value_9)\n    f_root_value_10 = f_root.subs(x, -9)\n    print(f_root_value_10)\n    f_root_value_11 = f_root.subs(x, -10)\n    print(f_root_value_11)\n    f_root_value_12 = f_root.subs(x, -11)\n    print(f_root_value_12)\n    f_root_value_13 = f_root.subs(x, -12)"
  },
  {
    "example_id": 369,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-5.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\nx = symbols('x')\n\neq = a*x**2 + b*x + c\nsolution = solve(eq.subs({a:1, b:-3, c:-4}), x)\nm = solution[0]\nn = solution[1]\nprint(m-n)"
  },
  {
    "example_id": 370,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "16.0",
      "2.0",
      "36.0",
      "2.0",
      "3.0",
      "2.0",
      "56.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "x = symbols('x')\nm, n = symbols('m n')\nf1 = 16*x**2 + 36*x + 56\nf2 = (m*x + n)**2\n\ndiff = f1 - f2\n\n# print(diff)\n\n# print(diff.subs({m: 2, n: 3}))\n\nprint(diff.subs({m: 2, n: 3}))"
  },
  {
    "example_id": 371,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "f = symbols('f')\ng = symbols('g')\nx = symbols('x')\n\n# domain\nxmin = 0\nxmax = 18\nymin = 0\nymax = 12\n\n# f(x) and g(x)\nf_x = 2*x + 10\ng_x = x**2 + 4*x + 10\n\n# f(x) - g(x)\nf_g = f_x - g_x\n\n# maximum value of f(x) - g(x)\nmax_f_g = Max(f_g.subs(x,xmin), f_g.subs(x,xmax))\n\nprint(max_f_g)"
  },
  {
    "example_id": 372,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "# Horses have 4 legs, clowns have 2 legs.\n# We saw 30 legs and 10 heads.\n# Therefore we saw 10 horses.\nprint(10)"
  },
  {
    "example_id": 373,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0",
      "2.0",
      "11.0",
      "2.0",
      "5.0",
      "2.0",
      "11.0",
      "2.0",
      "3.0",
      "2.0",
      "11.0",
      "2.0",
      "3.0",
      "2.0",
      "11.0",
      "2.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\na, b = solve(x**2 - 5*x + 9, x)\nprint(a)\nprint(b)\nprint((a - 1)*(b - 1))"
  },
  {
    "example_id": 374,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "19.0",
      "8.0",
      "19.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "d = symbols('d')\ne = symbols('e')\neq1 = 2*d - 17*e\neq2 = 2*e - d\neq3 = eq1 - eq2 - 8\nsolution = solve(eq3, e)\ne_value = solution[0]\nprint(e_value)"
  },
  {
    "example_id": 375,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "49.5",
      "74.5033556291259",
      "-3350.25",
      "11063.7483109252"
    ],
    "annotated_answers": [
      "900.0"
    ],
    "solution": "x = symbols('x')\nc = symbols('c')\neq1 = (1/2)*x**2 + 99*x + c\neq2 = x**2 - 99*x + 8001\nsolution = solve([eq1, eq2], [x, c])\nsolution = [solution[0][0], solution[0][1]]\nprint(solution[0])\nprint(solution[1])"
  },
  {
    "example_id": 376,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-5.0",
      "3.0"
    ],
    "annotated_answers": [
      "-5.0"
    ],
    "solution": "b = symbols('b')\neq = b**2 + 2*b - 15\nsolution = solve(eq, b)\nprint(solution)"
  },
  {
    "example_id": 377,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "288.0"
    ],
    "annotated_answers": [
      "288.0"
    ],
    "solution": "x = 2\ny = -3\n\nexpr = (x*y)**5/y**3\nprint(expr)"
  },
  {
    "example_id": 378,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "26.0"
    ],
    "annotated_answers": [
      "26.0"
    ],
    "solution": "n = 0\nwhile True:\n    sum = 0\n    for i in range(-25, n+1):\n        sum += i\n    if sum >= 26:\n        break\n    n += 1\nprint(n)"
  },
  {
    "example_id": 379,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "f = lambda x: (x-1)*(x-3)*(x-7)*(x-9)\nprint(f(6) - f(4))"
  },
  {
    "example_id": 380,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "1.0",
      "10200.0",
      "6.0",
      "2.0",
      "10455.0"
    ],
    "annotated_answers": [
      "10455.0"
    ],
    "solution": "# Set initial values\ncd_1_interest_rate = 0.04\ncd_1_principal = 10000\n\n# Compute values\ncd_1_interest = cd_1_principal * (cd_1_interest_rate/2)\ncd_1_new_principal = cd_1_principal + cd_1_interest\n\ncd_2_interest_rate = 0.05\ncd_2_interest = cd_1_new_principal * (cd_2_interest_rate/2)\ncd_2_new_principal = cd_1_new_principal + cd_2_interest\n\nprint(\"After 6 months in CD 1, Dr. Zaius has $\\${0:.2f}$.\".format(cd_1_new_principal))\nprint(\"After 6 months in CD 2, Dr. Zaius has $\\${0:.2f}$.\".format(cd_2_new_principal))"
  },
  {
    "example_id": 381,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.46410161513775",
      "4.47213595499958",
      "3.87298334620742",
      "7.74596669241483",
      "464.75800154489"
    ],
    "annotated_answers": [
      "60.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\nz = symbols('z')\nw = symbols('w')\n\nx = sqrt(12)\ny = sqrt(20)\nz = sqrt(15)\nw = sqrt(60)\n\nx_value = x.evalf()\ny_value = y.evalf()\nz_value = z.evalf()\nw_value = w.evalf()\n\nprint(x_value)\nprint(y_value)\nprint(z_value)\nprint(w_value)\n\nprint(x_value * y_value * z_value * w_value)"
  },
  {
    "example_id": 382,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "4.0",
      "8.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x, y = symbols('x y')\nf = x**2 + y**2 + 2*x - 4*y + 8\nprint(Min(f, x, y))"
  },
  {
    "example_id": 383,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "109.045548849897"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x = symbols('x')\neq = (120 - (120**(1/2)) - x)**(1/2)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 384,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "1.0",
      "2.0",
      "2.0",
      "23.5"
    ],
    "annotated_answers": [
      "-23.5"
    ],
    "solution": "# Define x and y coordinates of the lines\nx_1, y_1 = symbols('x_1, y_1')\nx_2, y_2 = symbols('x_2, y_2')\n\n# Define equations for the lines\nline_1 = y_1 - (1/3)*x_1 + 7\nline_2 = 2*x_2 + y_2 - 5\n\n# Solve for the x-coordinates of the lines' x-intercepts\nx_intercept_1 = solve(line_1, x_1)\nx_intercept_2 = solve(line_2, x_2)\n\n# Print the sum of the x-coordinates of the two lines' x-intercepts\nprint(x_intercept_1[0] + x_intercept_2[0])"
  },
  {
    "example_id": 385,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "66.0",
      "13.0",
      "23.0",
      "13.0",
      "67.0",
      "13.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq1 = 3*x + y - 17\neq2 = 5*y + z - 14\neq3 = 3*x + 5*z - 41\nsol = solve([eq1, eq2, eq3], [x, y, z])\nprint(sol)"
  },
  {
    "example_id": 386,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.5",
      "1.5"
    ],
    "annotated_answers": [
      "5400.0"
    ],
    "solution": "# define x and y\nx,y = symbols('x,y')\n\n# define the equation\neq = y - 1.5*x\n\n# find the solution\nsolution = solve(eq, y)\n\n# print the solution\nprint(solution)\n\n# find the x value that solves the equation\nx_value = solution[0]\n\n# print the x value\nprint(x_value)\n\n# define the equation for the distance in meters\neq_distance = 30 - 1.5*x_value\n\n# find the distance in meters\ndistance = solve(eq_distance, x_value)\n\n# print the distance in meters\nprint(distance)"
  },
  {
    "example_id": 387,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "2.0",
      "79.0",
      "840.0",
      "3.0",
      "11.0",
      "28.0",
      "5.0",
      "1.0",
      "6.0",
      "7.0",
      "1.0",
      "8.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "from sympy import Rational\nproduct = 4**Rational(1, 3) * 6**Rational(1, 4) * 8**Rational(1, 5) * 10**Rational(1, 6) * 12**Rational(1, 7) * 14**Rational(1, 8)\nprint(product)"
  },
  {
    "example_id": 388,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "73.0"
    ],
    "solution": "A = symbols('A')\nB = symbols('B')\nC = symbols('C')\nD = symbols('D')\nE = symbols('E')\nF = symbols('F')\nG = symbols('G')\nH = symbols('H')\nI = symbols('I')\nJ = symbols('J')\nK = symbols('K')\nL = symbols('L')\nM = symbols('M')\nN = symbols('N')\nO = symbols('O')\nP = symbols('P')\nQ = symbols('Q')\nR = symbols('R')\nS = symbols('S')\nT = symbols('T')\nU = symbols('U')\nV = symbols('V')\nW = symbols('W')\nX = symbols('X')\nY = symbols('Y')\nZ = symbols('Z')\n\neq1 = A*B*C*D*E*F*G*H*I*J*K*L*M*N*O*P*Q*R*S*T*U*V*W*X*Y*Z\neq2 = 2*A + 5*B\neq3 = 9*eq1*eq2\nsolution = solve(eq3, Z)\nprint(solution[0])"
  },
  {
    "example_id": 389,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "from sympy import symbols, solve\n\nx = symbols('x')\nf = x**2 - 2*x - 3\np, q = solve(f, x)\nprint((p + 1)*(q + 1))"
  },
  {
    "example_id": 390,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "A = symbols('A')\nB = symbols('B')\nC = (A+B)/2\nD = (3&5)&8\nprint(D)"
  },
  {
    "example_id": 391,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "7.0"
    ],
    "annotated_answers": [
      "78.0"
    ],
    "solution": "x, y = symbols('x y')\neq = 1/x + 1/y - 1/7\nsolution = solve(eq, [x, y])\nx_coords = [solution[i][0] for i in range(len(solution))]\nprint(sum(x_coords))"
  },
  {
    "example_id": 392,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "2.0"
    ],
    "solution": ""
  },
  {
    "example_id": 393,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "42.0",
      "9.0",
      "2.0",
      "7.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq1 = 2*x - 9*y - 14\neq2 = 6*x - y - 42\nsolution1 = solve(eq1, x)\nsolution2 = solve(eq2, y)\nx_value = solution1[0]\ny_value = solution2[0]\nprint(x_value*y_value)"
  },
  {
    "example_id": 394,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\nc = symbols('c')\neq = (x**2-4*x+3)*(x+5) - (x**2+4*x-5)*(x-c)\n\n# find c such that eq is zero\nsolution = solve(eq, c)\nc_value = solution[0]\n\nprint('c = ', c_value)"
  },
  {
    "example_id": 395,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "from fractions import Fraction\n\nfraction = Fraction(2**10 - 2**8, 2**7 - 2**6)\nprint(fraction)"
  },
  {
    "example_id": 396,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-5.0"
    ],
    "annotated_answers": [
      "-5.0"
    ],
    "solution": "x = symbols('x')\neq = (x+2)/3 - (4/(x+1))\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 397,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "2.5"
    ],
    "solution": "a, b, c = symbols('a b c')\n\n# find the value of a\neq1 = a*((2)**2) + b*(2) + c - (1)\neq2 = a*((2)**2) + b*(2) + c - (4)\n\n# find the value of b\neq3 = a*((1)**2) + b*(1) + c - (1)\neq4 = a*((1)**2) + b*(1) + c - (4)\n\n# find the value of c\neq5 = a*((2)**2) + b*(2) + c - (1)\neq6 = a*((2)**2) + b*(2) + c - (4)\n\n# find the value of n\nn = (floor(((eq1.subs([(a, 1), (b, 1), (c, 1)])) + 2)/2))\n\nprint(n)"
  },
  {
    "example_id": 398,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-9.0",
      "2.0",
      "-6.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "d = symbols('d')\nc = symbols('c')\nd_eq = d - 6*c\nd_eq_2 = 2*d - 9*c\nd_over_c = d_eq_2/d_eq\nprint(d_over_c)"
  },
  {
    "example_id": 399,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3749907341907.0",
      "250000000000000.0"
    ],
    "annotated_answers": [
      "0.015"
    ],
    "solution": "from sympy import symbols, simplify, powsimp, nsimplify, expand_func\n\ns = 0\ns += 3/206\ns += 9/(2*103**2)\ns += 27/(2*103**3)\ns = nsimplify(s)\nprint(s)"
  },
  {
    "example_id": 400,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "560.0",
      "53.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "from sympy import symbols, solve\nx = symbols('x')\neq = -265*x + 2800\nsolution = solve(eq)\nprint(solution)"
  },
  {
    "example_id": 401,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-9.0",
      "6.0",
      "3.0"
    ],
    "annotated_answers": [
      "117.0"
    ],
    "solution": "x = symbols('x')\nsol = solve(x**2 + 18*x - 27, x)\n\nfor i in sol:\n    if i.is_positive:\n        print(i)\n        break"
  },
  {
    "example_id": 402,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "15.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "# Assign variables\nc, v, p, l = symbols('c v p l')\n\n# Define equation\neq = 15 - c - v - p - l\n\n# Define constraints\nconstraints = [\n    p + l == 2 * (c + v),\n    p - l == 8,\n]\n\n# Solve equation\nsolution = solve(eq, [c, v, p, l])\n\n# Print solution\nprint(solution)"
  },
  {
    "example_id": 403,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "from sympy import ceiling, sqrt, cbrt\n\nnum = -25\na = ceiling(sqrt(cbrt(num)))\nprint(a)"
  },
  {
    "example_id": 404,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "h = lambda x: sqrt((x+3)/2)\nprint(h(-1))"
  },
  {
    "example_id": 405,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.8660254037844384",
      "2.3979157616563596",
      "16.428203230275507",
      "13.964101615137753",
      "3.7368571842040943",
      "5.75",
      "13.964101615137753",
      "3.7368571842040943"
    ],
    "annotated_answers": [
      "26.0"
    ],
    "solution": "x = (4 + 3**(1/2)) / 2\nprint(x)\nprint((x**2 - 4*x + 9)**(1/2))\nprint(2*x**2)\nprint(2*x**2 - 4*x + 9)\nprint((2*x**2 - 4*x + 9)**(1/2))\nprint(x**2 - 4*x + 9)\nprint(2*x**2 - 4*x + 9)\nprint((2*x**2 - 4*x + 9)**(1/2))"
  },
  {
    "example_id": 406,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "# define f(x)\nf = lambda x: 3*x + 1 if x % 2 == 1 else x / 2\n\n# find smallest integer in domain of f\na = symbols('a')\nb = symbols('b')\n\n# find smallest integer in domain of f\nf_a = f(a)\nf_b = f(b)\n\n# find smallest integer in domain of f\nsmallest_integer_in_domain = Min(f_a, f_b)\n\n# print smallest integer in domain of f\nprint(smallest_integer_in_domain)"
  },
  {
    "example_id": 407,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "17.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "x = symbols('x')\na = (7+8*x)-3*(2+6*x+2*x**2)+9*(1+3*x+4*x**2+12*x**3)-9*(7-x**2-8*x**3+13*x**4)\na_x = a.coeff(x)\nprint(a_x)"
  },
  {
    "example_id": 408,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = 1 + 7\nprint(x)"
  },
  {
    "example_id": 409,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\nf = (2)/(x**2 + x - 6)\nh_count = 0\nfor i in range(-10, 10):\n    if f.subs(x, i).evalf() == 0:\n        h_count += 1\n        print(f\"{i} is a horizontal asymptote.\")\nprint(f\"The function has {h_count} horizontal asymptotes.\")"
  },
  {
    "example_id": 410,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "15.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "expression = (3 - 4)**2 + 2 * (3 + 4)\nprint(expression)"
  },
  {
    "example_id": 411,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "5.0",
      "2.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x1, x2 = symbols('x1, x2')\ny1 = x1**2 - 7*x1 + 7\ny2 = -3\nsol = solve((y1 - y2), (x1, x2))\nprint(sol)"
  },
  {
    "example_id": 412,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "3.0",
      "1.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "3.0",
      "-4.0",
      "7.0"
    ],
    "annotated_answers": [
      "112.0"
    ],
    "solution": "a = 2\nb = 3\nc = 2 - sqrt(3)\nd = 1 + 2*sqrt(3)\n\nA = a/c\nB = b/d\nC = a*d - b*c\n\nprint(f\"{A + B*sqrt(3)}/{C}\")\nprint(A + B + C)"
  },
  {
    "example_id": 413,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "570.0"
    ],
    "annotated_answers": [
      "630.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\nd = symbols('d')\n\neq1 = 5*a + 5*b + 5*c + 5*d\neq2 = 2*a + 2*b + 2*c + 2*d\n\nsolution = solve((eq1 - eq2).expand(), [a, b, c, d])\n\nsum_1 = 0\nsum_2 = 0\n\nfor i in range(20):\n    sum_1 += 5*i\n    sum_2 += 2*i\n\nprint(sum_1 - sum_2)"
  },
  {
    "example_id": 414,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "60.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "60.0",
      "2.0"
    ],
    "annotated_answers": [
      "16384.0"
    ],
    "solution": "k = symbols('k')\na = symbols('a')\nb = symbols('b')\n\nx = symbols('x')\n\neq = x**2 + k*x + 15\n\nfactor = (x+a)*(x+b)\n\neq_factor = eq.subs({x: factor})\n\nsolution = solve(eq_factor, [a, b])\n\na_value = solution[0]\nb_value = solution[1]\n\nprint(a_value)\nprint(b_value)"
  },
  {
    "example_id": 415,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "13.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "import math\n\nx1 = -4\ny1 = 1\nx2 = 1\ny2 = 13\n\ndef distance_between_two_points(x1, y1, x2, y2):\n    return math.sqrt((x2 - x1)**2 + (y2 - y1)**2)\n\nprint(distance_between_two_points(x1, y1, x2, y2))"
  },
  {
    "example_id": 416,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "9.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "for i in range(1, 11):\n    if (i**2) % 10 == 1:\n        print(i)"
  },
  {
    "example_id": 417,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0",
      "4.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x = symbols('x')\neq = (12/(x*x))*(x**4/14*x)*(35/3*x)\nprint(simplify(eq))"
  },
  {
    "example_id": 418,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "1.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "l = Line(Point(2,1), slope = -1/4)\nm = Line(Point(2,1), slope = 1)\n\nintersection = l.intersection(m)\nprint(intersection)"
  },
  {
    "example_id": 419,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "41.0"
    ],
    "solution": "import math\n\ndef f(x):\n    return -x**2 + 3*x - 2\n\ndef g(x):\n    return f(x) + 2*x\n\ndef h(x):\n    return f(x) + 3*x\n\ndef get_a_and_b(f, g, h):\n    a = -1\n    b = 1\n    while True:\n        if g(a) > 0 and g(b) < 0:\n            break\n        a += 1\n        b -= 1\n    return a, b\n\na, b = get_a_and_b(f, g, h)\nprint(a**2 + b**2)"
  },
  {
    "example_id": 420,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\nf = x**4 - y\ng = 5*x**2 - 6\nm = solve(f - g, x)\nn = solve(f - g, x)\nm_value = m[0]\nn_value = n[0]\nprint(m_value - n_value)"
  },
  {
    "example_id": 421,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\nz = symbols('z')\nw = symbols('w')\n\nf1 = (3**4) - (3**3)\nf2 = 3**3 - 3**2\n\nf1_over_f2 = f1/f2\n\n# f1_over_f2 = simplify(f1_over_f2)\n\nprint(f1_over_f2)"
  },
  {
    "example_id": 422,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\nf = (x-5)/(x**2 - 9)\nsolution = solve(f, x)\nprint(solution)"
  },
  {
    "example_id": 423,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "P, Q = symbols('P, Q')\neq = (P*Q)/2\nprint(eq)\nprint(3*eq)"
  },
  {
    "example_id": 424,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "33.0",
      "2.0",
      "3.0",
      "2.0",
      "33.0",
      "2.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "a, b = symbols('a b')\neq1 = a + b - 3\neq2 = (a - b)**2 - 33\nsolution = solve([eq1, eq2], [a, b])\na_value = solution[0][0]\nb_value = solution[0][1]\nprint(a_value)\nprint(b_value)"
  },
  {
    "example_id": 425,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "13.0",
      "21.0",
      "1.0",
      "4.0",
      "2.0",
      "26.0",
      "43.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "# z = symbols('z')\nz = symbols('z')\n# a = symbols('a')\na = symbols('a')\n# b = symbols('b')\nb = symbols('b')\n\n# expression = 2*z**2 + 13*z + 21\nexpression = 2*z**2 + 13*z + 21\n\n# factor = simplify(expression)\nfactor = simplify(expression)\n\n# a, b = factor.as_numer_denom()\na, b = factor.as_numer_denom()\n\n# print(a, b)\nprint(a, b)\n\n# print(2*a + b)\nprint(2*a + b)"
  },
  {
    "example_id": 426,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "a = 2\nb = 1\n\ndef f(x):\n    if x <= 3:\n        return 9 - 2*x\n    else:\n        return a*x + b\n\nx = f(f(3))\nprint(x)"
  },
  {
    "example_id": 427,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\na = symbols('a')\nb = symbols('b')\nc = symbols('c')\nf = x*a*y**2 + b*y + c\nsolution = solve(f, a+b+c)\nprint(solution)"
  },
  {
    "example_id": 428,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0",
      "36.0"
    ],
    "annotated_answers": [
      "32.0"
    ],
    "solution": "slope = (8-0) / (7-9)\ny_intercept = 8 - (slope * 7)\nprint(slope, y_intercept)"
  },
  {
    "example_id": 429,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "14.0",
      "28.0",
      "3.0",
      "2.0",
      "21.0",
      "3.0",
      "2.0",
      "21.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "22.0"
    ],
    "solution": "a = symbols('a')\nb = a + 14\nc = b + 14\nd = (a + b + c)/2\ne = (a + b + c)/2\nf = (a + b + c)/2\ng = (a + b + c)/2\nh = (a + b + c)/2\ni = (a + b + c)/2\nj = (a + b + c)/2\nk = (a + b + c)/2\nl = (a + b + c)/2\nm = (a + b + c)/2\nn = (a + b + c)/2\no = (a + b + c)/2\np = (a + b + c)/2\nq = (a + b + c)/2\nr = (a + b + c)/2\ns = (a + b + c)/2\nt = (a + b + c)/2\nu = (a + b + c)/2\nv = (a + b + c)/2\nw = (a + b + c)/2\nx = (a + b + c)/2\ny = (a + b + c)/2\nz = (a + b + c)/2\nprint(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z)"
  },
  {
    "example_id": 430,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0",
      "11.0",
      "12.0",
      "13.0",
      "14.0",
      "15.0",
      "16.0",
      "17.0",
      "18.0",
      "19.0",
      "20.0"
    ],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "def len_of_number(n):\n    return len(str(n))\n\nnums = range(21)\nresult = list(filter(lambda x: len_of_number(x)!= len_of_number(len_of_number(x)), nums))\nprint(result)"
  },
  {
    "example_id": 431,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "50.0"
    ],
    "annotated_answers": [
      "50.0"
    ],
    "solution": "x = symbols('x')\neq = (sqrt(12*x) + 12)*(sqrt(3*x) - 6) - 4*(x + 3) - (x - 34)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 432,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "6.0",
      "13.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\nexpr = x**2 - 6*x + 13\n\n# Calculate the smallest value\n# of the expression\n# using the 'Min' function\nsmallest = Min(expr)\n\n# print the smallest value\nprint(smallest)"
  },
  {
    "example_id": 433,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "6.0",
      "2.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x, y = symbols('x, y')\neq = -2*x**2 - 12*x - 15\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 434,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "10.0",
      "4.0",
      "10.0",
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "from sympy import symbols, solve\n\nx, y = symbols('x y')\neq = (x**2 - 4*x + y**2 - 6*y - 36)\nsolution = solve(eq)\nprint(solution)"
  },
  {
    "example_id": 435,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "f = lambda x: 2*x-3\ng = lambda x: x+1\nprint(g(f(5)-1))"
  },
  {
    "example_id": 436,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "107.0"
    ],
    "annotated_answers": [
      "107.0"
    ],
    "solution": "def largest_prime_factor(n):\n    i = 2\n    while i * i <= n:\n        if n % i:\n            i += 1\n        else:\n            n //= i\n    return n\n\nprint(largest_prime_factor(9951))"
  },
  {
    "example_id": 437,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "14.0",
      "7.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "x = symbols('x')\na = 3*x**2 + 14*x + 8\nA, B = a.as_numer_denom()\nprint(A - B)"
  },
  {
    "example_id": 438,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "451.3"
    ],
    "annotated_answers": [
      "228.3"
    ],
    "solution": "# Define variables\ndays = 14\nstalk_height_today = 452\ngrowth_per_day = 0.05\n\n# Calculate stalk height 2 weeks ago\nstalk_height_two_weeks_ago = stalk_height_today - (growth_per_day * days)\n\n# Print result\nprint(\"The stalk height 2 weeks ago was:\", round(stalk_height_two_weeks_ago, 1))"
  },
  {
    "example_id": 439,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\nf = (1/(x-64)) + (1/(x**2-64)) + (1/(x**3-64))\nsolution = solve(f, x)\ndomain = []\nfor i in solution:\n    if f.subs(x, i).is_real == True:\n        domain.append(i)\nprint(len(domain))"
  },
  {
    "example_id": 440,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "25.0"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "print(sum(i for i in range(1, 5 * 2 + 1) if i % 2 == 1))"
  },
  {
    "example_id": 441,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.5"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x, y, z = symbols('x y z')\n\ndef f(x, y, z):\n    return (((y-x)**2) / (y-z)*(z-x)) + (((z-y)**2) / (z-x)*(x-y)) + (((x-z)**2) / (x-y)*(y-z))\n\n\ndef solve_f(x, y, z):\n    return Min(f(x, y, z), f(y, z, x), f(z, x, y))\n\n\nprint(solve_f(1, 2, 3))"
  },
  {
    "example_id": 442,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "14.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "A = 9\nB = 3\nC = 2\nprint(A+B+C)"
  },
  {
    "example_id": 443,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-30.0",
      "105.0",
      "10.0",
      "812.0",
      "6.0",
      "21.0",
      "2.0",
      "7.0",
      "7.0",
      "-3.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq = 6*x*y*z + 30*x*y + 21*x*z + 2*y*z + 105*x + 10*y + 7*z - 812\nx_value = solve(eq, x)[0]\ny_value = solve(eq, y)[0]\nz_value = solve(eq, z)[0]\nx_y_z_sum = x_value + y_value + z_value\nprint(x_y_z_sum)"
  },
  {
    "example_id": 444,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "2.0",
      "45.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "217.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq1 = x + y - 7\neq2 = 3*x + y - 45\nsolution1 = solve(eq1, x)\nsolution2 = solve(eq2, y)\nx_value = solution1[0]\ny_value = solution2[0]\nprint(x_value**2 - y_value**2)"
  },
  {
    "example_id": 445,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "# declare the variables\na, b = symbols('a, b')\n# define the equation\neq = a + b - 11\n# solve the equation\nsolution = solve(eq, a)\n# get the larger number\nlarger = solution[0]\nprint(larger)"
  },
  {
    "example_id": 446,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "0.0"
    ],
    "annotated_answers": [
      "29.0"
    ],
    "solution": "# Define the region\nx, y = symbols('x y')\nregion = (y == abs(x)) & (y == -x**2 + 35/4)\n\n# Define the boundaries\nboundary = (y == abs(x))\n\n# Find the number of lattice points on the boundary\nboundary_points = solve(boundary, x)\nlattice_boundary = 0\nfor point in boundary_points:\n    lattice_boundary += 1\nprint(lattice_boundary)\n\n# Find the number of lattice points on the region\nregion_points = solve(region, x)\nlattice_region = 0\nfor point in region_points:\n    lattice_region += 1\nprint(lattice_region)"
  },
  {
    "example_id": 447,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-5.0",
      "3.0",
      "25.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\neq = (a + b) * b\neq1 = eq.subs(a, 3)\neq2 = eq.subs(b, 5)\neq3 = eq1 - eq2\neq4 = simplify(eq3)\nprint(eq4)"
  },
  {
    "example_id": 448,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "18.0",
      "18.0",
      "-1.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "x = symbols('x')\nf = 9*x**2 + 18*x + 7\nf_prime = simplify(f.diff(x))\nprint(f_prime)\nsolution = solve(f_prime, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 449,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0",
      "7.0",
      "9.0",
      "9.0"
    ],
    "annotated_answers": [
      "28.0"
    ],
    "solution": "# Anna's time\na = symbols('a')\n\n# Bertram's time\nb = symbols('b')\n\n# Carli's time\nc = symbols('c')\n\n# David's time\nd = symbols('d')\n\n# Anna's time\nA = a/60\n\n# Bertram's time\nB = b/60\n\n# Carli's time\nC = c/60\n\n# David's time\nD = d/60\n\n# Bertram, Carli, David's time\nBCD = B+C+D\n\n# Anna, Carli, David's time\nACD = A+C+D\n\n# Anna, Bertram, David's time\nABD = A+B+D\n\n# Anna, Bertram, Carli's time\nABC = A+B+C\n\n# Bertram, Carli, David's time is three times Anna's time\nBCD3 = BCD*3\n\n# Anna, Carli, David's time is four times Bertram's time\nACD4 = ACD*4\n\n# Anna, Bertram, David's time is twice Carli's time\nABD2 = ABD*2\n\n# Anna, Bertram, Carli's time is twice Bertram's time\nABC2 = ABC*2\n\n# Equations\neq1 = BCD3 - A\neq2 = ACD4 - B\neq3 = ABD2 - C\neq4 = ABC2 - D\n\n# Solve equations\nsol1 = solve(eq1, a)\nsol2 = solve(eq2, b)\nsol3 = solve(eq3, c)\nsol4 = solve(eq4, d)\n\n# Print\nprint('The sum of the numerator and the denominator is:', (sol1[0] + sol2[0] + sol3[0] + sol4[0]))"
  },
  {
    "example_id": 450,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0"
    ],
    "annotated_answers": [
      "-7.0"
    ],
    "solution": "x = symbols('x')\nb = 2\nc = -3\neq = x**2 + b*x + c\nsolution = solve(eq, x)\nb_value = solution[0]\nprint(b_value)"
  },
  {
    "example_id": 451,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "15.999999999999996"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "def f(x):\n    if x >= 0:\n        return -x**(1/3)\n    else:\n        return x**2\n\nprint(f(f(f(f(512)))))"
  },
  {
    "example_id": 452,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25.0",
      "5.0",
      "2.0",
      "32.0",
      "25.0",
      "5.0",
      "2.0",
      "32.0"
    ],
    "annotated_answers": [
      "21.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\nA = symbols('A')\nB = symbols('B')\nC = symbols('C')\n\neq = A*x**2 + 2*y**2 + B*x + C*y - 40\n\nr = sqrt(eq.subs({x: -5, y: 2}).doit())\nprint('r = ', r)\n\nA_plus_B_plus_C_plus_r = A + B + C + r\nprint('A+B+C+r = ', A_plus_B_plus_C_plus_r)"
  },
  {
    "example_id": 453,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "125.0"
    ],
    "annotated_answers": [
      "125.0"
    ],
    "solution": "# 5^5 = 3125\n# 3125 + 3125 + 3125 + 3125 + 3125 = 15625\n# sqrt(15625) = 125\nprint(sqrt(15625))"
  },
  {
    "example_id": 454,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "27.0"
    ],
    "annotated_answers": [
      "41.0"
    ],
    "solution": "# define variables\nage_john = 30\nage_father = 47\nage_diff = 27\nsum_age_john = 5\nsum_age_father = 5\n\n# find age father\nage_father = int(floor(sqrt((age_john**2) + (2*age_diff))))\n\n# find age son\nage_son = age_father - age_diff\n\n# find sum of digits in son\nsum_age_son = 0\nfor i in str(age_son):\n    sum_age_son += int(i)\n\n# find sum of digits in father\nsum_age_father = 0\nfor i in str(age_father):\n    sum_age_father += int(i)\n\n# find number of years in father's age\nyears = age_father - age_son\n\n# print result\nprint(f'Years in father\\'s age: {years}')"
  },
  {
    "example_id": 455,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "def f(n):\n    if n % 2 == 1:\n        return n**2 + 1\n    else:\n        return n**2 - 3*n + 1\n\ndef solve(n):\n    return f(f(f(f(f(f(n))))))\n\nprint(solve(2))"
  },
  {
    "example_id": 456,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "14.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "from sympy import sqrt, simplify, fraction, powsimp\n\ndef rationalize(expression):\n    simplified_expression = simplify(expression)\n    fraction_expression = fraction(simplified_expression)\n    return fraction_expression\n\nexpression = 1 / (sqrt(2) + sqrt(8) + sqrt(32))\nfraction_expression = rationalize(expression)\nprint(fraction_expression)"
  },
  {
    "example_id": 457,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "3.0",
      "3.0",
      "4.0",
      "3.0",
      "3.0",
      "3.0",
      "4.0",
      "3.0",
      "3.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "from sympy import sqrt, simplify, expand, numer, denom, cancel\n\nexpr = (3/sqrt(16)) + (1/sqrt(3))\n\nprint(simplify(expr))\n\nprint(expand(expr))\n\nprint(numer(expr))\n\nprint(denom(expr))\n\nprint(cancel(expr))\n\nprint(numer(expr) + denom(expr))"
  },
  {
    "example_id": 458,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\neq = (3/4)**x - 81/256\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 459,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-20.0",
      "4.0",
      "4.0",
      "3.0",
      "9.0",
      "2.0",
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "x = symbols('x')\neq = (1+2*x) - 2*(1+2*x+3*x**2) + 3*(1+2*x+3*x**2+4*x**3) - 4*(1+2*x+3*x**2+4*x**3+5*x**4)\nsolution = simplify(eq)\nprint(solution)"
  },
  {
    "example_id": 460,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "f = {0: 0, 1: 0, 2: 1, 3: 3, 4: 6}\ng = {x: f[x] - x for x in f}\nprint(len(set(g.values())))"
  },
  {
    "example_id": 461,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "11.0",
      "4.0",
      "5.0",
      "7.0"
    ],
    "annotated_answers": [
      "208.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\neq = 2*a + b - (5*a - 4)*(b - 1)/3\nsolution = solve(eq, b)\nb_value = solution[0]\nprint(b_value)"
  },
  {
    "example_id": 462,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "n = 7\nprint(n)"
  },
  {
    "example_id": 463,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\nsolutions = solve(abs(2-x)==3, x)\nsum_of_solutions = 0\nfor solution in solutions:\n    sum_of_solutions += solution\nprint(sum_of_solutions)"
  },
  {
    "example_id": 464,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "81.0"
    ],
    "solution": "x = symbols('x')\nf = 4*(x + 7)*(2 - x)\nf_max = f.subs(x, 2)\nprint(f_max)"
  },
  {
    "example_id": 465,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "78.0"
    ],
    "solution": "chimes = 12\nprint(chimes)"
  },
  {
    "example_id": 466,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-6.0"
    ],
    "annotated_answers": [
      "81.0"
    ],
    "solution": "f = lambda x: x + 2\nf_inverse = lambda y: f(3) - y\nprint(f_inverse(11))"
  },
  {
    "example_id": 467,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "88.0"
    ],
    "annotated_answers": [
      "45.0"
    ],
    "solution": "from sympy import fibonacci\n\nf = lambda x: fibonacci(x)\n\nfibonacci_values = []\n\nfor i in range(1, 10):\n    fibonacci_values.append(f(i))\n\nfibonacci_sum = sum(fibonacci_values)\n\nprint(fibonacci_sum)"
  },
  {
    "example_id": 468,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "print(8*(6**2 - 3*11)//8 + 3)"
  },
  {
    "example_id": 469,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = 3\nprint(x)"
  },
  {
    "example_id": 470,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x = 3\nprint(x)"
  },
  {
    "example_id": 471,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-10.0"
    ],
    "annotated_answers": [
      "-6.0"
    ],
    "solution": "x = symbols('x')\neq = (sqrt((2*x)-4)/sqrt((x+4))) - 2\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 472,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "-7.0",
      "82.0"
    ],
    "annotated_answers": [
      "89.0"
    ],
    "solution": "x = symbols('x')\neq = x**2+14*x-33\nsolution = solve(eq)\nsolution = solution[0]\na = sqrt(solution)\nb = floor(solution/a)\nprint(a+b)"
  },
  {
    "example_id": 473,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "1.0",
      "3.0",
      "2.0",
      "3.0",
      "2.0",
      "1.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x, y = symbols('x, y')\nexpression = sqrt(x**3 - 2**y)\nsolution = solve(expression, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 474,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "53.0"
    ],
    "solution": "# Let the roots of the polynomial x^2 + 7x - 2 be alpha and beta\nalpha, beta = symbols('alpha beta')\n\n# Evaluate alpha^2 + beta^2\nresult = alpha**2 + beta**2\n\n# Display result\nprint(result)"
  },
  {
    "example_id": 475,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "9.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "print(5*1+4)"
  },
  {
    "example_id": 476,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "15554.0"
    ],
    "annotated_answers": [
      "15554.0"
    ],
    "solution": "# Define a sequence\ndef sequence(n):\n    return 2222 + 1010*n\n\n# Calculate the sixth and seventh terms\nsixth_term = sequence(5)\nseventh_term = sequence(6)\n\n# Print the sum of the sixth and seventh terms\nprint(sixth_term + seventh_term)"
  },
  {
    "example_id": 477,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x1, y1 = 7, 4\nx2, y2 = 6, 3\nm = (y2 - y1) / (x2 - x1)\nb = y1 - m * x1\nx = -b / m\nprint(x)"
  },
  {
    "example_id": 478,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3600.0"
    ],
    "annotated_answers": [
      "3600.0"
    ],
    "solution": "area = 3491 * 3491\nnew_area = (3491 - 60) * (3491 + 60)\nprint(new_area - area)"
  },
  {
    "example_id": 479,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "# define variables\nx1, x2, x3, x4 = symbols('x1, x2, x3, x4')\n\n\n# define equations\neq1 = x1**4 - x2**2 + 10\neq2 = 7*x1**2 - x2**2 - 10\n\n\n# solve equations\nsol1 = solve(eq1, x1)\nsol2 = solve(eq2, x2)\n\n\n# define function for determining x-coordinates\ndef get_x_coordinates(x):\n    if x > 0:\n        return x\n    else:\n        return -x\n\n\n# find intersection points\nintersection_points = [get_x_coordinates(sol1[0]),\n                       get_x_coordinates(sol1[1]),\n                       get_x_coordinates(sol2[0]),\n                       get_x_coordinates(sol2[1])]\n\n\n# sort intersection points\nintersection_points.sort()\n\n\n# find difference between the x-coordinates\nm = intersection_points[-1] - intersection_points[0]\nn = intersection_points[1] - intersection_points[0]\n\n\n# print difference\nprint(m - n)"
  },
  {
    "example_id": 480,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "200.0"
    ],
    "annotated_answers": [
      "200.0"
    ],
    "solution": "print((15+5)*(15-5))"
  },
  {
    "example_id": 481,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.6"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "x = symbols('x')\nf = 2/(x+1)\nf_inverse = 1/(f)\nf_inverse_value = f_inverse.subs(x, 1/5)\nprint(f_inverse_value)"
  },
  {
    "example_id": 482,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "9.0",
      "3.0",
      "1.0",
      "9.0",
      "3.0"
    ],
    "annotated_answers": [
      "-7.0"
    ],
    "solution": "from sympy import solve\nx, y = symbols('x, y')\neq = x**2 + 6*x + y**2 + 8*y\nsol = solve(eq, [x, y])\nprint(sol)"
  },
  {
    "example_id": 483,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "4.0",
      "3.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq = 4*x - 3*y\neq1 = 2*x + y - 3*x + 2*y\neq2 = solve(eq, x)\neq3 = solve(eq1, x)\nprint(eq2)\nprint(eq3)"
  },
  {
    "example_id": 484,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0"
    ],
    "annotated_answers": [
      "-15.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\nn = symbols('n')\n\na = 5\nb = 5\nc = 5\n\nx1 = -1\ny1 = 1\n\nx2 = 2\ny2 = n\n\ndistance = sqrt((x2 - x1)**2 + (y2 - y1)**2)\n\nsolution = solve(distance - a, n)\nn_value = solution[0]\n\nprint(n_value)"
  },
  {
    "example_id": 485,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "print(int(abs(23/9)))"
  },
  {
    "example_id": 486,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0",
      "3.0",
      "64.0",
      "4.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\n\neq = (y*7 + 14*x) * x * y - 56\n\nsolution = solve(eq, x)\n\nx_value = solution[0]\n\nprint(x_value)"
  },
  {
    "example_id": 487,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "a = 3\nb = 11\nprint(b - a)"
  },
  {
    "example_id": 488,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "f = lambda x: g(g(x)) - g(x)\ng = lambda x: 2*x - 1\nprint(f(3))"
  },
  {
    "example_id": 489,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "c = symbols('c')\nd = symbols('d')\neq1 = c/d - 9\neq2 = c/d - 6\nsolution1 = solve(eq1, d)\nsolution2 = solve(eq2, d)\nd_value = solution1[0]\nprint(d_value)"
  },
  {
    "example_id": 490,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "8.0",
      "10.0",
      "12.0",
      "14.0",
      "16.0",
      "18.0",
      "20.0",
      "22.0",
      "24.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "n = 4\nwhile n < 1000:\n    n += 2\n    print(n)"
  },
  {
    "example_id": 491,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "13.0",
      "48.0",
      "19369.0",
      "48.0",
      "13.0",
      "48.0",
      "19369.0",
      "48.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "# Define the variables\nC = 10000\nA = 650\nB = 1200\n\n# Define the equation\neq = C + A*x - B*x**2\n\n# Find the solution\nsolution = solve(eq, x)\n\n# Print the solution\nprint(solution)"
  },
  {
    "example_id": 492,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "2.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "# variables\nx1, y1, x2, y2 = symbols('x1, y1, x2, y2')\n\n# coordinates of the midpoint\nmid_x = (x1 + x2)/2\nmid_y = (y1 + y2)/2\n\n# endpoints of the line segment\nx1, y1 = 3, 1\nx2, y2 = 5, 1\n\n# sum of the coordinates of the midpoint\nsum = mid_x + mid_y\nprint(sum)"
  },
  {
    "example_id": 493,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "5.0",
      "2.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "x = symbols('x')\nsolutions = solve(sqrt(x+1) - x, x)\nsolution = solutions[0]\n\na, b, c = symbols('a b c')\nsolution = solution.subs(x, a+b+c)\n\nsolution = simplify(solution)\n\nsolution = solution.subs(a, a)\nsolution = solution.subs(b, b)\nsolution = solution.subs(c, c)\n\nsolution = simplify(solution)\n\nprint(solution)"
  },
  {
    "example_id": 494,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "35.0"
    ],
    "annotated_answers": [
      "-9.0"
    ],
    "solution": "# A = 24\n# B = 2\n# C = -19\n# D = -35\n# AB - 3C = 48 - 3(19) = 35\nprint(35)"
  },
  {
    "example_id": 495,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "46.0",
      "3.0",
      "32.0"
    ],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq1 = 3*x + 4*y - 12*z - 10\neq2 = -2*x - 3*y + 9*z - 4\nsol = solve((eq1, eq2), (x, y, z))\nprint(sol)"
  },
  {
    "example_id": 496,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "128.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\ny = sqrt(8)\nz = 64 * y\nw = log(z, y)\nprint(w)"
  },
  {
    "example_id": 497,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-31.0"
    ],
    "annotated_answers": [
      "-13.5"
    ],
    "solution": "p = -14\nq = -17\nprint(p + q)"
  },
  {
    "example_id": 498,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "61.0",
      "5.0",
      "143.0",
      "5.0",
      "146.0"
    ],
    "annotated_answers": [
      "48.0"
    ],
    "solution": "from math import sqrt\n\ndef count_endpoints(n):\n    return int(2 * n * (n + 1) + 1)\n\ndef count_endpoints_recursive(n):\n    if n == 1:\n        return 3\n    else:\n        return 2 * n * (n + 1) + 1 + count_endpoints_recursive(n - 1)\n\ndef count_endpoints_iterative(n):\n    endpoints = 0\n    for i in range(n + 1):\n        endpoints += 2 * i * (i + 1) + 1\n    return endpoints\n\nn = 5\nprint(f\"Figure {n} has {count_endpoints(n)} endpoints\")\nprint(f\"Figure {n} has {count_endpoints_recursive(n)} endpoints (recursive)\")\nprint(f\"Figure {n} has {count_endpoints_iterative(n)} endpoints (iterative)\")"
  },
  {
    "example_id": 499,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-75.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "a = -2\nd = -20\ne = -53\n\nsum = a + d + e\nprint(sum)"
  },
  {
    "example_id": 500,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2000.0",
      "10.0"
    ],
    "annotated_answers": [
      "-6.5"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\neq = (2000*7*10**(-7))/(7*10**(-7)) - a*10**b\nsolution = solve(eq, [a, b])\na_value = solution[0][0]\nb_value = solution[0][1]\nprint(a_value + b_value)"
  },
  {
    "example_id": 501,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "1056.0"
    ],
    "solution": "n = symbols('n')\na = symbols('a')\nb = symbols('b')\neq = n*a*b - n*(a+1)*(b-1)\nsolution = solve(eq, n)\nn_value = solution[0]\nprint(n_value)"
  },
  {
    "example_id": 502,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x = symbols('x')\neq = (x+1)/(x-1) - (x-2)/(x+2)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 503,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "360000.0",
      "8473.0"
    ],
    "annotated_answers": [
      "360.0"
    ],
    "solution": "# Find the length of the side of the prism.\nside = sqrt(30**2 + 180**2)\n\n# Find the height of the prism.\nheight = sqrt(24**2 + 180**2)\n\n# Find the volume of the prism.\nvolume = side * height\n\n# Find the volume of the prism in cubic centimeters.\nvolume_in_cubic_centimeters = volume * 1000\n\n# Print the volume of the prism in cubic centimeters.\nprint(volume_in_cubic_centimeters)"
  },
  {
    "example_id": 504,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0"
    ],
    "annotated_answers": [
      "23.0"
    ],
    "solution": "b = 3\nroot = (b * (-1) + sqrt(5)) / 2\nroot2 = (b * (-1) - sqrt(5)) / 2\n\nm = int(root)\nn = int(root2)\n\nprint(m + n)"
  },
  {
    "example_id": 505,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "# number of hours to mow the lawn\nhours = 3\n# number of people needed to mow the lawn\npeople = 5\n# rate at which each person mows the lawn\nrate = 12 / people\n# number of hours each person takes to mow the lawn\nhours_per_person = rate / hours\n# number of people needed to mow the lawn in 3 hours\nneeded = floor(3/hours_per_person)\nprint(needed)"
  },
  {
    "example_id": 506,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "216.0",
      "216.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "# create symbols for the variables\nx, y = symbols('x y')\n\n# create the equation\neq = x * y - 12 * 18\n\n# solve for x\nsolution = solve(eq, x)\nx_value = solution[0]\n\n# solve for y\nsolution = solve(eq, y)\ny_value = solution[0]\n\n# print the results\nprint(x_value)\nprint(y_value)"
  },
  {
    "example_id": 507,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "22.0"
    ],
    "annotated_answers": [
      "3.2"
    ],
    "solution": "# Declare x and f(x)\nx = symbols('x')\nf = 2*x + 2\n\n# Find f(10)\nf_10 = f.subs(x, 10)\n\n# Print the result\nprint(f_10)"
  },
  {
    "example_id": 508,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "49.0",
      "1.0"
    ],
    "annotated_answers": [
      "-18.0"
    ],
    "solution": "x, y = symbols('x y')\neq = (x**2+y**2)-(14*x+48*y)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 509,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.25",
      "2.0",
      "512.0",
      "8.0",
      "7.999999999999999",
      "7.999999999999999"
    ],
    "annotated_answers": [
      "1024.0"
    ],
    "solution": "# Define function f(x) = x^3\nf = lambda x: x**3\n\n# Define function f^-1(x)\nf_inv = lambda y: y**(1/3)\n\n# Define function f(f^-1(x))\nf_f_inv = lambda y: f(f_inv(y))\n\n# Define function f^-1(f(x))\nf_f = lambda x: f_inv(f(x))\n\n# Calculate f^-1(8)/(f(8))^-1\nf_inv_8_div_f_8_inv = f_inv(8) / f_f_inv(8)\n\n# Calculate f^-1(8)\nf_inv_8 = f_inv(8)\n\n# Calculate f(8)\nf_8 = f(8)\n\n# Calculate (f(8))^-1\nf_8_inv = f_f_inv(8)\n\n# Calculate f(f^-1(8))\nf_f_8 = f_f(8)\n\n# Calculate f^-1(f(8))\nf_inv_f_8 = f_inv(f_8)\n\n# Print result\nprint(f_inv_8_div_f_8_inv)\nprint(f_inv_8)\nprint(f_8)\nprint(f_8_inv)\nprint(f_f_8)\nprint(f_inv_f_8)"
  },
  {
    "example_id": 510,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\neq = x - (1/(2 + (1/(x - 2))))\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 511,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "20.0",
      "2.0",
      "20.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\n\nx_value = math.ceil(math.sqrt(20))\ny_value = math.floor(math.sqrt(20))\n\nx_sqr = x**2\ny_sqr = y**2\n\n# print(x_sqr)\n# print(y_sqr)\n\n# x_value_sqr = x_value**2\n# y_value_sqr = y_value**2\n\n# print(x_value_sqr)\n# print(y_value_sqr)\n\n# x_value_sqr = x_value_sqr - 20\n# y_value_sqr = y_value_sqr - 20\n\n# print(x_value_sqr)\n# print(y_value_sqr)\n\n# x_value_sqr = x_value_sqr + 20\n# y_value_sqr = y_value_sqr + 20\n\n# print(x_value_sqr)\n# print(y_value_sqr)\n\nx_value_sqr = x_sqr - 20\ny_value_sqr = y_sqr - 20\n\nprint(x_value_sqr)\nprint(y_value_sqr)\n\nx_value_sqr = x_value_sqr + 20\ny_value_sqr = y_value_sqr + 20\n\nprint(x_value_sqr)\nprint(y_value_sqr)"
  },
  {
    "example_id": 512,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "18.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "f = lambda x: 5*x**2 + 3*x + 4\nprint(f(-2))"
  },
  {
    "example_id": 513,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-10.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "# Calculate 120% of 30 and 130% of 20\npct_120 = 1.2\npct_130 = 1.3\n\n# Calculate the positive difference\npositive_diff = pct_130 * 20 - pct_120 * 30\n\nprint(positive_diff)"
  },
  {
    "example_id": 514,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "144.0"
    ],
    "annotated_answers": [
      "144.0"
    ],
    "solution": "x = 13\ny = 5\nprint( (x+y) * (x-y) )"
  },
  {
    "example_id": 515,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "10.0",
      "-2.0",
      "10.0",
      "-2.0",
      "10.0",
      "10.0",
      "2.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\neq = (x+2)**4 - 100\nsolution = solve(eq, x)\nx_value = solution\nprint(x_value)"
  },
  {
    "example_id": 516,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\ndenom = (1 + sqrt(2) - sqrt(3))\nnumer = 1\nresult = simplify(denom/numer)\nprint(result)"
  },
  {
    "example_id": 517,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "# Find all solutions\nsolutions = solve(x**2 + 6**2 - 10**2, x)\n\n# Sum up all solutions\nsum = 0\nfor solution in solutions:\n    sum += solution\n\nprint(sum)"
  },
  {
    "example_id": 518,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "6.0",
      "6.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "# Define symbols\nx = symbols('x')\nb = symbols('b')\n\n# Define equations\neq1 = x**2 + 2*x + 7\neq2 = 6*x + b\n\n# Solve equations\nsolution = solve([eq1, eq2], [x, b])\n\n# Extract value of b\nb_value = solution[0][1]\n\n# Print b_value\nprint(b_value)"
  },
  {
    "example_id": 519,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "14.0"
    ],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "# define the function\ndef line_intercept_y_axis(x1, y1, x2, y2):\n    m = (y2 - y1) / (x2 - x1)\n    b = y1 - m * x1\n    return m * 0 + b\n\n# use the function\nx1, y1 = -2, 6\nx2, y2 = -4, -2\ny_intercept = line_intercept_y_axis(x1, y1, x2, y2)\nprint(y_intercept)"
  },
  {
    "example_id": 520,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "4.5"
    ],
    "solution": ""
  },
  {
    "example_id": 521,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "-15.0"
    ],
    "solution": "x = symbols('x')\nsum = 0\nfor i in range(1, 8):\n    if (abs(i) + 1 > 7) and (abs(i + 1) <= 7):\n        sum += i\nprint(sum)"
  },
  {
    "example_id": 522,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0",
      "46.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 - 14*x + 3\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 523,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "466.0",
      "4.0",
      "1402.0",
      "3.0",
      "14.0",
      "3.0",
      "200.0"
    ],
    "annotated_answers": [
      "2300.0"
    ],
    "solution": "# Define variables\nx = symbols('x')\ny = symbols('y')\nz = symbols('z')\n\n# Define equations\neq1 = 8*x + 2*y - 932\neq2 = 14*x + 3*y - 1402\neq3 = 5*x + 5*y - 1000\n\n# Solve equations\nsolution1 = solve(eq1, y)\nsolution2 = solve(eq2, y)\nsolution3 = solve(eq3, y)\n\n# Get the values\ny_value1 = solution1[0]\ny_value2 = solution2[0]\ny_value3 = solution3[0]\n\n# Print the values\nprint(y_value1)\nprint(y_value2)\nprint(y_value3)"
  },
  {
    "example_id": 524,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "8.0",
      "5.0"
    ],
    "annotated_answers": [
      "-8.0"
    ],
    "solution": "x, y = symbols('x y')\neq = y - x**2 + 8*x - 5\nk = solve(eq, y)[0]\nprint(k)"
  },
  {
    "example_id": 525,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "# Find the sum of the first 8 odd counting numbers\nn = 8\nsum = (n * (n + 1)) // 2\n\n# Find the sum of the first 5 consecutive even integers\nn = 5\nsum_even = (n * (n + 2)) // 2\n\n# Find the difference between the two sums\ndiff = sum - sum_even\n\n# Find the smallest even number\nsmallest_even = diff // 4\n\nprint(smallest_even)"
  },
  {
    "example_id": 526,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "print((2*3**3-3*2**2)/6)"
  },
  {
    "example_id": 527,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "-19.0",
      "2.0",
      "196.0",
      "8.0",
      "19.0",
      "3.0",
      "12.0",
      "56.0",
      "2.0"
    ],
    "annotated_answers": [
      "158.0"
    ],
    "solution": "x, y = symbols('x, y')\nmean = (x+y)/2\ngeom_mean = sqrt(x*y)\neq = (mean - 7)**2 + (geom_mean - sqrt(19))**2\nsolution = solve(eq, [x, y])\nprint(solution)"
  },
  {
    "example_id": 528,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "30.0"
    ],
    "solution": "x = 30\ny = 40\nnew_price = 4*x\n\noranges_bought = y//new_price\nprint(oranges_bought)"
  },
  {
    "example_id": 529,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "14.0",
      "2.0",
      "16.0",
      "2.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\n\navg_a_b = (a + 2*b)/2\navg_a_c = (a + 2*c)/2\n\neq1 = avg_a_b - 7\neq2 = avg_a_c - 8\n\nsolution1 = solve(eq1, a)\nsolution2 = solve(eq2, a)\n\nprint(solution1)\nprint(solution2)"
  },
  {
    "example_id": 530,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "a = -2\nb = 4\nc = 5\n\nh = -b / (2 * a)\nk = c - h\n\nprint(k)"
  },
  {
    "example_id": 531,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x1, y1 = 1, 2\nx2, y2 = 19, 4\n\nx3, y3 = 0, 7\nx4, y4 = 4, -3\n\nmidpoint = (x1 + x2)/2, (y1 + y2)/2\n\nperpendicular = (-(y2 - y1))/(x2 - x1), (x2 - x1)/(y2 - y1)\n\nslope = -1/2\n\nx = 20\n\n# Calculate y-coordinate\ny = slope * (x - midpoint[0]) + midpoint[1]\n\n# Check if y-coordinate is correct\nprint(y)"
  },
  {
    "example_id": 532,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "n = symbols('n')\na = 1/4\nr = 1/2\nans = a*(1-r**n)/(1-r)\neq = ans - 255/512\nsolution = solve(eq, n)\nn_value = solution[0]\nprint(n_value)"
  },
  {
    "example_id": 533,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "800000.0"
    ],
    "annotated_answers": [
      "800000.0"
    ],
    "solution": "print(1002**2 - 502**2 + 298**2 - 202**2)"
  },
  {
    "example_id": 534,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "13.0",
      "19.0",
      "24.0"
    ],
    "annotated_answers": [
      "1320.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq1 = x + y - z - 8\neq2 = x - y + z - 18\neq3 = -x + y + z - 30\nsolution = solve([eq1, eq2, eq3], [x, y, z])\nprint(solution)"
  },
  {
    "example_id": 535,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "999999.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "m_values = []\nfor i in range(1, 1000000):\n    m = i * 7\n    if m % 1 == 0:\n        m_values.append(m)\nprint(len(m_values))"
  },
  {
    "example_id": 536,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "4.0",
      "73.0",
      "4.0",
      "7.0",
      "4.0",
      "73.0",
      "4.0"
    ],
    "annotated_answers": [
      "84.0"
    ],
    "solution": "from sympy import *\nm, n, p = symbols('m n p')\nx = Symbol('x')\nsolution = solve((x*(2*x - 7) - 3), x)\nprint(solution)"
  },
  {
    "example_id": 537,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.5",
      "2.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\nd = symbols('d')\ne = symbols('e')\neq = (a + 1.5*b) + (c + 2*d) + e\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 538,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "40000.0"
    ],
    "annotated_answers": [
      "2500.0"
    ],
    "solution": "# Area = length * width\narea = 200 * 200\nprint(area)"
  },
  {
    "example_id": 539,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-5.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "x = symbols('x')\nexpr = -sqrt(23)\nsolution = floor(expr)\nprint(solution)"
  },
  {
    "example_id": 540,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\nf = Function('f')\nf_of_f = f(f(x))\neq = f_of_f - 3\nsolution = solve(eq, f_of_f)\nf_of_f_values = solution[0]\nf_of_f_values = f_of_f_values.subs(x, 3)\nprint(f_of_f_values)"
  },
  {
    "example_id": 541,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "128.0"
    ],
    "annotated_answers": [
      "1023.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\neq = ((a**2 - b**2) - 128)\nsolution = solve(eq, a, b)\na_value = solution[0][0]\nb_value = solution[0][1]\nprint(a_value*b_value)"
  },
  {
    "example_id": 542,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1987.0",
      "26.0",
      "4053521.0",
      "26.0",
      "1.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "# least positive integer in the sequence\nn = symbols('n')\n\n# first term of the sequence\na = 1000\n\n# common difference of the sequence\nd = 13\n\n# sum of the first n terms of the sequence\nS = (n/2) * (2*a + (n-1)*d)\n\n# find the value of n\nn_value = solve(S - a - d, n)[0]\nprint(n_value)\n\n# find the least positive integer in the sequence\nfloor_value = floor(n_value)\nprint(floor_value)"
  },
  {
    "example_id": 543,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "n = symbols('n')\neq = 9**(18*n) - 27**(24)\nsolution = solve(eq, n)\nn_value = solution[0]\nprint(n_value)"
  },
  {
    "example_id": 544,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "a, b, c = symbols('a, b, c')\nperimeter = 60\neq = 2 * (a + b + c) - a * b - a * c - b * c\nseq = [a, b, c]\nseq_diff = [a - b, b - c, c - a]\nseq_diff_ratio = [a/b, b/c, c/a]\nseq_diff_ratio_sum = sum(seq_diff_ratio)\nseq_diff_ratio_sum_ratio = seq_diff_ratio_sum / sum(seq_diff)\ncond = seq_diff_ratio_sum_ratio == 1\nnum_distinct_triangles = floor(perimeter * (perimeter - 1) / 18)\nnum_non_equilateral_triangles = floor(perimeter * (perimeter - 1) / 18)\nnum_distinct_non_equilateral_triangles = floor(num_non_equilateral_triangles * cond)\nprint(num_distinct_non_equilateral_triangles)"
  },
  {
    "example_id": 545,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "a, b = symbols('a b')\neq = a * b - 2 * a - 3 * b\nsolution = solve(eq, b)\nb_value = solution[0]\nprint(b_value)"
  },
  {
    "example_id": 546,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "15.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "total_value = 75\nnumber_of_dimes = 11\nnumber_of_nickels = 75 // 5\nprint(number_of_nickels)"
  },
  {
    "example_id": 547,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "185.0",
      "1.0",
      "3.0",
      "185.0",
      "1.0",
      "2.0",
      "185.0"
    ],
    "annotated_answers": [
      "75.0"
    ],
    "solution": "# define variables\nw1, w2, w3 = symbols('w1 w2 w3')\n\n# define equation\neq = w1 + w2 + w3 - 185\n\n# solve for w1\nsol1 = solve(eq, w1)\n\n# solve for w2\nsol2 = solve(eq, w2)\n\n# solve for w3\nsol3 = solve(eq, w3)\n\n# print the solution\nprint('The weight of the largest dog is', sol1[0])\nprint('The weight of the second dog is', sol2[0])\nprint('The weight of the third dog is', sol3[0])"
  },
  {
    "example_id": 548,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "def f(n):\n    if n % 2 == 0:\n        return n**2 - 4*n - 1\n    else:\n        return n**2\n\ndef g(n):\n    return f(f(f(f(f(n)))))\n\nprint(g(4))"
  },
  {
    "example_id": 549,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "21.0"
    ],
    "annotated_answers": [
      "21.0"
    ],
    "solution": "floor_11_1 = 11\nfloor_0_5_11_1 = 5\nprint(floor_11_1 + 2 * floor_0_5_11_1)"
  },
  {
    "example_id": 550,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\neq = log(4**x, 64**(1/3)) - 1\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 551,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "1.0"
    ],
    "solution": ""
  },
  {
    "example_id": 552,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "# declare variables\nx = symbols('x')\n# declare equation\neq = (17**6 - 17**5)/16 - 17**x\n# solve for x\nsolution = solve(eq, x)\n# print the solution\nprint(solution[0])"
  },
  {
    "example_id": 553,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "6.0",
      "5.0",
      "15.0",
      "4.0",
      "16.0",
      "3.0",
      "17.0",
      "2.0",
      "191.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\nf = (1/(x**2-7)) + (1/(x**3-8)) + (1/(x**4-9))\nsolution = solve(f, x)\nprint(solution)"
  },
  {
    "example_id": 554,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "print(ceil(sqrt(10)) + floor(sqrt(10)))"
  },
  {
    "example_id": 555,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4000.0"
    ],
    "annotated_answers": [
      "4000.0"
    ],
    "solution": "print(1000 / 0.25)"
  },
  {
    "example_id": 556,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "93.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "pile_1 = 27 - 5\npile_2 = 27 + 4\npile_3 = 27\npile_4 = pile_2 * 3\n\nprint(pile_4)"
  },
  {
    "example_id": 557,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "367.6470588235294"
    ],
    "annotated_answers": [
      "368.0"
    ],
    "solution": "power = 500 / 1.36\nprint(power)"
  },
  {
    "example_id": 558,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "# Declare variables\nx = symbols('x')\ny = symbols('y')\nz = symbols('z')\nw = symbols('w')\n\n# Define equations\neq1 = x + y - z - w\neq2 = x + x - y - y - z - z\neq3 = x + x - y - y - z - z + w\n\n# Solve equations\nsol1 = solve(eq1, x)\nsol2 = solve(eq2, x)\nsol3 = solve(eq3, x)\n\n# Print solution\nprint(sol1)\nprint(sol2)\nprint(sol3)\n\n# Print square\nprint(sol2[0]**2)"
  },
  {
    "example_id": 559,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "210.0"
    ],
    "annotated_answers": [
      "210.0"
    ],
    "solution": "f = lambda x: x**2 - 1\ng = lambda x: x + 7\nprint(f(g(7)) + g(f(3)))"
  },
  {
    "example_id": 560,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = x*(3*x-4) - (6*x**2 - 3*x + 5)/10\nsolution = solve(eq, x)\nprint(len(solution))"
  },
  {
    "example_id": 561,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 - 8*x - 33\nsolution = solve(eq, x)\nsolution_x = solution[0]\nprint(solution_x)"
  },
  {
    "example_id": 562,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "# Declare the symbols\nM = symbols('M')\nm = symbols('m')\n\n# Create the equation\neq = (M**2 + m**2 - 2*M*m) * (M**2 + m**2 - 2*M*m + 1) * (M**2 + m**2 - 2*M*m + 2)\n\n# Solve for m\nsolution = solve(eq, m)\n\n# Extract the solution\nm_value = solution[0]\nprint(m_value)\n\n# Calculate the distance\ndistance = 2*m_value\nprint(distance)"
  },
  {
    "example_id": 563,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "print(int(((7/4)**2)**2))"
  },
  {
    "example_id": 564,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.308331878906229"
    ],
    "annotated_answers": [
      "920.25"
    ],
    "solution": "# Declare variables\nr = 0.045\nn = 2\nP = 10000\n\n# Find interest\nI = P*(1+r/n)**(n*2) - P\n\n# Find interest in dollars\nI_dollars = I/100\n\n# Print answer\nprint(I_dollars)"
  },
  {
    "example_id": 565,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "2.0",
      "13.0",
      "2.0",
      "241.0",
      "2.0"
    ],
    "annotated_answers": [
      "135.0"
    ],
    "solution": "a, d, n = symbols('a d n')\neq1 = (a + (n-1)*d)**2 + (a + (n-1)*d) - 30\neq2 = (a + (n-1)*d)**2 + (a + (n-1)*d) - 60\nsol1 = solve(eq1, a)\nsol2 = solve(eq2, a)\na_value = simplify(sol1[0] + sol2[0])\nprint(a_value)"
  },
  {
    "example_id": 566,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "degree_of_f = 3\ndegree_of_g = 5\ndegree_of_h = degree_of_f + degree_of_g\nprint(degree_of_h)"
  },
  {
    "example_id": 567,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.3333333333333333"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "minutes = 20 / 60\nprint(minutes)"
  },
  {
    "example_id": 568,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "3.0"
    ],
    "annotated_answers": [
      "26.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\neq = (3*a + 5*b - a*b)\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 569,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "3.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "368.0",
      "27.0",
      "2.0",
      "418.0"
    ],
    "annotated_answers": [
      "720.0"
    ],
    "solution": "x = symbols('x')\nsolve_for_x = (x + x**2 + x**3) - 27\nsolution = solve(solve_for_x, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 570,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "55.0"
    ],
    "annotated_answers": [
      "50.0"
    ],
    "solution": "x = 10\nprint(5 + (500 * x) / 100)"
  },
  {
    "example_id": 571,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "2.0",
      "2.0",
      "61.0",
      "5.0",
      "5.0"
    ],
    "annotated_answers": [
      "75.0"
    ],
    "solution": "AB = sqrt((1-0)**2 + (7-0)**2)\nBC = sqrt((12-1)**2 + (-2-0)**2)\nCD = sqrt((12-7)**2 + (-2-8)**2)\nDA = sqrt((0-12)**2 + (-2-8)**2)\n\nABCD = (AB + BC + CD + DA)/2\nprint(ABCD)"
  },
  {
    "example_id": 572,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "m, n = symbols('m, n')\n\n# Define the equation\neq1 = (m*n) - 7\neq2 = (m+n) - 8\n\n# Solve the system of equations\nsolution = solve([eq1, eq2], [m, n])\n\n# Find the value of m-n\nvalue = abs(solution[0][0] - solution[0][1])\nprint(value)"
  },
  {
    "example_id": 573,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "24.0",
      "32.0",
      "18.0"
    ],
    "annotated_answers": [
      "49.0"
    ],
    "solution": "x, y = symbols('x y')\neq = x**2 + y**2 - 14*x - 48*y\nsolution = solve(eq, y)\ny_value = solution[0]\nprint(y_value)"
  },
  {
    "example_id": 574,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "3.21"
    ],
    "solution": "A = -2.6\nB = 3.6\nC = 1\n\nb = -2.6\nc = 3.6\n\nprint(b+c)"
  },
  {
    "example_id": 575,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-5.0",
      "2.0",
      "1.0",
      "1.0",
      "1.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "# d and e denote the solutions of 2x^2 + 3x - 5=0\nd, e = symbols('d, e')\n\n# Solution of the equation\nsolution = solve(2*d**2 + 3*d - 5, d)\n\n# print the solution\nprint(solution)\n\n# Value of (d-1)(e-1)\nde = (d-1)*(e-1)\nprint(de)"
  },
  {
    "example_id": 576,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.11728713807222"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "print((2**(1/4))**(2/5) * (4**(3/8))**(2/25))"
  },
  {
    "example_id": 577,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "454.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0",
      "2.0",
      "2.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "33840.0"
    ],
    "solution": "p = symbols('p')\ns1 = symbols('s1')\ns2 = symbols('s2')\neq1 = p*(s1+s2) - 454\neq2 = p*s1*s2 - 454\nsolution = solve([eq1, eq2], [p, s1, s2])\np_value = solution[0][0]\ns1_value = solution[0][1]\ns2_value = solution[0][2]\nprint(p_value)\nprint(s1_value)\nprint(s2_value)"
  },
  {
    "example_id": 578,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "24.0"
    ],
    "annotated_answers": [
      "24.0"
    ],
    "solution": "a = 2*6 + 4*3\nb = 8*(3+3)\nprint(b-a)"
  },
  {
    "example_id": 579,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "8.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq1 = x-y-1\neq2 = x**2 + y**2 - 7\neq3 = eq1.subs({x:eq2.subs({y:x})})\nprint(eq3)"
  },
  {
    "example_id": 580,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "8.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "a = symbols('a')\neq = (3*5**2) - (4*(5-a)**2)/3 - 63\nsolution = solve(eq, a)\nprint(solution)"
  },
  {
    "example_id": 581,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "expression = (3*4-2)*(4*4+1) - (3*4-2)*4*4+1\nprint(expression)"
  },
  {
    "example_id": 582,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "# y = 0\ny = symbols('y')\n# 19 + 3y = 7^2\neq = (19 + 3*y) - (7**2)\n# sqrt(19 + 3y) = 7\nsolution = solve(eq, y)\n# print(solution)\ny_value = solution[0]\nprint(y_value)"
  },
  {
    "example_id": 583,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "6.0",
      "2.0",
      "2.0",
      "6.0",
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x, y = symbols('x, y')\neq = x**2 + y**2 - 6 - 6*x - 2*y\n\n# find the distance from the center to the edge\ndistance = sqrt(eq)\n\n# find the radius\nradius = distance/2\nprint(radius)"
  },
  {
    "example_id": 584,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "70.0"
    ],
    "annotated_answers": [
      "70.0"
    ],
    "solution": "# f(x) = x^2 - 4\\sqrt{x} + 1\nf = lambda x: x**2 - 4*sqrt(x) + 1\n\n# f(f(4))\nf_f_4 = f(f(4))\nprint(f_f_4)"
  },
  {
    "example_id": 585,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5050.0"
    ],
    "annotated_answers": [
      "5050.0"
    ],
    "solution": "# Define the sum\nsum = 0\nfor i in range(1, 101):\n    sum += i\nprint(sum)"
  },
  {
    "example_id": 586,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "f_degree = 4\ng_degree = 2\nf_g_degree = f_degree - g_degree\nprint(f_g_degree)"
  },
  {
    "example_id": 587,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1600.0"
    ],
    "annotated_answers": [
      "1600.0"
    ],
    "solution": "x = 441 + 2 * 21 * 19 + 361\nprint(x)"
  },
  {
    "example_id": 588,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-42.0"
    ],
    "solution": ""
  },
  {
    "example_id": 589,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "x, y = symbols('x, y')\n\n# distance from (5, 15) to (x, y)\nd = sqrt((x-5)**2 + (y-15)**2)\n\n# radius of the circle\nr = sqrt(130)\n\n# condition for point Q to be on the circle\nd == r\n\n# condition for x-coordinate to be twice the y-coordinate\nx == 2*y\n\n# solving the system of equations\nsolution = solve([d-r, x-2*y], [x, y])\n\n# print the maximum value of x\nprint(Max(solution[0][0]))"
  },
  {
    "example_id": 590,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-16.0"
    ],
    "annotated_answers": [
      "-8.0"
    ],
    "solution": "# x = symbols('x')\nx = symbols('x')\n# eq = x**2 + 24*x + 128\neq = x**2 + 24*x + 128\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 591,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "g = lambda x: 3\nprint(g(2))"
  },
  {
    "example_id": 592,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "9.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "# Define symbols\nx1, x2 = symbols('x1 x2')\n\n# Define equation\neq = 2*x1**2 + 13*x1 + 6\n\n# Find solutions\nsolutions = solve(eq, x1)\n\n# Find the product of the squares of the solutions\nproduct = 1\nfor solution in solutions:\n    product *= solution**2\n\nprint(product)"
  },
  {
    "example_id": 593,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "for k in range(1, 100000):\n    n = 2005 // k\n    if 1 + k * (n - 1) == 2005:\n        print(k)\n        break"
  },
  {
    "example_id": 594,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "600.0"
    ],
    "annotated_answers": [
      "600.0"
    ],
    "solution": "print(31**2 - 19**2)"
  },
  {
    "example_id": 595,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "# define variables\nx = symbols('x')\n\n\n# define functions\nf = (math.exp(3*x**2 - floor(x)!) + (22 + 735235*floor(x))**(2356) + math.floor(x) + 1)\ng = (math.exp(3*x**2 - floor(x)!) + (22 + 735235*floor(x))**(2356) + math.floor(x) + 1)\n\n\n# define range of values\nx_range = range(0, 200)\n\n\n# find intersection points\nx_intersection = []\nfor i in x_range:\n    if f(i) == g(i):\n        x_intersection.append(i)\n\n\n# find largest x-value\nlargest_x_value = Min(x_intersection)\n\n\n# print largest x-value\nprint(largest_x_value)"
  },
  {
    "example_id": 596,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "0.0",
      "1.0",
      "0.0",
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "# Create a list of symbols\ns = symbols('s:4')\n\n# Create the equation\neq = [s[0] - s[1] + s[2] - s[3],\n      s[0] + s[1] - s[2] + s[3],\n      s[0] + 2*s[1],\n      s[0] + s[1]]\n\n# Solve the equation\nsolutions = solve(eq, s)\n\n# Print the solution\nprint(solutions)"
  },
  {
    "example_id": 597,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0",
      "1.0",
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "p, q = symbols('p q')\neq = (1/p) + (1/q) - 1\nsolution = solve(eq, p, q)\np_value = solution[0][0]\nq_value = solution[0][1]\nprint((p_value-1)*(q_value-1))"
  },
  {
    "example_id": 598,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "# Define the function f(x)\nf = symbols('f')\n\n\n# Find the inverse function of f(x)\nf_inv = f**(-1)\n\n\n# Define the value of f(2) and f_inv(2)\nf_2 = 4\nf_inv_2 = 2\n\n\n# Find the value of f(f(2))\nf_of_f_2 = f(f_inv_2)\nprint(f_of_f_2)"
  },
  {
    "example_id": 599,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "6.0",
      "7.0",
      "8.0",
      "9.0",
      "10.0",
      "11.0",
      "12.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "for t in range(1, 1000):\n    if (t**0.5 > 2) and (t**0.5 < 3.5):\n        print(t)"
  },
  {
    "example_id": 600,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "8.0",
      "4.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "x, y = symbols('x y')\n\n# equations\neq1 = 2*x - 3*y - 8\neq2 = 4*x + 3*y + 2\n\n# product\nproduct = eq1*eq2\n\n# find the product\nprint(product)"
  },
  {
    "example_id": 601,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "a = symbols('a')\nb = 3*a\nc = (1/3)*b\nd = (2/3)*c\ne = a*b*c*d\nx = 162\neq = e - x\nsolution = solve(eq, a)\na_value = solution[0]\nprint(floor(a_value))"
  },
  {
    "example_id": 602,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "27.0",
      "3.0",
      "2.0",
      "12.0",
      "18.0",
      "8.0",
      "-12.0",
      "18.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "from sympy import sqrt, symbols\n\na = symbols('a')\nexpr = 2/(sqrt(a)+sqrt(4*a))\nnumer = expr.as_numer_denom()[0]\ndenom = expr.as_numer_denom()[1]\nA = (denom**3 - numer*denom**2 + numer**2*denom - numer**3)\nB = (numer*denom**2 - numer**2*denom)\nprint(A/B)"
  },
  {
    "example_id": 603,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3125.0"
    ],
    "annotated_answers": [
      "3125.0"
    ],
    "solution": "a = 5\nprint(a**3 * a**2)"
  },
  {
    "example_id": 604,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "41.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nn = 2009\nr = symbols('r')\n\neq = a*(r**(n-1)) - b*(r**(n-2))\n\nsolution = solve(eq, r)\n\nr_value = solution[0]\n\nprint(r_value)\n\na_value = (b*r_value**(n-1))/(a*r_value**(n-2))\n\nprint(a_value)"
  },
  {
    "example_id": 605,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "350.0"
    ],
    "solution": "n = symbols('n')\n\n# find the difference between consecutive terms\nd = 200\n\n# find the sum of the first n terms\ns = n*(n+1)*(2*n+1)/6\n\n# find the difference between consecutive terms\ne = s - (n-1)*(n-1)*(2*(n-1)+1)/6\n\n# find the eighth term\ne_8 = 500\n\n# find the sixth term\ne_6 = e_8 - 3*d\n\n# find the sixth term\nn_6 = floor((e_6 - d)/(2*d))\n\nprint(n_6)"
  },
  {
    "example_id": 606,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\neq = (x - 3)/(2*x**2 - 8*x + 7)\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 607,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "44.0"
    ],
    "annotated_answers": [
      "143.0"
    ],
    "solution": "num = 13\nreversed_num = int(str(num)[::-1])\ntotal = num + reversed_num\nprint(total)"
  },
  {
    "example_id": 608,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "52.0"
    ],
    "solution": "# p = perimeter\np = symbols('p')\n\n# a, b = adjacent vertices of a square\na, b = symbols('a b')\n\n# Sides of a square are of equal length\ns = sqrt((a - b)**2 + (a + b)**2)\n\n# Perimeter of a square is the sum of the sides\nperimeter = 4*s\n\n# Solve for p\nsolution = solve(perimeter - p, p)\n\n# Print the perimeter of the square\nprint(solution[0])"
  },
  {
    "example_id": 609,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "6.0",
      "7.0"
    ],
    "annotated_answers": [
      "-16.0"
    ],
    "solution": "a = symbols('a')\neq = a**2 + 6*a - 7\nminimum = Min(eq)\nprint(minimum)"
  },
  {
    "example_id": 610,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "-120.0"
    ],
    "solution": "k = 0\nwhile (k < 10):\n  area = (1/2) * (2/3) * (k - 5) * k\n  if area < 20:\n    k = k + 1\n  else:\n    k = k + 1\n    break\nprint(k)"
  },
  {
    "example_id": 611,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "20.0",
      "11.428571428571429"
    ],
    "annotated_answers": [
      "63.0"
    ],
    "solution": "lugs = 80\nlags = 4\nligs = 7\n\n# Calculate the equivalent number of lags\nlags_equivalent = lugs / lags\n\n# Calculate the equivalent number of ligs\nligs_equivalent = lugs / ligs\n\nprint(\"The equivalent number of lags is\", lags_equivalent)\nprint(\"The equivalent number of ligs is\", ligs_equivalent)"
  },
  {
    "example_id": 612,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "6.0",
      "2.0",
      "8.0",
      "15.0",
      "2.0",
      "24.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x, y = symbols('x y')\nf = x**2 + y**2 - 6*x + 8*y - 24\ng = x + y - (-3) - (-12)\ndistance = sqrt(g**2 - f)\nprint(distance)"
  },
  {
    "example_id": 613,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "x = -2"
  },
  {
    "example_id": 614,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.5"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "a = symbols('a')\nx = symbols('x')\neq = a*x**2 + 5*x - 3\nsolution = solve(eq, x)\nx_1 = solution[0]\nx_2 = solution[1]\nabs_difference = abs(x_1 - x_2)\nabs_difference_value = abs_difference.evalf(subs={a: 2})\nprint(abs_difference_value)"
  },
  {
    "example_id": 615,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "51.0"
    ],
    "annotated_answers": [
      "23.0"
    ],
    "solution": "a = 3\nb = -24\nc = 72\ntotal = a + b + c\nprint(total)"
  },
  {
    "example_id": 616,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "n = 12\nprint(n)"
  },
  {
    "example_id": 617,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "5.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "a, b = symbols('a b')\neq1 = a*b - 7\neq2 = a + b - 5\nsolution = solve([eq1, eq2], [a, b])\na_value = solution[0][0]\nb_value = solution[0][1]\nprint(a_value**2 + b_value**2)"
  },
  {
    "example_id": 618,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0",
      "241.0"
    ],
    "annotated_answers": [
      "221.0"
    ],
    "solution": "# Problem variables\nweight_at_beginning = 244\nweight_loss_per_week = 0.01\n\n# Calculate weight at the end of week 10\nexpected_weight = weight_at_beginning - (weight_loss_per_week * weight_at_beginning)\n\n# Print the solution\nprint(\"Expected weight at the end of week 10:\", int(expected_weight))"
  },
  {
    "example_id": 619,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "800.0"
    ],
    "annotated_answers": [
      "800.0"
    ],
    "solution": "print(102**2 - 98**2)"
  },
  {
    "example_id": 620,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "0.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "# Define the variables\nl = symbols('l')\nw = symbols('w')\n\n# Define the equations\neq1 = l * w\neq2 = 5 * (2 * l + 2 * w)\n\n# Solve the equations\nsolution = solve([eq1, eq2], [l, w])\n\n# Get the value of l and w\nl_value = solution[0][0]\nw_value = solution[0][1]\n\n# Print the value of l and w\nprint(l_value, w_value)"
  },
  {
    "example_id": 621,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "90.0"
    ],
    "solution": "x = symbols('x')\nb = symbols('b')\nc = symbols('c')\n\neq = x**2 + 18*x - 9\n\n# Completing the square\neq = (x + b)**2 - c\n\n# Finding the value of c\nc = eq.subs(x, 0)\n\nprint(c)"
  },
  {
    "example_id": 622,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-14.0",
      "8.0"
    ],
    "annotated_answers": [
      "-6.0"
    ],
    "solution": "x = symbols('x')\neq = (x+3)**2 - 121\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 623,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4096.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "print(4**5 + 4**5 + 4**5 + 4**5)"
  },
  {
    "example_id": 624,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "1.5",
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "x = symbols('x')\n\nf = abs(x - 1) + abs(x - 1.5) + abs(x - 2)\n\nf_min = Min(f, x)\n\nprint(f_min)"
  },
  {
    "example_id": 625,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7056.0"
    ],
    "annotated_answers": [
      "-128.0"
    ],
    "solution": "x_values = [-4+10, -4-10, 4+10, 4-10]\nx_values = [6, -6, 14, -14]\nproduct = 1\nfor x in x_values:\n    product *= x\nprint(product)"
  },
  {
    "example_id": 626,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x, y = symbols('x, y')\neq = x**2 - y**2 - 17\nsolution = solve(eq, [x, y])\nprint(len(solution))"
  },
  {
    "example_id": 627,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "244510.0"
    ],
    "annotated_answers": [
      "350.0"
    ],
    "solution": "def smartphone_sales(price):\n    \"\"\"\n    Calculate the number of smartphones sold\n    for a given price.\n    \"\"\"\n    return 500 + (450 - price) // 5\n\ndef smartphone_revenue(price):\n    \"\"\"\n    Calculate the revenue generated by\n    selling smartphones for a given price.\n    \"\"\"\n    return smartphone_sales(price) * price\n\ndef max_revenue():\n    \"\"\"\n    Find the maximum revenue that can be generated\n    by selling smartphones.\n    \"\"\"\n    return max(smartphone_revenue(price)\n               for price in range(400, 500))\n\nprint(max_revenue())"
  },
  {
    "example_id": 628,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "18.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "# Define variables\nb = symbols('b')\nc = symbols('c')\nx = symbols('x')\ny = symbols('y')\n\n# Define equations\neq1 = 6/b - 1\neq2 = 4/c - 10\neq3 = 18/x - y\n\n# Solve for x\nsolution = solve(eq3, x)\n\n# Calculate answer\nanswer = solution[0]\n\n# Print answer\nprint(answer)"
  },
  {
    "example_id": 629,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "years = 36 / 18\nprint(years)"
  },
  {
    "example_id": 630,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "81.0",
      "9.0",
      "2.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "a, b, x = symbols('a, b, x')\nf = a*x**4 - b*x**2 + x + 5\nf_value = f.subs(x, -3)\nprint(f_value)"
  },
  {
    "example_id": 631,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-5.0"
    ],
    "solution": ""
  },
  {
    "example_id": 632,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "174.0"
    ],
    "annotated_answers": [
      "174.0"
    ],
    "solution": "A, B = symbols('A B')\neq1 = 2/5 - A/60\neq2 = 2/5 - 60/B\nsol1 = solve(eq1, A)\nsol2 = solve(eq2, B)\nA_value = sol1[0]\nB_value = sol2[0]\nprint(A_value + B_value)"
  },
  {
    "example_id": 633,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "6.0"
    ],
    "annotated_answers": [
      "30.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = a**b + b\nd = 1*2\ne = d*3\nf = c*e\nprint(f)"
  },
  {
    "example_id": 634,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "5.0",
      "4.0",
      "2.0",
      "25.0"
    ],
    "annotated_answers": [
      "697.0"
    ],
    "solution": "# Define the variables\na, b, c, d = symbols('a, b, c, d')\n\n# Define the geometric sequence\ngeometric = 4**a - b**a\n\n# Define the arithmetic sequence\narithmetic = b**(2) - c**(2) + 5**(2)\n\n# Define the expression to solve\nexpression = geometric + arithmetic\n\n# Solve the expression\nsolution = solve(expression, [a, b, c])\n\n# Extract the values\na_value, b_value, c_value = solution[0]\n\n# Print the solution\nprint(f'The greatest three-digit number \"abc\" such that $4,a,b$ forms a geometric sequence and $b,c,5$ forms an arithmetic sequence is {a_value}{b_value}{c_value}')"
  },
  {
    "example_id": 635,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "55.0"
    ],
    "annotated_answers": [
      "55.0"
    ],
    "solution": "def f(x):\n    return x - floor(sqrt(x))**2\n\ns = sum(f(x) for x in range(101, 111))\nprint(s)"
  },
  {
    "example_id": 636,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "15561.0"
    ],
    "annotated_answers": [
      "363.0"
    ],
    "solution": "# Variables\nn = 5\nk = 3\nm = 2\np = 5\nq = 3\n\n# Symbols\nS = symbols('S')\n\n# Equation\neq = S + (k**(n+1)) + (m**(n+1)) - (p**(n+1)) - (q**(n+1))\n\n# Solving for S\nsolution = solve(eq, S)\nS_value = solution[0]\nprint(S_value)"
  },
  {
    "example_id": 637,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "-128.0"
    ],
    "solution": "x = symbols('x')\neq = (x-2)**2 * (x+2)**2\nsolution = expand(eq)\ncoeff = solution.coeff(x)\nprint(coeff)"
  },
  {
    "example_id": 638,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "37.0"
    ],
    "solution": "from sympy import symbols, expand\nfrom sympy.abc import x\na = 7*x**4 - 3*x**3 - 3*x**2 - 8*x + 1\nb = 8*x**4 + 2*x**3 - 7*x**2 + 3*x + 4\nprint(expand((a*b).coeff(x**3)))"
  },
  {
    "example_id": 639,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-9.0",
      "3.0",
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "f = symbols('f', cls=Function)\nx = symbols('x')\nc = symbols('c')\neq = f(x) - c*x**3 - 9*x + 3\nsolution = solve(eq.subs(f(2), 9), c)\nc_value = solution[0]\nprint(c_value)"
  },
  {
    "example_id": 640,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0"
    ],
    "annotated_answers": [
      "72.0"
    ],
    "solution": "x = 9\nprint(x)"
  },
  {
    "example_id": 641,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-15.0"
    ],
    "annotated_answers": [
      "-9.0"
    ],
    "solution": "f = lambda x: 2*x - 3\ng = lambda x: 5 - 4*x\nprint(g(f(4)))"
  },
  {
    "example_id": 642,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "-5.0",
      "3.0",
      "2.0",
      "7.0",
      "4.0",
      "-10.0",
      "3.0",
      "5.0",
      "2.0",
      "-10.0",
      "7.0",
      "4.0"
    ],
    "annotated_answers": [
      "-25.0"
    ],
    "solution": "# Solve for x\nx = symbols('x')\nf = 3*x + 5\nf2 = 7 - 4*x\nf_sol = solve(f, x)\nf2_sol = solve(f2, x)\n\n# Print solutions\nprint('Solution 1: ', f_sol[0])\nprint('Solution 2: ', f2_sol[0])\n\n# Evaluate f(-10)\nx = -10\nf_val = f.subs(x, x)\nf2_val = f2.subs(x, x)\nprint('f(-10): ', f_val)\nprint('f2(-10): ', f2_val)"
  },
  {
    "example_id": 643,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "3.0",
      "1.0"
    ],
    "annotated_answers": [
      "-13.0"
    ],
    "solution": "n = symbols('n')\na = 5\nd = 2\nr = -1\ns = (a + (n-1)*d)/r\ns = s**(1/n)\ns = s*r\nprint(s)"
  },
  {
    "example_id": 644,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "192.0",
      "2.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "x = symbols('x')\nb = symbols('b')\neq = x**2 + b*x + 48\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 645,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "112.0",
      "112.0",
      "112.0"
    ],
    "annotated_answers": [
      "567.0"
    ],
    "solution": "n = symbols('n')\na = 7\nr = 2\n\n# Term formula\nt = a * r ** (n-1)\n\n# 7th term\nT = a * r ** 6\n\n# 5th term\nprint(t.subs(n, 5))\n\n# 5th term value\nprint(t.subs(n, 5).evalf())\n\n# 5th term in terms of T\nprint(t.subs(n, 5).subs(T, 5103))"
  },
  {
    "example_id": 646,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "2.0",
      "3.0",
      "11.0",
      "9.0",
      "6.0",
      "2.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "a, b, c = symbols('a b c')\nexpr = (sqrt(2) + sqrt(3))**3\neq = expr - a*sqrt(2) - b*sqrt(3) - c*sqrt(6)\nsolution = solve(eq, [a, b, c])\na_value = solution[0][0]\nb_value = solution[0][1]\nc_value = solution[0][2]\nprint(a_value + b_value + c_value)"
  },
  {
    "example_id": 647,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "24.0",
      "2.0",
      "24.0",
      "2.0",
      "24.0",
      "2.0",
      "24.0",
      "2.0",
      "24.0",
      "2.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "from sympy import symbols, sqrt, gcd, factorint\n\nA, B, C = symbols('A B C')\n\n# 8 / 3 * sqrt(2) = A * sqrt(B) / C\n# A * sqrt(B) = C * 8 * 3 * sqrt(2)\n# A * sqrt(B) = C * 48 * sqrt(2)\n# A * sqrt(B) = C * 24 * sqrt(2)\n# A * sqrt(B) - C * 24 * sqrt(2) = 0\n\n# factor out C * 24 * sqrt(2)\n# A * sqrt(B) - C * 24 * sqrt(2) = C * 24 * sqrt(2) * (A - C * 24 / sqrt(2))\n# A * sqrt(B) - C * 24 * sqrt(2) = C * 24 * sqrt(2) * (A - C * 24 / sqrt(2))\n\n# solve for A\nA = (C * 24 * sqrt(2)) / (sqrt(B) - C * 24 * sqrt(2))\n\n# solve for B\nB = sqrt(A * sqrt(B) - C * 24 * sqrt(2))\n\n# solve for C\nC = (A * sqrt(B) - C * 24 * sqrt(2)) / (sqrt(B) - C * 24 * sqrt(2))\n\nprint(A, B, C)"
  },
  {
    "example_id": 648,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "22.0",
      "2.0",
      "2.0",
      "122.0",
      "2.0",
      "6.0",
      "2.0",
      "14.0",
      "58.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "from sympy import sqrt\nx = symbols('x')\ny = symbols('y')\nz = symbols('z')\ns = sqrt((x-11)**2 + (y-1)**2)\nt = sqrt((x-2)**2 + (y-3)**2)\nu = sqrt((x-3)**2 + (y-7)**2)\nsolution = solve((s+t+u)**2 - 2*(s*t + s*u + t*u) + (s*t*u), (s+t+u))\nprint(solution[0])"
  },
  {
    "example_id": 649,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "495.0"
    ],
    "annotated_answers": [
      "495.0"
    ],
    "solution": "# Define a function that returns the sum of the odd numbers between 46 and 64\ndef sum_odd_integers(start, end):\n    sum = 0\n    for i in range(start, end + 1):\n        if i % 2!= 0:\n            sum += i\n    return sum\n\n# Call the function\nprint(sum_odd_integers(46, 64))"
  },
  {
    "example_id": 650,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "10.0",
      "3.0",
      "7.0",
      "10.0",
      "3.0",
      "8.0",
      "2.0",
      "3.0",
      "1.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "from sympy import symbols, Poly\nx = symbols('x')\npoly = Poly(3*(x**10 - x**7 + 2*x**3 - x + 7) + 4*(x**3 - 2*x**2 - 5), x)\nprint(poly.as_expr())"
  },
  {
    "example_id": 651,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "from sympy import symbols, solve\nx, y = symbols('x y')\neq = x + y**2 - 4*y - 4\nsolution = solve(eq, y)\nprint(len(solution))"
  },
  {
    "example_id": 652,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "15.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "a, b = symbols('a b')\neq1 = 5*a + b - 5\neq2 = 3*a + b - 3\neq1_sol = solve(eq1, a)\neq2_sol = solve(eq2, a)\neq1_a_value = eq1_sol[0]\neq2_a_value = eq2_sol[0]\nb_value = eq1_a_value - eq2_a_value\nprint(b_value)"
  },
  {
    "example_id": 653,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "x = symbols('x')\nt = abs(-3+2*x)\nt_value = t.subs(x, -4)\nprint(t_value)"
  },
  {
    "example_id": 654,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "23.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a = 12\nb = 35\nprint(b-a)"
  },
  {
    "example_id": 655,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "31500.0"
    ],
    "annotated_answers": [
      "1050.0"
    ],
    "solution": "import math\n\ndef get_calories(minutes, calories_per_minute):\n    return minutes * calories_per_minute\n\ndef get_total_calories(minutes, calories_per_minute, days):\n    return get_calories(minutes, calories_per_minute) * days\n\ndef get_total_calories_week(minutes, calories_per_minute):\n    return get_total_calories(minutes, calories_per_minute, 7)\n\nminutes = 30\ncalories_per_minute = 150\n\nprint(get_total_calories_week(minutes, calories_per_minute))"
  },
  {
    "example_id": 656,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "-1.0",
      "0.25",
      "1.5",
      "1.0",
      "0.25",
      "1.5"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = 4*y - 4*x**2 - 1\neq2 = 4*x - 4*y**2 - 1\n\nx_value = solve(eq1, x)[0]\ny_value = solve(eq2, y)[0]\n\nx_value = x_value.evalf()\ny_value = y_value.evalf()\n\na = 1/(x_value**3 + y_value**3)\na = a.evalf()\nprint(a)"
  },
  {
    "example_id": 657,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "24.0",
      "18.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "# define variables\nj = symbols('j')\nk = symbols('k')\nl = symbols('l')\n\n# define equations\neq1 = j*k - 24\neq2 = j*l - 48\neq3 = k*l - 18\n\n# solve equations\nsol1 = solve(eq1, j)\nsol2 = solve(eq2, k)\nsol3 = solve(eq3, l)\n\n# print results\nprint('j =', sol1)\nprint('k =', sol2)\nprint('l =', sol3)\n\n# calculate j+k+l\njkl = j + k + l\nprint('j+k+l =', jkl)"
  },
  {
    "example_id": 658,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "73.0"
    ],
    "annotated_answers": [
      "79.0"
    ],
    "solution": "from sympy import floor, ceiling, sqrt, Rational, pi\nx = sqrt(Rational(-8, 3))\nf = lambda x: abs(floor(x)) if x.is_rational else ceiling(x)**2\nprint(f(x) + f(-pi) + f(sqrt(50)) + f(Rational(9, 2)))"
  },
  {
    "example_id": 659,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "a = -4\nb = 8\nprint(a + b)"
  },
  {
    "example_id": 660,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "26.0"
    ],
    "solution": "x = symbols('x')\neq1 = (3/x) - 1/3\neq2 = (3/x) - 3/4\nsolution = solve(eq1, x)\nsolution = solve(eq2, x)\nsolution = list(set(solution))\nsolution.sort()\n\nsum_of_values = 0\nfor x_value in solution:\n    x_value = int(x_value)\n    sum_of_values = sum_of_values + x_value\nprint(sum_of_values)"
  },
  {
    "example_id": 661,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "220.0"
    ],
    "annotated_answers": [
      "220.0"
    ],
    "solution": "n_students_in_school = 480\nn_students_in_class = 24\nn_students_wearing_red = 11\n\n# estimate the total number of students in school wearing red\ntotal_students_wearing_red = (n_students_wearing_red / n_students_in_class) * n_students_in_school\n\nprint(f\"{total_students_wearing_red:,} students in the school will wear red on Valentine's Day.\")"
  },
  {
    "example_id": 662,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.4099832412739488",
      "-13.0",
      "0.9999999999999747"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "sum = 0\nfor n in range(259):\n    sum += 1j**n\nprint(sum)"
  },
  {
    "example_id": 663,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "1.0"
    ],
    "solution": ""
  },
  {
    "example_id": 664,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "# Define the function f(x) = x^2 - 3\nf = x**2 - 3\n\n# Define the function t(x) = 9 + 2f(x)\nt = 9 + 2*f\n\n# Evaluate t(-2)\nt_value = t.subs(x, -2)\nprint(t_value)"
  },
  {
    "example_id": 665,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-14.0"
    ],
    "annotated_answers": [
      "66.0"
    ],
    "solution": "x = symbols('x')\neq = sqrt(x**2 - 4*x + 4) - 16\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 666,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "8.0",
      "4.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "from sympy import solve\nfrom sympy import sqrt\n\nx, y = symbols('x y')\neq = x**2 + y**2 - 4*x - 8*y\nsol = solve(eq, x)\nm = sol[0]\nprint(m)"
  },
  {
    "example_id": 667,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "0.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "# Annie and Barbara's locations\nA = (3,5)\nB = (-10,4)\n\n# Midpoint of AB\nM = ( (A[0]+B[0])/2, (A[1]+B[1])/2 )\n\n# Where they agreed to meet\nC = ( (A[0]+B[0])/2, (A[1]+B[1])/2 )\n\n# Calculate the difference between where they agreed to meet and where they should actually meet\ndiff_x = abs(C[0] - M[0])\ndiff_y = abs(C[1] - M[1])\n\nprint(diff_x)\nprint(diff_y)"
  },
  {
    "example_id": 668,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "x = symbols('x')\ny = x**2 - 6*x + 13\nsolution = solve(y, x)\nprint(solution)"
  },
  {
    "example_id": 669,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2386.0",
      "9.0",
      "115283.0",
      "432.0",
      "5530392601.0",
      "48.0",
      "1.0",
      "3.0",
      "8.0",
      "3.0"
    ],
    "annotated_answers": [
      "400.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq1 = 19**2 + 2*19 + 1\neq2 = (x**2 + 2*x + 1)**2 - 4*x**3 - 2*x**2 - x\nsolution = solve(eq1 - eq2, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 670,
    "selected_mode": "import",
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "m = symbols('m')\nn = symbols('n')\neq1 = 3*n + m - 14\neq2 = n + m - 1\n\nsolution = solve([eq1, eq2], [n, m])\n\nn_value = solution[0][0]\nm_value = solution[0][1]\n\nn_m_value = n_value - m_value\n\nprint(n_m_value)"
  },
  {
    "example_id": 671,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0",
      "2.0",
      "4.0",
      "8.0",
      "2.0",
      "4.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x, y = symbols('x y')\neq = x**2 + 8*x + y**2 - 6*y\nsolution = solve(eq, x, y)\nprint(solution)"
  },
  {
    "example_id": 672,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "35.0",
      "2.0",
      "35.0"
    ],
    "annotated_answers": [
      "324.0"
    ],
    "solution": "# Define the variables\nn = symbols('n')\nm = symbols('m')\n\n# Define the expressions\nexpr_n = n**2\nexpr_m = m**2\n\n# Define the difference\ndiff = expr_n - expr_m\n\n# Define the constraint\nconstraint = diff - 35\n\n# Define the solution\nsolution = solve(constraint, n)\n\n# Print the solution\nprint(solution)"
  },
  {
    "example_id": 673,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-7.0"
    ],
    "annotated_answers": [
      "-7.0"
    ],
    "solution": "p = lambda x: 2-x**2\nq = lambda x: 6/x\nprint(p(q(2)))"
  },
  {
    "example_id": 674,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "# Bill picks out k different numbers in this sequence, all of which have the same number of digits.\n# What is the largest possible value of k?\n\n# a, r, and k are positive integers\na, r, k = symbols('a r k')\n\n# r > 1\nr > 1\n\n# The $n^{\\text{th}}$ term of a certain geometric series is given by $a\\cdot r^{n-1}$\n# where a and r are positive integers and r is greater than 1\n# Bill picks out k different numbers in this sequence, all of which have the same number of digits\n# The largest possible value of k is k = floor(log(a, r))\n\n# The number of digits in each term is floor(log(a, r))\n# The largest possible value of k is floor(log(a, r))\n\n# a = 10\na = 10\n\n# r = 2\nr = 2\n\n# floor(log(a, r))\nk = floor(log(a, r))\n\n# print(k)\nprint(k)"
  },
  {
    "example_id": 675,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "6.0",
      "6.0",
      "6.0",
      "6.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "# Define variables\na, b, c, d = symbols('a b c d')\n\n# Define equations\neq1 = x**2 + 4*x + 6\neq2 = x**2/2 + x + 6\n\n# Define intersection points\nsolution = solve((eq1 - eq2).subs(x, c - a), c - a)\n\n# Print solution\nprint(solution)"
  },
  {
    "example_id": 676,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "# define function f\nf = lambda x: x**2 - 3*x + 1\n\n# find inverse of f\nf_inv = lambda y: (y + 1)/2\n\n# find value of f_inv(3)\nf_inv_3 = f_inv(3)\n\n# print the value of f_inv(3)\nprint(f_inv_3)"
  },
  {
    "example_id": 677,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "50.0"
    ],
    "annotated_answers": [
      "50.0"
    ],
    "solution": "def floor_sqrt(n):\n    return int(floor(sqrt(n)))\n\nsum = 0\nfor i in range(1, 20):\n    sum += floor_sqrt(i)\nprint(sum)"
  },
  {
    "example_id": 678,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25.0",
      "5.0",
      "3.0",
      "1.0",
      "4.0",
      "3.0",
      "57.0",
      "4.0",
      "5.0",
      "27.0"
    ],
    "annotated_answers": [
      "21.0"
    ],
    "solution": "a = 5\nb = 3\nx = symbols('x')\ny = x**2 - 5\nd = sqrt(a)/b\nsolution = solve(d - (y**2 + x**2), x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 679,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-78.0"
    ],
    "annotated_answers": [
      "56.0"
    ],
    "solution": "# Question\n# Recently, Frank took a one-hundred question aptitude test where each correct answer scored 5 points, each incorrect answer scored -2 points, and each question not answered scored zero points. Frank answered 80 questions and scored 232 points. How many questions did he answer correctly?\n\n# Toolbox\n# from sympy import symbols\n# from sympy import solve\n# from math import floor\n# from math import sqrt\n# from sympy import sqrt\n# from sympy import Min\n# from math import fmod\n# import math\n# from sympy import log\n# from sympy import simplify\n\n# Variables\n# Frank's score\nS = 232\n# Total number of questions\nN = 100\n# Frank's correct answers\nC = 80\n\n# Equations\n# Frank's score\n# S = C*5 + (N-C)*(-2)\n\n# Frank's correct answers\n# C = S/(5 - 2)\n\n# Frank's correct answers\nC = S/(-3)\n\n# print(C)\nprint(floor(C))"
  },
  {
    "example_id": 680,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "a, b = symbols('a, b')\neq1 = (a*1 + b) - 5\neq2 = (a*(-1) + b) - 1\nsolve_eq1 = solve(eq1, a)\nsolve_eq2 = solve(eq2, a)\na_value1 = solve_eq1[0]\na_value2 = solve_eq2[0]\nb_value = (a_value1 + a_value2)/2\nh = a*x + b\nprint(h.subs(x, 6))"
  },
  {
    "example_id": 681,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "4.0",
      "2.0"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = x + y - 3\neq2 = x - y - 4\nsolution1 = solve(eq1, x)\nsolution2 = solve(eq2, y)\nx_value = solution1[0]\ny_value = solution2[0]\nprint(2*x_value**2 + 2*y_value**2)"
  },
  {
    "example_id": 682,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "8.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "# Define variables\nlap_length = 400\ndistance = 250\n\n# Define symbols\nlap_count = symbols('lap_count')\n\n# Define equation\neq = lap_length*lap_count - distance\n\n# Find solution\nsolution = solve(eq, lap_count)\n\n# Print solution\nprint(solution)"
  },
  {
    "example_id": 683,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "68.0",
      "2.0",
      "2.0",
      "3.0",
      "68.0",
      "2.0",
      "2.0",
      "3.0",
      "68.0",
      "2.0",
      "2.0",
      "3.0",
      "68.0",
      "2.0"
    ],
    "annotated_answers": [
      "51.0"
    ],
    "solution": "from sympy import symbols, solve\nx, y, z = symbols('x, y, z')\neq1 = x + y + z - 0\neq2 = x * y * z - 17\nsol = solve((eq1, eq2), (x, y, z))\nprint(sol)"
  },
  {
    "example_id": 684,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "15.0",
      "4.0",
      "2.0",
      "15.0"
    ],
    "annotated_answers": [
      "-22.0"
    ],
    "solution": "from sympy import Symbol, solve\nx = Symbol('x')\neq = 2*x**2 - 10*x + 5\nsolution = solve(eq, x)\na = solution[0]\nb = solution[1]\nresult = (2*a - 3)*(4*b - 6)\nprint(result)"
  },
  {
    "example_id": 685,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "f0 = sqrt(3 * 0) + 2\nf3 = sqrt(3 * 3) + 2\n\nprint(f0 + f3)"
  },
  {
    "example_id": 686,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "125.0"
    ],
    "solution": "x = symbols('x')\neq = (x**1 * x**2 * x**3 * x**4 * x**5 * x**6 * x**7 * x**8 * x**9) / (x**2 * x**4 * x**6 * x**8 * x**10 * x**12)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 687,
    "selected_mode": "import",
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-5.0"
    ],
    "solution": "x = symbols('x')\nf = 2*x + 1\ng = -3\nf_g = f(g(x))\nprint(f_g)"
  },
  {
    "example_id": 688,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "-351.0",
      "256.0",
      "27.0",
      "8.0",
      "3.0",
      "3.0"
    ],
    "annotated_answers": [
      "98.0"
    ],
    "solution": "from sympy import solve, sqrt\na, b, c = symbols('a b c')\neq = 8*a**3 - 3*a**2 - 3*a - 1 - sqrt(8*b**3 - 3*b**2 - 3*b - 1)/c\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 689,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-0.00166666666666666"
    ],
    "annotated_answers": [
      "600.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\nz = symbols('z')\n\neq = (1/x) + (1/y) - (1/z)\n\nsolution = solve(eq, y)\ny_value = solution[0]\n\nx_value = 25\nz_value = 24\n\nprint(y_value)\n\neq = (1/x_value) + (1/y_value) - (1/z_value)\n\nprint(eq)"
  },
  {
    "example_id": 690,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "115.0",
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "# Solve for x and y\nx, y = symbols('x y')\n\n# Define equation\neq = 3*x + 2*y + x*y - 115\n\n# Solve for x + y\nsolution = solve(eq, x, y)\n\n# Print solution\nprint(solution)"
  },
  {
    "example_id": 691,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "268.0"
    ],
    "annotated_answers": [
      "4624.0"
    ],
    "solution": "# Define variables\na, b = symbols('a b')\n\n# Define equation\neq = (b**2 - a**2) - 268\n\n# Solve for larger square\nsolution = solve(eq, a)\n\n# Get larger square\na_value = solution[0]\n\n# Print result\nprint(a_value)"
  },
  {
    "example_id": 692,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a = symbols('a')\nb = 8\nc = a + (b - a)\nprint(c)"
  },
  {
    "example_id": 693,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "40.0"
    ],
    "solution": "# create variables\nx1, y1, x2, y2, x3, y3 = symbols('x1, y1, x2, y2, x3, y3')\n\n# define the equation of the line passing through A and B\neq1 = y1 - y2\n\n# define the equation of the line passing through A and C\neq2 = y1 - y3\n\n# define the equation of the line passing through B and C\neq3 = y2 - y3\n\n# find the point of intersection\nsolution = solve([eq1, eq2, eq3], [x1, y1, x2, y2, x3, y3])\n\n# find the length of the line\nlength = sqrt((x1 - x2)**2 + (y1 - y2)**2)\n\n# print the perimeter\nprint(length)"
  },
  {
    "example_id": 694,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "4.0",
      "9.0",
      "2.0",
      "9.0",
      "4.0"
    ],
    "annotated_answers": [
      "78.0"
    ],
    "solution": "# x, x-3, and 1 are the equations\nx, x_3, one = symbols('x x_3 one')\n\n# 1 - x(x-3) = 0\neq1 = one - x * (x - 3)\n\n# 1 - x(x-3) = 1\neq2 = one - x * (x - 3) - 1\n\n# a and b are the roots\na, b = solve(eq1, x)\n\n# c is the common factor\nc = (a + b) / 2\n\n# a + b = c\na_b_c = a + b - c\n\n# a - b = c\na_minus_b_c = a - b - c\n\n# a + b = c\nabc = a_b_c * c\n\n# a - b = c\nabc = a_minus_b_c * c\n\nprint(abc)"
  },
  {
    "example_id": 695,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-8.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "a = -2\nb = 4\nc = 49\nab = a * b\nprint(ab)"
  },
  {
    "example_id": 696,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "A = 3\nB = 1\nC = 1\nAC = A*C\nAC2 = AC*AC\nAC2_B = AC2 - B\nprint(AC2_B)"
  },
  {
    "example_id": 697,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "13.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "# a degree of the polynomial\ndegree = 6 + 5 + 2\nprint(degree)"
  },
  {
    "example_id": 698,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "265.0"
    ],
    "annotated_answers": [
      "255.0"
    ],
    "solution": "# Define the counting numbers\nn = symbols('n')\n\n# Define the column E counting numbers\nE = [n for n in range(1, 51) if fmod(n, 5) == 4]\n\n# Sum the E column counting numbers\nsum_E = sum(E)\n\nprint(sum_E)"
  },
  {
    "example_id": 699,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "print(ceiling(sqrt(27)) - floor(sqrt(26)))"
  },
  {
    "example_id": 700,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "36.0",
      "6.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "# Define symbols\na, b, c = symbols('a b c')\n\n# Define the equation\neq = a*x**2 + b*x + c\n\n# Find the value of y when x=6\ny = eq.subs(x,6)\n\n# Print the value of y\nprint(y)"
  },
  {
    "example_id": 701,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-6.0"
    ],
    "annotated_answers": [
      "-6.0"
    ],
    "solution": "f = lambda x: (x**2 + 2*x + 3)/x\ng = lambda x: x**3 + 2\nx = -3\nprint(g(f(x)))"
  },
  {
    "example_id": 702,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5808.0"
    ],
    "annotated_answers": [
      "96.8"
    ],
    "solution": "mph_to_fps = 88\nmph = 66\nfps = mph * mph_to_fps\nprint(fps)"
  },
  {
    "example_id": 703,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "108.0"
    ],
    "annotated_answers": [
      "108.0"
    ],
    "solution": "distance = 9 * 12\nprint(distance)"
  },
  {
    "example_id": 704,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "21.0"
    ],
    "annotated_answers": [
      "21.0"
    ],
    "solution": "x = symbols('x')\ny = 2*x - 13\neq = 3*x + y - 92\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 705,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2010.0",
      "1.0",
      "3.0"
    ],
    "annotated_answers": [
      "2010.0"
    ],
    "solution": "x = symbols('x')\nf = x**3 + 3*x**2 + 3*x + 1\nf_inv = solve(f - 2010, x)\nf_inv_value = f_inv[0]\nprint(f_inv_value)"
  },
  {
    "example_id": 706,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "p1 = 4 # pressure in kPa\nv1 = 3.67 # volume in liters\nv2 = 1.835\n\n# solve for new pressure\np2 = (v2/v1)*(p1)\n\nprint(p2)"
  },
  {
    "example_id": 707,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "64.3816744112795"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "# Define the point on the line\nx1 = 7\ny1 = 4\n\n# Define the line\nA = 3\nB = -7\nC = 65\n\n# Calculate the slope of the line\nm = A/B\n\n# Calculate the y-intercept of the line\nb = C - m*x1\n\n# Calculate the point on the line closest to the origin\nx2 = 0\ny2 = m*x2 + b\n\n# Calculate the distance between the two points\ndistance = sqrt((x2-x1)**2 + (y2-y1)**2)\n\n# Print the value of K\nprint(distance)"
  },
  {
    "example_id": 708,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-7.0"
    ],
    "annotated_answers": [
      "-7.0"
    ],
    "solution": "x = symbols('x')\neq = (2*x - 1)/(2*x + 2) - (x - 3)/(x - 1)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 709,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "3.0",
      "12.0",
      "30.0",
      "4.0",
      "3.0"
    ],
    "annotated_answers": [
      "-40.0"
    ],
    "solution": "x, y, a = symbols('x y a')\neq1 = 2*x + 5*y + (-8)\neq2 = 6*x + (16 + a - 15*y)\nsolution = solve([eq1, eq2], [x, y, a])\nprint(solution)"
  },
  {
    "example_id": 710,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "15.0"
    ],
    "annotated_answers": [
      "15.0"
    ],
    "solution": "hour = 360/24\nprint(hour)"
  },
  {
    "example_id": 711,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "43.0",
      "2.0",
      "39.0",
      "3.0",
      "37.0",
      "4.0",
      "37.0",
      "5.0",
      "39.0",
      "6.0",
      "43.0",
      "7.0",
      "49.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "n = 7\ns = 49\nfor i in range(1, n+1):\n    print(i, s - i * (n - i))"
  },
  {
    "example_id": 712,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "15.999999999999998"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "print((2**3)**(4/3))"
  },
  {
    "example_id": 713,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "# Create a symbol for x\nx = symbols('x')\n\n# Create an equation\neq = 6**x + 6**x + 6**x + 6**x + 6**x + 6**x - 6**6\n\n# Solve for x\nsolution = solve(eq, x)\n\n# Print the solution\nprint(solution)"
  },
  {
    "example_id": 714,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "from sympy import Rational\nprint(Rational(1, 2) - 1)"
  },
  {
    "example_id": 715,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "28.0"
    ],
    "solution": "tours_per_day = 0\n\n# Get number of days in April\ndays_in_april = 30\n\n# Get time of first tour\nfirst_tour_time = 9\n\n# Get time of last tour\nlast_tour_time = 18\n\n# Get time of each tour\ntour_time = first_tour_time + 20\n\n# Check if tour time is less than last tour time\nwhile tour_time < last_tour_time:\n    tours_per_day += 1\n    tour_time += 20\n\nprint(tours_per_day)"
  },
  {
    "example_id": 716,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "256.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "n = symbols('n')\ns = 2 + 3*n + 5*n**2\ns_3 = s.subs(n, 3)\ns_6 = s.subs(n, 6)\ns_3_6 = s_3 + s_6\nprint(s_3_6)"
  },
  {
    "example_id": 717,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "243.0",
      "27.0",
      "0.333333333333333",
      "0.333333333333333",
      "1.0",
      "1.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "x, y = symbols('x y')\nseq = [243, 81, x, y, 3]\nconst = seq[1] / seq[0]\nfor i in range(1, len(seq)):\n    seq[i] *= const\nprint(seq)\nprint(seq[-1])"
  },
  {
    "example_id": 718,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0"
    ],
    "annotated_answers": [
      "104.0"
    ],
    "solution": "from sympy import symbols, sqrt, solve\n\nx = symbols('x')\ny = 3*x**2 - 5*x - 3\nAB = sqrt(y.subs(x, 0).subs(x, 2))\nprint(AB**2)"
  },
  {
    "example_id": 719,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "24.0"
    ],
    "annotated_answers": [
      "48.0"
    ],
    "solution": "flicks = 12\nflecks = 8\nflocks = 6\n\nprint(flicks * flicks / flecks * flecks / flocks)"
  },
  {
    "example_id": 720,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\nlog_x_minus_one_squared = log(x-1, 3**2)\nsolution = solve(log_x_minus_one_squared, x)\nx_values = []\nfor x_value in solution:\n    x_values.append(x_value)\nsum_of_x_values = sum(x_values)\nprint(sum_of_x_values)"
  },
  {
    "example_id": 721,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "# Find intersection point\ndef find_intersection(a):\n    x1 = -a\n    y1 = x1**2 + a\n    x2 = a\n    y2 = a*x2\n    if (x1 == x2):\n        return (x1, y1)\n    else:\n        return None\n\n# Find all a such that the graphs intersect\ndef find_all_a():\n    a_values = []\n    for a in range(100):\n        intersection = find_intersection(a)\n        if (intersection!= None):\n            a_values.append(a)\n    return a_values\n\n# Sum the intersection points\ndef sum_intersections():\n    a_values = find_all_a()\n    sum = 0\n    for a in a_values:\n        sum += a\n    return sum\n\n# Print the sum\nprint(sum_intersections())"
  },
  {
    "example_id": 722,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "8.0",
      "8.0",
      "8.0",
      "3.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "# Define variables\nx = symbols('x')\nA, B = symbols('A B')\n\n# Expressions\nexpr1 = 10*x**2 - x - 24\nexpr2 = (A*x - 8)*(B*x + 3)\n\n# Find AB + B\nab = simplify(expr2.subs([(A, -B), (B, -A)]))\nab = ab.subs([(A, 8), (B, 3)])\nprint(ab)"
  },
  {
    "example_id": 723,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "y = 12 - 6\nprint(y)"
  },
  {
    "example_id": 724,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "15.5",
      "30.5"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "# Round r to the nearest integer.\nr = 15.5\nprint(r)\n\n# Add r to the floor of r.\nprint(r + math.floor(r))"
  },
  {
    "example_id": 725,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = 0 + (9 * 1/3)\ny = 0 + (6 * 1/3)\nprint(x, y)"
  },
  {
    "example_id": 726,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "print(36 // 7)"
  },
  {
    "example_id": 727,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "r = symbols('r')\neq = (6*r**2 - 19*r - 7)/(2*r-7) - (4*r-3)\nsolution = solve(eq, r)\nr_value = solution[0]\nprint(r_value)"
  },
  {
    "example_id": 728,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "a, b, c = symbols('a, b, c')\ny = a*x**2 + b*x + c\n\n# find x-coordinates of points\nx_0 = 0\nx_1 = 1\nx_2 = 2\n\n# find y-coordinates of points\ny_0 = 5\ny_1 = 10\ny_2 = 19\n\n# find slopes of lines\nm_0 = (y_1-y_0)/(x_1-x_0)\nm_1 = (y_2-y_1)/(x_2-x_1)\n\n# find slopes of lines\nm_0 = (y_1-y_0)/(x_1-x_0)\nm_1 = (y_2-y_1)/(x_2-x_1)\n\n# find a+b+c\na_plus_b_plus_c = (y_0-m_0*x_0-c)/a\n\nprint(a_plus_b_plus_c)"
  },
  {
    "example_id": 729,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "from sympy import symbols, solve\nx, y, D, E, F = symbols('x y D E F')\neq = x**2 + y**2 + D*x + E*y + F\nsolution = solve(eq, [D, E, F])\nprint(solution)"
  },
  {
    "example_id": 730,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "f = lambda x: x + 1\ng = lambda x: 2*x\nf_inv = lambda x: x - 1\ng_inv = lambda x: x/2\n\nf_of_g_inv_of_f_inv_of_f_inv_of_g = f(g_inv(f_inv(f_inv(g(f(5))))))\nprint(f_of_g_inv_of_f_inv_of_f_inv_of_g)"
  },
  {
    "example_id": 731,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "20.992610237963355"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "# Define function f(x)\nf = lambda x: x**3 - 8\n\n# Compute f(19)\nf_19 = f(19)\n\n# Compute f^{-1}(f(f^{-1}(19))\nf_inv = lambda y: (y**(1/3) + 2)\nf_inv_f_19 = f_inv(f_19)\n\nprint(f_inv_f_19)"
  },
  {
    "example_id": 732,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "2.0",
      "2.0",
      "2.0",
      "-2.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "s = symbols('s')\nt = 2*s - s**2\nn = symbols('n')\ns_value = n**2 - 2**n + 1\nt_value = t.subs(s, s_value)\nprint(t_value)"
  },
  {
    "example_id": 733,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.3125"
    ],
    "annotated_answers": [
      "24.0"
    ],
    "solution": "j, k = symbols('j k')\neq = j/k - 16/21\nsolution = solve(eq, k)\nk_value = solution[0]\nprint(k_value)"
  },
  {
    "example_id": 734,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "x = symbols('x')\nf = x**2 + 9\ng = 3*x - 8\nf_x = solve(f - 10, x)\ng_x = solve(g - 10, x)\nf_x_set = set(f_x)\ng_x_set = set(g_x)\nintersection_set = f_x_set & g_x_set\nsum = 0\nfor x in intersection_set:\n    sum += x\nprint(sum)"
  },
  {
    "example_id": 735,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "n = 100\nfor i in range(1, n):\n    if (i*91 - 1) % 100 == 0:\n        print(i)"
  },
  {
    "example_id": 736,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "69.0"
    ],
    "annotated_answers": [
      "27.0"
    ],
    "solution": "bride_age = 27\ngroom_age = 15 + bride_age\ntotal_age = groom_age + bride_age\nprint(total_age)"
  },
  {
    "example_id": 737,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "89.0"
    ],
    "solution": "# slope\ns = symbols('s')\n\n# equation of line\neq = (4*s) + 365 - (s*4)\n\n# y-intercept\ny = 1\n\n# slope of the line\nsl = (365 - y) / 4\n\n# minimum possible slope\nmin_sl = Min(sl, 1, 9)\n\nprint(min_sl)"
  },
  {
    "example_id": 738,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "m = symbols('m')\nn = 28\nx = symbols('x')\n\npolynomial = x**2 + m*x + n\n\n# Find the positive roots of the polynomial\nroots = solve(polynomial, x)\n\n# Count the number of roots\nroot_count = len(roots)\n\n# Check that the roots are positive integers\nfor root in roots:\n    if not root.is_Integer or root < 1:\n        root_count -= 1\n\nprint(root_count)"
  },
  {
    "example_id": 739,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "13.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "# Define f(x)\nf = lambda x: 3*x + 1\n\n# Find point on the graph of f(x)\npoint = f(4)\n\n# Print the sum of coordinates of the point\nprint(point)"
  },
  {
    "example_id": 740,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "7.0"
    ],
    "annotated_answers": [
      "-7.0"
    ],
    "solution": "x = symbols('x')\ny = x**2 - 7\n\ndef min_val(y):\n    return Min(y)\n\nmin_y = min_val(y)\n\nprint(min_y)"
  },
  {
    "example_id": 741,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "f = lambda x: 5*x + 3\ng = lambda x: x**2 - 2\nprint(g(f(-1)))"
  },
  {
    "example_id": 742,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1152.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "# Representative for each grade\nr7 = 520\nr8 = 650\n# Total representatives\nn = 18\n# Representative for 8th grade\nr8_new = r8 - (n - r7)\nprint(r8_new)"
  },
  {
    "example_id": 743,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-4.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "print(log(1/625, 5))"
  },
  {
    "example_id": 744,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "5.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "sum_of_sequence = (80 * 81) // 2\n\n# Find the factors of the sum\nfactors = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79]\n\n# Find the greatest factor\nmax_factor = 0\nfor i in range(len(factors)):\n    if factors[i] > max_factor and sum_of_sequence % factors[i] == 0:\n        max_factor = factors[i]\n\nprint(max_factor)"
  },
  {
    "example_id": 745,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "expression = ((7+8+9)/(2+3+4)) * ((6+9+12)/(9+8+7))\nprint(expression)"
  },
  {
    "example_id": 746,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "n_crackers = 10\ncalories_per_cracker = 12\ncalories_per_cookie = 20\nn_cookies = n_crackers * calories_per_cracker / calories_per_cookie\nprint(n_cookies)"
  },
  {
    "example_id": 747,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "13.0",
      "3.0",
      "52.0",
      "2.0",
      "676.0",
      "108.0",
      "2.0",
      "2.0",
      "13.0",
      "3.0",
      "52.0",
      "2.0",
      "676.0",
      "108.0",
      "2.0"
    ],
    "annotated_answers": [
      "24.0"
    ],
    "solution": "#Surface Area = 2(l+w+h)\n#Volume = lwh\nl, w, h = symbols('l w h')\neq1 = 2*(l+w+h) - 52\neq2 = l*w*h - 3**3\nsolution = solve([eq1, eq2], [l, w, h])\nl_value, w_value, h_value = solution[0]\nprint(f\"l_value = {l_value}, w_value = {w_value}, h_value = {h_value}\")"
  },
  {
    "example_id": 748,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0",
      "16.0",
      "2.0",
      "4.0",
      "2.0",
      "1.0",
      "2.0",
      "2.0",
      "16.0",
      "2.0"
    ],
    "annotated_answers": [
      "-9.0"
    ],
    "solution": "x1 = symbols('x1')\nx2 = symbols('x2')\n\neq = (x1**2 - 16) * (x2**2 - 16)\neq = eq - 256\neq = eq.expand()\neq = eq.simplify()\n\nsolution = solve(eq, x1, x2)\n\nx1_value = solution[0]\nx2_value = solution[1]\n\nprint(x1_value)\nprint(x2_value)"
  },
  {
    "example_id": 749,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0",
      "10.0",
      "10.0"
    ],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "A, B, C = symbols('A B C')\n\neq1 = (A + B + C) / 3 - 10\n\neq2 = A - B\n\neq3 = C - B\n\nsolution = solve([eq1, eq2, eq3], [A, B, C])\n\nprint(solution)"
  },
  {
    "example_id": 750,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = 3**(x+8) - 9**(x+3)\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 751,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "140.0"
    ],
    "annotated_answers": [
      "140.0"
    ],
    "solution": "print((7+5)**2 - (7-5)**2)"
  },
  {
    "example_id": 752,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "47.0"
    ],
    "solution": "a, b = symbols('a, b')\neq = a*b - 9*a - 2*b + 5*a*b\nsolution = solve(eq, a*b)\na_star_b_value = solution[0]\nprint(a_star_b_value)"
  },
  {
    "example_id": 753,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "22.0"
    ],
    "annotated_answers": [
      "-8.0"
    ],
    "solution": "# Define variables\nx, y, z, a = symbols('x y z a')\n\n# Define equations\neq1 = log(x) - log(y) - a\neq2 = log(y) - log(z) - 15\neq3 = log(z) - log(x) - 7\n\n# Solve for a\na_value = solve(eq1 - eq2 - eq3, a)\n\n# Print result\nprint(a_value)"
  },
  {
    "example_id": 754,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "13.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x = symbols('x')\nf = x**2 - 8*x + 15\nf_vertex = f.subs(x, 0)\nf_vertex_y = 2\ndistance = sqrt((f_vertex_y - f_vertex)**2)\nprint(distance)"
  },
  {
    "example_id": 755,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "980100.0",
      "0.00101010101010101",
      "0.5",
      "1.0",
      "2.0",
      "980100.0",
      "0.00101010101010101",
      "0.5",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "900.0"
    ],
    "solution": "# Define symbols\na = symbols('a')\nb = symbols('b')\n\n# Define expressions\nexpr1 = sqrt(1000000) - sqrt(a)\nexpr2 = sqrt(1000000)**(1/3) - sqrt(b)\n\n# Define equations\neq1 = expr1 - expr2\neq2 = eq1 - (sqrt(1000000) - sqrt(1000000))\n\n# Define solutions\nsol1 = solve(eq1, a)\nsol2 = solve(eq2, b)\n\n# Print solutions\nprint(sol1[0])\nprint(sol2[0])"
  },
  {
    "example_id": 756,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "9.0"
    ],
    "annotated_answers": [
      "600.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq = y/sqrt(x) - 3\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 757,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "128.0",
      "5.0"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "p = symbols('p')\neq = 128 - 4*p - p\nsolution = solve(eq, p)\np_value = solution[0]\nprint(p_value)"
  },
  {
    "example_id": 758,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0",
      "0.0",
      "6.0",
      "-126.0",
      "0.0",
      "6.0",
      "-126.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "# f(x) = 3-x if x <= 3\n# f(x) = -x^3 + 2x^2 + 3x if x > 3\n\nx = symbols('x')\n\nf = 3 - x\nf_inv = -x**3 + 2*x**2 + 3*x\n\nf_inv_0 = f_inv.subs(x, 0)\nf_inv_6 = f_inv.subs(x, 6)\n\nprint('f_inv(0) =', f_inv_0)\nprint('f_inv(6) =', f_inv_6)\n\nprint('f_inv(0) + f_inv(6) =', f_inv_0 + f_inv_6)"
  },
  {
    "example_id": 759,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "22.0"
    ],
    "annotated_answers": [
      "22.0"
    ],
    "solution": "f = lambda x: 2*x + 1\ng = lambda x: f(2*x) - 3\nprint(g(g(2)))"
  },
  {
    "example_id": 760,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "10.0",
      "4.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x, y = symbols('x, y')\n\n# solve first equation for x\neq1 = x**2 + y - 4\nsol1 = solve(eq1, x)\nx_val = sol1[0]\n\n# solve second equation for y\neq2 = x**4 + y**2 - 10\nsol2 = solve(eq2, y)\ny_val = sol2[0]\n\n# calculate x^2y\nx2y = x_val**2 * y_val\nprint(x2y)"
  },
  {
    "example_id": 761,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "18.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "a = symbols('a')\neq = (3-a)*(6+2*a)\nsolution = simplify(eq)\nprint(solution)"
  },
  {
    "example_id": 762,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-6.0"
    ],
    "annotated_answers": [
      "-6.0"
    ],
    "solution": "# Define the variable\nx = symbols('x')\n\n# Define the equation\neq = x**2 - x - 6\n\n# Solve for x\nsolution = solve(eq, x)\n\n# Find the product of the two solutions\nproduct = solution[0] * solution[1]\nprint(product)"
  },
  {
    "example_id": 763,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "from math import exp\n\ndef f(x):\n    return exp(x)\n\ndef find_max(f):\n    max_x = 6\n    max_y = f(max_x)\n    for x in range(1, max_x):\n        if f(x) > max_y:\n            max_y = f(x)\n            max_x = x\n    return max_x\n\nprint(find_max(f))"
  },
  {
    "example_id": 764,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "# solution for the problem\n\n# variables\ncamille_age = 0\nalex_age = 0\nbob_age = 0\ndanielle_age = 0\n\n# find camille's age\ncamille_age = 14 * (alex_age + bob_age + danielle_age) / 2\n\n# find alex and bob's ages\nalex_age = 6 * camille_age - bob_age\nbob_age = 2 * (danielle_age - alex_age)\n\n# print the result\nprint(camille_age)"
  },
  {
    "example_id": 765,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "A = 1\nB = -1\nprint(A-B)"
  },
  {
    "example_id": 766,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "49.0"
    ],
    "annotated_answers": [
      "49.0"
    ],
    "solution": "def at(m, n, p, q):\n    return (m * p) * (q / n)\n\nprint(at(7, 30, 10, 21))"
  },
  {
    "example_id": 767,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "99940009.0"
    ],
    "annotated_answers": [
      "99940009.0"
    ],
    "solution": "square = 9997**2\nprint(square)"
  },
  {
    "example_id": 768,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2107.0"
    ],
    "annotated_answers": [
      "2107.0"
    ],
    "solution": "sum = 0\nfor i in range(100, 200):\n    if i % 7 == 0:\n        sum += i\nprint(sum)"
  },
  {
    "example_id": 769,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "36.0",
      "36.0",
      "6.0"
    ],
    "annotated_answers": [
      "35.0"
    ],
    "solution": "from sympy import symbols, solve\nk = symbols('k')\nx = symbols('x')\neq = x**2 - 12*x + k\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 770,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "42.0"
    ],
    "annotated_answers": [
      "-3.0"
    ],
    "solution": "x = symbols('x')\ns = 7 + 14*x + 21*x**2 + 28*x**3 + 35*x**4 + 42*x**5 + 49*x**6 + 56*x**7\nd = s.subs(x, 1) - 210\nd = d.subs(x, 0)\nd = d.subs(x, -1)\nprint(d)"
  },
  {
    "example_id": 771,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "106.0"
    ],
    "solution": "x = symbols('x')\nf = x**7 - 3*x**3 + 2\ng = f.subs(x, x + 1)\nsum = 0\nfor i in range(7):\n    sum += g.coeff(x, i)\nprint(sum)"
  },
  {
    "example_id": 772,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "2.0",
      "2.0"
    ],
    "annotated_answers": [
      "256.0"
    ],
    "solution": "x = symbols('x')\nf = 2**x\nf_f = f**f\nf_f_f = f_f**f\nf_f_f_f = f_f_f**f\nsolution = sqrt(f_f_f_f)\nprint(solution)"
  },
  {
    "example_id": 773,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "49.0"
    ],
    "annotated_answers": [
      "49.0"
    ],
    "solution": "x = symbols('x')\neq = x * sqrt(x) - 5 * x - 9 * sqrt(x) - 35\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 774,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "# define the operation *\ndef star(K, L):\n    return (K+L)*(K-L)\n\n# compute the value of 6*5\nprint(star(6,5))"
  },
  {
    "example_id": 775,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "print(ceiling(-7/4))"
  },
  {
    "example_id": 776,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0",
      "25.0",
      "154.0",
      "5.0",
      "8.0"
    ],
    "annotated_answers": [
      "5.0"
    ],
    "solution": "x, y, z = symbols('x y z')\neq1 = 6*x + 5*y - 2*z - 4\neq2 = 4*x + 5*y + 12*z - 54\nsolution = solve([eq1, eq2], [x, y, z])\nprint(solution)"
  },
  {
    "example_id": 777,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "44.0",
      "5.0",
      "2.0",
      "8.0"
    ],
    "annotated_answers": [
      "1736.0"
    ],
    "solution": "# Define variables\nx = symbols('x')\ny = symbols('y')\n\n# Define equations\neq1 = y - x**2 + 8\neq2 = y**2 + 5*x - 44\n\n# Find solutions\nsol1 = solve(eq1, y)\nsol2 = solve(eq2, y)\n\n# Find distinct solutions\ndist_sol1 = [sol for sol in sol1 if sol not in sol2]\ndist_sol2 = [sol for sol in sol2 if sol not in sol1]\n\n# Calculate product\nprod = 1\nfor sol in dist_sol1:\n    prod *= sol\nfor sol in dist_sol2:\n    prod *= sol\nprint(prod)"
  },
  {
    "example_id": 778,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "0.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x = symbols('x')\neq = (9*x)/(13) + (13)/(9*x) - (250)/(117*x)\nsolution = solve(eq, x)\nprint(sum(solution))"
  },
  {
    "example_id": 779,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x_max = int(2 + 5.6)\nx_min = int(2 - 5.6)\nprint(x_max - x_min + 1)"
  },
  {
    "example_id": 780,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "n = symbols('n')\neq = n**2 - 3*n + 2\nfor i in range(1, 101):\n    if eq.subs(n, i).is_prime is True:\n        print(i)"
  },
  {
    "example_id": 781,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "181.0"
    ],
    "annotated_answers": [
      "181.0"
    ],
    "solution": "expression = 3*7**2 + 5*7 - 1\nprint(expression)"
  },
  {
    "example_id": 782,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "# Define parabola\ny = x**2 - 4*x - 1\n\n# Find y-intercept\ny_intercept = solve(y, x)\n\n# Print number of y-intercepts\nprint(len(y_intercept))"
  },
  {
    "example_id": 783,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "144.0",
      "2.0"
    ],
    "annotated_answers": [
      "-5.0"
    ],
    "solution": "b = symbols('b')\neq = x**2 + b*x - 36\nsolution = solve(eq, x)\nb_value = solution[0]\nprint(b_value)"
  },
  {
    "example_id": 784,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "9901.0"
    ],
    "annotated_answers": [
      "9901.0"
    ],
    "solution": "print(99**2 + 99 + 1)"
  },
  {
    "example_id": 785,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "1.0",
      "2.0",
      "3.0",
      "2.0",
      "1.0",
      "3.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = x - (1 + x/ (1 + x/ (1 + x/ (1 + x))))\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 786,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "N = 11\nprint(N)"
  },
  {
    "example_id": 787,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "3.0",
      "2.0",
      "2.0",
      "24.0",
      "3.0"
    ],
    "annotated_answers": [
      "108.0"
    ],
    "solution": "x, y = symbols('x y')\neq1 = x - y - 6\neq2 = x**2 + y**2 - 24\n\nx3_y3 = x**3 - y**3\neq3 = x3_y3 - eq1**3 - eq2**3\n\nsolution = solve(eq3, x3_y3)\nx3_y3_value = solution[0]\nprint(x3_y3_value)"
  },
  {
    "example_id": 788,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "169.0"
    ],
    "solution": "x = symbols('x')\neq = (x**(1/3))**6\nsolution = simplify(eq)\nprint(solution)"
  },
  {
    "example_id": 789,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "13.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "A = 19 - 2 - 4\nprint(A)"
  },
  {
    "example_id": 790,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "82.0"
    ],
    "annotated_answers": [
      "600.0"
    ],
    "solution": "x = symbols('x')\n\n# Calculate the sum of the new set of integers\nnew_sum = (((22 + 3) * 20) + 20 + 3)\n\n# Calculate the sum of the original set of integers\noriginal_sum = (((20 + 1) * 20) + 20 + 1)\n\n# Calculate the difference between the original and new sum\ndifference = new_sum - original_sum\n\n# Print the difference\nprint(difference)"
  },
  {
    "example_id": 791,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "2.0",
      "2.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "x = symbols('x')\na, b = symbols('a, b')\ng = 3*x + 2\nf = a*x + b\neq = g - 2*f**(-1)\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 792,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "26.0"
    ],
    "annotated_answers": [
      "22.0"
    ],
    "solution": "red_in_A = 26\nblack_in_A = 26\nred_in_B = 26\nblack_in_B = 26 * red_in_B // black_in_A\nprint(red_in_B)"
  },
  {
    "example_id": 793,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-13.0",
      "-6.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "import numpy as np\n\nx1 = 2\ny1 = 5\nx2 = -4\ny2 = 3\n\nx3 = x2 - (x2 - x1) / (y2 - y1) * y2\ny3 = y2 - (x2 - x1) / (y2 - y1) * y2\n\nz = np.array([x3, y3])\nprint(z)"
  },
  {
    "example_id": 794,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "a = 2\nb = 4\nc = 1\n\nd_eric = b**2 - 4*a*c\nd_charles = b**2 - 4*a*c\n\nprint(d_charles/d_eric)\nprint(c/c)"
  },
  {
    "example_id": 795,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-18.0",
      "91.0"
    ],
    "annotated_answers": [
      "369.0"
    ],
    "solution": "# define variables\nl = symbols('l')\narea = 180\nperimeter = 54\n\n# find equation\ndiagonal_sq = l**2\nperimeter_sq = perimeter**2\narea_sq = area**2\n\n# solve for l\nsolution = solve(diagonal_sq - perimeter_sq + area_sq, l)\nl_value = solution[0]\n\n# print the result\nprint(l_value)"
  },
  {
    "example_id": 796,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "60.0"
    ],
    "annotated_answers": [
      "69.0"
    ],
    "solution": "profit = 4200\n# ticket cost at one time\nticket_cost = 70\n# discount for each ticket\ndiscount = 1\n# number of tickets in bulk\nt = 60\nwhile (ticket_cost * t) - discount * (t - t) > profit:\n    t = t + 1\nprint(t)"
  },
  {
    "example_id": 797,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "0.0",
      "3125.0",
      "2.0",
      "3125.0",
      "2.0"
    ],
    "annotated_answers": [
      "105.0"
    ],
    "solution": "n = 6\nm = 5\nN = 2\n\n# Define variables\ns = symbols('s')\nk = symbols('k')\n\n# Define equations\neq1 = (s*m**(n-1))/N - (k*m**(n-1))/N - s\neq2 = (s*m**(n-1))/N - (k*m**(n-1))/N - k\n\n# Solve equations\nsolution = solve([eq1, eq2], [s, k])\n\n# Print solutions\nprint(solution)\n\n# Find sum\nsum1 = (s*m**(n-1))/N\nsum2 = (k*m**(n-1))/N\nsum = sum1 + sum2\nprint(sum)"
  },
  {
    "example_id": 798,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.3304121311619"
    ],
    "annotated_answers": [
      "49.0"
    ],
    "solution": "x = symbols('x')\neq = (x**(1/3))*x**(1/2) - 7\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 799,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "12.0",
      "0.0",
      "12.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "# create a function f(x)\nf = lambda x: x**2 + 3*x + 2\n\n# compute f(-2)\nf_2 = f(-2)\nprint(f_2)\n\n# compute f(2)\nf_2 = f(2)\nprint(f_2)\n\n# compute f(-x)\nf_x = f(-2)\nprint(f_x)\n\n# compute the sum of the coordinates of the point\nsum = f_2 + f_x\nprint(sum)"
  },
  {
    "example_id": 800,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "1.0"
    ],
    "annotated_answers": [
      "1.0"
    ],
    "solution": "f = lambda x: x**2 - 2*x + 1\ng = lambda x: math.sqrt(2*x + 1)\nprint(f(g(4)) - g(f(3)))"
  },
  {
    "example_id": 801,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "11.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "n = symbols('n')\neq = (n + 5) / (n - 3) - 2\nsolution = solve(eq, n)\nn_value = solution[0]\nprint(n_value)"
  },
  {
    "example_id": 802,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "4.0",
      "2.0",
      "8.0",
      "1.0",
      "2.0",
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "-0.25"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\neq = a**2 + 2*b*a + (a - b)\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 803,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0",
      "2.0",
      "8.0",
      "4.0"
    ],
    "annotated_answers": [
      "54.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\n\n# If the product of my friend's numbers is one greater than the product of my numbers, then what is the product of my numbers?\n\neq = (x*y)*(x-4)*(2*y-1) + 1\n\nsolution = solve(eq, (x*y))\n\nprint(solution)"
  },
  {
    "example_id": 804,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "2.0"
    ],
    "annotated_answers": [
      "11.0"
    ],
    "solution": "x1, y1 = symbols('x1 y1')\nx2, y2 = symbols('x2 y2')\n\neq1 = (x1 - x2)**2 + (y1 - y2)**2 - (9 - 7)**2\neq2 = (x1 - x2)**2 + (y1 - y2)**2 - (10 - 2)**2\n\nsolution1 = solve(eq1, (x1, y1))\nsolution2 = solve(eq2, (x2, y2))\n\nx1_value = solution1[0][0]\ny1_value = solution1[0][1]\nx2_value = solution2[0][0]\ny2_value = solution2[0][1]\n\nsum_of_y_coordinates = y1_value + y2_value\n\nprint(sum_of_y_coordinates)"
  },
  {
    "example_id": 805,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.03125"
    ],
    "annotated_answers": [
      "47.0"
    ],
    "solution": "x = symbols('x')\neq = (1/2)**5 - x\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 806,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0",
      "20.0",
      "3.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "# Symbols\nA = symbols('A')\nB = symbols('B')\n\n# Equation\neq = A*3 - B - 20\n\n# Solve for A\nsolution = solve(eq, A)\n\n# Print solution\nprint(solution)"
  },
  {
    "example_id": 807,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-11.6189500386223",
      "1.0",
      "3.0",
      "15.0",
      "1.0"
    ],
    "annotated_answers": [
      "18.0"
    ],
    "solution": "a, b = symbols('a b')\neq1 = a*b**2 - 27/5\neq2 = a**2*b - 135\nsolution1 = solve(eq1, b)\nsolution2 = solve(eq2, a)\nb_value = solution1[0]\na_value = solution2[0]\nprint(a_value + 5*b_value)"
  },
  {
    "example_id": 808,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "# Set the initial value of x\nx = symbols('x')\n\n\n# Define the equation\neq = sqrt(x + sqrt(x + sqrt(x +...))) - 5\n\n\n# Find the value of x\nsolution = solve(eq, x)\n\n\n# Get the value of x\nx_value = solution[0]\n\n\n# Print the value of x\nprint(x_value)"
  },
  {
    "example_id": 809,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "13.0",
      "11.0",
      "13.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a, b = symbols('a b')\neq1 = (4*a+3*b)/(a-2*b) - 5\neq2 = (a+11*b)/(a-b)\nsolution1 = solve(eq1, a)\nsolution2 = solve(eq2, b)\na_value = solution1[0]\nb_value = solution2[0]\nprint((a_value+11*b_value)/(a_value-b_value))"
  },
  {
    "example_id": 810,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "-6.0",
      "-2.0",
      "1.0"
    ],
    "annotated_answers": [
      "-9.0"
    ],
    "solution": "M = (1, -6)\nA = (-2, 1)\nB = M + A\nprint(B)"
  },
  {
    "example_id": 811,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.5",
      "3.0",
      "2.0",
      "31.5"
    ],
    "annotated_answers": [
      "16.0"
    ],
    "solution": "x = symbols('x')\nm = symbols('m')\nb = symbols('b')\n\n# rewritten quadratic in the form (x+m)^2-63\neq = (x + m)**2 - 63\n\n# solve for b\nb_value = (1/2) * (eq.subs(x, 3))\nprint(b_value)"
  },
  {
    "example_id": 812,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "49.0",
      "12.0",
      "6.0",
      "7.0",
      "6.0",
      "49.0",
      "12.0",
      "6.0",
      "7.0",
      "6.0"
    ],
    "annotated_answers": [
      "24.0"
    ],
    "solution": "from sympy import symbols, solve\nc = symbols('c')\nx = symbols('x')\neq = 3*x**2+7*x+c\nroots = solve(eq, x)\nprint(roots)"
  },
  {
    "example_id": 813,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.4285714285714284",
      "9.0"
    ],
    "annotated_answers": [
      "-6.0"
    ],
    "solution": "x1, y1 = 3, 9\nx2, y2 = 1, 2\nm = (y2 - y1)/(x2 - x1)\nb = y1 - m*x1\nx3 = -b/m\ny3 = m*x3 + b\nsum_x = x1 + x3\nsum_y = y1 + y3\nprint(sum_x, sum_y)"
  },
  {
    "example_id": 814,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "40.0",
      "2.0",
      "1600.0",
      "38.0",
      "2.0",
      "1444.0",
      "42.0",
      "2.0",
      "1764.0",
      "42.0"
    ],
    "annotated_answers": [
      "156.0"
    ],
    "solution": "# Calculate 40^2\nx = 40**2\nprint(\"40^2 =\", x)\n\n# Calculate 38^2\ny = 38**2\nprint(\"38^2 =\", y)\n\n# Calculate 42^2\nz = x + 164\nprint(\"42^2 =\", z)\n\n# Calculate 42^2 - 38^2\nprint(\"42^2 - 38^2 =\", z - y)\n\n# Calculate 42 - 38\nprint(\"42 - 38 =\", 42 - 38)\n\n# Calculate 164 - 163\nprint(\"164 - 163 =\", 164 - 163)\n\n# Calculate 42^2 - 38^2 = 42 - 38 + 164 - 163\nprint(\"42^2 - 38^2 =\", z - y + 164 - 163)\n\n# Calculate 42^2 - 38^2 = 42 - 38 + 164 - 163\nprint(\"42^2 - 38^2 =\", 42 - 38 + 164 - 163)"
  },
  {
    "example_id": 815,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "x = symbols('x')\nb = symbols('b')\nf = 3*x**4 - 7*x**3 + 2*x**2 - b*x + 1\nf_1 = f.subs(x, 1)\nb_value = solve(f_1, b)[0]\nprint(b_value)"
  },
  {
    "example_id": 816,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "36.0",
      "2.0",
      "36.0",
      "2.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x, y = symbols('x, y')\ndistance = sqrt(x**2 + y**2)\neq = distance - sqrt(36)\nsolution = solve(eq, x, y)\nx_value = solution[0]\ny_value = solution[1]\nprint(x_value, y_value)"
  },
  {
    "example_id": 817,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "-2.0"
    ],
    "solution": "x = symbols('x')\na = 2\nk = 13\n\ndef check(h):\n    return a*(x - h)**2 + k == x**2 + 4*x + 5\n\ndef find_h():\n    for i in range(100):\n        if check(i):\n            return i\n    return -1\n\nh = find_h()\nprint(h)"
  },
  {
    "example_id": 818,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "2.0",
      "3.0",
      "3.0",
      "2.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "a = symbols('a')\neq = 4 + (12/a) + (36/a**2)\nsolution = solve(eq**2, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 819,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "2.0",
      "5.0",
      "-2.0",
      "5.0",
      "2.0"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 + 4*x + 4\nsolution = solve(eq < 20, x)\nprint(solution)"
  },
  {
    "example_id": 820,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "120.0"
    ],
    "annotated_answers": [
      "0.0"
    ],
    "solution": "product = 1\nfor i in range(1, 6):\n    product *= i\nprint(product)"
  },
  {
    "example_id": 821,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "age_now = 56 / 8\nprint(age_now)"
  },
  {
    "example_id": 822,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "72.0",
      "2.0",
      "2.0",
      "2.0",
      "72.0",
      "2.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "b = symbols('b')\nx = symbols('x')\neq = x**2 + b*x + 18\nsolution = solve(eq, x)\nx1, x2 = solution\nr = x2/x1\nprint(r)\n# The two solutions of the equation x2/x1 are in the ratio of 2 to 1 for some values of b.\n# What is the largest possible value of b?"
  },
  {
    "example_id": 823,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "5.0",
      "25.0",
      "150.0",
      "88.0"
    ],
    "annotated_answers": [
      "40.0"
    ],
    "solution": "a = 10\nb = 20\nc = 30\nN = 88\n\na -= 5\nb += 5\nc *= 5\n\nprint(a, b, c, N)"
  },
  {
    "example_id": 824,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "1.0",
      "3.0",
      "2.0",
      "1.0",
      "1.0"
    ],
    "annotated_answers": [
      "-4.0"
    ],
    "solution": "x1, y1 = symbols('x1, y1')\nx2, y2 = 2, -3\nslope = (y2-y1)/(x2-x1)\ny_intercept = y1 - slope * x1\nprint(y_intercept)"
  },
  {
    "example_id": 825,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "# define x\nx = symbols('x')\n\n# solve for x\nsol = solve((18+5*x**2) - (20*x), x)\n\n# round each solution to the nearest integer\na = floor(sol[0])\nb = floor(sol[1])\n\n# multiply each integer together\nresult = a*b\n\nprint(result)"
  },
  {
    "example_id": 826,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "2.0"
    ],
    "annotated_answers": [
      "-36.0"
    ],
    "solution": "y = symbols('y')\neq = (2*y)*(2*y/2) - 36\nsolution = solve(eq, y)\ny_value = solution[0]\nprint(y_value)"
  },
  {
    "example_id": 827,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "5.0",
      "2.0",
      "7.0",
      "2.0",
      "1.0",
      "7.0",
      "2.0",
      "3.0",
      "5.0",
      "2.0"
    ],
    "annotated_answers": [
      "7.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 + 1 - 7*x\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value + x_value**(-1))"
  },
  {
    "example_id": 828,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-1.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "print(floor(6.7) + floor(-6.7))"
  },
  {
    "example_id": 829,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-6.0",
      "10.0",
      "5.0"
    ],
    "annotated_answers": [
      "8.0"
    ],
    "solution": "# Create symbols\nD = symbols('D')\n# Create equation\neq = 144/D - 10*D\n# Solve for D\nsolution = solve(eq, D)\n# Find the first solution\nD_value = solution[0]\n# Print the result\nprint(D_value)"
  },
  {
    "example_id": 830,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "6.0"
    ],
    "annotated_answers": [
      "6.0"
    ],
    "solution": "print(math.log(64, 2))"
  },
  {
    "example_id": 831,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "20.0"
    ],
    "annotated_answers": [
      "20.0"
    ],
    "solution": "def f(n):\n    return n**2 + n + 17\n\nprint(f(10) - f(9))"
  },
  {
    "example_id": 832,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "12.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "print(abs(2)**3+4)"
  },
  {
    "example_id": 833,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\nh = x**2 - 7*x + 10\ng = h.as_poly()\nb = g.degree()\nprint(b)"
  },
  {
    "example_id": 834,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\neq = 6**(x+1) - 6**x - 1080\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 835,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "14.0"
    ],
    "solution": "# define p(t) and q(t)\nt = symbols('t')\np = t**7 + t**6 + t**5 + t**4 + t**3 + t**2 + t\nq = t**7 - t**6 + t**5 - t**4 + t**3 - t**2 + t\n\n\n# compute degree of p(t)*q(t)\ndegree_p = 7\ndegree_q = 7\ndegree_pq = degree_p + degree_q\nprint(degree_pq)"
  },
  {
    "example_id": 836,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "9.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "a, b = symbols('a b')\n\nline1 = 2*a - 10\nline2 = b + (9 - 7)*(8 - b)/(9 - 7)\n\nx = solve(line1 - line2, a)\n\n# print(x)\n\na_plus_b = x[0] + b\nprint(a_plus_b)"
  },
  {
    "example_id": 837,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "671.9581896720612"
    ],
    "annotated_answers": [
      "672.0"
    ],
    "solution": "balance = 500 * (1 + 0.03) ** 10\nprint(balance)"
  },
  {
    "example_id": 838,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-66.0",
      "13.0"
    ],
    "annotated_answers": [
      "78.0"
    ],
    "solution": "a = symbols('a')\neq = a + (a+1) + (a+2) + (a+3) + (a+4) + (a+5) + (a+6) + (a+7) + (a+8) + (a+9) + (a+10) + (a+11) + (a+12) - 12\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 839,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "-39.0"
    ],
    "annotated_answers": [
      "-39.0"
    ],
    "solution": "value = -(-1) - 5**2 + 3*(-1)*5\nprint(value)"
  },
  {
    "example_id": 840,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "47.0",
      "3.0",
      "4.0",
      "3.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "m = symbols('m')\nn = symbols('n')\n\n# Equation 1\neq1 = 3*m + 4*n - 47\n\n# Equation 2\neq2 = m + n - 15\n\n# Solving for m\nsolve_eq1 = solve(eq1, m)\nsolve_eq2 = solve(eq2, n)\n\n# m value\nm_value = solve_eq1[0]\nn_value = solve_eq2[0]\nprint(m_value)"
  },
  {
    "example_id": 841,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-2.0",
      "6.0",
      "12.0",
      "6.0",
      "6.0",
      "12.0",
      "6.0",
      "1.0",
      "2.0",
      "4.0"
    ],
    "annotated_answers": [
      "-150.0"
    ],
    "solution": "# x = symbols('x')\nx = symbols('x')\n# k = symbols('k')\nk = symbols('k')\n\n# a = 6\na = 6\n# b = 12\nb = 12\n# c = 8\nc = 8\n\neq = k - (a*x**2 + b*x + c)\n\n# solve for x\nsol = solve(eq, x)\n\n# find the least possible value for k\nk_value = (a*sol[0]**2 + b*sol[0] + c)\n\nprint(k_value)"
  },
  {
    "example_id": 842,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "33.0",
      "2.0"
    ],
    "annotated_answers": [
      "33.0"
    ],
    "solution": "x = symbols('x')\neq = 3*(2**3 + sqrt(9))/2\neq = simplify(eq)\nprint(eq)"
  },
  {
    "example_id": 843,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25.0"
    ],
    "annotated_answers": [
      "31.0"
    ],
    "solution": "def recycling(n):\n    return n // 5\n\nprint(recycling(125))"
  },
  {
    "example_id": 844,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "46.599999999999994",
      "15.199999999999998",
      "1.0"
    ],
    "annotated_answers": [
      "22.8"
    ],
    "solution": "# Blue box\nblue_box = 1\n\n# Red box\nred_box = 15.2\n\n# Total weight of red boxes\ntotal_red_boxes = 3\n\n# Total weight of blue box\ntotal_blue_box = blue_box\n\n# Total weight of red boxes\ntotal_red_boxes = red_box * 3\n\n# Total weight of all boxes\ntotal_boxes = total_blue_box + total_red_boxes\n\n# Weight of each red box\nred_box_weight = total_red_boxes / 3\n\n# Weight of each blue box\nblue_box_weight = total_blue_box / blue_box\n\n# Print total weight\nprint(f\"Total weight of all boxes: {total_boxes} ounces\")\nprint(f\"Weight of each red box: {red_box_weight} ounces\")\nprint(f\"Weight of each blue box: {blue_box_weight} ounces\")"
  },
  {
    "example_id": 845,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "3.0"
    ],
    "annotated_answers": [
      "21.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 + 18*x - 63\nsolution = solve(eq, x)\na, b = solution\nprint(b)"
  },
  {
    "example_id": 846,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "5.0",
      "5.0",
      "2.0"
    ],
    "annotated_answers": [
      "25.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 + 2*x*(5-x) + (5-x)**2\nprint(eq)"
  },
  {
    "example_id": 847,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0",
      "2.0",
      "9.0",
      "2.0",
      "3.0",
      "2.0",
      "2.0",
      "9.0",
      "2.0",
      "3.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "c = symbols('c')\nk = symbols('k')\nl = symbols('l')\nm = symbols('m')\nn = symbols('n')\n\nf = (3/(2*c-3))\n\nf_inv = 2/3*c+3\n\nsol = (f_inv * c * f) - (k*n**2)/(m*l)\n\nsol = simplify(sol)\n\n# print(sol)\n\na = symbols('a')\nb = symbols('b')\n\neq = (k*n**2)/(m*l) - (a*b)/(f_inv * c * f)\n\neq = simplify(eq)\n\n# print(eq)\n\nsol = solve(eq, a)\n\na_value = sol[0]\n\nprint(a_value)\n\nsol = solve(eq, b)\n\nb_value = sol[0]\n\nprint(b_value)"
  },
  {
    "example_id": 848,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "2.0",
      "5.0",
      "2.0"
    ],
    "annotated_answers": [
      "47.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 + 1/(x**2) - 7\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 849,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "27.0"
    ],
    "annotated_answers": [
      "27.0"
    ],
    "solution": "num_criminals = 6\ntime = 4.5\nnum_criminals_captured = num_criminals * time\nprint(num_criminals_captured)"
  },
  {
    "example_id": 850,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "19.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "print(24-(2*4-3))"
  },
  {
    "example_id": 851,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "15.0",
      "-52.0",
      "5.0",
      "15.0",
      "-52.0",
      "5.0",
      "4.0",
      "5.0",
      "2.0",
      "15.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "x = symbols('x')\ny = symbols('y')\neq1 = 2**(x+1) - 4**(x-7)\neq2 = 8**(3*y) - 16**(y-13)\nsolution = solve([eq1, eq2], [x, y])\nprint(solution)"
  },
  {
    "example_id": 852,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-3.0",
      "2.0",
      "13.0",
      "2.0"
    ],
    "annotated_answers": [
      "50.0"
    ],
    "solution": "x = symbols('x')\neq = x**2 + 3*x - 1\nsolution = solve(eq, x)\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 853,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1.0",
      "-1.0",
      "2.0",
      "3.0",
      "2.0",
      "7274895081.0",
      "144.0",
      "9477.0",
      "16.0",
      "1.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "a = symbols('a')\nterm = a*(a-1)*(a-2)\neq = term - 1053 - (a*(a-1)*(a-2)/9)\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 854,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.25",
      "4.0",
      "8.0",
      "2.0",
      "81.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "x = symbols('x')\ny = (1/2)*x**2 - 9\na = sqrt(y**2 + (x**2))\na_value = simplify(a**2)\nprint(a_value)"
  },
  {
    "example_id": 855,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "7000.0"
    ],
    "annotated_answers": [
      "2000.0"
    ],
    "solution": "daily_caloric_requirement = 2500\npercentage = 2\npeach_calories = 40\n\n# Calculate daily caloric requirement\ndaily_caloric_requirement = 2500\n\n# Calculate calories in a tin of peaches\npeach_calories = 40\n\n# Calculate percentage\npercentage = 2\n\n# Calculate calories in a person's daily caloric requirement\ndaily_caloric_requirement_in_calories = daily_caloric_requirement * percentage\n\n# Calculate number of peaches in a person's daily caloric requirement\npeach_calories_in_calories = peach_calories * (100 / percentage)\n\n# Calculate total calories\ntotal_calories = peach_calories_in_calories + daily_caloric_requirement_in_calories\n\nprint(total_calories)"
  },
  {
    "example_id": 856,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "-4.0"
    ],
    "annotated_answers": [
      "12.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\neq1 = a + b\neq2 = (a + b) + (2*b)\neq3 = (a + b) + (3*b)\nsolution1 = solve(eq1, a)\nsolution2 = solve(eq2, a)\nsolution3 = solve(eq3, a)\na_value = solution3[0]\nprint(a_value)"
  },
  {
    "example_id": 857,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25.0",
      "2.0",
      "589.0",
      "2.0",
      "589.0",
      "2.0",
      "25.0",
      "2.0"
    ],
    "annotated_answers": [
      "136.0"
    ],
    "solution": "x, y = symbols('x y')\neq = x + y - 25\neq1 = x * y - 9\nsolution = solve([eq, eq1], [x, y])\nx_value, y_value = solution[0]\nprint(x_value, y_value)"
  },
  {
    "example_id": 858,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "0.0"
    ],
    "solution": ""
  },
  {
    "example_id": 859,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.111111111111111",
      "0.0123456790123457",
      "0.111111111111111",
      "0.111111111111111",
      "0.0123456790123457"
    ],
    "annotated_answers": [
      "2.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nc = symbols('c')\nd = symbols('d')\ne = symbols('e')\nf = symbols('f')\ng = symbols('g')\nh = symbols('h')\ni = symbols('i')\nj = symbols('j')\nk = symbols('k')\nl = symbols('l')\nm = symbols('m')\nn = symbols('n')\no = symbols('o')\np = symbols('p')\nq = symbols('q')\nr = symbols('r')\ns = symbols('s')\nt = symbols('t')\nu = symbols('u')\nv = symbols('v')\nw = symbols('w')\nx = symbols('x')\ny = symbols('y')\nz = symbols('z')\n\n# 3^{-2}\neq1 = (3**(-2))\nsol1 = simplify(eq1)\nsol1_value = sol1.evalf()\nprint(sol1_value)\n\n# 9^{-2}\neq2 = (9**(-2))\nsol2 = simplify(eq2)\nsol2_value = sol2.evalf()\nprint(sol2_value)\n\n# 27^{-\\frac{2}{3}}\neq3 = (27**(-(2/3)))\nsol3 = simplify(eq3)\nsol3_value = sol3.evalf()\nprint(sol3_value)\n\n# 9*81^{-1}\neq4 = (9*81**(-1))\nsol4 = simplify(eq4)\nsol4_value = sol4.evalf()\nprint(sol4_value)\n\n# 243^{-\\frac{4}{5}}\neq5 = (243**(-(4/5)))\nsol5 = simplify(eq5)\nsol5_value = sol5.evalf()\nprint(sol5_value)"
  },
  {
    "example_id": 860,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "14.5"
    ],
    "annotated_answers": [
      "7.5"
    ],
    "solution": "y = 15.5 - 1\nprint(y)"
  },
  {
    "example_id": 861,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.0",
      "2.0",
      "4.0",
      "6.0",
      "8.0",
      "10.0",
      "12.0",
      "14.0",
      "16.0",
      "18.0"
    ],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "n = 0\nwhile n < 100:\n    for m in range(-100, 100):\n        if (m + n) % 2 == 0:\n            continue\n        if (m**2 + m*n + (m+n)) % 2 == 0:\n            print('n = ', n)\n            break\n    n += 1"
  },
  {
    "example_id": 862,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "4.0"
    ],
    "annotated_answers": [
      "4.0"
    ],
    "solution": "print(ceil(((7/4)**2)))"
  },
  {
    "example_id": 863,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "1000000.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "# Declare variables\nx = symbols('x')\ny = symbols('y')\n\n# Define the line equation\nline = -2*x + 18\n\n# Count the number of lattice points\nlattice_points = 0\nfor x in range(0, 1000):\n    for y in range(0, 1000):\n        if (x, y) == (int(x), int(y)):\n            lattice_points += 1\n\n# Print the number of lattice points\nprint(lattice_points)"
  },
  {
    "example_id": 864,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "discount = 0.30\nfull_price = 20\ncoupon_discount = 0.25\nnum_tix_pam = 5\nnum_tix_susan = 4\nprice_pam = num_tix_pam * full_price * (1 - discount)\nprice_susan = num_tix_susan * full_price * (1 - coupon_discount)\nprint(price_pam - price_susan)"
  },
  {
    "example_id": 865,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "25.0",
      "2.0",
      "5.0",
      "25.0",
      "2.0",
      "5.0"
    ],
    "annotated_answers": [
      "3.0"
    ],
    "solution": "x = symbols('x')\nk = symbols('k')\neq = k*x**2 + 10*x + k\nsolution = solve(eq, x)\nprint(solution)"
  },
  {
    "example_id": 866,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "10.0"
    ],
    "annotated_answers": [
      "19.0"
    ],
    "solution": "def f(x):\n    if x in range(10):\n        return x**2\n    else:\n        return None\n\nprint(len(set(f(x) for x in range(10))))"
  },
  {
    "example_id": 867,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "6.0",
      "6.0",
      "3.0"
    ],
    "annotated_answers": [
      "9.0"
    ],
    "solution": "a = symbols('a')\neq = a**2 - 12*a + 144\nsolution = solve(eq, a)\na_value = solution[0]\nprint(a_value)"
  },
  {
    "example_id": 868,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "41.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "regular_packs = 166 // 4\nprint(regular_packs)"
  },
  {
    "example_id": 869,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "13.0"
    ],
    "annotated_answers": [
      "13.0"
    ],
    "solution": "x = symbols('x')\nh = sqrt((x**3+72)/2)+1\nh_value = h.subs(x, 6)\nprint(h_value)"
  },
  {
    "example_id": 870,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2000.0"
    ],
    "annotated_answers": [
      "1160.0"
    ],
    "solution": "# Lauren's age in months\nLauren_age = 24\n\n# The number of months since her birthday\nmonths_since_birthday = Lauren_age % 12\n\n# The number of years since her birthday\nyears_since_birthday = floor(Lauren_age / 12)\n\n# The annual interest rate\nannual_interest_rate = 0.075\n\n# The quarterly interest rate\nquarterly_interest_rate = annual_interest_rate / 4\n\n# The interest earned in a year\ninterest_earned_in_a_year = 1000 * (1 + quarterly_interest_rate)**(12)\n\n# The interest earned in a month\ninterest_earned_in_a_month = interest_earned_in_a_year / 12\n\n# The interest earned since her birthday\ninterest_earned_since_birthday = interest_earned_in_a_month * months_since_birthday\n\n# The total interest earned\ntotal_interest_earned = interest_earned_since_birthday + (1000 * years_since_birthday)\n\n# The number of dollars in her account\nnumber_of_dollars = total_interest_earned\n\nprint(round(number_of_dollars))"
  },
  {
    "example_id": 871,
    "selected_mode": "skip",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "30.0"
    ],
    "annotated_answers": [
      "120.0"
    ],
    "solution": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Plot the points\nx = np.array([-3, 1, 0])\ny = np.array([3, 3, 0])\nplt.plot(x, y, 'bo')\n\n# Calculate the coefficients\na = (y[1] - y[0]) / (x[1] - x[0])\nb = y[0] - a * x[0]\nc = y[2] - a * x[2]\n\n# Calculate the desired sum\nsum = 100 * a + 10 * b + c\n\nprint(sum)\n\n# Plot the parabola\nx = np.linspace(-4, 4, 1000)\ny = a * x**2 + b * x + c\nplt.plot(x, y)\nplt.show()"
  },
  {
    "example_id": 872,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "47.0"
    ],
    "annotated_answers": [
      "78.0"
    ],
    "solution": "def g(x):\n    return 4*x**2 - 3*x + 2\n\nprint(g(-3))"
  },
  {
    "example_id": 873,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "18.0",
      "2.0",
      "1296.0",
      "18.0"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "n = symbols('n')\nx = symbols('x')\neq = (9*x**2)+(n*x)+36\nsolution = solve(eq, x)\nsolution_n = solution[0]\nprint(solution_n)"
  },
  {
    "example_id": 874,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "2.0"
    ],
    "annotated_answers": [
      "17.0"
    ],
    "solution": "x = symbols('x')\nsolution = solve(x**2 + 4*x - 9, x)\nprint(len(solution))"
  },
  {
    "example_id": 875,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "100.0"
    ],
    "annotated_answers": [
      "100.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\na_times_b = a**b + b**a\na_value = 2\nb_value = 6\na_times_b_value = a_times_b.subs([(a, a_value), (b, b_value)])\nprint(a_times_b_value)"
  },
  {
    "example_id": 876,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "0.84"
    ],
    "annotated_answers": [
      "36.0"
    ],
    "solution": "# define the variables\npens = 7\npencils = 11\ndollars = 9.24\n\n# define the cost of one pen\npen_cost = dollars / pens\n\n# define the cost of one pencil\npencil_cost = pen_cost / (pencils/pens)\n\nprint(f\"The cost of one pencil is ${pencil_cost:.2f}\")"
  },
  {
    "example_id": 877,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "100000.0"
    ],
    "annotated_answers": [
      "10.0"
    ],
    "solution": "x = symbols('x')\n\n# define the equation\neq = 50*200*10 - x\n\n# solve the equation\nsolution = solve(eq, x)\n\n# get the value of x\nx_value = solution[0]\nprint(x_value)"
  },
  {
    "example_id": 878,
    "selected_mode": "import",
    "is_success": false,
    "is_correct": false,
    "model_answers": [],
    "annotated_answers": [
      "-1.0"
    ],
    "solution": "a = symbols('a')\nb = symbols('b')\nf = x - 3\nq = b*x + 1\neq = f(q(1))\nsolution = solve(eq, b)\nb_value = solution[0]\nprint(b_value)"
  },
  {
    "example_id": 879,
    "selected_mode": "create",
    "is_success": true,
    "is_correct": true,
    "model_answers": [
      "60000.0"
    ],
    "annotated_answers": [
      "60000.0"
    ],
    "solution": "sum = 0\nfor i in range(501, 700, 2):\n    sum += i\nprint(sum)"
  },
  {
    "example_id": 880,
    "selected_mode": "import",
    "is_success": true,
    "is_correct": false,
    "model_answers": [
      "31.0",
      "16.0",
      "124.0"
    ],
    "annotated_answers": [
      "128.0"
    ],
    "solution": "# Let x be the number of pages read on the first day\nx = symbols('x')\n\n# The number of pages read on the second day is half of the number of pages read on the first day\ny = x/2\n\n# The number of pages read on the third day is half of the number of pages read on the second day\nz = y/2\n\n# The number of pages read on the fourth day is half of the number of pages read on the third day\nw = z/2\n\n# The number of pages read on the fifth day is half of the number of pages read on the fourth day\nv = w/2\n\n# The total number of pages read is the sum of the number of pages read on each day\ntotal = x + y + z + w + v\n\n# The novel is 248 pages long\nnovel_length = 248\n\n# The number of pages read on the fifth day is equal to half of the novel length\nfive_days_read = novel_length/2\n\n# The number of pages read on the first day is equal to the total number of pages read minus the number of pages read on the fifth day\nfirst_day_read = total - five_days_read\n\n# Print the number of pages read on the first day\nprint(first_day_read)"
  }
]